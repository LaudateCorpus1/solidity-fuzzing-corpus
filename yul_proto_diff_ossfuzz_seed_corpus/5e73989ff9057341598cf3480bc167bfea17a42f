block {
  statements {
    boundedforstmt {
      for_body {
        statements {
          boundedforstmt {
            for_body {
              statements {
                extcode_copy {
                  addr {
                  }
                  target {
                    cons {
                      hexval: "\377?\377\377\377\377\377\377\377\377"
                    }
                  }
                  source {
                  }
                  size {
                    binop {
                      op: DIV
                      left {
                        unop {
                          op: NOT
                          operand {
                          }
                        }
                      }
                      right {
                        top {
                          op: ADDM
                          arg1 {
                            top {
                              op: ADDM
                              arg1 {
                              }
                              arg2 {
                              }
                              arg3 {
                                unop {
                                  op: NOT
                                  operand {
                                    cons {
                                      hexval: "\377?\377\377\377\377\377\377\377\377"
                                    }
                                  }
                                }
                              }
                            }
                          }
                          arg2 {
                          }
                          arg3 {
                            binop {
                              op: SI
                              left {
                                cons {
                                }
                              }
                              right {
                                binop {
                                  op: SI
                                  left {
                                  }
                                  right {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
