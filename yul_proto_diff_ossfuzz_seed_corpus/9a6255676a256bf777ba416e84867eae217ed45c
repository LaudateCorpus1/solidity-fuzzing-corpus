funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 2
    num_output_params: 6
    statements {
      statements {
        ifstmt {
          cond {
            binop {
              op: MOD
              left {
                cons {
                  hexval: "66666666666666666665"
                }
              }
              right {
                cons {
                  hexval: "66666666666666666665"
                }
              }
            }
          }
          if_body {
          }
        }
      }
      statements {
        ifstmt {
          cond {
            binop {
              op: MOD
              left {
                cons {
                  hexval: "66666666666666666665"
                }
              }
              right {
                cons {
                  hexval: "66666666666666666665"
                }
              }
            }
          }
          if_body {
          }
        }
      }
      statements {
        ifstmt {
          cond {
            binop {
              op: MOD
              left {
                cons {
                  hexval: "66666666666666666665"
                }
              }
              right {
                cons {
                  hexval: "66666666666666666665"
                }
              }
            }
          }
          if_body {
            statements {
              ifstmt {
                cond {
                  binop {
                    op: MOD
                    left {
                      cons {
                        hexval: "66666666666666666665"
                      }
                    }
                    right {
                      cons {
                        hexval: "66666666666666666665"
                      }
                    }
                  }
                }
                if_body {
                }
              }
            }
            statements {
              ifstmt {
                cond {
                  binop {
                    op: MOD
                    left {
                      cons {
                        hexval: "66666666666666666665"
                      }
                    }
                    right {
                      cons {
                        hexval: "66666666666666666665"
                      }
                    }
                  }
                }
                if_body {
                }
              }
            }
          }
        }
      }
      statements {
        ifstmt {
          cond {
            binop {
              op: MOD
              left {
                cons {
                  hexval: "66666666666666666665"
                }
              }
              right {
                cons {
                  hexval: "66666666666666666665"
                }
              }
            }
          }
          if_body {
            statements {
              ifstmt {
                cond {
                  binop {
                    op: MOD
                    left {
                      cons {
                        hexval: "66666666666666666665"
                      }
                    }
                    right {
                      cons {
                        hexval: "66666666666666666665"
                      }
                    }
                  }
                }
                if_body {
                }
              }
            }
            statements {
              ifstmt {
                cond {
                  binop {
                    op: MOD
                    left {
                      cons {
                        hexval: "66666666666666666665"
                      }
                    }
                    right {
                      cons {
                        hexval: "66666666666666666665"
                      }
                    }
                  }
                }
                if_body {
                }
              }
            }
          }
        }
      }
    }
  }
}
