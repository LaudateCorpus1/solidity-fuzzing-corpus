funcs {
  fd_zero {
    num_input_params: 6
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 9
    statements {
      statements {
        assignment {
          ref_id {
            varnum: 4
          }
          expr {
            top {
              op: ADDM
              arg1 {
              }
              arg2 {
                varref {
                  varnum: 43
                }
              }
              arg3 {
                nop {
                  op: MSIZE
                }
              }
            }
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 9
    num_output_params: 0
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        functioncall {
          call_multiassign {
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
            out_param1 {
              varnum: 9109504
            }
            out_param2 {
              varnum: 0
            }
            out_param3 {
              varnum: 0
            }
            out_param4 {
              varnum: 0
            }
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
      statements {
        forstmt {
          for_body {
          }
          for_init {
          }
          for_post {
          }
          for_cond {
            func_expr {
              func_index: 0
              in_param1 {
              }
              in_param2 {
              }
              in_param3 {
                nop {
                  op: GAS
                }
              }
              in_param4 {
              }
            }
          }
        }
      }
      statements {
      }
    }
  }
}
