funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        boundedforstmt {
          for_body {
            statements {
              ifstmt {
                cond {
                }
                if_body {
                  statements {
                    ifstmt {
                      cond {
                      }
                      if_body {
                        statements {
                          breakstmt {
                          }
                        }
                      }
                    }
                  }
                  statements {
                    breakstmt {
                    }
                  }
                }
              }
            }
            statements {
              assignment {
                ref_id {
                  varnum: 4
                }
                expr {
                }
              }
            }
            statements {
              breakstmt {
              }
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 6
    statements {
      statements {
        ifstmt {
          cond {
          }
          if_body {
            statements {
              boundedforstmt {
                for_body {
                  statements {
                    copy_func {
                      ct: CALLDATA
                      target {
                        nop {
                          op: GAS
                        }
                      }
                      source {
                      }
                      size {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
