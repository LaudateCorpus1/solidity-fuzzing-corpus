funcs {
  fd_zero {
    num_input_params: 7
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 1
    statements {
    }
  }
  fd_multi {
    num_input_params: 3
    num_output_params: 3
    statements {
      statements {
        forstmt {
          for_body {
            statements {
              ifstmt {
                cond {
                  cons {
                    strval: "jjjjjjjjjjj"
                  }
                }
                if_body {
                  statements {
                    breakstmt {
                    }
                  }
                }
              }
            }
          }
          for_init {
          }
          for_post {
            statements {
              functioncall {
                call_multiassign {
                  func_index: 0
                  in_param1 {
                  }
                  in_param2 {
                  }
                  in_param3 {
                  }
                  in_param4 {
                  }
                  out_param1 {
                    varnum: 0
                  }
                  out_param2 {
                    varnum: 0
                  }
                  out_param3 {
                    varnum: 0
                  }
                  out_param4 {
                    varnum: 0
                  }
                }
              }
            }
          }
          for_cond {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
            nop {
              op: PC
            }
          }
          case_stmt {
            case_lit {
              intval: 8
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          default_block {
            statements {
              switchstmt {
                switch_expr {
                }
                default_block {
                }
              }
            }
          }
        }
      }
    }
  }
}
