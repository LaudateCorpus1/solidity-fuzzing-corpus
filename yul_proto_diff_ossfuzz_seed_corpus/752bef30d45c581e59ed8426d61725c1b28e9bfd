funcs {
  fd_zero {
    num_input_params: 8
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 7299842
    statements {
    }
  }
  fd_multi {
    num_input_params: 2
    num_output_params: 4
    statements {
      statements {
        boundedforstmt {
          for_body {
            statements {
              boundedforstmt {
                for_body {
                  statements {
                    boundedforstmt {
                      for_body {
                        statements {
                          boundedforstmt {
                            for_body {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            statements {
              assignment {
                ref_id {
                  varnum: 16384
                }
                expr {
                }
              }
            }
          }
        }
      }
      statements {
        storage_func {
          loc {
          }
          val {
          }
          st: SSTORE
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 1
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 1
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
              }
            }
          }
          val {
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 2
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 3
    statements {
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 8
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 2
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 3
    statements {
    }
  }
  fd_multi {
    num_input_params: 1
    num_output_params: 0
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 1
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 1
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 1965031425
    statements {
      var {
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
      }
      statements {
        ifstmt {
          cond {
            func_expr {
              func_index: 0
              in_param1 {
                func_expr {
                  func_index: 0
                  in_param1 {
                  }
                  in_param2 {
                  }
                  in_param3 {
                    nop {
                      op: PC
                    }
                  }
                  in_param4 {
                  }
                }
              }
              in_param2 {
              }
              in_param3 {
              }
              in_param4 {
              }
            }
          }
          if_body {
            statements {
              boundedforstmt {
                for_body {
                }
              }
            }
          }
        }
      }
      statements {
        log_func {
          pos {
            top {
              op: MULM
              arg1 {
              }
              arg2 {
              }
              arg3 {
              }
            }
          }
          size {
          }
          num_topics: ZERO
          t1 {
          }
          t2 {
          }
          t3 {
          }
          t4 {
            func_expr {
              func_index: 0
              in_param1 {
              }
              in_param2 {
              }
              in_param3 {
              }
              in_param4 {
              }
            }
          }
        }
      }
      statements {
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 8
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 8
    num_output_params: 4
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 1
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 2
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 3
    statements {
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 8
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 8
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 65540
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 1
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 1965031425
    statements {
      var {
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
      }
      statements {
        ifstmt {
          cond {
            func_expr {
              func_index: 0
              in_param1 {
              }
              in_param2 {
              }
              in_param3 {
              }
              in_param4 {
              }
            }
          }
          if_body {
            statements {
              boundedforstmt {
                for_body {
                }
              }
            }
          }
        }
      }
      statements {
        log_func {
          pos {
            top {
              op: MULM
              arg1 {
              }
              arg2 {
              }
              arg3 {
              }
            }
          }
          size {
          }
          num_topics: ZERO
          t1 {
          }
          t2 {
          }
          t3 {
          }
          t4 {
            func_expr {
              func_index: 0
              in_param1 {
              }
              in_param2 {
              }
              in_param3 {
              }
              in_param4 {
              }
            }
          }
        }
      }
      statements {
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 8
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 8
    num_output_params: 4
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 1
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 2
    statements {
      var {
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 3
    statements {
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 1
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: AND
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
}
