block {
  statements {
    funcdef {
      num_input_params: 262144
      num_output_params: 64
      block {
        statements {
        }
        statements {
          extcode_copy {
            addr {
            }
            target {
            }
            source {
            }
            size {
            }
          }
        }
        statements {
          functioncall {
            ret: MULTIASSIGN
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
            out_param1 {
              varnum: 0
            }
            out_param2 {
              varnum: 0
            }
            out_param3 {
              varnum: 0
            }
            out_param4 {
              varnum: 0
            }
          }
        }
        statements {
          boundedforstmt {
            for_body {
            }
          }
        }
        statements {
          functioncall {
            ret: MULTIDECL
            func_index: 0
            in_param1 {
              varref {
                varnum: 0
              }
            }
            in_param2 {
            }
            in_param3 {
              top {
                op: ADDM
                arg1 {
                  binop {
                    op: ADD
                    left {
                      varref {
                        varnum: 975178250
                      }
                    }
                    right {
                    }
                  }
                }
                arg2 {
                }
                arg3 {
                }
              }
            }
            in_param4 {
            }
            out_param1 {
              varnum: 0
            }
            out_param2 {
              varnum: 0
            }
            out_param3 {
              varnum: 0
            }
            out_param4 {
              varnum: 0
            }
          }
        }
        statements {
        }
        statements {
        }
      }
    }
  }
  statements {
    boundedforstmt {
      for_body {
        statements {
          switchstmt {
            switch_expr {
              nop {
                op: PC
              }
            }
            case_stmt {
              case_lit {
              }
              case_block {
                statements {
                  switchstmt {
                    switch_expr {
                      nop {
                        op: PC
                      }
                    }
                    case_stmt {
                      case_lit {
                      }
                      case_block {
                        statements {
                          contstmt {
                          }
                        }
                      }
                    }
                    case_stmt {
                      case_lit {
                      }
                      case_block {
                        statements {
                          contstmt {
                          }
                        }
                      }
                    }
                    default_block {
                      statements {
                        contstmt {
                        }
                      }
                    }
                  }
                }
                statements {
                  contstmt {
                  }
                }
              }
            }
            default_block {
              statements {
                contstmt {
                }
              }
            }
          }
        }
      }
    }
  }
}
