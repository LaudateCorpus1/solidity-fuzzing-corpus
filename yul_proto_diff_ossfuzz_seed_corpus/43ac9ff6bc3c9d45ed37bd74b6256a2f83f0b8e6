funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        ifstmt {
          cond {
          }
          if_body {
            statements {
              decl {
                expr {
                  func_expr {
                    func_index: 0
                    in_param1 {
                    }
                    in_param2 {
                      top {
                        op: ADDM
                        arg1 {
                        }
                        arg2 {
                          func_expr {
                            func_index: 0
                            in_param1 {
                            }
                            in_param2 {
                            }
                            in_param3 {
                            }
                            in_param4 {
                              func_expr {
                                func_index: 0
                                in_param1 {
                                }
                                in_param2 {
                                }
                                in_param3 {
                                }
                                in_param4 {
                                }
                              }
                            }
                          }
                        }
                        arg3 {
                        }
                      }
                    }
                    in_param3 {
                    }
                    in_param4 {
                    }
                  }
                }
              }
            }
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        terminatestmt {
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
      statements {
        copy_func {
          ct: CODE
          target {
            top {
              op: MULM
              arg1 {
              }
              arg2 {
              }
              arg3 {
              }
            }
          }
          source {
          }
          size {
            unop {
              op: NOT
              operand {
                cons {
                }
              }
            }
          }
        }
      }
      statements {
        functioncall {
          call_multiassign {
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
            out_param1 {
              varnum: 0
            }
            out_param2 {
              varnum: 0
            }
            out_param3 {
              varnum: 0
            }
            out_param4 {
              varnum: 0
            }
          }
        }
      }
    }
  }
}
