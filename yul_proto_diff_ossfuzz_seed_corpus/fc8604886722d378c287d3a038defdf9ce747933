block {
  statements {
    switchstmt {
      switch_expr {
      }
      case_stmt {
        case_lit {
        }
        case_block {
        }
      }
    }
  }
  statements {
    extcode_copy {
      addr {
      }
      target {
      }
      source {
        top {
          op: ADDM
          arg1 {
          }
          arg2 {
          }
          arg3 {
            nop {
              op: GAS
            }
          }
        }
      }
      size {
      }
    }
  }
  statements {
    terminatestmt {
      ret_rev {
        stmt: RETURN
        pos {
          top {
            op: ADDM
            arg1 {
            }
            arg2 {
              binop {
                op: EQ
                left {
                }
                right {
                }
              }
            }
            arg3 {
            }
          }
        }
        size {
          top {
            op: ADDM
            arg1 {
              binop {
                op: SHR
                left {
                }
                right {
                  binop {
                    op: SHR
                    left {
                    }
                    right {
                    }
                  }
                }
              }
            }
            arg2 {
              binop {
                op: SHR
                left {
                }
                right {
                  binop {
                    op: SHR
                    left {
                    }
                    right {
                    }
                  }
                }
              }
            }
            arg3 {
            }
          }
        }
      }
    }
  }
  statements {
    boundedforstmt {
      for_body {
      }
    }
  }
}
