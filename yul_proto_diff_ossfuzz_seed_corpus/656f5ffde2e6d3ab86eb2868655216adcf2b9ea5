funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              intval: 0
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              hexval: "\377\376\025\025"
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 6
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SDIV
              left {
                nop {
                  op: PC
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SDIV
              left {
                binop {
                  op: SDIV
                  left {
                    nop {
                      op: PC
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              hexval: "\241"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              intval: 0
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              intval: 262144
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 6
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
      statements {
        copy_func {
          ct: CALLDATA
          target {
            func_expr {
              func_index: 0
              in_param1 {
              }
              in_param2 {
                varref {
                  varnum: 0
                }
              }
              in_param3 {
              }
              in_param4 {
              }
            }
          }
          source {
          }
          size {
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        boundedforstmt {
          for_body {
            statements {
              boundedforstmt {
                for_body {
                }
              }
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
      statements {
        copy_func {
          ct: CALLDATA
          target {
          }
          source {
          }
          size {
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 6
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
      statements {
        copy_func {
          ct: CALLDATA
          target {
            top {
              op: ADDM
              arg1 {
                nop {
                  op: RETURNDATASIZE
                }
              }
              arg2 {
              }
              arg3 {
              }
            }
          }
          source {
          }
          size {
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 6
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: XOR
              left {
                nop {
                  op: CODESIZE
                }
              }
              right {
                nop {
                  op: CODESIZE
                }
              }
            }
          }
          val {
          }
          st: SSTORE
        }
      }
      statements {
        extcode_copy {
          addr {
            cons {
              hexval: ":"
            }
          }
          target {
          }
          source {
          }
          size {
          }
        }
      }
      statements {
        extcode_copy {
          addr {
            cons {
              hexval: ":"
            }
          }
          target {
          }
          source {
          }
          size {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 8
    num_output_params: 8
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 8
    num_output_params: 6
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 6
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              hexval: "\312\366\004\000"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 6
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
      statements {
        copy_func {
          ct: CALLDATA
          target {
          }
          source {
          }
          size {
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 6
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: XOR
              left {
                nop {
                  op: CODESIZE
                }
              }
              right {
                nop {
                  op: CODESIZE
                }
              }
            }
          }
          val {
          }
          st: SSTORE
        }
      }
      statements {
        extcode_copy {
          addr {
            cons {
              hexval: ":"
            }
          }
          target {
          }
          source {
          }
          size {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              hexval: "\377\376\025\025"
            }
            case_block {
            }
          }
        }
      }
      statements {
        extcode_copy {
          addr {
            cons {
              hexval: ":"
            }
          }
          target {
          }
          source {
          }
          size {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 6
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 6
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
      statements {
        contstmt {
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 6
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: XOR
              left {
                nop {
                  op: CODESIZE
                }
              }
              right {
                nop {
                  op: CODESIZE
                }
              }
            }
          }
          val {
          }
          st: SSTORE
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        functioncall {
          call_multidecl {
            func_index: 524288
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              intval: 33554432
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
      statements {
        copy_func {
          ct: CALLDATA
          target {
            func_expr {
              func_index: 0
              in_param1 {
              }
              in_param2 {
                varref {
                  varnum: 0
                }
              }
              in_param3 {
              }
              in_param4 {
              }
            }
          }
          source {
          }
          size {
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: XOR
              left {
                nop {
                  op: CODESIZE
                }
              }
              right {
                nop {
                  op: CODESIZE
                }
              }
            }
          }
          val {
          }
          st: SSTORE
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        functioncall {
          call_multidecl {
            func_index: 524288
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 6
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: XOR
              left {
                nop {
                  op: CODESIZE
                }
              }
              right {
                nop {
                  op: CODESIZE
                }
              }
            }
          }
          val {
          }
          st: SSTORE
        }
      }
      statements {
        extcode_copy {
          addr {
            cons {
              hexval: ":"
            }
          }
          target {
          }
          source {
          }
          size {
          }
        }
      }
      statements {
        extcode_copy {
          addr {
            cons {
              hexval: ":"
            }
          }
          target {
          }
          source {
          }
          size {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 8
    num_output_params: 8
    statements {
    }
  }
}
