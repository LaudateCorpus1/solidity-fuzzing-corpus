statements {
  statements {
    ifstmt {
      cond {
        varref {
          varnum: 0
        }
      }
      if_body {
        statements {
          assignment {
            ref_id {
              varnum: 0
            }
            expr {
            }
          }
        }
      }
    }
  }
  statements {
    storage_func {
      loc {
      }
      val {
      }
      st: SSTORE
    }
  }
  statements {
  }
  statements {
  }
  statements {
    ifstmt {
      cond {
        binop {
          op: SUB
          left {
            unop {
              op: MLOAD
              operand {
              }
            }
          }
          right {
            binop {
              op: SUB
              left {
                binop {
                  op: ADD
                  left {
                  }
                  right {
                    unop {
                      op: MLOAD
                      operand {
                      }
                    }
                  }
                }
              }
              right {
                unop {
                  op: MLOAD
                  operand {
                  }
                }
              }
            }
          }
        }
      }
      if_body {
        statements {
          assignment {
            ref_id {
              varnum: 2048
            }
            expr {
            }
          }
        }
        statements {
          assignment {
            ref_id {
              varnum: 544502899
            }
            expr {
            }
          }
        }
      }
    }
  }
  statements {
    assignment {
      ref_id {
        varnum: 0
      }
      expr {
        varref {
          varnum: 0
        }
      }
    }
  }
  statements {
    storage_func {
      loc {
        binop {
          op: OR
          left {
            binop {
              op: GT
              left {
                binop {
                  op: SUB
                  left {
                    binop {
                      op: KECCAK
                      left {
                        binop {
                          op: LT
                          left {
                          }
                          right {
                          }
                        }
                      }
                      right {
                      }
                    }
                  }
                  right {
                    binop {
                      op: SUB
                      left {
                        binop {
                          op: SUB
                          left {
                            binop {
                              op: SUB
                              left {
                                unop {
                                  op: MLOAD
                                  operand {
                                  }
                                }
                              }
                              right {
                                binop {
                                  op: SUB
                                  left {
                                    unop {
                                      op: MLOAD
                                      operand {
                                      }
                                    }
                                  }
                                  right {
                                  }
                                }
                              }
                            }
                          }
                          right {
                            unop {
                              op: MLOAD
                              operand {
                              }
                            }
                          }
                        }
                      }
                      right {
                        unop {
                          op: SLOAD
                          operand {
                          }
                        }
                      }
                    }
                  }
                }
              }
              right {
                binop {
                  op: GT
                  left {
                    binop {
                      op: SUB
                      left {
                        unop {
                          op: MLOAD
                          operand {
                          }
                        }
                      }
                      right {
                        binop {
                          op: SUB
                          left {
                            binop {
                              op: ADD
                              left {
                              }
                              right {
                                unop {
                                  op: MLOAD
                                  operand {
                                    varref {
                                      varnum: 0
                                    }
                                  }
                                }
                              }
                            }
                          }
                          right {
                            unop {
                              op: MLOAD
                              operand {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  right {
                    unop {
                      op: MLOAD
                      operand {
                      }
                    }
                  }
                }
              }
            }
          }
          right {
            binop {
              op: SUB
              left {
                unop {
                  op: MLOAD
                  operand {
                  }
                }
              }
              right {
              }
            }
          }
        }
      }
      val {
      }
      st: SSTORE
    }
  }
}
