block {
  statements {
    storage_func {
      loc {
        binop {
          op: ADD
          left {
          }
          right {
            cons {
              strval: "A"
            }
          }
        }
      }
      val {
      }
      st: MSTORE
    }
  }
  statements {
  }
  statements {
    storage_func {
      loc {
        binop {
          op: ADD
          left {
          }
          right {
            cons {
              strval: "A"
            }
          }
        }
      }
      val {
      }
      st: MSTORE
    }
  }
  statements {
    boundedforstmt {
      for_body {
        statements {
        }
        statements {
          boundedforstmt {
            for_body {
              statements {
                boundedforstmt {
                  for_body {
                    statements {
                      boundedforstmt {
                        for_body {
                          statements {
                            boundedforstmt {
                              for_body {
                                statements {
                                  boundedforstmt {
                                    for_body {
                                      statements {
                                        boundedforstmt {
                                          for_body {
                                            statements {
                                              boundedforstmt {
                                                for_body {
                                                  statements {
                                                    boundedforstmt {
                                                      for_body {
                                                        statements {
                                                          terminatestmt {
                                                            stop_invalid {
                                                              stmt: STOP
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  statements {
                                                    contstmt {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                statements {
                                  contstmt {
                                  }
                                }
                              }
                            }
                          }
                          statements {
                            contstmt {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          contstmt {
          }
        }
        statements {
        }
      }
    }
  }
  statements {
  }
  statements {
  }
}
