funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        ifstmt {
          cond {
            cons {
              strval: "-"
            }
          }
          if_body {
            statements {
              boundedforstmt {
                for_body {
                }
              }
            }
          }
        }
      }
      statements {
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        copy_func {
          ct: CODE
          target {
          }
          source {
          }
          size {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        assignment {
          ref_id {
            varnum: 0
          }
          expr {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
            statements {
              boundedforstmt {
                for_body {
                  statements {
                    assignment {
                      ref_id {
                        varnum: 2
                      }
                      expr {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: ADD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                        binop {
                          op: SMOD
                          left {
                            binop {
                              op: SMOD
                              left {
                              }
                              right {
                              }
                            }
                          }
                          right {
                          }
                        }
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
                unop {
                  op: EXTCODESIZE
                  operand {
                  }
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                        binop {
                          op: SMOD
                          left {
                          }
                          right {
                          }
                        }
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 2
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: ADD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                        binop {
                          op: SMOD
                          left {
                            binop {
                              op: SMOD
                              left {
                              }
                              right {
                              }
                            }
                          }
                          right {
                          }
                        }
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
                unop {
                  op: EXTCODESIZE
                  operand {
                  }
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                        binop {
                          op: SMOD
                          left {
                          }
                          right {
                          }
                        }
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 2
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: ADD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                        binop {
                          op: SMOD
                          left {
                            binop {
                              op: SMOD
                              left {
                              }
                              right {
                              }
                            }
                          }
                          right {
                          }
                        }
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                varref {
                  varnum: 0
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
                unop {
                  op: EXTCODESIZE
                  operand {
                  }
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                        binop {
                          op: SMOD
                          left {
                          }
                          right {
                          }
                        }
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 2
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                        binop {
                          op: SMOD
                          left {
                          }
                          right {
                          }
                        }
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
                top {
                  op: ADDM
                  arg1 {
                    func_expr {
                      func_index: 0
                      in_param1 {
                      }
                      in_param2 {
                        unop {
                          op: NOT
                          operand {
                            func_expr {
                              func_index: 0
                              in_param1 {
                              }
                              in_param2 {
                              }
                              in_param3 {
                              }
                              in_param4 {
                                unop {
                                  op: EXTCODEHASH
                                  operand {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      in_param3 {
                      }
                      in_param4 {
                      }
                    }
                  }
                  arg2 {
                  }
                  arg3 {
                  }
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
                unop {
                  op: EXTCODESIZE
                  operand {
                  }
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                        binop {
                          op: SMOD
                          left {
                          }
                          right {
                          }
                        }
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 2
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 8
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 1
    statements {
    }
  }
  fd_multi {
    num_input_params: 1
    num_output_params: 3
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: SHL
              left {
              }
              right {
                binop {
                  op: SHL
                  left {
                  }
                  right {
                    binop {
                      op: SHL
                      left {
                      }
                      right {
                        binop {
                          op: SHL
                          left {
                          }
                          right {
                            binop {
                              op: SHR
                              left {
                              }
                              right {
                                binop {
                                  op: SHL
                                  left {
                                  }
                                  right {
                                    binop {
                                      op: SHR
                                      left {
                                      }
                                      right {
                                        varref {
                                          varnum: 0
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          val {
          }
          st: MSTORE
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        ifstmt {
          cond {
            func_expr {
              func_index: 0
              in_param1 {
                func_expr {
                  func_index: 0
                  in_param1 {
                  }
                  in_param2 {
                  }
                  in_param3 {
                  }
                  in_param4 {
                  }
                }
              }
              in_param2 {
              }
              in_param3 {
              }
              in_param4 {
              }
            }
          }
          if_body {
            statements {
              boundedforstmt {
                for_body {
                }
              }
            }
          }
        }
      }
      statements {
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        copy_func {
          ct: CODE
          target {
          }
          source {
          }
          size {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        assignment {
          ref_id {
            varnum: 0
          }
          expr {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
            statements {
              boundedforstmt {
                for_body {
                  statements {
                    assignment {
                      ref_id {
                        varnum: 2
                      }
                      expr {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: ADD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                        binop {
                          op: SMOD
                          left {
                            binop {
                              op: SMOD
                              left {
                              }
                              right {
                              }
                            }
                          }
                          right {
                          }
                        }
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SHR
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: SMOD
              left {
                unop {
                  op: EXTCODESIZE
                  operand {
                  }
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: SMOD
              left {
                binop {
                  op: SMOD
                  left {
                    binop {
                      op: SMOD
                      left {
                        binop {
                          op: SMOD
                          left {
                          }
                          right {
                          }
                        }
                      }
                      right {
                      }
                    }
                  }
                  right {
                  }
                }
              }
              right {
              }
            }
          }
          st: SSTORE
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 2
    num_output_params: 0
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 2
    statements {
      var {
      }
      statements {
        functioncall {
          call_multidecl {
            func_index: 0
            in_param1 {
            }
            in_param2 {
              nop {
                op: PC
              }
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
      statements {
        functioncall {
          call_multidecl {
            func_index: 0
            in_param1 {
            }
            in_param2 {
              nop {
                op: PC
              }
            }
            in_param3 {
            }
            in_param4 {
              unop {
                op: EXTCODEHASH
                operand {
                }
              }
            }
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
            statements {
              extcode_copy {
                addr {
                }
                target {
                }
                source {
                }
                size {
                  top {
                    op: ADDM
                    arg1 {
                      func_expr {
                        func_index: 0
                        in_param1 {
                        }
                        in_param2 {
                          unop {
                            op: NOT
                            operand {
                              func_expr {
                                func_index: 0
                                in_param1 {
                                }
                                in_param2 {
                                }
                                in_param3 {
                                }
                                in_param4 {
                                  unop {
                                    op: EXTCODEHASH
                                    operand {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        in_param3 {
                        }
                        in_param4 {
                        }
                      }
                    }
                    arg2 {
                    }
                    arg3 {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 1028
    statements {
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 2
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 8
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 1
    statements {
    }
  }
  fd_multi {
    num_input_params: 1
    num_output_params: 3
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: SHL
              left {
              }
              right {
                binop {
                  op: SHL
                  left {
                  }
                  right {
                    binop {
                      op: SHL
                      left {
                      }
                      right {
                        binop {
                          op: SHL
                          left {
                          }
                          right {
                            binop {
                              op: SHR
                              left {
                              }
                              right {
                                binop {
                                  op: SHL
                                  left {
                                  }
                                  right {
                                    binop {
                                      op: SHR
                                      left {
                                      }
                                      right {
                                        binop {
                                          op: SHR
                                          left {
                                          }
                                          right {
                                            binop {
                                              op: SMOD
                                              left {
                                              }
                                              right {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          val {
          }
          st: MSTORE
        }
      }
    }
  }
}
