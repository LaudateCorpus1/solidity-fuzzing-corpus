funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            cons {
              intval: 0
            }
          }
          val {
          }
          st: SSTORE
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        functioncall {
          call_multidecl {
            func_index: 524288
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              hexval: "\232"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 6
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 2147548928
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 6
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "66666666666666666666666666666666666666666666666666666"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 5\n    statvar {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: "1funcs {\n  fd_zero {1\n    num_input_params: 0\n    statements {\n      var {\n      }\n    }\n  }"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 6
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        decl {
          expr {
            top {
              op: MULM
              arg1 {
                cons {
                  hexval: "8888888888888888888888888888888888888888"
                }
              }
              arg2 {
                cons {
                  strval: "B"
                }
              }
              arg3 {
              }
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 1
    num_output_params: 3
    statements {
    }
  }
}
