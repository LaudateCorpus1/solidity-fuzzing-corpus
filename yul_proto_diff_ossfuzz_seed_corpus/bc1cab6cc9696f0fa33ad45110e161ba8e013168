funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
            nop {
              op: PC
            }
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "4"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              hexval: "4"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "~"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          default_block {
            statements {
              switchstmt {
                switch_expr {
                }
                case_stmt {
                  case_lit {
                  }
                  case_block {
                  }
                }
                case_stmt {
                  case_lit {
                  }
                  case_block {
                  }
                }
                case_stmt {
                  case_lit {
                  }
                  case_block {
                  }
                }
                case_stmt {
                  case_lit {
                  }
                  case_block {
                  }
                }
                case_stmt {
                  case_lit {
                  }
                  case_block {
                  }
                }
                case_stmt {
                  case_lit {
                    strval: ""
                  }
                  case_block {
                  }
                }
                case_stmt {
                  case_lit {
                    intval: 576460752303423488
                  }
                  case_block {
                  }
                }
                default_block {
                }
              }
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 6
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 6
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 1
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 8192
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        ifstmt {
          cond {
            nop {
              op: CALLDATASIZE
            }
          }
          if_body {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
}
