funcs {
  fd_zero {
    num_input_params: 1
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
      statements {
        forstmt {
          for_body {
            statements {
              forstmt {
                for_body {
                }
                for_init {
                }
                for_post {
                }
                for_cond {
                  binop {
                    op: SHL
                    left {
                    }
                    right {
                    }
                  }
                }
              }
            }
          }
          for_init {
          }
          for_post {
          }
          for_cond {
            binop {
              op: MOD
              left {
                binop {
                  op: SHR
                  left {
                    cons {
                      intval: 0
                    }
                  }
                  right {
                    nop {
                      op: PC
                    }
                  }
                }
              }
              right {
              }
            }
          }
        }
      }
      statements {
        forstmt {
          for_body {
            statements {
              forstmt {
                for_body {
                }
                for_init {
                }
                for_post {
                }
                for_cond {
                  binop {
                    op: SHL
                    left {
                    }
                    right {
                    }
                  }
                }
              }
            }
          }
          for_init {
          }
          for_post {
          }
          for_cond {
            binop {
              op: MOD
              left {
                binop {
                  op: SHR
                  left {
                    cons {
                      intval: 0
                    }
                  }
                  right {
                    nop {
                      op: PC
                    }
                  }
                }
              }
              right {
              }
            }
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 1
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 1
    statements {
    }
  }
  fd_multi {
    num_input_params: 8
    num_output_params: 0
    statements {
      statements {
        ifstmt {
          cond {
            binop {
              op: SHL
              left {
              }
              right {
                binop {
                  op: LT
                  left {
                    cons {
                      intval: 24
                    }
                  }
                  right {
                  }
                }
              }
            }
          }
          if_body {
          }
        }
      }
      statements {
        ifstmt {
          cond {
            binop {
              op: SHR
              left {
                cons {
                  intval: 0
                }
              }
              right {
                binop {
                  op: SHR
                  left {
                  }
                  right {
                    nop {
                      op: GAS
                    }
                  }
                }
              }
            }
          }
          if_body {
            statements {
              forstmt {
                for_body {
                }
                for_init {
                }
                for_post {
                }
                for_cond {
                  binop {
                    op: MOD
                    left {
                      unop {
                        op: CALLDATALOAD
                        operand {
                        }
                      }
                    }
                    right {
                    }
                  }
                }
              }
            }
          }
        }
      }
      statements {
        ifstmt {
          cond {
            binop {
              op: SHR
              left {
              }
              right {
                nop {
                  op: GAS
                }
              }
            }
          }
          if_body {
            statements {
              ifstmt {
                cond {
                }
                if_body {
                }
              }
            }
            statements {
              ifstmt {
                cond {
                  top {
                    op: MULM
                    arg1 {
                    }
                    arg2 {
                    }
                    arg3 {
                    }
                  }
                }
                if_body {
                }
              }
            }
          }
        }
      }
      statements {
        ifstmt {
          cond {
            binop {
              op: SHR
              left {
                cons {
                  intval: 0
                }
              }
              right {
                binop {
                  op: SHR
                  left {
                  }
                  right {
                    nop {
                      op: GAS
                    }
                  }
                }
              }
            }
          }
          if_body {
            statements {
              forstmt {
                for_body {
                }
                for_init {
                }
                for_post {
                }
                for_cond {
                  binop {
                    op: MOD
                    left {
                      unop {
                        op: CALLDATALOAD
                        operand {
                        }
                      }
                    }
                    right {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
