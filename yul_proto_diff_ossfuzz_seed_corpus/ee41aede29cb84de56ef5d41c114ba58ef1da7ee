block {
  statements {
    copy_func {
      ct: CODE
      target {
        binop {
          op: OR
          left {
          }
          right {
            unop {
              op: NOT
              operand {
                binop {
                  op: OR
                  left {
                  }
                  right {
                    func_expr {
                      ret: SINGLE
                      func_index: 0
                      in_param1 {
                      }
                      in_param2 {
                      }
                      in_param3 {
                      }
                      in_param4 {
                      }
                      out_param1 {
                        varnum: 0
                      }
                      out_param2 {
                        varnum: 0
                      }
                      out_param3 {
                        varnum: 0
                      }
                      out_param4 {
                        varnum: 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      source {
      }
      size {
      }
    }
  }
  statements {
    funcdef {
      num_input_params: 0
      num_output_params: 2105376
      block {
        statements {
          ifstmt {
            cond {
              func_expr {
                ret: SINGLE
                func_index: 0
                in_param1 {
                }
                in_param2 {
                }
                in_param3 {
                }
                in_param4 {
                }
                out_param1 {
                  varnum: 0
                }
                out_param2 {
                  varnum: 0
                }
                out_param3 {
                  varnum: 0
                }
                out_param4 {
                  varnum: 0
                }
              }
            }
            if_body {
            }
          }
        }
      }
    }
  }
}
