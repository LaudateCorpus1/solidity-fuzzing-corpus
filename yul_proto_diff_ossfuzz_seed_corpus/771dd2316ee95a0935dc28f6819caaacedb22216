funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
          }
          val {
            binop {
              op: OR
              left {
                nop {
                  op: PC
                }
              }
              right {
                binop {
                  op: OR
                  left {
                    nop {
                      op: PC
                    }
                  }
                  right {
                    binop {
                      op: OR
                      left {
                        nop {
                          op: PC
                        }
                      }
                      right {
                        binop {
                          op: OR
                          left {
                            nop {
                              op: PC
                            }
                          }
                          right {
                            binop {
                              op: OR
                              left {
                                nop {
                                  op: CODESIZE
                                }
                              }
                              right {
                                unop {
                                  op: NOT
                                  operand {
                                    nop {
                                      op: CODESIZE
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
          }
          val {
            binop {
              op: OR
              left {
                nop {
                  op: PC
                }
              }
              right {
                binop {
                  op: OR
                  left {
                    nop {
                      op: PC
                    }
                  }
                  right {
                    binop {
                      op: OR
                      left {
                        nop {
                          op: PC
                        }
                      }
                      right {
                        binop {
                          op: OR
                          left {
                            nop {
                              op: PC
                            }
                          }
                          right {
                            binop {
                              op: OR
                              left {
                                nop {
                                  op: CODESIZE
                                }
                              }
                              right {
                                unop {
                                  op: NOT
                                  operand {
                                    nop {
                                      op: CODESIZE
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
          }
          val {
            binop {
              op: OR
              left {
                nop {
                  op: PC
                }
              }
              right {
                binop {
                  op: OR
                  left {
                    nop {
                      op: PC
                    }
                  }
                  right {
                    binop {
                      op: OR
                      left {
                        nop {
                          op: PC
                        }
                      }
                      right {
                        binop {
                          op: OR
                          left {
                            nop {
                              op: PC
                            }
                          }
                          right {
                            binop {
                              op: OR
                              left {
                                nop {
                                  op: CODESIZE
                                }
                              }
                              right {
                                unop {
                                  op: NOT
                                  operand {
                                    nop {
                                      op: CODESIZE
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
          }
          val {
            binop {
              op: OR
              left {
                nop {
                  op: PC
                }
              }
              right {
                binop {
                  op: OR
                  left {
                    nop {
                      op: PC
                    }
                  }
                  right {
                    binop {
                      op: OR
                      left {
                        nop {
                          op: PC
                        }
                      }
                      right {
                        binop {
                          op: OR
                          left {
                            nop {
                              op: PC
                            }
                          }
                          right {
                            binop {
                              op: OR
                              left {
                                nop {
                                  op: CODESIZE
                                }
                              }
                              right {
                                unop {
                                  op: NOT
                                  operand {
                                    nop {
                                      op: CODESIZE
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              strval: "11"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              intval: 0
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 8
    num_output_params: 0
    statements {
    }
  }
}
