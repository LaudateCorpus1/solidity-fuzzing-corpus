funcs {
  fd_zero {
    num_input_params: 2
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
            unop {
              op: EXTCODEHASH
              operand {
              }
            }
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: ","
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 2
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              hexval: "@"
            }
            case_block {
            }
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 2
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: ","
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
            statements {
              switchstmt {
                switch_expr {
                  cons {
                    intval: 0
                  }
                }
              }
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              hexval: "@"
            }
            case_block {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 2
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: ","
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: ","
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: ","
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 2
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 6
    num_output_params: 0
    statements {
      statements {
        ifstmt {
          cond {
            top {
              op: MULM
              arg1 {
              }
              arg2 {
              }
              arg3 {
                unop {
                  op: NOT
                  operand {
                  }
                }
              }
            }
          }
          if_body {
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 2
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: ","
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              hexval: "@"
            }
            case_block {
            }
          }
          default_block {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
      statements {
        decl {
          expr {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 2
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
              strval: ","
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 2
    statements {
      var {
      }
      statements {
        switchstmt {
          switch_expr {
          }
          default_block {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
    }
  }
}
