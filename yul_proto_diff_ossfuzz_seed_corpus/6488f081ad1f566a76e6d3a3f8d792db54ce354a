funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        boundedforstmt {
          for_body {
            statements {
              assignment {
                ref_id {
                  varnum: 0
                }
                expr {
                  varref {
                    varnum: 3328
                  }
                }
              }
            }
            statements {
              assignment {
                ref_id {
                  varnum: 3328
                }
                expr {
                }
              }
            }
          }
        }
      }
      statements {
        copy_func {
          ct: CODE
          target {
          }
          source {
          }
          size {
            varref {
              varnum: 0
            }
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 3
    num_output_params: 3
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 6
    statements {
      statements {
      }
      statements {
        ifstmt {
          cond {
          }
          if_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
      statements {
        assignment {
          ref_id {
            varnum: 5
          }
          expr {
            top {
              op: MULM
              arg1 {
              }
              arg2 {
                top {
                  op: MULM
                  arg1 {
                    unop {
                      op: NOT
                      operand {
                      }
                    }
                  }
                  arg2 {
                    unop {
                      op: NOT
                      operand {
                        func_expr {
                          func_index: 0
                          in_param1 {
                            func_expr {
                              func_index: 0
                              in_param1 {
                                func_expr {
                                  func_index: 0
                                  in_param1 {
                                    top {
                                      op: MULM
                                      arg1 {
                                      }
                                      arg2 {
                                        top {
                                          op: MULM
                                          arg1 {
                                            unop {
                                              op: NOT
                                              operand {
                                              }
                                            }
                                          }
                                          arg2 {
                                            unop {
                                              op: NOT
                                              operand {
                                                func_expr {
                                                  func_index: 0
                                                  in_param1 {
                                                  }
                                                  in_param2 {
                                                  }
                                                  in_param3 {
                                                  }
                                                  in_param4 {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          arg3 {
                                            cons {
                                              hexval: "888888888888888888888888"
                                            }
                                          }
                                        }
                                      }
                                      arg3 {
                                        cons {
                                        }
                                      }
                                    }
                                  }
                                  in_param2 {
                                  }
                                  in_param3 {
                                  }
                                  in_param4 {
                                  }
                                }
                              }
                              in_param2 {
                              }
                              in_param3 {
                              }
                              in_param4 {
                              }
                            }
                          }
                          in_param2 {
                          }
                          in_param3 {
                          }
                          in_param4 {
                          }
                        }
                      }
                    }
                  }
                  arg3 {
                    cons {
                      hexval: "888888888888888888888888"
                    }
                  }
                }
              }
              arg3 {
                cons {
                  hexval: "888888888888888888"
                }
              }
            }
          }
        }
      }
    }
  }
}
