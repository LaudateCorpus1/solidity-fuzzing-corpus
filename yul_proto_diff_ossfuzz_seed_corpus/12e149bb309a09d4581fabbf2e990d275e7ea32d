block {
  statements {
    switchstmt {
      switch_expr {
      }
      default_block {
        statements {
          boundedforstmt {
            for_body {
              statements {
                boundedforstmt {
                  for_body {
                    statements {
                      boundedforstmt {
                        for_body {
                          statements {
                            terminatestmt {
                              stop_invalid {
                                stmt: STOP
                              }
                            }
                          }
                        }
                      }
                    }
                    statements {
                      contstmt {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  statements {
    storage_func {
      loc {
        cons {
          intval: 0
        }
      }
      val {
      }
      st: SSTORE
    }
  }
  statements {
  }
  statements {
    storage_func {
      loc {
        binop {
          op: LT
          left {
            cons {
              intval: 0
            }
          }
          right {
            nop {
              op: MSIZE
            }
          }
        }
      }
      val {
      }
      st: SSTORE
    }
  }
  statements {
  }
  statements {
    boundedforstmt {
      for_body {
        statements {
          switchstmt {
            switch_expr {
              nop {
                op: RETURNDATASIZE
              }
            }
            case_stmt {
              case_lit {
              }
              case_block {
                statements {
                  contstmt {
                  }
                }
              }
            }
            case_stmt {
              case_lit {
              }
              case_block {
                statements {
                  contstmt {
                  }
                }
              }
            }
          }
        }
        statements {
        }
      }
    }
  }
  statements {
  }
}
