funcs {
  fd_zero {
    num_input_params: 538976256
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 2
    num_output_params: 4096
    statements {
      statements {
        functioncall {
          call_zero {
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
            statements {
              boundedforstmt {
                for_body {
                  statements {
                    assignment {
                      ref_id {
                        varnum: 1600
                      }
                      expr {
                      }
                    }
                  }
                }
              }
            }
            statements {
              assignment {
                ref_id {
                  varnum: 1600
                }
                expr {
                }
              }
            }
          }
        }
      }
      statements {
        functioncall {
          call_zero {
            func_index: 8
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
      statements {
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 3
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
    }
  }
  fd_multi {
    num_input_params: 2
    num_output_params: 0
    statements {
      statements {
      }
      statements {
        boundedforstmt {
          for_body {
            statements {
              boundedforstmt {
                for_body {
                  statements {
                    boundedforstmt {
                      for_body {
                        statements {
                          boundedforstmt {
                            for_body {
                              statements {
                                assignment {
                                  ref_id {
                                    varnum: 1600
                                  }
                                  expr {
                                  }
                                }
                              }
                              statements {
                                boundedforstmt {
                                  for_body {
                                    statements {
                                      boundedforstmt {
                                        for_body {
                                          statements {
                                            boundedforstmt {
                                              for_body {
                                              }
                                            }
                                          }
                                          statements {
                                            assignment {
                                              ref_id {
                                                varnum: 0
                                              }
                                              expr {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    statements {
                                      assignment {
                                        ref_id {
                                          varnum: 1600
                                        }
                                        expr {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  statements {
                    assignment {
                      ref_id {
                        varnum: 16384
                      }
                      expr {
                      }
                    }
                  }
                }
              }
            }
            statements {
              assignment {
                ref_id {
                  varnum: 1600
                }
                expr {
                }
              }
            }
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 6
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 721420292
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4096
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 8
    statements {
      statements {
        functioncall {
          call_zero {
            func_index: 8
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
      statements {
        functioncall {
          call_zero {
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
      statements {
        functioncall {
          call_zero {
            func_index: 8
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
      statements {
        functioncall {
          call_zero {
            func_index: 8
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 2
    num_output_params: 4
    statements {
      statements {
        functioncall {
          call_zero {
            func_index: 8
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
      statements {
        functioncall {
          call_multiassign {
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
              top {
                op: MULM
                arg1 {
                }
                arg2 {
                }
                arg3 {
                }
              }
            }
            out_param1 {
              varnum: 0
            }
            out_param2 {
              varnum: 0
            }
            out_param3 {
              varnum: 0
            }
            out_param4 {
              varnum: 0
            }
          }
        }
      }
      statements {
        functioncall {
          call_zero {
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
      statements {
        functioncall {
          call_zero {
            func_index: 8
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 6
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: EXP
              left {
                cons {
                  intval: 18444492273895866367
                }
              }
              right {
                unop {
                  op: NOT
                  operand {
                  }
                }
              }
            }
          }
          val {
          }
          st: MSTORE
        }
      }
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 0
    statements {
      statements {
        boundedforstmt {
          for_body {
            statements {
              boundedforstmt {
                for_body {
                  statements {
                    boundedforstmt {
                      for_body {
                        statements {
                          boundedforstmt {
                            for_body {
                              statements {
                                boundedforstmt {
                                  for_body {
                                    statements {
                                      boundedforstmt {
                                        for_body {
                                          statements {
                                            boundedforstmt {
                                              for_body {
                                                statements {
                                                  boundedforstmt {
                                                    for_body {
                                                      statements {
                                                        boundedforstmt {
                                                          for_body {
                                                            statements {
                                                              boundedforstmt {
                                                                for_body {
                                                                  statements {
                                                                    boundedforstmt {
                                                                      for_body {
                                                                        statements {
                                                                          boundedforstmt {
                                                                            for_body {
                                                                              statements {
                                                                                boundedforstmt {
                                                                                  for_body {
                                                                                    statements {
                                                                                      boundedforstmt {
                                                                                        for_body {
                                                                                          statements {
                                                                                            boundedforstmt {
                                                                                              for_body {
                                                                                                statements {
                                                                                                  boundedforstmt {
                                                                                                    for_body {
                                                                                                      statements {
                                                                                                        boundedforstmt {
                                                                                                          for_body {
                                                                                                            statements {
                                                                                                              boundedforstmt {
                                                                                                                for_body {
                                                                                                                  statements {
                                                                                                                    boundedforstmt {
                                                                                                                      for_body {
                                                                                                                        statements {
                                                                                                                          boundedforstmt {
                                                                                                                            for_body {
                                                                                                                              statements {
                                                                                                                                boundedforstmt {
                                                                                                                                  for_body {
                                                                                                                                    statements {
                                                                                                                                      boundedforstmt {
                                                                                                                                        for_body {
                                                                                                                                          statements {
                                                                                                                                            boundedforstmt {
                                                                                                                                              for_body {
                                                                                                                                                statements {
                                                                                                                                                  boundedforstmt {
                                                                                                                                                    for_body {
                                                                                                                                                      statements {
                                                                                                                                                        boundedforstmt {
                                                                                                                                                          for_body {
                                                                                                                                                            statements {
                                                                                                                                                              boundedforstmt {
                                                                                                                                                                for_body {
                                                                                                                                                                  statements {
                                                                                                                                                                    boundedforstmt {
                                                                                                                                                                      for_body {
                                                                                                                                                                        statements {
                                                                                                                                                                          boundedforstmt {
                                                                                                                                                                            for_body {
                                                                                                                                                                              statements {
                                                                                                                                                                                boundedforstmt {
                                                                                                                                                                                  for_body {
                                                                                                                                                                                    statements {
                                                                                                                                                                                      boundedforstmt {
                                                                                                                                                                                        for_body {
                                                                                                                                                                                          statements {
                                                                                                                                                                                            boundedforstmt {
                                                                                                                                                                                              for_body {
                                                                                                                                                                                                statements {
                                                                                                                                                                                                  boundedforstmt {
                                                                                                                                                                                                    for_body {
                                                                                                                                                                                                      statements {
                                                                                                                                                                                                        boundedforstmt {
                                                                                                                                                                                                          for_body {
                                                                                                                                                                                                            statements {
                                                                                                                                                                                                              boundedforstmt {
                                                                                                                                                                                                                for_body {
                                                                                                                                                                                                                  statements {
                                                                                                                                                                                                                    boundedforstmt {
                                                                                                                                                                                                                      for_body {
                                                                                                                                                                                                                        statements {
                                                                                                                                                                                                                          boundedforstmt {
                                                                                                                                                                                                                            for_body {
                                                                                                                                                                                                                              statements {
                                                                                                                                                                                                                                boundedforstmt {
                                                                                                                                                                                                                                  for_body {
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      statements {
        storage_func {
          loc {
          }
          val {
          }
          st: MSTORE
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4096
    statements {
    }
  }
}
