block {
  statements {
    boundedforstmt {
      for_body {
      }
    }
  }
  statements {
    funcdef {
      num_input_params: 0
      num_output_params: 6438696
      block {
        statements {
          assignment {
            ref_id {
              varnum: 1
            }
            expr {
              binop {
                op: GT
                left {
                  binop {
                    op: GT
                    left {
                    }
                    right {
                      binop {
                        op: GT
                        left {
                          binop {
                            op: GT
                            left {
                            }
                            right {
                              func_expr {
                                ret: SINGLE
                                func_index: 0
                                in_param1 {
                                }
                                in_param2 {
                                }
                                in_param3 {
                                }
                                in_param4 {
                                }
                                out_param1 {
                                  varnum: 0
                                }
                                out_param2 {
                                  varnum: 0
                                }
                                out_param3 {
                                  varnum: 0
                                }
                                out_param4 {
                                  varnum: 0
                                }
                              }
                            }
                          }
                        }
                        right {
                        }
                      }
                    }
                  }
                }
                right {
                }
              }
            }
          }
        }
      }
    }
  }
}
