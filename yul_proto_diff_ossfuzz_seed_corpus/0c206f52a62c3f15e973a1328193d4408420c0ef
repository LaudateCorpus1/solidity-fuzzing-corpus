funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 7
    statements {
      statements {
        assignment {
          ref_id {
            varnum: 0
          }
          expr {
            top {
              op: ADDM
              arg1 {
                nop {
                  op: RETURNDATASIZE
                }
              }
              arg2 {
              }
              arg3 {
              }
            }
          }
        }
      }
      statements {
        ifstmt {
          cond {
            binop {
              op: DIV
              left {
                cons {
                  hexval: "6666666666666666666(66666666666666666666"
                }
              }
              right {
                cons {
                  hexval: "6666666666666666\26366666funcnu"
                }
              }
            }
          }
          if_body {
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 7
    statements {
      statements {
        ifstmt {
          cond {
            unop {
              op: NOT
              operand {
              }
            }
          }
          if_body {
          }
        }
      }
      statements {
        ifstmt {
          cond {
            binop {
              op: DIV
              left {
                cons {
                  hexval: "6666666666666666666(66666666666666666666"
                }
              }
              right {
                cons {
                  hexval: "6666666666666666\26366666funcnu"
                }
              }
            }
          }
          if_body {
          }
        }
      }
    }
  }
}
