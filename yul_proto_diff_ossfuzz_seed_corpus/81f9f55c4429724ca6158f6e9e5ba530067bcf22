funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 7
    statements {
      var {
      }
      statements {
        boundedforstmt {
          for_body {
            statements {
            }
            statements {
              switchstmt {
                switch_expr {
                  varref {
                    varnum: 0
                  }
                }
                case_stmt {
                  case_lit {
                    strval: "for"
                  }
                  case_block {
                  }
                }
                case_stmt {
                  case_lit {
                    intval: 0
                  }
                  case_block {
                  }
                }
                case_stmt {
                  case_lit {
                  }
                  case_block {
                  }
                }
                default_block {
                  statements {
                    contstmt {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 7
    statements {
    }
  }
  fd_multi {
    num_input_params: 7
    num_output_params: 7
    statements {
    }
  }
}
