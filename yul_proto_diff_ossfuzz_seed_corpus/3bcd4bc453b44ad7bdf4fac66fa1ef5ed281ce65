block {
  statements {
    boundedforstmt {
      for_body {
      }
    }
  }
  statements {
    log_func {
      pos {
      }
      size {
      }
      num_topics: ZERO
      t1 {
      }
      t2 {
        varref {
          varnum: 0
        }
      }
      t3 {
        top {
          op: MULM
          arg1 {
          }
          arg2 {
          }
          arg3 {
          }
        }
      }
      t4 {
      }
    }
  }
  statements {
  }
  statements {
    functioncall {
      ret: MULTIDECL
      func_index: 0
      in_param1 {
        cons {
          hexval: "\226"
        }
      }
      in_param2 {
      }
      in_param3 {
      }
      in_param4 {
      }
      out_param1 {
        varnum: 0
      }
      out_param2 {
        varnum: 0
      }
      out_param3 {
        varnum: 0
      }
      out_param4 {
        varnum: 0
      }
    }
  }
  statements {
    extcode_copy {
      addr {
      }
      target {
        varref {
          varnum: 0
        }
      }
      source {
      }
      size {
      }
    }
  }
  statements {
    functioncall {
      ret: MULTIDECL
      func_index: 0
      in_param1 {
      }
      in_param2 {
      }
      in_param3 {
      }
      in_param4 {
      }
      out_param1 {
        varnum: 0
      }
      out_param2 {
        varnum: 0
      }
      out_param3 {
        varnum: 0
      }
      out_param4 {
        varnum: 0
      }
    }
  }
  statements {
    functioncall {
      ret: MULTIASSIGN
      func_index: 2048
      in_param1 {
      }
      in_param2 {
      }
      in_param3 {
      }
      in_param4 {
      }
      out_param1 {
        varnum: 0
      }
      out_param2 {
        varnum: 0
      }
      out_param3 {
        varnum: 0
      }
      out_param4 {
        varnum: 0
      }
    }
  }
  statements {
    funcdef {
      num_input_params: 64
      num_output_params: 64
      block {
        statements {
        }
        statements {
          decl {
            expr {
              varref {
                varnum: 0
              }
            }
          }
        }
        statements {
        }
        statements {
          storage_func {
            loc {
            }
            val {
            }
            st: SSTORE
          }
        }
        statements {
          storage_func {
            loc {
              binop {
                op: MOD
                left {
                  varref {
                    varnum: 0
                  }
                }
                right {
                }
              }
            }
            val {
            }
            st: SSTORE
          }
        }
        statements {
        }
      }
    }
  }
  statements {
  }
}
