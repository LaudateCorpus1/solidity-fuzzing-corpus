block {
  statements {
    switchstmt {
      switch_expr {
        nop {
          op: GAS
        }
      }
      case_stmt {
        case_lit {
          hexval: "\010\000\000\000"
        }
        case_block {
          statements {
            boundedforstmt {
              for_body {
              }
            }
          }
          statements {
            boundedforstmt {
              for_body {
              }
            }
          }
        }
      }
      case_stmt {
        case_lit {
        }
        case_block {
        }
      }
      case_stmt {
        case_lit {
        }
        case_block {
          statements {
            boundedforstmt {
              for_body {
                statements {
                  boundedforstmt {
                    for_body {
                    }
                  }
                }
              }
            }
          }
          statements {
            boundedforstmt {
              for_body {
              }
            }
          }
        }
      }
      case_stmt {
        case_lit {
        }
        case_block {
        }
      }
      case_stmt {
        case_lit {
        }
        case_block {
          statements {
            boundedforstmt {
              for_body {
              }
            }
          }
        }
      }
      case_stmt {
        case_lit {
        }
        case_block {
        }
      }
    }
  }
  statements {
    boundedforstmt {
      for_body {
        statements {
          boundedforstmt {
            for_body {
              statements {
                boundedforstmt {
                  for_body {
                    statements {
                      funcdef {
                        num_input_params: 0
                        num_output_params: 0
                        block {
                          statements {
                            terminatestmt {
                              stop_invalid {
                                stmt: INVALID
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
