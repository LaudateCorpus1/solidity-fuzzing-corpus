block {
  statements {
  }
  statements {
    forstmt {
      for_body {
      }
      for_init {
      }
      for_post {
        statements {
          storage_func {
            loc {
              top {
                op: ADDM
                arg1 {
                }
                arg2 {
                  binop {
                    op: SDIV
                    left {
                      unop {
                        op: NOT
                        operand {
                        }
                      }
                    }
                    right {
                      unop {
                        op: NOT
                        operand {
                          binop {
                            op: SDIV
                            left {
                              unop {
                                op: NOT
                                operand {
                                }
                              }
                            }
                            right {
                              cons {
                                intval: 144115188075855872
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                arg3 {
                }
              }
            }
            val {
              unop {
                op: NOT
                operand {
                  binop {
                    op: SDIV
                    left {
                      unop {
                        op: NOT
                        operand {
                        }
                      }
                    }
                    right {
                      cons {
                        intval: 144115188075855872
                      }
                    }
                  }
                }
              }
            }
            st: SSTORE
          }
        }
        statements {
        }
      }
      for_cond {
      }
    }
  }
}
