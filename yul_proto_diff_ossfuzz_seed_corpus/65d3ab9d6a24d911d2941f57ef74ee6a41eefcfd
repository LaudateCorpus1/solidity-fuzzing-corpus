block {
  statements {
    storage_func {
      loc {
      }
      val {
      }
      st: MSTORE
    }
  }
  statements {
    storage_func {
      loc {
      }
      val {
      }
      st: MSTORE
    }
  }
  statements {
    storage_func {
      loc {
        binop {
          op: ADD
          left {
          }
          right {
            cons {
              strval: ""
            }
          }
        }
      }
      val {
      }
      st: MSTORE
    }
  }
  statements {
  }
  statements {
  }
  statements {
    storage_func {
      loc {
        binop {
          op: ADD
          left {
          }
          right {
            cons {
              strval: ""
            }
          }
        }
      }
      val {
      }
      st: MSTORE
    }
  }
  statements {
  }
  statements {
  }
  statements {
  }
  statements {
  }
  statements {
    storage_func {
      loc {
      }
      val {
      }
      st: MSTORE
    }
  }
  statements {
  }
  statements {
  }
  statements {
  }
  statements {
  }
  statements {
    storage_func {
      loc {
      }
      val {
      }
      st: MSTORE
    }
  }
  statements {
    boundedforstmt {
      for_body {
      }
    }
  }
  statements {
    storage_func {
      loc {
        nop {
          op: PC
        }
      }
      val {
        nop {
          op: PC
        }
      }
      st: MSTORE
    }
  }
  statements {
  }
  statements {
  }
  statements {
    boundedforstmt {
      for_body {
        statements {
          boundedforstmt {
            for_body {
              statements {
                boundedforstmt {
                  for_body {
                    statements {
                      boundedforstmt {
                        for_body {
                          statements {
                            boundedforstmt {
                              for_body {
                                statements {
                                  terminatestmt {
                                    stop_invalid {
                                      stmt: STOP
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  statements {
  }
}
