funcs {
  fd_zero {
    num_input_params: 8
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
      statements {
        functioncall {
          call_multidecl {
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
      statements {
      }
      statements {
        log_func {
          pos {
          }
          size {
          }
          num_topics: ZERO
          t1 {
          }
          t2 {
          }
          t3 {
          }
          t4 {
          }
        }
      }
      statements {
        functioncall {
          call_multidecl {
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 2
    num_output_params: 3
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: SUB
              left {
                varref {
                  varnum: 0
                }
              }
              right {
              }
            }
          }
          val {
            varref {
              varnum: 0
            }
          }
          st: SSTORE
        }
      }
      statements {
        ifstmt {
          cond {
            cons {
              strval: "\365"
            }
          }
          if_body {
            statements {
              ifstmt {
                cond {
                  cons {
                  }
                }
                if_body {
                  statements {
                    terminatestmt {
                      stop_invalid {
                        stmt: STOP
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
