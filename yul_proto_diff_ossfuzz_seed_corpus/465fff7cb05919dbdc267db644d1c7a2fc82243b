funcs {
  fd_zero {
    num_input_params: 6
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        copy_func {
          ct: CODE
          target {
            nop {
              op: CODESIZE
            }
          }
          source {
            unop {
              op: NOT
              operand {
                binop {
                  op: ADD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          size {
            nop {
              op: PC
            }
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 6
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 6
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        copy_func {
          ct: CODE
          target {
            func_expr {
              func_index: 0
              in_param1 {
                binop {
                  op: ADD
                  left {
                  }
                  right {
                  }
                }
              }
              in_param2 {
              }
              in_param3 {
              }
              in_param4 {
              }
            }
          }
          source {
            unop {
              op: NOT
              operand {
                binop {
                  op: ADD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          size {
            nop {
              op: PC
            }
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 6
    num_output_params: 4
    statements {
      statements {
        copy_func {
          ct: CODE
          target {
            nop {
              op: PC
            }
          }
          source {
            unop {
              op: NOT
              operand {
                binop {
                  op: ADD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          size {
            nop {
              op: PC
            }
          }
        }
      }
    }
  }
}
