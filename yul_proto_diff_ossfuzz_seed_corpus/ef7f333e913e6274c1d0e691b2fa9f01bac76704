block {
  statements {
    copy_func {
      ct: CODE
      target {
      }
      source {
      }
      size {
      }
    }
  }
  statements {
    boundedforstmt {
      for_body {
        statements {
          forstmt {
            for_body {
            }
            for_init {
            }
            for_post {
            }
            for_cond {
              binop {
                op: LT
                left {
                  top {
                    op: MULM
                    arg1 {
                    }
                    arg2 {
                    }
                    arg3 {
                    }
                  }
                }
                right {
                  binop {
                    op: SHR
                    left {
                    }
                    right {
                      binop {
                        op: SHR
                        left {
                        }
                        right {
                          binop {
                            op: SHL
                            left {
                            }
                            right {
                              binop {
                                op: SHR
                                left {
                                }
                                right {
                                  binop {
                                    op: SHL
                                    left {
                                    }
                                    right {
                                      unop {
                                        op: SLOAD
                                        operand {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
