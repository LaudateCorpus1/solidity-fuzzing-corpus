block {
  statements {
  }
  statements {
    extcode_copy {
      addr {
      }
      target {
        unop {
          op: MLOAD
          operand {
          }
        }
      }
      source {
      }
      size {
        unop {
          op: MLOAD
          operand {
            unop {
              op: MLOAD
              operand {
                unop {
                  op: MLOAD
                  operand {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  statements {
    extcode_copy {
      addr {
        unop {
          op: MLOAD
          operand {
          }
        }
      }
      target {
      }
      source {
      }
      size {
        unop {
          op: MLOAD
          operand {
            unop {
              op: MLOAD
              operand {
                unop {
                  op: MLOAD
                  operand {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  statements {
    funcdef {
      num_input_params: 2
      num_output_params: 2
      block {
        statements {
          funcdef {
            num_input_params: 2
            num_output_params: 2
            block {
            }
          }
        }
      }
    }
  }
  statements {
    funcdef {
      num_input_params: 2
      num_output_params: 2
      block {
        statements {
          funcdef {
            num_input_params: 2
            num_output_params: 2
            block {
            }
          }
        }
      }
    }
  }
  statements {
  }
  statements {
    extcode_copy {
      addr {
      }
      target {
      }
      source {
      }
      size {
        unop {
          op: MLOAD
          operand {
            unop {
              op: MLOAD
              operand {
              }
            }
          }
        }
      }
    }
  }
  statements {
  }
  statements {
    switchstmt {
      switch_expr {
      }
      case_stmt {
        case_lit {
          hexval: "<"
        }
        case_block {
        }
      }
    }
  }
}
