block {
  statements {
    funcdef {
      num_input_params: 6438696
      num_output_params: 6438696
      block {
      }
    }
  }
  statements {
    boundedforstmt {
      for_body {
      }
    }
  }
  statements {
    funcdef {
      num_input_params: 6438696
      num_output_params: 6438696
      block {
        statements {
          assignment {
            ref_id {
              varnum: 1
            }
            expr {
            }
          }
        }
      }
    }
  }
  statements {
    funcdef {
      num_input_params: 6438696
      num_output_params: 6438696
      block {
        statements {
          assignment {
            ref_id {
              varnum: 1
            }
            expr {
              binop {
                op: ADD
                left {
                  varref {
                    varnum: 0
                  }
                }
                right {
                }
              }
            }
          }
        }
      }
    }
  }
  statements {
    boundedforstmt {
      for_body {
      }
    }
  }
  statements {
    boundedforstmt {
      for_body {
      }
    }
  }
  statements {
    boundedforstmt {
      for_body {
      }
    }
  }
  statements {
    boundedforstmt {
      for_body {
      }
    }
  }
  statements {
    funcdef {
      num_input_params: 6438696
      num_output_params: 6438696
      block {
        statements {
          assignment {
            ref_id {
              varnum: 1
            }
            expr {
            }
          }
        }
      }
    }
  }
  statements {
    funcdef {
      num_input_params: 6438696
      num_output_params: 6438696
      block {
        statements {
          assignment {
            ref_id {
              varnum: 1
            }
            expr {
              binop {
                op: ADD
                left {
                  varref {
                    varnum: 0
                  }
                }
                right {
                }
              }
            }
          }
        }
      }
    }
  }
}
