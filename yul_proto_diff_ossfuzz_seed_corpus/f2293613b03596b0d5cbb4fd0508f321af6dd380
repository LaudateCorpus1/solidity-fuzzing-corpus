block {
  statements {
  }
  statements {
  }
  statements {
    boundedforstmt {
      for_body {
        statements {
          boundedforstmt {
            for_body {
              statements {
                blockstmt {
                  statements {
                    blockstmt {
                      statements {
                        ifstmt {
                          cond {
                            binop {
                              op: SDIV
                              left {
                                unop {
                                  op: EXTCODEHASH
                                  operand {
                                  }
                                }
                              }
                              right {
                              }
                            }
                          }
                          if_body {
                            statements {
                              log_func {
                                pos {
                                  cons {
                                    hexval: "\001\000\000\000"
                                  }
                                }
                                size {
                                }
                                num_topics: ONE
                                t1 {
                                }
                                t2 {
                                }
                                t3 {
                                }
                                t4 {
                                }
                              }
                            }
                          }
                        }
                      }
                      statements {
                      }
                    }
                  }
                  statements {
                    contstmt {
                    }
                  }
                }
              }
            }
          }
        }
        statements {
        }
      }
    }
  }
}
