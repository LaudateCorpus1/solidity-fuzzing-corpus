funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        terminatestmt {
          self_des {
            addr {
            }
          }
        }
      }
      statements {
        blockstmt {
          statements {
            copy_func {
              ct: CODE
              target {
                func_expr {
                  func_index: 0
                  in_param1 {
                  }
                  in_param2 {
                  }
                  in_param3 {
                    cons {
                      hexval: "TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT"
                    }
                  }
                  in_param4 {
                  }
                }
              }
              source {
              }
              size {
              }
            }
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
            statements {
            }
          }
        }
      }
      statements {
      }
      statements {
        terminatestmt {
          self_des {
            addr {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 1542
    num_output_params: 6
    statements {
      statements {
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 6
    statements {
      var {
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 6
    num_output_params: 4
    statements {
      statements {
        copy_func {
          ct: CODE
          target {
          }
          source {
          }
          size {
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        blockstmt {
          statements {
            copy_func {
              ct: CALLDATA
              target {
                func_expr {
                  func_index: 0
                  in_param1 {
                  }
                  in_param2 {
                  }
                  in_param3 {
                  }
                  in_param4 {
                  }
                }
              }
              source {
              }
              size {
              }
            }
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 6
    num_output_params: 0
    statements {
      statements {
        terminatestmt {
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
          self_des {
            addr {
            }
          }
        }
      }
      statements {
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 6
    statements {
      var {
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 6
    num_output_params: 4
    statements {
      statements {
        copy_func {
          ct: CODE
          target {
          }
          source {
          }
          size {
          }
        }
      }
    }
  }
}
