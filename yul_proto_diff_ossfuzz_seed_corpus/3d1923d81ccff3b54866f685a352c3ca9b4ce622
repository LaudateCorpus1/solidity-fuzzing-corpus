block {
  statements {
    boundedforstmt {
      for_body {
        statements {
          boundedforstmt {
            for_body {
              statements {
                boundedforstmt {
                  for_body {
                    statements {
                      funcdef {
                        num_input_params: 4
                        num_output_params: 4
                        block {
                          statements {
                            boundedforstmt {
                              for_body {
                                statements {
                                  boundedforstmt {
                                    for_body {
                                      statements {
                                        funcdef {
                                          num_input_params: 4
                                          num_output_params: 4
                                          block {
                                          }
                                        }
                                      }
                                      statements {
                                        terminatestmt {
                                          ret_rev {
                                            stmt: REVERT
                                            pos {
                                            }
                                            size {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    statements {
                      terminatestmt {
                        stop_invalid {
                          stmt: INVALID
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
