funcs {
  fd_zero {
    num_input_params: 7
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
      }
      statements {
        functioncall {
          call_multidecl {
            func_index: 1601372160
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
      statements {
        extcode_copy {
          addr {
          }
          target {
            binop {
              op: ADD
              left {
              }
              right {
                func_expr {
                  func_index: 0
                  in_param1 {
                  }
                  in_param2 {
                  }
                  in_param3 {
                  }
                  in_param4 {
                  }
                }
              }
            }
          }
          source {
          }
          size {
          }
        }
      }
      statements {
        decl {
          expr {
          }
        }
      }
      statements {
      }
      statements {
      }
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 150994944
    statements {
      statements {
      }
      statements {
        decl {
          expr {
          }
        }
      }
      statements {
        decl {
          expr {
          }
        }
      }
      statements {
        decl {
          expr {
          }
        }
      }
      statements {
        decl {
          expr {
          }
        }
      }
      statements {
        decl {
          expr {
          }
        }
      }
      statements {
        decl {
          expr {
          }
        }
      }
      statements {
        decl {
          expr {
          }
        }
      }
      statements {
        decl {
          expr {
          }
        }
      }
      statements {
        decl {
          expr {
          }
        }
      }
      statements {
        decl {
          expr {
          }
        }
      }
      statements {
      }
    }
  }
}
