funcs {
  fd_zero {
    num_input_params: 6
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                    cons {
                      strval: "PPPPPPP"
                    }
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        ifstmt {
          cond {
          }
          if_body {
            statements {
              extcode_copy {
                addr {
                }
                target {
                }
                source {
                }
                size {
                }
              }
            }
          }
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
                cons {
                  intval: 0
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 6
    num_output_params: 3
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 6
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                    cons {
                      intval: 16384
                    }
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        ifstmt {
          cond {
          }
          if_body {
            statements {
              extcode_copy {
                addr {
                }
                target {
                }
                source {
                }
                size {
                  unop {
                    op: ISZERO
                    operand {
                    }
                  }
                }
              }
            }
          }
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
                cons {
                  intval: 0
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 6
    num_output_params: 3
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                    cons {
                      intval: 16384
                    }
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        ifstmt {
          cond {
          }
          if_body {
            statements {
              extcode_copy {
                addr {
                }
                target {
                }
                source {
                }
                size {
                  unop {
                    op: ISZERO
                    operand {
                    }
                  }
                }
              }
            }
          }
        }
      }
      statements {
        storage_func {
          loc {
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                    cons {
                      intval: 16384
                    }
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 975183904
    num_output_params: 3
    statements {
      statements {
        assignment {
          ref_id {
            varnum: 5
          }
          expr {
            top {
              op: ADDM
              arg1 {
                nop {
                  op: MSIZE
                }
              }
              arg2 {
              }
              arg3 {
              }
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              hexval: "22222222222222222"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              intval: 7
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              intval: 7
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 8
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 8
    statements {
    }
  }
  fd_multi {
    num_input_params: 975183904
    num_output_params: 6
    statements {
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              hexval: "22222222222222222"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              intval: 7
            }
            case_block {
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              hexval: "22222222222222222"
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
              intval: 7
            }
            case_block {
            }
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 6
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
                cons {
                  intval: 0
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
                cons {
                  intval: 0
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                    cons {
                      strval: "PPPPPPP"
                    }
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        ifstmt {
          cond {
          }
          if_body {
            statements {
              extcode_copy {
                addr {
                }
                target {
                }
                source {
                }
                size {
                  unop {
                    op: ISZERO
                    operand {
                    }
                  }
                }
              }
            }
          }
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
              right {
                nop {
                  op: PC
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        ifstmt {
          cond {
          }
          if_body {
            statements {
              extcode_copy {
                addr {
                }
                target {
                }
                source {
                }
                size {
                  unop {
                    op: ISZERO
                    operand {
                    }
                  }
                }
              }
            }
          }
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                    cons {
                      intval: 16384
                    }
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 6
    num_output_params: 3
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 8
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 1
    statements {
    }
  }
  fd_multi {
    num_input_params: 1
    num_output_params: 3
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: SHL
              left {
              }
              right {
                binop {
                  op: SHL
                  left {
                  }
                  right {
                    binop {
                      op: SHL
                      left {
                      }
                      right {
                        binop {
                          op: SHL
                          left {
                          }
                          right {
                            binop {
                              op: SHL
                              left {
                              }
                              right {
                                binop {
                                  op: SHL
                                  left {
                                  }
                                  right {
                                    binop {
                                      op: SHR
                                      left {
                                      }
                                      right {
                                        binop {
                                          op: SHR
                                          left {
                                          }
                                          right {
                                            binop {
                                              op: SHR
                                              left {
                                              }
                                              right {
                                                binop {
                                                  op: SHL
                                                  left {
                                                  }
                                                  right {
                                                    binop {
                                                      op: SHR
                                                      left {
                                                      }
                                                      right {
                                                        binop {
                                                          op: SHL
                                                          left {
                                                          }
                                                          right {
                                                            binop {
                                                              op: SHR
                                                              left {
                                                              }
                                                              right {
                                                                binop {
                                                                  op: SHR
                                                                  left {
                                                                  }
                                                                  right {
                                                                    binop {
                                                                      op: SHL
                                                                      left {
                                                                      }
                                                                      right {
                                                                        binop {
                                                                          op: SHL
                                                                          left {
                                                                          }
                                                                          right {
                                                                            binop {
                                                                              op: SHL
                                                                              left {
                                                                              }
                                                                              right {
                                                                                binop {
                                                                                  op: SHR
                                                                                  left {
                                                                                  }
                                                                                  right {
                                                                                    cons {
                                                                                      strval: "WWfWu"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          val {
          }
          st: MSTORE
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 8
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
                cons {
                  intval: 0
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                    cons {
                      intval: 16384
                    }
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                    cons {
                      intval: 16384
                    }
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        ifstmt {
          cond {
          }
          if_body {
            statements {
              extcode_copy {
                addr {
                }
                target {
                }
                source {
                }
                size {
                  unop {
                    op: ISZERO
                    operand {
                    }
                  }
                }
              }
            }
          }
        }
      }
      statements {
        storage_func {
          loc {
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                    cons {
                      intval: 16384
                    }
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 975183904
    num_output_params: 3
    statements {
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 8
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 8
    statements {
    }
  }
  fd_multi {
    num_input_params: 6
    num_output_params: 3
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 6
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
                cons {
                  intval: 0
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        ifstmt {
          cond {
          }
          if_body {
            statements {
              extcode_copy {
                addr {
                }
                target {
                }
                source {
                }
                size {
                  unop {
                    op: ISZERO
                    operand {
                    }
                  }
                }
              }
            }
          }
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                    cons {
                      intval: 16384
                    }
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 3
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 8
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
                cons {
                  intval: 0
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                    cons {
                      intval: 16384
                    }
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                    cons {
                      intval: 16384
                    }
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        ifstmt {
          cond {
          }
          if_body {
            statements {
              extcode_copy {
                addr {
                }
                target {
                }
                source {
                }
                size {
                  unop {
                    op: ISZERO
                    operand {
                    }
                  }
                }
              }
            }
          }
        }
      }
      statements {
        storage_func {
          loc {
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                    cons {
                      intval: 16384
                    }
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 975183904
    num_output_params: 3
    statements {
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
          case_stmt {
            case_lit {
            }
            case_block {
            }
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 6
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                    cons {
                      intval: 16384
                    }
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        ifstmt {
          cond {
          }
          if_body {
            statements {
              extcode_copy {
                addr {
                }
                target {
                }
                source {
                }
                size {
                  unop {
                    op: ISZERO
                    operand {
                    }
                  }
                }
              }
            }
          }
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
                cons {
                  intval: 0
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 6
    num_output_params: 3
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 6
    statements {
      var {
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
                binop {
                  op: MOD
                  left {
                    cons {
                      intval: 16384
                    }
                  }
                  right {
                  }
                }
              }
              right {
                binop {
                  op: MOD
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        ifstmt {
          cond {
          }
          if_body {
            statements {
              extcode_copy {
                addr {
                }
                target {
                }
                source {
                }
                size {
                  unop {
                    op: ISZERO
                    operand {
                    }
                  }
                }
              }
            }
          }
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: MOD
              left {
                cons {
                  intval: 0
                }
              }
              right {
              }
            }
          }
          val {
            binop {
              op: MOD
              left {
              }
              right {
              }
            }
          }
          st: MSTORE
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 6
    num_output_params: 3
    statements {
    }
  }
}
