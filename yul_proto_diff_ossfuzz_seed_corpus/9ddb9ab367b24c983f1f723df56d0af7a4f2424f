funcs {
  fd_zero {
    num_input_params: 2
    statements {
      var {
      }
      statements {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
      statements {
      }
      statements {
        boundedforstmt {
          for_body {
            statements {
              boundedforstmt {
                for_body {
                  statements {
                  }
                  statements {
                    boundedforstmt {
                      for_body {
                        statements {
                          boundedforstmt {
                            for_body {
                              statements {
                                boundedforstmt {
                                  for_body {
                                    statements {
                                      boundedforstmt {
                                        for_body {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            statements {
              assignment {
                ref_id {
                  varnum: 9216
                }
                expr {
                }
              }
            }
          }
        }
      }
      statements {
        functioncall {
          call_multidecl {
            func_index: 4
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
    }
  }
}
