funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
      statements {
        assignment {
          ref_id {
            varnum: 0
          }
          expr {
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
      statements {
        assignment {
          ref_id {
            varnum: 0
          }
          expr {
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
      statements {
        assignment {
          ref_id {
            varnum: 0
          }
          expr {
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
      statements {
        assignment {
          ref_id {
            varnum: 0
          }
          expr {
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        copy_func {
          ct: RETURNDATA
          target {
          }
          source {
          }
          size {
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
      }
      statements {
        functioncall {
          call_multidecl {
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 538976288
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
                varref {
                  varnum: 545067012
                }
              }
              right {
                binop {
                  op: SHL
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
          val {
            varref {
              varnum: 538976260
            }
          }
          st: MSTORE
        }
      }
    }
  }
  fd_multi {
    num_input_params: 1
    num_output_params: 262144
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
      statements {
        functioncall {
          call_multiassign {
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
            out_param1 {
              varnum: 0
            }
            out_param2 {
              varnum: 0
            }
            out_param3 {
              varnum: 67108864
            }
            out_param4 {
              varnum: 0
            }
          }
        }
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
      statements {
        assignment {
          ref_id {
            varnum: 0
          }
          expr {
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
              }
              right {
                binop {
                  op: SHL
                  left {
                  }
                  right {
                    binop {
                      op: SHL
                      left {
                        binop {
                          op: SHR
                          left {
                          }
                          right {
                            binop {
                              op: SHL
                              left {
                              }
                              right {
                                binop {
                                  op: SHL
                                  left {
                                  }
                                  right {
                                    binop {
                                      op: SHR
                                      left {
                                      }
                                      right {
                                        binop {
                                          op: SHL
                                          left {
                                          }
                                          right {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      right {
                      }
                    }
                  }
                }
              }
            }
          }
          val {
            varref {
              varnum: 538976260
            }
          }
          st: MSTORE
        }
      }
    }
  }
  fd_multi {
    num_input_params: 1
    num_output_params: 0
    statements {
      statements {
        assignment {
          ref_id {
            varnum: 0
          }
          expr {
          }
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: AND
              left {
                varref {
                  varnum: 545067012
                }
              }
              right {
                varref {
                  varnum: 0
                }
              }
            }
          }
          val {
          }
          st: MSTORE
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        functioncall {
        }
      }
      statements {
        functioncall {
          call_multidecl {
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
      statements {
        assignment {
          ref_id {
            varnum: 0
          }
          expr {
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        copy_func {
          ct: RETURNDATA
          target {
          }
          source {
          }
          size {
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        functioncall {
          call_zero {
            func_index: 4294443012
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
              top {
                op: MULM
                arg1 {
                  unop {
                    op: NOT
                    operand {
                      nop {
                        op: PC
                      }
                    }
                  }
                }
                arg2 {
                  unop {
                    op: NOT
                    operand {
                    }
                  }
                }
                arg3 {
                  cons {
                    hexval: "888\0308888888888888888888888time8888888888"
                  }
                }
              }
            }
            in_param4 {
            }
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: RETURN
            pos {
            }
            size {
              cons {
                hexval: "\377\377\377\377\377\377\377\006"
              }
            }
          }
        }
      }
      statements {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 6
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
      }
      statements {
        functioncall {
          call_multidecl {
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 538976288
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        functioncall {
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
      statements {
        assignment {
          ref_id {
            varnum: 0
          }
          expr {
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 4
    statements {
      statements {
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        functioncall {
          call_multidecl {
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        copy_func {
          ct: RETURNDATA
          target {
          }
          source {
          }
          size {
          }
        }
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 6
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 538976288
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        functioncall {
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_multi {
    num_input_params: 4
    num_output_params: 262144
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
      statements {
        assignment {
          ref_id {
            varnum: 0
          }
          expr {
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
      statements {
        assignment {
          ref_id {
            varnum: 0
          }
          expr {
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: RETURN
            pos {
            }
            size {
              func_expr {
                func_index: 537556224
                in_param1 {
                }
                in_param2 {
                }
                in_param3 {
                }
                in_param4 {
                }
              }
            }
          }
        }
      }
      statements {
      }
      statements {
        forstmt {
          for_body {
          }
          for_init {
          }
          for_post {
          }
          for_cond {
            binop {
              op: MOD
              left {
                cons {
                  intval: 0
                }
              }
              right {
                cons {
                  strval: "qqqqqqqqqqqqqqqqqqqqqqqqq"
                }
              }
            }
          }
        }
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: RETURN
            pos {
            }
            size {
              func_expr {
                func_index: 537556224
                in_param1 {
                }
                in_param2 {
                }
                in_param3 {
                }
                in_param4 {
                }
              }
            }
          }
        }
      }
      statements {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
    }
  }
  fd_multi {
    num_input_params: 1
    num_output_params: 262144
    statements {
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 2
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
      statements {
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
        terminatestmt {
          self_des {
            addr {
              binop {
                op: MOD
                left {
                }
                right {
                }
              }
            }
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: INVALID
          }
        }
      }
      statements {
        boundedforstmt {
          for_body {
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 4
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 4
    statements {
      statements {
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 0
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
      statements {
        assignment {
          ref_id {
            varnum: 0
          }
          expr {
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
funcs {
  fd_zero {
    num_input_params: 4
    statements {
      var {
      }
      statements {
      }
      statements {
        functioncall {
          call_multidecl {
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 0
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 262144
    statements {
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
}
