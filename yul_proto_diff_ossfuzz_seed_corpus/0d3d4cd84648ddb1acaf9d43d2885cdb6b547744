block {
  statements {
  }
  statements {
    boundedforstmt {
      for_body {
        statements {
          boundedforstmt {
            for_body {
              statements {
                log_func {
                  pos {
                  }
                  size {
                    binop {
                      op: EXP
                      left {
                        binop {
                          op: ADD
                          left {
                          }
                          right {
                          }
                        }
                      }
                      right {
                        binop {
                          op: ADD
                          left {
                          }
                          right {
                            nop {
                              op: PC
                            }
                          }
                        }
                      }
                    }
                  }
                  num_topics: ONE
                  t1 {
                  }
                  t2 {
                  }
                  t3 {
                  }
                  t4 {
                    nop {
                      op: PC
                    }
                  }
                }
              }
              statements {
              }
            }
          }
        }
        statements {
          storage_func {
            loc {
              cons {
                strval: "4\000\000\000"
              }
            }
            val {
            }
            st: MSTORE
          }
        }
      }
    }
  }
  statements {
    ifstmt {
      cond {
        nop {
          op: PC
        }
      }
      if_body {
      }
    }
  }
  statements {
    boundedforstmt {
      for_body {
        statements {
          forstmt {
            for_body {
            }
            for_init {
            }
            for_post {
            }
            for_cond {
              cons {
              }
            }
          }
        }
      }
    }
  }
}
