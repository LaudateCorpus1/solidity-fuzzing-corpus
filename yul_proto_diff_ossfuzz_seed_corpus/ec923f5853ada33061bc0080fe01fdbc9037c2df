funcs {
  fd_zero {
    num_input_params: 3
    statements {
      var {
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
  fd_one {
    num_input_params: 7299842
    statements {
    }
  }
  fd_multi {
    num_input_params: 0
    num_output_params: 0
    statements {
      statements {
        boundedforstmt {
          for_body {
            statements {
              boundedforstmt {
                for_body {
                  statements {
                    boundedforstmt {
                      for_body {
                        statements {
                          boundedforstmt {
                            for_body {
                              statements {
                                boundedforstmt {
                                  for_body {
                                    statements {
                                      boundedforstmt {
                                        for_body {
                                        }
                                      }
                                    }
                                    statements {
                                      boundedforstmt {
                                        for_body {
                                          statements {
                                            assignment {
                                              ref_id {
                                                varnum: 0
                                              }
                                              expr {
                                                varref {
                                                  varnum: 0
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
