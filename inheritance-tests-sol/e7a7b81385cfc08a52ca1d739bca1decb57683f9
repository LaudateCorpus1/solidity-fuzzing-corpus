pragma solidity >=0.0;
interface C1BBBBBBBBB {
	function f0() external view returns (uint);
}
interface C1BBBBBBBB is C1BBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB {
}
interface C1BBBBBB is C1BBBBBBB {
}
interface C1BBBBB is C1BBBBBB {
	function f0() override
	external view returns (uint);
}
interface C1BBBB is C1BBBBB {
	function f1() external payable returns (uint);
}
interface C1BBB is C1BBBB {
	function f2() external view returns (uint);
}
contract C1BB is C1BBB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 769429449;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1055691416;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1379193482;
	}
}
contract C1B is C1BB {
}
contract C1 is C1B {
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1650497032;
	}
}
library L3 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
library L5 {
	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
interface C6BBBBBBB {
	function f0() external view returns (uint);
}
interface C6BBBBBB is C6BBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C6BBBBB is C6BBBBBB {
	function f0() override
	external view returns (uint);
}
interface C6BBBB is C6BBBBB {
}
interface C6BBB is C6BBBB {
}
interface C6BB is C6BBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface C6B is C6BB {
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
contract C6 is C6B {
	function f0() external view
	override
	returns (uint)
	{
		return 1191143145;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1932363884;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1488084345;
	}
}
library L7 {
	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}
interface C8BBB {
	function f0() external payable returns (uint);
}
interface C8BB is C8BBB {
	function f0() override
	external payable returns (uint);
}
interface C8B is C8BB {
}
contract C8 is C8B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1849502422;
	}
}
abstract contract C9B {
}
interface C9BBBBBB {
	function f0() external view returns (uint);
}
interface C9BBBBB is C9BBBBBB {
	function f0() override
	external view returns (uint);
}
interface C9BBBB is C9BBBBB {
	function f0() override
	external view returns (uint);
}
interface C9BBB is C9BBBB {
}
contract C9BB is C9B, C9BBB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1992476491;
	}
}
contract C9 is C9B, C9BB {
}
interface C10BBBB {
	function f0() external payable returns (uint);
}
interface C10BBB is C10BBBB {
	function f0() override
	external payable returns (uint);
}
contract C10BB is C10BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 2033509083;
	}
}
contract C10B is C10BB {
}
contract C10 is C10B {
}
library L11 {
	function f0(uint) public pure returns (uint)
	{
		return 1957747793;
	}
}
library L12 {
	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
}
contract C {
	using L11 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1957747793)
			return 1;
		return 0;
	}
}
