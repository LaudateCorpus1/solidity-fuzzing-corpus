pragma solidity >=0.0;
interface C0BBBB {
	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface C0BBB is C0BBBB {
	function f1() override
	external payable returns (uint);
}
contract C0BB is C0BBB {
	function f0() external view
	override
	returns (uint)
	{
		return 2078669041;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1105902161;
	}
}
contract C0B is C0BB {
}
contract C0 is C0B {
	function f2() public view
	
	returns (uint)
	{
		return 1596680831;
	}
}
abstract contract C1BB {
}
contract C1B is C1BB {
}
contract C1 is C1B {
	function f0() public view
	
	returns (uint)
	{
		return 1203428207;
	}
	function f1() public view
	
	returns (uint)
	{
		return 1250328747;
	}
}
abstract contract C2B {
}
abstract contract C2BBB {
}
contract C2BBBB is C2BBB {
}
contract C2BBBBB is C2BBB {
}
contract C2BB is C2B, C2BBB, C2BBBB, C2BBBBB {
	function f0() public view
	
	returns (uint)
	{
		return 1098894339;
	}
	function f1() public view
	
	returns (uint)
	{
		return 1882556969;
	}
}
contract C2BBBBBB is C2BB {
}
contract C2 is C2B, C2BB, C2BBBBBB {
	function f2() public view
	
	returns (uint)
	{
		return 2075782095;
	}
	function f3() public view
	
	returns (uint)
	{
		return 638022372;
	}
}
library L3 {
	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
library L4 {
	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
}
library L5 {
	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
}
interface C6B {
	function f0() external view returns (uint);
}
interface C6BB is C6B {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
contract C6 is C6B, C6BB {
	function f0() external view
	override(C6BB, C6B)
	returns (uint)
	{
		return 2064876628;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1842513780;
	}
	function f2() virtual public pure
	
	returns (uint)
	{
		return 1947433875;
	}
}
interface C8BBB {
	function f0() external view returns (uint);
}
interface C8BB is C8BBB {
}
abstract contract C8B is C8BB {
	function f0() virtual external view
	override
	returns (uint);
}
contract C8 is C8B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1168816941;
	}
}
interface I9BB {
	function f0() external view returns (uint);
}
interface I9B is I9BB {
	function f1() external payable returns (uint);
}
interface I9 is I9B {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
contract C10 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1287522347;
	}
}
contract C11 {
	function f0() public pure
	
	returns (uint)
	{
		return 1814467857;
	}
}
library L12 {
	function f0(uint) public view returns (uint)
	{
		return 596516649;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 2078669041)
				return 1;
			if (tc0.f1() != 1105902161)
				return 2;
			if (tc0.f2() != 1596680831)
				return 3;
			C0B tc1 = new C0B();
			if (tc1.f0() != 2078669041)
				return 4;
			if (tc1.f1() != 1105902161)
				return 5;
			C0BB tc2 = new C0BB();
			if (tc2.f0() != 2078669041)
				return 6;
			if (tc2.f1() != 1105902161)
				return 7;
			C1 tc3 = new C1();
			if (tc3.f0() != 1203428207)
				return 8;
			if (tc3.f1() != 1250328747)
				return 9;
			C10 tc4 = new C10();
			if (tc4.f0() != 1287522347)
				return 10;
			C11 tc5 = new C11();
			if (tc5.f0() != 1814467857)
				return 11;
			C2 tc6 = new C2();
			if (tc6.f0() != 1098894339)
				return 12;
			if (tc6.f1() != 1882556969)
				return 13;
			if (tc6.f2() != 2075782095)
				return 14;
			if (tc6.f3() != 638022372)
				return 15;
			C2BB tc7 = new C2BB();
			if (tc7.f0() != 1098894339)
				return 16;
			if (tc7.f1() != 1882556969)
				return 17;
			C2BBBBBB tc8 = new C2BBBBBB();
			if (tc8.f0() != 1098894339)
				return 18;
			if (tc8.f1() != 1882556969)
				return 19;
			C6 tc9 = new C6();
			if (tc9.f0() != 2064876628)
				return 20;
			if (tc9.f1() != 1842513780)
				return 21;
			if (tc9.f2() != 1947433875)
				return 22;
			C8 tc10 = new C8();
			if (tc10.f0() != 1168816941)
				return 23;
			return 0;
	}
}
