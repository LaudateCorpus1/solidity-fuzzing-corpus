
pragma solidity >=0.0;





abstract contract C0BB {

	function f0() virtual public view
	
	returns (uint);
}
contract C0B is C0BB {

	function f0() virtual public view
	override
	returns (uint)
	{
		return 1914720637;
	}
}
contract C0 is C0B {

}




interface C1BBB {

	function f0() external payable returns (uint);
}
interface C1BB is C1BBB {

}
contract C1B is C1BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1596680831;
	}
}
contract C1 is C1B {

}
library L2 {

	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
library L3 {

	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}



interface I4BB {

	function f0() external payable returns (uint);
}
interface I4B is I4BB {

}
interface I4 is I4B {

}
library L5 {

	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) internal view returns (uint)
	{
		return 1957747793;
	}
}
library L6 {

	function f0(uint) internal pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) public view returns (uint)
	{
		return 719885386;
	}
}

interface I7 {

	function f0() external view returns (uint);
}


contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 846930886)
			return 1;
		return 0;
	}
}

