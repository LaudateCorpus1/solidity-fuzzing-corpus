pragma solidity >=0.0;
interface I0 {
	function f0() external view returns (uint);
}
interface C1BBBB {
	function f0() external payable returns (uint);
}
interface C1BBB is C1BBBB {
}
abstract contract C1BB is C1BBB {
	function f0() virtual external payable
	override
	returns (uint);
}
contract C1B is C1BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1501100076;
	}
}
contract C1 is C1B {
}
library L2 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
interface C3BBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C3BBBBBBB is C3BBBBBBBB {
}
interface C3BBBBBB is C3BBBBBBB {
	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C3BBBBB is C3BBBBBB {
	function f3() override
	external view returns (uint);
}
interface C3BBBBBBBBB is C3BBBBB {
	function f0() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external payable returns (uint);
}
interface C3BBBB is C3BBBBB, C3BBBBBBBBB {
	function f0() override(C3BBBBBB, C3BBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
	function f2() override(C3BBBBBB, C3BBBBBBBBB)
	external view returns (uint);
	function f3() override(C3BBBBB, C3BBBBBBBBB)
	external view returns (uint);
}
contract C3BBB is C3BBBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 445221226;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 552862047;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1921766507;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1658150294;
	}
	function f4() external payable
	override
	returns (uint)
	{
		return 1174276176;
	}
}
contract C3BB is C3BBB {
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1903579395;
	}
}
contract C3B is C3BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 837912430;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1735915146;
	}
}
contract C3 is C3B {
	function f2() external view
	override
	returns (uint)
	{
		return 2049654209;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1249752168;
	}
}
interface I4BB {
	function f0() external view returns (uint);
}
interface I4B is I4BB {
	function f1() external payable returns (uint);
}
interface I4 is I4B {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
abstract contract C5B {
}
interface C5BBBBBB {
	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C5BBBBB is C5BBBBBB {
}
interface C5BBBB is C5BBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C5BBB is C5BBBB {
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
abstract contract C5BB is C5B, C5BBB {
	function f0() virtual external payable
	override
	returns (uint);
	function f1() external pure
	override
	returns (uint)
	{
		return 934841665;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1733068100;
	}
	function f3() virtual external view
	override
	returns (uint);
	function f4() virtual external view
	override
	returns (uint);
}
contract C5 is C5B, C5BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1364168764;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 695874224;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 1208054673;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1501100076)
				return 1;
			C1B tc1 = new C1B();
			if (tc1.f0() != 1501100076)
				return 2;
			C3 tc2 = new C3();
			if (tc2.f0() != 837912430)
				return 3;
			if (tc2.f1() != 552862047)
				return 4;
			if (tc2.f2() != 2049654209)
				return 5;
			if (tc2.f3() != 1249752168)
				return 6;
			if (tc2.f4() != 1174276176)
				return 7;
			C3B tc3 = new C3B();
			if (tc3.f0() != 837912430)
				return 8;
			if (tc3.f1() != 552862047)
				return 9;
			if (tc3.f2() != 1735915146)
				return 10;
			if (tc3.f3() != 1903579395)
				return 11;
			if (tc3.f4() != 1174276176)
				return 12;
			C3BB tc4 = new C3BB();
			if (tc4.f0() != 445221226)
				return 13;
			if (tc4.f1() != 552862047)
				return 14;
			if (tc4.f2() != 1921766507)
				return 15;
			if (tc4.f3() != 1903579395)
				return 16;
			if (tc4.f4() != 1174276176)
				return 17;
			C3BBB tc5 = new C3BBB();
			if (tc5.f0() != 445221226)
				return 18;
			if (tc5.f1() != 552862047)
				return 19;
			if (tc5.f2() != 1921766507)
				return 20;
			if (tc5.f3() != 1658150294)
				return 21;
			if (tc5.f4() != 1174276176)
				return 22;
			C5 tc6 = new C5();
			if (tc6.f0() != 1364168764)
				return 23;
			if (tc6.f1() != 934841665)
				return 24;
			if (tc6.f2() != 1733068100)
				return 25;
			if (tc6.f3() != 695874224)
				return 26;
			if (tc6.f4() != 1208054673)
				return 27;
			return 0;
	}
}
