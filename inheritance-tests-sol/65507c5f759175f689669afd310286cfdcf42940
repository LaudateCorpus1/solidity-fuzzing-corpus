
pragma solidity >=0.0;



interface I1 {

	function f0() external payable returns (uint);
}







interface I2BBBBBB {

}
interface I2BBBBB is I2BBBBBB {

}
interface I2BBBB is I2BBBBB {

}




interface I2BBBBBBBBBB {

}
interface I2BBBBBBBBB is I2BBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I2BBBBBBBB is I2BBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I2BBBBBBB is I2BBBB, I2BBBBBBBB {

}
interface I2BBB is I2BBBB, I2BBBBBBB {

	function f1() external payable returns (uint);
}
interface I2BB is I2BBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I2B is I2BB {

	function f0() override
	external view returns (uint);
}




interface I2BBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBB is I2BBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I2BBBBBBBBBBBB is I2BBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I2BBBBBBBBBBB is I2BB, I2BBBBBBBBBBBB {

	function f0() override(I2BB, I2BBBBBBBBBBBB)
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
interface I2 is I2B, I2BBBBBBBBBBB {

	function f0() override(I2B, I2BBBBBBBBBBB)
	external view returns (uint);
	function f2() override(I2BB, I2BBBBBBBBBBB)
	external view returns (uint);
	function f3() external payable returns (uint);
}

interface I4 {

	function f0() external payable returns (uint);
}


interface I6B {

	function f0() external view returns (uint);
}
interface I6 is I6B {

	function f0() override
	external view returns (uint);
}

contract C7 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1709834337;
	}
}

interface I8 {

	function f0() external payable returns (uint);
}

interface I9 {

	function f0() external payable returns (uint);
}

contract C10 {

	function f0() external pure
	
	returns (uint)
	{
		return 1174276176;
	}
}

contract C11 {

	function f0() external pure
	
	returns (uint)
	{
		return 654429131;
	}
}

interface I12 {

	function f0() external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C10 tc0 = new C10();
			if (tc0.f0() != 1174276176)
				return 1;
			C11 tc1 = new C11();
			if (tc1.f0() != 654429131)
				return 2;
			C7 tc2 = new C7();
			if (tc2.f0() != 1709834337)
				return 3;
			return 0;
	}
}

