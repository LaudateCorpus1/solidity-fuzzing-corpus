pragma solidity >=0.0;
interface C0BB {
	function f0() external view returns (uint);
}
interface C0B is C0BB {
}
contract C0 is C0B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1914720637;
	}
}
library L2 {
	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
}
interface C3BBBBBB {
	function f0() external view returns (uint);
}
interface C3BBBBB is C3BBBBBB {
}
interface C3BBBBBBB is C3BBBBBB {
	function f1() external view returns (uint);
}
interface C3BBBB is C3BBBBB, C3BBBBBBB {
}
contract C3BBB is C3BBBB {
	function f0() external view
	override
	returns (uint)
	{
		return 1271135913;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1882556969;
	}
}
contract C3BB is C3BBB {
}
contract C3B is C3BB {
}
contract C3 is C3B {
}
interface C4BBB {
	function f0() external payable returns (uint);
}
interface C4BB is C4BBB {
	function f0() override
	external payable returns (uint);
}
contract C4B is C4BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1402304087;
	}
}
contract C4 is C4B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1842513780;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1914720637)
				return 1;
			C3 tc1 = new C3();
			if (tc1.f0() != 1271135913)
				return 2;
			if (tc1.f1() != 1882556969)
				return 3;
			C3B tc2 = new C3B();
			if (tc2.f0() != 1271135913)
				return 4;
			if (tc2.f1() != 1882556969)
				return 5;
			C3BB tc3 = new C3BB();
			if (tc3.f0() != 1271135913)
				return 6;
			if (tc3.f1() != 1882556969)
				return 7;
			C3BBB tc4 = new C3BBB();
			if (tc4.f0() != 1271135913)
				return 8;
			if (tc4.f1() != 1882556969)
				return 9;
			C4 tc5 = new C4();
			if (tc5.f0() != 1842513780)
				return 10;
			C4B tc6 = new C4B();
			if (tc6.f0() != 1402304087)
				return 11;
			return 0;
	}
}
