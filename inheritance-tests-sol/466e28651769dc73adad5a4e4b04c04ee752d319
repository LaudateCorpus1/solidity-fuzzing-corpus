pragma solidity >=0.0;
interface I0B {
	function f0() external view returns (uint);
}
interface I0BBBBBB {
}
interface I0BBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I0BBBBBBBBB is I0BBBBBBBBBB {
}
interface I0BBBBBBBB is I0BBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I0BBBBBBB is I0BBBBBB, I0BBBBBBBB {
}
interface I0BBBBB is I0BBBBBB, I0BBBBBBB {
}
interface I0BBBB is I0BBBBB {
}
interface I0BBB is I0BBBB {
}
interface I0BB is I0B, I0BBB {
	function f0() override(I0B, I0BBBBBBBB)
	external view returns (uint);
}
interface I0BBBBBBBBBBB is I0B {
	function f1() external view returns (uint);
}
interface I0BBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBB {
}
interface I0BBBBBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBBBBB {
}
interface I0BBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBB {
}
interface I0BBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBB {
}
interface I0BBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBB {
}
interface I0BBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I0BBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBB {
	function f0() override(I0BBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBB {
	function f1() external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface I0BBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f1() external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I0BBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I0BBBBBBBBBBBBB is I0BBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I0BBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I0BBBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I0BBBBBBBBBBBB is I0B, I0BBBBBBBBBBBBB {
	function f0() override(I0B, I0BBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I0 is I0B, I0BB, I0BBBBBBBBBBB, I0BBBBBBBBBBBB {
	function f0() override(I0B, I0BB, I0BBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I0BBBBBBBBBBB, I0BBBBBBBBBBBB)
	external view returns (uint);
}
interface I1BB {
	function f0() external view returns (uint);
}
interface I1B is I1BB {
	function f1() external payable returns (uint);
}
interface I1BBBB {
	function f0() external view returns (uint);
}
interface I1BBB is I1BB, I1BBBB {
	function f0() override(I1BB, I1BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I1 is I1B, I1BBB {
	function f0() override(I1BB, I1BBB)
	external view returns (uint);
	function f1() override(I1B, I1BBB)
	external payable returns (uint);
}
library L2 {
	function f0(uint) private pure returns (uint)
	{
		return 1025202362;
	}
}
library L5 {
	function f0(uint) external pure returns (uint)
	{
		return 783368690;
	}
}
contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 783368690)
			return 1;
		return 0;
	}
}
