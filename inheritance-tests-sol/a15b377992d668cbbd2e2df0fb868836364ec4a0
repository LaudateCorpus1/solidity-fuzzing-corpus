
pragma solidity >=0.0;


library L1 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
library L2 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}










interface C3BBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C3BBBBBBBB is C3BBBBBBBBB {

}
interface C3BBBBBBB is C3BBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C3BBBBBB is C3BBBBBBB {

	function f0() override
	external payable returns (uint);
}

interface C3BBBBBBBBBB is C3BBBBBBB {

	function f1() override
	external pure returns (uint);
	function f2() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface C3BBBBB is C3BBBBBB, C3BBBBBBBBBB {

	function f0() override(C3BBBBBB, C3BBBBBBB)
	external payable returns (uint);
	function f1() override(C3BBBBBBBBB, C3BBBBBBBBBB)
	external pure returns (uint);
	function f2() override(C3BBBBBBB, C3BBBBBBBBBB)
	external view returns (uint);
}
contract C3BBBB is C3BBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1531210416;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1774893867;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1032438314;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 921256890;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 1389449997;
	}
}
contract C3BBB is C3BBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 552862047;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 739959938;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1174276176;
	}
}
contract C3BB is C3BBB {

}
contract C3B is C3BB {

}

contract C3BBBBBBBBBBB is C3BB {

}
contract C3 is C3B, C3BBBBBBBBBBB {

}





interface C4BBBB {

	function f0() external payable returns (uint);
}
interface C4BBB is C4BBBB {

	function f0() override
	external payable returns (uint);
}
contract C4BB is C4BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 206006984;
	}
}
contract C4B is C4BB {

}
contract C4 is C4B {

}
library L5 {

	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) public pure returns (uint)
	{
		return 424238335;
	}
}



interface I6BB {

}
interface I6B is I6BB {

	function f0() external view returns (uint);
}
interface I6 is I6B {

	function f0() override
	external view returns (uint);
}
library L7 {

	function f0(uint) internal pure returns (uint)
	{
		return 719885386;
	}
}









interface C8BBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C8BBBBBBB is C8BBBBBBBB {

	function f1() override
	external pure returns (uint);
}
interface C8BBBBBB is C8BBBBBBB {

	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external payable returns (uint);
}
interface C8BBBBB is C8BBBBBB {

	function f0() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
}

interface C8BBBBBBBBB is C8BBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
	function f4() external view returns (uint);
}
interface C8BBBB is C8BBBBB, C8BBBBBBBBB {

	function f0() override(C8BBBBB, C8BBBBBBBBB)
	external payable returns (uint);
	function f1() override(C8BBBBBBB, C8BBBBBBBBB)
	external pure returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external payable returns (uint);
	function f4() override
	external view returns (uint);
}
contract C8BBB is C8BBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1174041662;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1967849489;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1278679799;
	}
	function f3() external payable
	override
	returns (uint)
	{
		return 2102973128;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1195680747;
	}
}
contract C8BB is C8BBB {

	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1733068100;
	}
}
contract C8B is C8BB {

	function f4() external view
	override
	returns (uint)
	{
		return 212547773;
	}
}
contract C8 is C8B {

}

interface I9 {

	function f0() external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C3 tc0 = new C3();
			if (tc0.f0() != 552862047)
				return 1;
			if (tc0.f1() != 739959938)
				return 2;
			if (tc0.f2() != 1174276176)
				return 3;
			if (tc0.f3() != 921256890)
				return 4;
			if (tc0.f4() != 1389449997)
				return 5;
			C3B tc1 = new C3B();
			if (tc1.f0() != 552862047)
				return 6;
			if (tc1.f1() != 739959938)
				return 7;
			if (tc1.f2() != 1174276176)
				return 8;
			if (tc1.f3() != 921256890)
				return 9;
			if (tc1.f4() != 1389449997)
				return 10;
			C3BB tc2 = new C3BB();
			if (tc2.f0() != 552862047)
				return 11;
			if (tc2.f1() != 739959938)
				return 12;
			if (tc2.f2() != 1174276176)
				return 13;
			if (tc2.f3() != 921256890)
				return 14;
			if (tc2.f4() != 1389449997)
				return 15;
			C3BBB tc3 = new C3BBB();
			if (tc3.f0() != 552862047)
				return 16;
			if (tc3.f1() != 739959938)
				return 17;
			if (tc3.f2() != 1174276176)
				return 18;
			if (tc3.f3() != 921256890)
				return 19;
			if (tc3.f4() != 1389449997)
				return 20;
			C3BBBB tc4 = new C3BBBB();
			if (tc4.f0() != 1531210416)
				return 21;
			if (tc4.f1() != 1774893867)
				return 22;
			if (tc4.f2() != 1032438314)
				return 23;
			if (tc4.f3() != 921256890)
				return 24;
			if (tc4.f4() != 1389449997)
				return 25;
			C3BBBBBBBBBBB tc5 = new C3BBBBBBBBBBB();
			if (tc5.f0() != 552862047)
				return 26;
			if (tc5.f1() != 739959938)
				return 27;
			if (tc5.f2() != 1174276176)
				return 28;
			if (tc5.f3() != 921256890)
				return 29;
			if (tc5.f4() != 1389449997)
				return 30;
			C4 tc6 = new C4();
			if (tc6.f0() != 206006984)
				return 31;
			C4B tc7 = new C4B();
			if (tc7.f0() != 206006984)
				return 32;
			C4BB tc8 = new C4BB();
			if (tc8.f0() != 206006984)
				return 33;
			C8 tc9 = new C8();
			if (tc9.f0() != 1174041662)
				return 34;
			if (tc9.f1() != 1733068100)
				return 35;
			if (tc9.f2() != 1278679799)
				return 36;
			if (tc9.f3() != 2102973128)
				return 37;
			if (tc9.f4() != 212547773)
				return 38;
			C8B tc10 = new C8B();
			if (tc10.f0() != 1174041662)
				return 39;
			if (tc10.f1() != 1733068100)
				return 40;
			if (tc10.f2() != 1278679799)
				return 41;
			if (tc10.f3() != 2102973128)
				return 42;
			if (tc10.f4() != 212547773)
				return 43;
			C8BB tc11 = new C8BB();
			if (tc11.f0() != 1174041662)
				return 44;
			if (tc11.f1() != 1733068100)
				return 45;
			if (tc11.f2() != 1278679799)
				return 46;
			if (tc11.f3() != 2102973128)
				return 47;
			if (tc11.f4() != 1195680747)
				return 48;
			C8BBB tc12 = new C8BBB();
			if (tc12.f0() != 1174041662)
				return 49;
			if (tc12.f1() != 1967849489)
				return 50;
			if (tc12.f2() != 1278679799)
				return 51;
			if (tc12.f3() != 2102973128)
				return 52;
			if (tc12.f4() != 1195680747)
				return 53;
			return 0;
	}
}

