pragma solidity >=0.0;
interface I0BB {
}
interface I0B is I0BB {
}
interface I0BBB is I0BB {
	function f0() external view returns (uint);
}
interface I0 is I0B, I0BBB {
	function f0() override
	external view returns (uint);
}
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
interface C2BBB {
	function f0() external view returns (uint);
}
interface C2BB is C2BBB {
	function f1() external view returns (uint);
}
interface C2B is C2BB {
}
contract C2 is C2B {
	function f0() external view
	override
	returns (uint)
	{
		return 1596680831;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1203428207;
	}
}
interface C3BBB {
	function f0() external payable returns (uint);
}
interface C3BB is C3BBB {
}
interface C3B is C3BB {
}
interface C3BBBBBB {
	function f0() external payable returns (uint);
}
interface C3BBBBB is C3BBBBBB {
}
interface C3BBBB is C3BB, C3BBBBB {
	function f0() override(C3BBB, C3BBBBBB)
	external payable returns (uint);
}
contract C3 is C3B, C3BBBB {
	function f0() external payable
	override(C3BBBB, C3BBB)
	returns (uint)
	{
		return 638022372;
	}
}
library L4 {
	function f0(uint) private pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1957747793;
	}
}
interface C5BBB {
	function f0() external payable returns (uint);
}
interface C5BB is C5BBB {
	function f0() override
	external payable returns (uint);
}
contract C5B is C5BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 2064876628;
	}
}
contract C5 is C5B {
}
library L6 {
	function f0(uint) public view returns (uint)
	{
		return 424238335;
	}
}
library L7 {
	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1649760492;
	}
}
contract C8BB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 631416347;
	}
}
contract C8B is C8BB {
}
contract C8 is C8B {
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1105724094;
	}
}
interface C9BBB {
	function f0() external payable returns (uint);
}
interface C9BB is C9BBB {
	function f0() override
	external payable returns (uint);
}
contract C9B is C9BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1168816941;
	}
}
contract C9 is C9B {
}
interface I10BB {
	function f0() external payable returns (uint);
}
interface I10B is I10BB {
	function f0() override
	external payable returns (uint);
}
interface I10 is I10B {
	function f1() external view returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 1596680831)
				return 1;
			if (tc0.f1() != 1203428207)
				return 2;
			C3 tc1 = new C3();
			if (tc1.f0() != 638022372)
				return 3;
			C5 tc2 = new C5();
			if (tc2.f0() != 2064876628)
				return 4;
			C5B tc3 = new C5B();
			if (tc3.f0() != 2064876628)
				return 5;
			C8 tc4 = new C8();
			if (tc4.f0() != 631416347)
				return 6;
			if (tc4.f1() != 1105724094)
				return 7;
			C8B tc5 = new C8B();
			if (tc5.f0() != 631416347)
				return 8;
			C8BB tc6 = new C8BB();
			if (tc6.f0() != 631416347)
				return 9;
			C9 tc7 = new C9();
			if (tc7.f0() != 1168816941)
				return 10;
			C9B tc8 = new C9B();
			if (tc8.f0() != 1168816941)
				return 11;
			return 0;
	}
}
