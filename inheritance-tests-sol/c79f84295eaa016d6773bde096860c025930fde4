
pragma solidity >=0.0;






interface I0BBB {

	function f0() external payable returns (uint);
}
interface I0BB is I0BBB {

}
interface I0B is I0BB {

	function f0() override
	external payable returns (uint);
}
interface I0 is I0B {

}
library L1 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1681692777;
	}
}
library L2 {

	function f0(uint) private pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}




contract C3BBB {

	function f0() external pure
	
	returns (uint)
	{
		return 854716505;
	}
}
contract C3BB is C3BBB {

}
contract C3B is C3BB {

}
contract C3 is C3B {

}




contract C4BBB {

	function f0() external pure
	
	returns (uint)
	{
		return 192302371;
	}
}
contract C4BB is C4BBB {

}
contract C4B is C4BB {

}
contract C4 is C4B {

}
library L5 {

	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) private pure returns (uint)
	{
		return 719885386;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1649760492;
	}
}




contract C6BBB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1271135913;
	}
}

contract C6BBBB is C6BBB {

}
contract C6BB is C6BBB, C6BBBB {

	function f0() public pure
	override
	returns (uint)
	{
		return 2075782095;
	}
}
contract C6B is C6BB {

}
contract C6 is C6B {

}



interface C7BB {

	function f0() external view returns (uint);
}
interface C7B is C7BB {

	function f0() override
	external view returns (uint);
}
contract C7 is C7B {

	function f0() external view
	override
	returns (uint)
	{
		return 2064876628;
	}
}
library L8 {

	function f0(uint) private pure returns (uint)
	{
		return 1189641421;
	}
}




interface I9BBB {

	function f0() external payable returns (uint);
}
interface I9BB is I9BBB {

	function f0() override
	external payable returns (uint);
}
interface I9B is I9BB {

}
interface I9 is I9B {

}



interface C10BB {

	function f0() external view returns (uint);
}
interface C10B is C10BB {

	function f0() override
	external view returns (uint);
}
contract C10 is C10B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 849178936;
	}
}


contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

