pragma solidity >=0.0;
interface I0 {
	function f0() external view returns (uint);
}
library L1 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
interface C3BBB {
	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface C3BB is C3BBB {
	function f0() override
	external view returns (uint);
}
interface C3B is C3BB {
}
contract C3 is C3B {
	function f0() external view
	override
	returns (uint)
	{
		return 312116022;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1648371585;
	}
}
interface I4 {
	function f0() external view returns (uint);
}
interface I5BBBB {
	function f0() external payable returns (uint);
}
interface I5BBB is I5BBBB {
	function f0() override
	external payable returns (uint);
}
interface I5BB is I5BBB {
}
interface I5B is I5BB {
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface I5 is I5B {
	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
contract C6BB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 417788829;
	}
}
contract C6B is C6BB {
	function f0() public pure
	override
	returns (uint)
	{
		return 1700083694;
	}
}
abstract contract C6 is C6B {
}
contract C {
	function test() public returns (uint)
	{
			C3 tc0 = new C3();
			if (tc0.f0() != 312116022)
				return 1;
			if (tc0.f1() != 1648371585)
				return 2;
			C6B tc1 = new C6B();
			if (tc1.f0() != 1700083694)
				return 3;
			C6BB tc2 = new C6BB();
			if (tc2.f0() != 417788829)
				return 4;
			return 0;
	}
}
