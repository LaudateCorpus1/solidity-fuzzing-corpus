pragma solidity >=0.0;
interface I0 {
	function f0() external payable returns (uint);
}
interface I1B {
}
interface I1BBBBB {
	function f0() external view returns (uint);
}
interface I1BBBB is I1BBBBB {
}
interface I1BBBBBB is I1BBBB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I1BBB is I1BBBB, I1BBBBBB {
	function f0() override(I1BBBBB, I1BBBBBB)
	external view returns (uint);
}
interface I1BB is I1B, I1BBB {
}
interface I1 is I1B, I1BB {
}
interface I2 {
	function f0() external payable returns (uint);
}
interface I3 {
	function f0() external payable returns (uint);
}
interface I5BBBBBBBBB {
}
interface I5BBBBBBBB is I5BBBBBBBBB {
	function f0() external view returns (uint);
}
interface I5BBBBBBB is I5BBBBBBBB {
}
interface I5BBBBBB is I5BBBBBBB {
}
interface I5BBBBB is I5BBBBBB {
	function f0() override
	external view returns (uint);
}
interface I5BBBB is I5BBBBB {
}
interface I5BBBBBBBBBBBBB {
}
interface I5BBBBBBBBBBBB is I5BBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I5BBBBBBBBBBB is I5BBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I5BBBBBBBBBB is I5BBBBB, I5BBBBBBBBBBB {
	function f0() override(I5BBBBB, I5BBBBBBBBBBB)
	external view returns (uint);
}
interface I5BBB is I5BBBB, I5BBBBBBBBBB {
	function f0() override(I5BBBBB, I5BBBBBBBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I5BB is I5BBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I5B is I5BB {
	function f2() override
	external view returns (uint);
}
interface I5BBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I5BBBBBBBBBBBBBBBB is I5BBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I5BBBBBBBBBBBBBBBBBBB {
}
interface I5BBBBBBBBBBBBBBBBBB is I5BBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I5BBBBBBBBBBBBBBBBB is I5BBBBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBBBBB {
	function f0() override(I5BBBBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I5BBBBBBBBBBBBBB is I5BB, I5BBBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBBBB {
	function f0() override(I5BB, I5BBBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I5BB, I5BBBBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBBBB)
	external payable returns (uint);
}
interface I5 is I5B, I5BBBBBBBBBBBBBB {
	function f0() override(I5BB, I5BBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I5BB, I5BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I5B, I5BB)
	external view returns (uint);
	function f3() external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
