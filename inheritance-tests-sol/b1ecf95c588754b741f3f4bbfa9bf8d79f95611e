
pragma solidity >=0.0;






interface I1BBB {

	function f0() external payable returns (uint);
}
interface I1BB is I1BBB {

	function f0() override
	external payable returns (uint);
}
interface I1B is I1BB {

}
interface I1 is I1B {

}


interface I2B {

	function f0() external view returns (uint);
}
interface I2 is I2B {

}



interface C3BB {

	function f0() external view returns (uint);
}
contract C3B is C3BB {

	function f0() external view
	override
	returns (uint)
	{
		return 1082575774;
	}
}
contract C3 is C3B {

}


interface I4B {

	function f0() external view returns (uint);
}
interface I4 is I4B {

}


contract C {
	function test() public returns (uint)
	{
			C3 tc0 = new C3();
			if (tc0.f0() != 1082575774)
				return 1;
			C3B tc1 = new C3B();
			if (tc1.f0() != 1082575774)
				return 2;
			return 0;
	}
}

