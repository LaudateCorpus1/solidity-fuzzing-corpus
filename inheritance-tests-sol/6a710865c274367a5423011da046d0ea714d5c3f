
pragma solidity >=0.0;





abstract contract C0BB {

}








interface C0BBBBBBBBBB {

	function f0() external view returns (uint);
}
interface C0BBBBBBBBB is C0BBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface C0BBBBBBBB is C0BBBBBBBBB {

	function f1() override
	external view returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface C0BBBBBB is C0BBBBBBB {

	function f1() override
	external view returns (uint);
}
interface C0BBBBB is C0BBBBBB {

}
interface C0BBBB is C0BBBBB {

	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface C0BBB is C0BBBB {

	function f1() override
	external view returns (uint);
}
contract C0B is C0BB, C0BBB {

	function f0() external view
	override
	returns (uint)
	{
		return 45373597;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 170423502;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1646411619;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 562351922;
	}
}
contract C0 is C0B {

}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

