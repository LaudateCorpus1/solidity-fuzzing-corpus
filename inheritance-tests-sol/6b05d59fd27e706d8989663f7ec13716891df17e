
pragma solidity >=0.0;











interface C1BBBBBBBB {

	function f0() external view returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C1BBBBBB is C1BBBBBBB {

}
interface C1BBBBB is C1BBBBBB {

}
interface C1BBBB is C1BBBBB {

	function f0() override
	external view returns (uint);
}
interface C1BBB is C1BBBB {

	function f1() external payable returns (uint);
}
interface C1BB is C1BBB {

}
contract C1B is C1BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 769429449;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1055691416;
	}
}
contract C1 is C1B {

	function f0() external view
	override
	returns (uint)
	{
		return 1325416955;
	}
}
library L2 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}


interface I4B {

	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface I4 is I4B {

	function f1() override
	external view returns (uint);
}
library L5 {

	function f0(uint) internal view returns (uint)
	{
		return 846930886;
	}
}
library L6 {

	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
library L7 {

	function f0(uint) external view returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1957747793;
	}
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1325416955)
				return 1;
			if (tc0.f1() != 1055691416)
				return 2;
			C1B tc1 = new C1B();
			if (tc1.f0() != 769429449)
				return 3;
			if (tc1.f1() != 1055691416)
				return 4;
			return 0;
	}
}

