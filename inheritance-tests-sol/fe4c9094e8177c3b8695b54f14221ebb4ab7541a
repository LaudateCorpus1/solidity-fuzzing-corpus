
pragma solidity >=0.0;







interface I0BBBB {

	function f0() external payable returns (uint);
}
interface I0BBB is I0BBBB {

	function f0() override
	external payable returns (uint);
}
interface I0BB is I0BBB {

	function f0() override
	external payable returns (uint);
}




interface I0BBBBBBBB {

	function f0() external payable returns (uint);
}
interface I0BBBBBBB is I0BBBBBBBB {

	function f1() external view returns (uint);
}
interface I0BBBBBB is I0BBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I0BBBBB is I0BBB, I0BBBBBB {

	function f0() override(I0BBB, I0BBBBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface I0B is I0BB, I0BBBBB {

	function f0() override(I0BB, I0BBBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface I0 is I0B {

	function f1() override
	external view returns (uint);
}



interface I1BB {

	function f0() external payable returns (uint);
}
interface I1B is I1BB {

	function f0() override
	external payable returns (uint);
}
interface I1 is I1B {

}
library L2 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}

interface I3 {

	function f0() external payable returns (uint);
}
library L4 {

	function f0(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}



interface I5BB {

	function f0() external payable returns (uint);
}
interface I5B is I5BB {

}
interface I5 is I5B {

}
library L6 {

	function f0(uint) public view returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}


contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}

