pragma solidity >=0.0;
interface I0 {
	function f0() external pure returns (uint);
}
library L1 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
interface C2BB {
	function f0() external view returns (uint);
}
interface C2B is C2BB {
}
contract C2 is C2B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1914720637;
	}
}
library L3 {
	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
interface I4B {
}
interface I4 is I4B {
}
interface I5BBB {
	function f0() external view returns (uint);
}
interface I5BB is I5BBB {
}
interface I5B is I5BB {
}
interface I5BBBBB {
	function f0() external view returns (uint);
}
interface I5BBBB is I5BB, I5BBBBB {
	function f0() override(I5BBB, I5BBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I5 is I5B, I5BBBB {
	function f0() override(I5BBB, I5BBBB)
	external view returns (uint);
	function f2() external view returns (uint);
}
library L6 {
	function f0(uint) private pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1957747793;
	}
}
library L7 {
	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) external pure returns (uint)
	{
		return 719885386;
	}
}
library L9 {
	function f0(uint) private pure returns (uint)
	{
		return 1649760492;
	}
}
interface I10BBBBB {
	function f0() external view returns (uint);
}
interface I10BBBB is I10BBBBB {
}
interface I10BBB is I10BBBB {
	function f1() external payable returns (uint);
}
interface I10BB is I10BBB {
	function f1() override
	external payable returns (uint);
}
interface I10B is I10BB {
	function f1() override
	external payable returns (uint);
}
interface I10 is I10B {
	function f0() override
	external view returns (uint);
}
interface C11B {
}
contract C11BBB {
	function f0() virtual public payable
	
	returns (uint)
	{
		return 1936030137;
	}
}
contract C11BB is C11B, C11BBB {
	function f0() virtual public payable
	override
	returns (uint)
	{
		return 1842513780;
	}
}
abstract contract C11 is C11B, C11BB {
}
contract C12BB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 2010567813;
	}
}
contract C12B is C12BB {
	function f0() public pure
	override
	returns (uint)
	{
		return 1105724094;
	}
}
interface C12BBB {
}
abstract contract C12 is C12B, C12BBB {
}
library L13 {
	function f0(uint) private pure returns (uint)
	{
		return 1025202362;
	}
}
library L14 {
	function f0(uint) private pure returns (uint)
	{
		return 1350490027;
	}
}
interface I15BBBBBBB {
	function f0() external payable returns (uint);
}
interface I15BBBBBB is I15BBBBBBB {
}
interface I15BBBBB is I15BBBBBB {
}
interface I15BBBBBBBBBBBBB {
	function f0() external payable returns (uint);
}
interface I15BBBBBBBBBBBB is I15BBBBBBBBBBBBB {
}
interface I15BBBBBBBBBBB is I15BBBBBBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I15BBBBBBBBBB is I15BBBBBBBBBBB {
}
interface I15BBBBBBBBB is I15BBBBBBBBBB {
}
interface I15BBBBBBBB is I15BBBBB, I15BBBBBBBBB {
	function f0() override(I15BBBBBBB, I15BBBBBBBBBBB)
	external payable returns (uint);
}
interface I15BBBB is I15BBBBB, I15BBBBBBBB {
	function f0() override(I15BBBBBBB, I15BBBBBBBB)
	external payable returns (uint);
}
interface I15BBB is I15BBBB {
	function f0() override
	external payable returns (uint);
}
interface I15BB is I15BBB {
	function f0() override
	external payable returns (uint);
}
interface I15BBBBBBBBBBBBBBBBBBB {
	function f0() external payable returns (uint);
}
interface I15BBBBBBBBBBBBBBBBBB is I15BBBBBBBBBBBBBBBBBBB {
}
interface I15BBBBBBBBBBBBBBBBB is I15BBBBBBBBBBBBBBBBBB {
}
interface I15BBBBBBBBBBBBBBBB is I15BBBBBBBBBBBBBBBBB {
}
interface I15BBBBBBBBBBBBBBB is I15BBBBBBBBBBBBBBBB {
}
interface I15BBBBBBBBBBBBBB is I15BBB, I15BBBBBBBBBBBBBBB {
	function f0() override(I15BBB, I15BBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
}
interface I15B is I15BB, I15BBBBBBBBBBBBBB {
	function f0() override(I15BB, I15BBBBBBBBBBBBBB)
	external payable returns (uint);
}
interface I15 is I15B {
}
library L16 {
	function f0(uint) external view returns (uint)
	{
		return 2044897763;
	}
}
library L17 {
	function f0(uint) private pure returns (uint)
	{
		return 1967513926;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1365180540;
	}
}
interface C18BB {
	function f0() external view returns (uint);
}
interface C18B is C18BB {
	function f0() override
	external view returns (uint);
}
interface C18BBBB {
	function f0() external view returns (uint);
}
interface C18BBB is C18B, C18BBBB {
	function f0() override(C18B, C18BBBB)
	external view returns (uint);
}
contract C18 is C18B, C18BBB {
	function f0() virtual external view
	override(C18BBB, C18B)
	returns (uint)
	{
		return 1082682476;
	}
}
contract C {
	function test() public returns (uint)
	{
			C11BB tc0 = new C11BB();
			if (tc0.f0() != 1842513780)
				return 1;
			C11BBB tc1 = new C11BBB();
			if (tc1.f0() != 1936030137)
				return 2;
			C12B tc2 = new C12B();
			if (tc2.f0() != 1105724094)
				return 3;
			C12BB tc3 = new C12BB();
			if (tc3.f0() != 2010567813)
				return 4;
			C18 tc4 = new C18();
			if (tc4.f0() != 1082682476)
				return 5;
			C2 tc5 = new C2();
			if (tc5.f0() != 1914720637)
				return 6;
			return 0;
	}
}
