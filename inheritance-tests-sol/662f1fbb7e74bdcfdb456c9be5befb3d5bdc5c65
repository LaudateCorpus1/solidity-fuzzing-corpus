pragma solidity >=0.0;
library L0 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
library L1 {
	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}
interface I2BB {
	function f0() external view returns (uint);
}
interface I2B is I2BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I2 is I2B {
}
interface I3BB {
	function f0() external view returns (uint);
}
interface I3B is I3BB {
	function f1() external payable returns (uint);
}
interface I3 is I3B {
}
interface I4BB {
	function f0() external view returns (uint);
}
interface I4B is I4BB {
	function f1() external payable returns (uint);
}
interface I4BBBB {
	function f0() external view returns (uint);
}
interface I4BBB is I4BB, I4BBBB {
	function f0() override(I4BB, I4BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I4 is I4B, I4BBB {
	function f0() override(I4BB, I4BBB)
	external view returns (uint);
	function f1() override(I4B, I4BBB)
	external payable returns (uint);
}
library L5 {
	function f0(uint) private pure returns (uint)
	{
		return 1714636915;
	}
}
library L6 {
	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
library L7 {
	function f0(uint) internal pure returns (uint)
	{
		return 424238335;
	}
}
interface I8BB {
	function f0() external view returns (uint);
}
interface I8B is I8BB {
	function f1() external payable returns (uint);
}
interface I8BBBB {
	function f0() external view returns (uint);
}
interface I8BBB is I8B, I8BBBB {
	function f0() override(I8BB, I8BBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I8 is I8B, I8BBB {
	function f0() override(I8BB, I8BBB)
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
interface I9BB {
	function f0() external view returns (uint);
}
interface I9B is I9BB {
	function f1() external payable returns (uint);
}
interface I9BBBB {
	function f0() external view returns (uint);
}
interface I9BBB is I9B, I9BBBB {
	function f0() override(I9BB, I9BBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface I9 is I9B, I9BBB {
	function f0() override(I9BB, I9BBB)
	external view returns (uint);
	function f1() override(I9B, I9BBB)
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
interface I10B {
	function f0() external view returns (uint);
}
interface I10 is I10B {
}
library L11 {
	function f0(uint) private pure returns (uint)
	{
		return 596516649;
	}
}
interface I12BB {
	function f0() external view returns (uint);
}
interface I12B is I12BB {
	function f1() external payable returns (uint);
}
interface I12 is I12B {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}
