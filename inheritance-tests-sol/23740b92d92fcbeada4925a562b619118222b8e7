pragma solidity >=0.0;
library L0 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
library L1 {
	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}
library L2 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
contract C3BBB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 201345864;
	}
}
contract C3BB is C3BBB {
}
contract C3B is C3BB {
}
contract C3 is C3B {
}
library L4 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
interface I6BBB {
	function f0() external payable returns (uint);
}
interface I6BB is I6BBB {
	function f0() override
	external payable returns (uint);
}
interface I6B is I6BB {
	function f0() override
	external payable returns (uint);
}
interface I6 is I6B {
	function f0() override
	external payable returns (uint);
}
library L7 {
	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) public pure returns (uint)
	{
		return 719885386;
	}
}
library L8 {
	function f0(uint) internal view returns (uint)
	{
		return 1649760492;
	}
	function f1(uint) public pure returns (uint)
	{
		return 596516649;
	}
}
contract C9 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 768978679;
	}
}
interface I10BBBBBBB {
}
interface I10BBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I10BBBBBBBBBB is I10BBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I10BBBBBBBBBBBB is I10BBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I10BBBBBBBBB is I10BBBBBBBBBB, I10BBBBBBBBBBBB {
	function f0() override(I10BBBBBBBBBB, I10BBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I10BBBBBBBB is I10BBBBBBB, I10BBBBBBBBB {
	function f2() override
	external payable returns (uint);
}
interface I10BBBBBB is I10BBBBBBB, I10BBBBBBBB {
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() external pure returns (uint);
}
interface I10BBBBB is I10BBBBBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external pure returns (uint);
	function f5() external payable returns (uint);
}
interface I10BBBB is I10BBBBB {
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
}
interface I10BBBBBBBBBBBBB is I10BBBBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() override
	external pure returns (uint);
	function f6() external payable returns (uint);
}
interface I10BBB is I10BBBB, I10BBBBBBBBBBBBB {
	function f0() override(I10BBBBB, I10BBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(I10BBBBB, I10BBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I10BBBB, I10BBBBB)
	external view returns (uint);
	function f4() override(I10BBBBB, I10BBBBBBBBBBBBB)
	external pure returns (uint);
	function f5() override(I10BBBB, I10BBBBB)
	external payable returns (uint);
	function f7() external view returns (uint);
}
interface I10BB is I10BBB {
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external pure returns (uint);
	function f7() override
	external view returns (uint);
}
interface I10B is I10BB {
	function f5() override
	external payable returns (uint);
	function f7() override
	external view returns (uint);
}
interface I10 is I10B {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C3 tc0 = new C3();
			if (tc0.f0() != 201345864)
				return 1;
			C3B tc1 = new C3B();
			if (tc1.f0() != 201345864)
				return 2;
			C3BB tc2 = new C3BB();
			if (tc2.f0() != 201345864)
				return 3;
			C3BBB tc3 = new C3BBB();
			if (tc3.f0() != 201345864)
				return 4;
			C9 tc4 = new C9();
			if (tc4.f0() != 768978679)
				return 5;
			return 0;
	}
}
