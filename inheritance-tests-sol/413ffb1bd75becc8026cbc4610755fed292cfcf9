pragma solidity >=0.0;
library L0 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
}
interface C1BBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
}
interface C1BBBBBB is C1BBBBBBB {
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C1BBBBB is C1BBBBBB {
}
interface C1BBBBBBBBB is C1BBBBB {
	function f4() external view returns (uint);
}
interface C1BBBB is C1BBBBB, C1BBBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() external payable returns (uint);
}
abstract contract C1BBB is C1BBBB {
	function f0() virtual external payable
	override
	returns (uint);
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1947433875;
	}
	function f2() virtual external view
	override
	returns (uint);
	function f3() virtual external view
	override
	returns (uint);
	function f4() virtual external view
	override
	returns (uint);
	function f5() virtual external payable
	override
	returns (uint);
}
abstract contract C1BB is C1BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1057382352;
	}
	function f2() virtual external view
	override
	returns (uint);
	function f3() virtual external view
	override
	returns (uint);
	function f4() virtual external view
	override
	returns (uint);
	function f5() external payable
	override
	returns (uint)
	{
		return 389431516;
	}
}
abstract contract C1B is C1BB {
	function f2() external view
	override
	returns (uint)
	{
		return 942409124;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 2130959757;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 1500063655;
	}
}
contract C1 is C1B {
	function f1() external pure
	override
	returns (uint)
	{
		return 276590098;
	}
}
contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}
