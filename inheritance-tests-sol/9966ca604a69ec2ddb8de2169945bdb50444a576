pragma solidity >=0.0;
interface I0BBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I0BB is I0BBB {
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I0B is I0BB {
}
interface I0 is I0B {
}
interface C1BBBBBBBB {
	function f0() external view returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB {
}
interface C1BBBBBB is C1BBBBBBB {
}
interface C1BBBBB is C1BBBBBB {
}
interface C1BBBB is C1BBBBB {
}
interface C1BBB is C1BBBB {
	function f1() external payable returns (uint);
}
interface C1BB is C1BBB {
	function f0() override
	external view returns (uint);
}
abstract contract C1B is C1BB {
	function f0() virtual external view
	override
	returns (uint);
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1947433875;
	}
	function f2() virtual public pure
	
	returns (uint);
}
contract C1 is C1B {
	function f0() external view
	override
	returns (uint)
	{
		return 1105724094;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1479919876;
	}
	function f2() public pure
	override
	returns (uint)
	{
		return 1272185027;
	}
	function f3() external pure
	
	returns (uint)
	{
		return 201068705;
	}
}
library L2 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
contract C3BBB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1308858262;
	}
}
contract C3BB is C3BBB {
	function f0() public pure
	override
	returns (uint)
	{
		return 1814467857;
	}
}
contract C3B is C3BB {
}
contract C3 is C3B {
	function f1() virtual public pure
	
	returns (uint)
	{
		return 153892771;
	}
}
interface I4B {
	function f0() external payable returns (uint);
}
interface I4 is I4B {
	function f0() override
	external payable returns (uint);
}
contract C5BBB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 480194461;
	}
}
contract C5BB is C5BBB {
	function f0() public pure
	override
	returns (uint)
	{
		return 389431516;
	}
}
contract C5B is C5BB {
}
contract C5 is C5B {
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1587659744;
	}
}
interface I6 {
	function f0() external view returns (uint);
}
interface I7BBB {
	function f0() external view returns (uint);
}
interface I7BB is I7BBB {
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
interface I7BBBBB {
}
interface I7BBBB is I7BB, I7BBBBB {
	function f3() external view returns (uint);
}
interface I7B is I7BB, I7BBBB {
	function f3() override
	external view returns (uint);
}
interface I7 is I7B {
	function f0() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external view returns (uint);
	function f5() external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1105724094)
				return 1;
			if (tc0.f1() != 1479919876)
				return 2;
			if (tc0.f2() != 1272185027)
				return 3;
			if (tc0.f3() != 201068705)
				return 4;
			C3 tc1 = new C3();
			if (tc1.f0() != 1814467857)
				return 5;
			if (tc1.f1() != 153892771)
				return 6;
			C3B tc2 = new C3B();
			if (tc2.f0() != 1814467857)
				return 7;
			C3BB tc3 = new C3BB();
			if (tc3.f0() != 1814467857)
				return 8;
			C3BBB tc4 = new C3BBB();
			if (tc4.f0() != 1308858262)
				return 9;
			C5 tc5 = new C5();
			if (tc5.f0() != 389431516)
				return 10;
			if (tc5.f1() != 1587659744)
				return 11;
			C5B tc6 = new C5B();
			if (tc6.f0() != 389431516)
				return 12;
			C5BB tc7 = new C5BB();
			if (tc7.f0() != 389431516)
				return 13;
			C5BBB tc8 = new C5BBB();
			if (tc8.f0() != 480194461)
				return 14;
			return 0;
	}
}
