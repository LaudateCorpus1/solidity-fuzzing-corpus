
pragma solidity >=0.0;





interface C0BB {

	function f0() external view returns (uint);
}
interface C0B is C0BB {

}
contract C0 is C0B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1914720637;
	}
}
library L1 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
library L2 {

	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}


interface I3B {

	function f0() external view returns (uint);
}

interface I3BB is I3B {

}
interface I3 is I3B, I3BB {

}




interface I4BBB {

}
interface I4BB is I4BBB {

	function f0() external view returns (uint);
}
interface I4B is I4BB {

	function f1() external payable returns (uint);
}
interface I4 is I4B {

}
library L6 {

	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}
library L7 {

	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
library L8 {

	function f0(uint) internal pure returns (uint)
	{
		return 424238335;
	}
}
library L9 {

	function f0(uint) external pure returns (uint)
	{
		return 719885386;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1649760492;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 596516649;
	}
	function f3(uint) external pure returns (uint)
	{
		return 1189641421;
	}
	function f4(uint) internal pure returns (uint)
	{
		return 1025202362;
	}
	function f5(uint) internal pure returns (uint)
	{
		return 1350490027;
	}
}
library L10 {

	function f0(uint) internal pure returns (uint)
	{
		return 783368690;
	}
}


contract C {
	using L9 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 719885386)
			return 1;
		return 0;
	}
}

