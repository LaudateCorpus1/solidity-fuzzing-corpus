pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
interface C1BBBBBBBBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface C1BBBBBBBBBBBBB is C1BBBBBBBBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C1BBBBBBBBBBBB is C1BBBBBBBBBBBBB {
	function f4() external payable returns (uint);
	function f5() external payable returns (uint);
	function f6() external view returns (uint);
}
interface C1BBBBBBBBBBB is C1BBBBBBBBBBBB {
}
interface C1BBBBBBBBBB is C1BBBBBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f7() external payable returns (uint);
	function f8() external view returns (uint);
}
interface C1BBBBBBBBB is C1BBBBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
	function f8() override
	external view returns (uint);
	function f9() external payable returns (uint);
	function f10() external view returns (uint);
	function f11() external view returns (uint);
}
interface C1BBBBBBBB is C1BBBBBBBBB {
	function f1() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB {
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
	function f8() override
	external view returns (uint);
	function f12() external payable returns (uint);
	function f13() external view returns (uint);
	function f14() external view returns (uint);
}
interface C1BBBBBB is C1BBBBBBB {
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external view returns (uint);
	function f11() override
	external view returns (uint);
	function f14() override
	external view returns (uint);
}
interface C1BBBBBBBBBBBBBBB is C1BBBBBB {
	function f0() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f11() override
	external view returns (uint);
	function f12() override
	external payable returns (uint);
	function f14() override
	external view returns (uint);
	function f15() external view returns (uint);
	function f16() external view returns (uint);
}
interface C1BBBBB is C1BBBBBB, C1BBBBBBBBBBBBBBB {
	function f0() override(C1BBBBBBBBB, C1BBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override(C1BBBBBBBBB, C1BBBBBBBBBBBBBBB)
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override(C1BBBBBBBBBBBB, C1BBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(C1BBBBBBB, C1BBBBBBBBBBBBBBB)
	external view returns (uint);
	function f7() override(C1BBBBBBBBBB, C1BBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override(C1BBBBBB, C1BBBBBBBBBBBBBBB)
	external view returns (uint);
	function f10() override
	external view returns (uint);
	function f11() override(C1BBBBBB, C1BBBBBBBBBBBBBBB)
	external view returns (uint);
	function f12() override(C1BBBBBBB, C1BBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f13() override
	external view returns (uint);
	function f14() override(C1BBBBBB, C1BBBBBBBBBBBBBBB)
	external view returns (uint);
	function f17() external payable returns (uint);
}
contract C1BBBB is C1BBBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 2037666653;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 91491940;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1578591759;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 999647265;
	}
	function f4() external payable
	override
	returns (uint)
	{
		return 477900025;
	}
	function f5() external payable
	override
	returns (uint)
	{
		return 1227253027;
	}
	function f6() external view
	override
	returns (uint)
	{
		return 1298302928;
	}
	function f7() external payable
	override
	returns (uint)
	{
		return 1498947413;
	}
	function f8() virtual external view
	override
	returns (uint)
	{
		return 1427401579;
	}
	function f9() virtual external payable
	override
	returns (uint)
	{
		return 372915282;
	}
	function f10() virtual external view
	override
	returns (uint)
	{
		return 1613822255;
	}
	function f11() virtual external view
	override
	returns (uint)
	{
		return 1771495544;
	}
	function f12() external payable
	override
	returns (uint)
	{
		return 1617261148;
	}
	function f13() virtual external view
	override
	returns (uint)
	{
		return 685153140;
	}
	function f14() virtual external view
	override
	returns (uint)
	{
		return 1143645057;
	}
	function f15() external view
	override
	returns (uint)
	{
		return 316870078;
	}
	function f16() virtual external view
	override
	returns (uint)
	{
		return 1702155946;
	}
	function f17() virtual external payable
	override
	returns (uint)
	{
		return 1959645388;
	}
}
contract C1BBB is C1BBBB {
	function f2() external view
	override
	returns (uint)
	{
		return 20204387;
	}
	function f8() virtual external view
	override
	returns (uint)
	{
		return 634782546;
	}
	function f9() virtual external payable
	override
	returns (uint)
	{
		return 1819184117;
	}
	function f10() virtual external view
	override
	returns (uint)
	{
		return 665754786;
	}
	function f11() external view
	override
	returns (uint)
	{
		return 136665771;
	}
	function f13() external view
	override
	returns (uint)
	{
		return 963283007;
	}
}
contract C1BB is C1BBB {
	function f3() virtual external view
	override
	returns (uint)
	{
		return 937051507;
	}
	function f9() external payable
	override
	returns (uint)
	{
		return 1807338529;
	}
	function f10() external view
	override
	returns (uint)
	{
		return 224840443;
	}
	function f14() external view
	override
	returns (uint)
	{
		return 383910756;
	}
}
contract C1B is C1BB {
}
contract C1 is C1B {
	function f3() external view
	override
	returns (uint)
	{
		return 2047876379;
	}
	function f16() external view
	override
	returns (uint)
	{
		return 1229515992;
	}
	function f17() virtual external payable
	override
	returns (uint)
	{
		return 147380597;
	}
	function f18() private pure
	
	returns (uint)
	{
		return 1742958923;
	}
	function f19() external pure
	
	returns (uint)
	{
		return 255849967;
	}
}
contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}
