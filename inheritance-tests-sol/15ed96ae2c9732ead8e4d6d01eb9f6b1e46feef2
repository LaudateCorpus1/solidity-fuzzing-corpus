pragma solidity >=0.0;
interface C0BBBBBBBB {
	function f0() external view returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB {
}
interface C0BBBBBB is C0BBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C0BBBBB is C0BBBBBB {
}
interface C0BBBB is C0BBBBB {
}
interface C0BBB is C0BBBB {
	function f1() external payable returns (uint);
}
interface C0BB is C0BBB {
}
contract C0B is C0BB {
	function f0() external view
	override
	returns (uint)
	{
		return 1271135913;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1882556969;
	}
}
contract C0 is C0B {
}
interface C1BB {
	function f0() external payable returns (uint);
}
interface C1B is C1BB {
}
contract C1 is C1B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 914937185;
	}
	function f1() public view
	
	returns (uint)
	{
		return 1931656580;
	}
}
interface C2BBBBBBBB {
	function f0() external view returns (uint);
}
interface C2BBBBBBB is C2BBBBBBBB {
}
interface C2BBBBBB is C2BBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C2BBBBB is C2BBBBBB {
	function f0() override
	external view returns (uint);
}
interface C2BBBB is C2BBBBB {
}
interface C2BBB is C2BBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface C2BB is C2BBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
contract C2B is C2BB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1168816941;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 201068705;
	}
}
contract C2 is C2B {
	function f0() external view
	override
	returns (uint)
	{
		return 1814467857;
	}
}
contract C3 {
	function f0() public view
	
	returns (uint)
	{
		return 1057382352;
	}
}
interface C4BBB {
	function f0() external payable returns (uint);
}
interface C4BB is C4BBB {
}
interface C4B is C4BB {
	function f0() override
	external payable returns (uint);
}
contract C4 is C4B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 180318217;
	}
}
interface I5BB {
	function f0() external view returns (uint);
}
interface I5B is I5BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I5 is I5B {
	function f1() override
	external payable returns (uint);
}
interface C6BBBB {
	function f0() external payable returns (uint);
}
interface C6BBB is C6BBBB {
}
interface C6BB is C6BBB {
}
contract C6B is C6BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1239222494;
	}
}
contract C6 is C6B {
	function f1() private pure
	
	returns (uint)
	{
		return 1500063655;
	}
}
interface C7BBBBB {
	function f0() external payable returns (uint);
}
interface C7BBBB is C7BBBBB {
}
interface C7BBB is C7BBBB {
}
contract C7BB is C7BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 948709761;
	}
}
contract C7B is C7BB {
}
contract C7 is C7B {
}
contract C8 {
	function f0() public view
	
	returns (uint)
	{
		return 1003765604;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1271135913)
				return 1;
			if (tc0.f1() != 1882556969)
				return 2;
			C0B tc1 = new C0B();
			if (tc1.f0() != 1271135913)
				return 3;
			if (tc1.f1() != 1882556969)
				return 4;
			C1 tc2 = new C1();
			if (tc2.f0() != 914937185)
				return 5;
			if (tc2.f1() != 1931656580)
				return 6;
			C2 tc3 = new C2();
			if (tc3.f0() != 1814467857)
				return 7;
			if (tc3.f1() != 201068705)
				return 8;
			C2B tc4 = new C2B();
			if (tc4.f0() != 1168816941)
				return 9;
			if (tc4.f1() != 201068705)
				return 10;
			C3 tc5 = new C3();
			if (tc5.f0() != 1057382352)
				return 11;
			C4 tc6 = new C4();
			if (tc6.f0() != 180318217)
				return 12;
			C6 tc7 = new C6();
			if (tc7.f0() != 1239222494)
				return 13;
			C6B tc8 = new C6B();
			if (tc8.f0() != 1239222494)
				return 14;
			C7 tc9 = new C7();
			if (tc9.f0() != 948709761)
				return 15;
			C7B tc10 = new C7B();
			if (tc10.f0() != 948709761)
				return 16;
			C7BB tc11 = new C7BB();
			if (tc11.f0() != 948709761)
				return 17;
			C8 tc12 = new C8();
			if (tc12.f0() != 1003765604)
				return 18;
			return 0;
	}
}
