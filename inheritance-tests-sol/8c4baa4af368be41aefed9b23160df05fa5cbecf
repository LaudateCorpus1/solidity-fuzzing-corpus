pragma solidity >=0.0;
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public view returns (uint)
	{
		return 846930886;
	}
}
interface C2BBBBB {
	function f0() external view returns (uint);
}
interface C2BBBB is C2BBBBB {
	function f0() override
	external view returns (uint);
}
interface C2BBB is C2BBBB {
}
abstract contract C2BBBBBBBB {
}
contract C2BBBBBBB is C2BBBBBBBB {
}
abstract contract C2BBBBBB is C2BBBB, C2BBBBBBB {
	function f0() virtual external view
	override
	returns (uint);
}
contract C2BB is C2BBB, C2BBBBBB {
	function f0() external view
	override(C2BBBBBB, C2BBBB)
	returns (uint)
	{
		return 1250328747;
	}
}
contract C2B is C2BB {
}
contract C2 is C2B {
}
library L3 {
	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}
interface I4 {
	function f0() external view returns (uint);
}
interface C7BBB {
	function f0() external payable returns (uint);
}
interface C7BB is C7BBB {
}
interface C7B is C7BB {
}
abstract contract C7BBBBB {
}
contract C7BBBB is C7BB, C7BBBBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 914937185;
	}
}
contract C7 is C7B, C7BBBB {
	function f0() external payable
	override(C7BBBB, C7BBB)
	returns (uint)
	{
		return 1936030137;
	}
}
contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 846930886)
			return 1;
		return 0;
	}
}
