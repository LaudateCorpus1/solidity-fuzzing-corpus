pragma solidity >=0.0;
interface I0BB {
	function f0() external view returns (uint);
}
interface I0B is I0BB {
	function f1() external payable returns (uint);
}
interface I0 is I0B {
	function f0() override
	external view returns (uint);
}
interface C1BBBB {
	function f0() external view returns (uint);
}
interface C1BBB is C1BBBB {
}
interface C1BB is C1BBB {
}
interface C1B is C1BB {
}
contract C1 is C1B {
	function f0() external view
	override
	returns (uint)
	{
		return 1203428207;
	}
}
library L2 {
	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}
interface C3BBB {
	function f0() external view returns (uint);
}
interface C3BB is C3BBB {
}
abstract contract C3B is C3BB {
	function f0() virtual external view
	override
	returns (uint);
}
contract C3 is C3B {
	function f0() external view
	override
	returns (uint)
	{
		return 638022372;
	}
}
contract C4 {
	function f0() public view
	
	returns (uint)
	{
		return 914937185;
	}
}
library L5 {
	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}
library L6 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
interface C7BBBB {
	function f0() external payable returns (uint);
}
interface C7BBB is C7BBBB {
}
interface C7BB is C7BBB {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C7B is C7BB {
}
interface C7BBBBBBB {
}
interface C7BBBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C7BBBBBBBB is C7BBBBBBB, C7BBBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface C7BBBBBB is C7BBBBBBB, C7BBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface C7BBBBB is C7BB, C7BBBBBB {
	function f0() override(C7BB, C7BBBBBB)
	external payable returns (uint);
	function f1() override(C7BB, C7BBBBBBBBB)
	external payable returns (uint);
}
contract C7 is C7B, C7BBBBB {
	function f0() external payable
	override(C7BBBBB, C7BB)
	returns (uint)
	{
		return 201068705;
	}
	function f1() virtual external payable
	override(C7BBBBB, C7BB)
	returns (uint)
	{
		return 928270262;
	}
}
abstract contract C8BB {
}
contract C8B is C8BB {
}
interface C8BBBBB {
	function f0() external payable returns (uint);
}
interface C8BBBB is C8BBBBB {
}
interface C8BBB is C8BBBB {
}
contract C8 is C8B, C8BBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 480194461;
	}
}
library L9 {
	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
}
contract C10 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 180318217;
	}
}
interface C11BBBBBB {
	function f0() external view returns (uint);
}
interface C11BBBBB is C11BBBBBB {
	function f0() override
	external view returns (uint);
}
interface C11BBBB is C11BBBBB {
}
interface C11BBB is C11BBBB {
}
interface C11BBBBBBBBB {
}
interface C11BBBBBBBB is C11BBBBBBBBB {
}
interface C11BBBBBBB is C11BBB, C11BBBBBBBB {
}
interface C11BB is C11BBB, C11BBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C11B is C11BB {
}
contract C11 is C11B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 163677341;
	}
}
library L12 {
	function f0(uint) public pure returns (uint)
	{
		return 596516649;
	}
}
library L13 {
	function f0(uint) public pure returns (uint)
	{
		return 1189641421;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1203428207)
				return 1;
			C10 tc1 = new C10();
			if (tc1.f0() != 180318217)
				return 2;
			C11 tc2 = new C11();
			if (tc2.f0() != 163677341)
				return 3;
			C3 tc3 = new C3();
			if (tc3.f0() != 638022372)
				return 4;
			C4 tc4 = new C4();
			if (tc4.f0() != 914937185)
				return 5;
			C7 tc5 = new C7();
			if (tc5.f0() != 201068705)
				return 6;
			if (tc5.f1() != 928270262)
				return 7;
			C8 tc6 = new C8();
			if (tc6.f0() != 480194461)
				return 8;
			return 0;
	}
}
