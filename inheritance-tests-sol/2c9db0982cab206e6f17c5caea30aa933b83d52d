
pragma solidity >=0.0;


library L0 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
library L1 {

	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}




interface C2BBB {

	function f0() external payable returns (uint);
}
interface C2BB is C2BBB {

}

interface C2BBBB is C2BBB {

	function f1() external view returns (uint);
}
interface C2B is C2BB, C2BBBB {

	function f0() override
	external payable returns (uint);
}
contract C2 is C2B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1356035169;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1169893009;
	}
}


abstract contract C3B {

}





interface C3BBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C3BBBBB is C3BBBBBB {

}
interface C3BBBB is C3BBBBB {

	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C3BBB is C3BBBB {

	function f3() override
	external view returns (uint);
}
contract C3BB is C3B, C3BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1774893867;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1032438314;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 921256890;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1389449997;
	}
}
contract C3 is C3B, C3BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 552862047;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 739959938;
	}
}
library L5 {

	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
}









interface C7BBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C7BBBBBBB is C7BBBBBBBB {

	function f1() override
	external pure returns (uint);
}
interface C7BBBBBB is C7BBBBBBB {

	function f2() external view returns (uint);
	function f3() external pure returns (uint);
}
interface C7BBBBB is C7BBBBBB {

	function f0() override
	external payable returns (uint);
	function f3() override
	external pure returns (uint);
}

interface C7BBBBBBBBB is C7BBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external pure returns (uint);
	function f4() external view returns (uint);
}
interface C7BBBB is C7BBBBB, C7BBBBBBBBB {

	function f0() override(C7BBBBB, C7BBBBBBBBB)
	external payable returns (uint);
	function f1() override(C7BBBBBBB, C7BBBBBBBBB)
	external pure returns (uint);
	function f2() override(C7BBBBBB, C7BBBBBBBBB)
	external view returns (uint);
	function f3() override(C7BBBBB, C7BBBBBBBBB)
	external pure returns (uint);
	function f4() override
	external view returns (uint);
}
contract C7BBB is C7BBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1516106925;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 2139221702;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1249752168;
	}
	function f3() external pure
	override
	returns (uint)
	{
		return 1433282303;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1155580494;
	}
}
contract C7BB is C7BBB {

	function f4() virtual external view
	override
	returns (uint)
	{
		return 541341238;
	}
}
contract C7B is C7BB {

}
contract C7 is C7B {

	function f0() external payable
	override
	returns (uint)
	{
		return 418525768;
	}
}




interface I8BBB {

	function f0() external payable returns (uint);
}
interface I8BB is I8BBB {

}
interface I8B is I8BB {

	function f0() override
	external payable returns (uint);
}
interface I8 is I8B {

}


contract C9B {

	function f0() public view
	
	returns (uint)
	{
		return 668136804;
	}
}
contract C9 is C9B {

}


contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 1356035169)
				return 1;
			if (tc0.f1() != 1169893009)
				return 2;
			C3 tc1 = new C3();
			if (tc1.f0() != 552862047)
				return 3;
			if (tc1.f1() != 739959938)
				return 4;
			if (tc1.f2() != 921256890)
				return 5;
			if (tc1.f3() != 1389449997)
				return 6;
			C3BB tc2 = new C3BB();
			if (tc2.f0() != 1774893867)
				return 7;
			if (tc2.f1() != 1032438314)
				return 8;
			if (tc2.f2() != 921256890)
				return 9;
			if (tc2.f3() != 1389449997)
				return 10;
			C7 tc3 = new C7();
			if (tc3.f0() != 418525768)
				return 11;
			if (tc3.f1() != 2139221702)
				return 12;
			if (tc3.f2() != 1249752168)
				return 13;
			if (tc3.f3() != 1433282303)
				return 14;
			if (tc3.f4() != 541341238)
				return 15;
			C7B tc4 = new C7B();
			if (tc4.f0() != 1516106925)
				return 16;
			if (tc4.f1() != 2139221702)
				return 17;
			if (tc4.f2() != 1249752168)
				return 18;
			if (tc4.f3() != 1433282303)
				return 19;
			if (tc4.f4() != 541341238)
				return 20;
			C7BB tc5 = new C7BB();
			if (tc5.f0() != 1516106925)
				return 21;
			if (tc5.f1() != 2139221702)
				return 22;
			if (tc5.f2() != 1249752168)
				return 23;
			if (tc5.f3() != 1433282303)
				return 24;
			if (tc5.f4() != 541341238)
				return 25;
			C7BBB tc6 = new C7BBB();
			if (tc6.f0() != 1516106925)
				return 26;
			if (tc6.f1() != 2139221702)
				return 27;
			if (tc6.f2() != 1249752168)
				return 28;
			if (tc6.f3() != 1433282303)
				return 29;
			if (tc6.f4() != 1155580494)
				return 30;
			C9 tc7 = new C9();
			if (tc7.f0() != 668136804)
				return 31;
			C9B tc8 = new C9B();
			if (tc8.f0() != 668136804)
				return 32;
			return 0;
	}
}

