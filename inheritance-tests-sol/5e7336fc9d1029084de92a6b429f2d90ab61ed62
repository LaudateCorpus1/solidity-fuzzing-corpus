pragma solidity >=0.0;
interface I0B {
	function f0() external payable returns (uint);
}
interface I0 is I0B {
}
interface I1BB {
	function f0() external view returns (uint);
}
interface I1B is I1BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I1BBBB {
	function f0() external view returns (uint);
}
interface I1BBB is I1BB, I1BBBB {
	function f0() override(I1BB, I1BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I1 is I1B, I1BBB {
	function f0() override(I1B, I1BBB)
	external view returns (uint);
	function f1() override(I1B, I1BBB)
	external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
