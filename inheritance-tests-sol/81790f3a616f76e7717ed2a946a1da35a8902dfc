pragma solidity >=0.0;
interface C0BBBBBB {
}
interface C0BBBBB is C0BBBBBB {
	function f0() external payable returns (uint);
}
interface C0BBBB is C0BBBBB {
}
interface C0BBB is C0BBBB {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C0BB is C0BBB {
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
contract C0B is C0BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1872082239;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1675455927;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 1943007398;
	}
}
contract C0 is C0B {
}
interface C1BBB {
	function f0() external payable returns (uint);
}
interface C1BB is C1BBB {
}
contract C1B is C1BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1853505735;
	}
}
contract C1 is C1B {
}
interface C2BBBBBBB {
}
interface C2BBBBBB is C2BBBBBBB {
}
interface C2BBBBB is C2BBBBBB {
}
interface C2BBBB is C2BBBBB {
}
interface C2BBB is C2BBBB {
	function f0() external payable returns (uint);
}
interface C2BB is C2BBB {
	function f0() override
	external payable returns (uint);
}
contract C2B is C2BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 921256890;
	}
}
contract C2 is C2B {
}
contract C5 {
	function f0() public view
	
	returns (uint)
	{
		return 1658150294;
	}
}
library L6 {
	function f0(uint) internal view returns (uint)
	{
		return 846930886;
	}
}
contract C7 {
	function f0() public view
	
	returns (uint)
	{
		return 1709834337;
	}
}
library L8 {
	function f0(uint) internal view returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public view returns (uint)
	{
		return 1714636915;
	}
	function f2(uint) public pure returns (uint)
	{
		return 1957747793;
	}
	function f3(uint) internal pure returns (uint)
	{
		return 424238335;
	}
}
library L9 {
	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1649760492;
	}
}
abstract contract C11B {
}
abstract contract C11BB is C11B {
	function f0() virtual public pure
	
	returns (uint);
}
contract C11 is C11B, C11BB {
	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1903579395;
	}
	function f1() public view
	
	returns (uint)
	{
		return 1150688209;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1872082239)
				return 1;
			if (tc0.f1() != 1675455927)
				return 2;
			if (tc0.f2() != 1943007398)
				return 3;
			C0B tc1 = new C0B();
			if (tc1.f0() != 1872082239)
				return 4;
			if (tc1.f1() != 1675455927)
				return 5;
			if (tc1.f2() != 1943007398)
				return 6;
			C1 tc2 = new C1();
			if (tc2.f0() != 1853505735)
				return 7;
			C11 tc3 = new C11();
			if (tc3.f0() != 1903579395)
				return 8;
			if (tc3.f1() != 1150688209)
				return 9;
			C1B tc4 = new C1B();
			if (tc4.f0() != 1853505735)
				return 10;
			C2 tc5 = new C2();
			if (tc5.f0() != 921256890)
				return 11;
			C2B tc6 = new C2B();
			if (tc6.f0() != 921256890)
				return 12;
			C5 tc7 = new C5();
			if (tc7.f0() != 1658150294)
				return 13;
			C7 tc8 = new C7();
			if (tc8.f0() != 1709834337)
				return 14;
			return 0;
	}
}
