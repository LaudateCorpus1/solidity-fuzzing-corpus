pragma solidity >=0.0;
library L0 {
	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}
interface I1 {
	function f0() external payable returns (uint);
}
interface I5B {
}
interface I5BBBB {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I5BBB is I5BBBB {
	function f2() external payable returns (uint);
}
interface I5BB is I5B, I5BBB {
	function f0() override
	external payable returns (uint);
}
interface I5 is I5B, I5BB {
	function f1() override
	external view returns (uint);
}
interface I6BB {
	function f0() external payable returns (uint);
}
interface I6B is I6BB {
}
interface I6 is I6B {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I7BBB {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I7BB is I7BBB {
	function f0() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface I7B is I7BB {
	function f1() override
	external view returns (uint);
}
interface I7 is I7B {
	function f0() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}
