pragma solidity >=0.0;
library L0 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
	function f3(uint) private pure returns (uint)
	{
		return 1714636915;
	}
	function f4(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
interface I1 {
	function f0() external view returns (uint);
}
interface C2B {
	function f0() external payable returns (uint);
}
contract C2 is C2B {
	function f0() external payable
	override
	returns (uint)
	{
		return 182605794;
	}
}
library L3 {
	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
}
interface C4BB {
	function f0() external view returns (uint);
}
interface C4BBB is C4BB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface C4B is C4BB, C4BBB {
	function f0() override(C4BB, C4BBB)
	external view returns (uint);
}
interface C4BBBBB {
	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface C4BBBB is C4B, C4BBBBB {
	function f0() override(C4B, C4BBBBB)
	external view returns (uint);
	function f1() override(C4BBB, C4BBBBB)
	external view returns (uint);
}
contract C4 is C4B, C4BBBB {
	function f0() external view
	override(C4BBBB, C4B)
	returns (uint)
	{
		return 564586691;
	}
	function f1() external view
	override(C4BBBB, C4BBB)
	returns (uint)
	{
		return 192302371;
	}
}
contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 182605794)
				return 1;
			C4 tc1 = new C4();
			if (tc1.f0() != 564586691)
				return 2;
			if (tc1.f1() != 192302371)
				return 3;
			return 0;
	}
}
