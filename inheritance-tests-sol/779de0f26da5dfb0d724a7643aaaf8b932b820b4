pragma solidity >=0.0;
library L0 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
interface I1BBB {
	function f0() external view returns (uint);
}
interface I1BB is I1BBB {
}
interface I1B is I1BB {
	function f0() override
	external view returns (uint);
}
interface I1BBBBB {
	function f0() external view returns (uint);
}
interface I1BBBB is I1B, I1BBBBB {
	function f0() override(I1B, I1BBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I1 is I1B, I1BBBB {
	function f0() override(I1B, I1BBBB)
	external view returns (uint);
	function f2() external view returns (uint);
}
interface I2BBBBBBBB {
}
interface I2BBBBBBB is I2BBBBBBBB {
}
interface I2BBBBBB is I2BBBBBBB {
}
interface I2BBBBB is I2BBBBBB {
}
interface I2BBBB is I2BBBBB {
}
interface I2BBB is I2BBBB {
}
interface I2BBBBBBBBBBBB {
}
interface I2BBBBBBBBBBB is I2BBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I2BBBBBBBBBB is I2BBBBBBBBBBB {
}
interface I2BBBBBBBBB is I2BBBB, I2BBBBBBBBBB {
}
interface I2BB is I2BBB, I2BBBBBBBBB {
	function f1() external payable returns (uint);
}
interface I2B is I2BB {
	function f2() external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBB {
}
interface I2BBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I2BBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I2BBBBBBBBBBBBB is I2BB, I2BBBBBBBBBBBBBB {
	function f0() override(I2BBBBBBBBBBB, I2BBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBBBBB {
}
interface I2BBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBBBB {
}
interface I2BBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBBB {
}
interface I2BBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBB {
}
interface I2BBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBB {
}
interface I2BBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBB {
}
interface I2BBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBBB is I2BB, I2BBBBBBBBBBBBBBBBBB {
	function f0() override(I2BBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I2 is I2B, I2BBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBB {
	function f0() override(I2BBBBBBBBBBB, I2BBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() external payable returns (uint);
}
interface I3BBBBBBBB {
}
interface I3BBBBBBB is I3BBBBBBBB {
}
interface I3BBBBBB is I3BBBBBBB {
}
interface I3BBBBB is I3BBBBBB {
}
interface I3BBBB is I3BBBBB {
}
interface I3BBB is I3BBBB {
}
interface I3BBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBB is I3BBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBB is I3BBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I3BBBBBBBBBBB is I3BBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I3BBBBBBBBBB is I3BBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I3BBBBBBBBB is I3BBBB, I3BBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I3BB is I3BBB, I3BBBBBBBBB {
	function f1() external payable returns (uint);
}
interface I3B is I3BB {
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I3BBBBBBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I3BBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBBBBB is I3B, I3BBBBBBBBBBBBBBBBBBBB {
	function f0() override(I3BBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f1() external payable returns (uint);
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBBBBBB {
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I3BBBBBBBBBBBBBBBBBBBBBBB is I3B, I3BBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I3BBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I3B, I3BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I3B, I3BBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I3 is I3B, I3BBBBBBBBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I3BBBBBBBBB, I3BBBBBBBBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I3B, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I3B, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f3() external payable returns (uint);
}
interface I4B {
	function f0() external view returns (uint);
}
interface I4BBBBBBBBB {
}
interface I4BBBBBBBB is I4BBBBBBBBB {
}
interface I4BBBBBBB is I4BBBBBBBB {
}
interface I4BBBBBB is I4BBBBBBB {
}
interface I4BBBBB is I4BBBBBB {
}
interface I4BBBB is I4BBBBB {
}
interface I4BBB is I4BBBB {
}
interface I4BB is I4B, I4BBB {
}
interface I4 is I4B, I4BB {
	function f0() override
	external view returns (uint);
}
interface I5 {
	function f0() external view returns (uint);
}
library L6 {
	function f0(uint) public pure returns (uint)
	{
		return 1025202362;
	}
}
library L7 {
	function f0(uint) internal pure returns (uint)
	{
		return 1350490027;
	}
}
library L8 {
	function f0(uint) private pure returns (uint)
	{
		return 783368690;
	}
}
contract C {
	using L6 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1025202362)
			return 1;
		return 0;
	}
}
