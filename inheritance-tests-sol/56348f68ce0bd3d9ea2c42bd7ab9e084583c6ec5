pragma solidity >=0.0;
interface I0BB {
	function f0() external view returns (uint);
}
interface I0B is I0BB {
	function f1() external payable returns (uint);
}
interface I0BBB is I0BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I0 is I0B, I0BBB {
	function f0() override(I0BB, I0BBB)
	external view returns (uint);
	function f1() override(I0B, I0BBB)
	external payable returns (uint);
}
library L1 {
	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
library L2 {
	function f0(uint) private view returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
contract C4B {
}
contract C4 is C4B {
	function f0() public view
	
	returns (uint)
	{
		return 674592135;
	}
}
library L5 {
	function f0(uint) public pure returns (uint)
	{
		return 1649760492;
	}
	function f1(uint) public pure returns (uint)
	{
		return 596516649;
	}
}
interface I6B {
	function f0() external view returns (uint);
}
interface I6BBB {
	function f0() external view returns (uint);
}
interface I6BB is I6B, I6BBB {
	function f0() override(I6B, I6BBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I6 is I6B, I6BB {
	function f0() override(I6B, I6BB)
	external view returns (uint);
}
library L7 {
	function f0(uint) internal pure returns (uint)
	{
		return 1025202362;
	}
}
library L8 {
	function f0(uint) internal pure returns (uint)
	{
		return 1350490027;
	}
}
contract C9B {
}
contract C9 is C9B {
	function f0() public view
	
	returns (uint)
	{
		return 2130959757;
	}
}
contract C {
	function test() public returns (uint)
	{
			C4 tc0 = new C4();
			if (tc0.f0() != 674592135)
				return 1;
			C9 tc1 = new C9();
			if (tc1.f0() != 2130959757)
				return 2;
			return 0;
	}
}
