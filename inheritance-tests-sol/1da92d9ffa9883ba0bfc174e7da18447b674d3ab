pragma solidity >=0.0;
interface I0B {
	function f0() external payable returns (uint);
}
interface I0BBB {
	function f0() external payable returns (uint);
}
interface I0BB is I0B, I0BBB {
	function f0() override(I0B, I0BBB)
	external payable returns (uint);
}
interface I0 is I0B, I0BB {
	function f0() override(I0B, I0BB)
	external payable returns (uint);
}
interface C1BBB {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
interface C1BB is C1BBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
contract C1B is C1BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1105902161;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 564586691;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 192302371;
	}
}
contract C1 is C1B {
}
interface I2BB {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I2B is I2BB {
}
interface I2BBB is I2B {
}
interface I2 is I2B, I2BBB {
}
library L3 {
	function f0(uint) external pure returns (uint)
	{
		return 1681692777;
	}
}
library L4 {
	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
interface I5B {
	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface I5 is I5B {
	function f1() override
	external view returns (uint);
}
interface C6BBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C6BBB is C6BBBB {
	function f2() external view returns (uint);
}
interface C6BB is C6BBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface C6B is C6BB {
	function f1() override
	external payable returns (uint);
}
contract C6 is C6B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1696049367;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1168816941;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 201068705;
	}
}
interface C7BBB {
	function f0() external payable returns (uint);
}
interface C7BB is C7BBB {
	function f0() override
	external payable returns (uint);
}
contract C7B is C7BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1814467857;
	}
}
abstract contract C7 is C7B {
}
interface I8 {
	function f0() external payable returns (uint);
}
library L9 {
	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
}
library L10 {
	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1105902161)
				return 1;
			if (tc0.f1() != 564586691)
				return 2;
			if (tc0.f2() != 192302371)
				return 3;
			C1B tc1 = new C1B();
			if (tc1.f0() != 1105902161)
				return 4;
			if (tc1.f1() != 564586691)
				return 5;
			if (tc1.f2() != 192302371)
				return 6;
			C6 tc2 = new C6();
			if (tc2.f0() != 1696049367)
				return 7;
			if (tc2.f1() != 1168816941)
				return 8;
			if (tc2.f2() != 201068705)
				return 9;
			C7B tc3 = new C7B();
			if (tc3.f0() != 1814467857)
				return 10;
			return 0;
	}
}
