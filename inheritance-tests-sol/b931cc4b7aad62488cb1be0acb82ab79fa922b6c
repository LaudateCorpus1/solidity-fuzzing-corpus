pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
interface C2BBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface C2BBBBBBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBBBB {
	function f1() external view returns (uint);
}
interface C2BBBBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBB {
	function f1() override
	external view returns (uint);
	function f2() external view returns (uint);
}
interface C2BBBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBBB {
	function f2() override
	external view returns (uint);
}
interface C2BBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBB {
	function f2() override
	external view returns (uint);
}
interface C2BBBBBBBBBBBBB is C2BBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f3() external view returns (uint);
}
interface C2BBBBBBBBBBBB is C2BBBBBBBBBBBBB {
}
interface C2BBBBBBBBBBBBBBBBBBB is C2BBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f4() external payable returns (uint);
}
interface C2BBBBBBBBBBB is C2BBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBB {
	function f0() override(C2BBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(C2BBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(C2BBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() external payable returns (uint);
	function f6() external pure returns (uint);
	function f7() external payable returns (uint);
	function f8() external payable returns (uint);
}
interface C2BBBBBBBBBB is C2BBBBBBBBBBB {
	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
}
interface C2BBBBBBBBB is C2BBBBBBBBBB {
	function f2() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external pure returns (uint);
	function f8() override
	external payable returns (uint);
	function f9() external payable returns (uint);
}
interface C2BBBBBBBB is C2BBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f6() override
	external pure returns (uint);
	function f7() override
	external payable returns (uint);
}
interface C2BBBBBBBBBBBBBBBBBBBB is C2BBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f6() override
	external pure returns (uint);
	function f8() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() external payable returns (uint);
}
interface C2BBBBBBB is C2BBBBBBBB, C2BBBBBBBBBBBBBBBBBBBB {
	function f0() override(C2BBBBBBBB, C2BBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(C2BBBBBBBB, C2BBBBBBBBBBB)
	external view returns (uint);
	function f2() override(C2BBBBBBBB, C2BBBBBBBBB)
	external view returns (uint);
	function f3() override(C2BBBBBBBB, C2BBBBBBBBBBB)
	external view returns (uint);
	function f4() override(C2BBBBBBBB, C2BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(C2BBBBBBBB, C2BBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f7() override(C2BBBBBBBB, C2BBBBBBBBBB)
	external payable returns (uint);
	function f8() override(C2BBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f9() override(C2BBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() external view returns (uint);
}
interface C2BBBBBB is C2BBBBBBB {
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override
	external view returns (uint);
}
interface C2BBBBBBBBBBBBBBBBBBBBB is C2BBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f12() external payable returns (uint);
}
interface C2BBBBB is C2BBBBBB, C2BBBBBBBBBBBBBBBBBBBBB {
	function f0() override(C2BBBBBBB, C2BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(C2BBBBBB, C2BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(C2BBBBBB, C2BBBBBBB)
	external view returns (uint);
	function f4() override(C2BBBBBB, C2BBBBBBB)
	external payable returns (uint);
	function f5() override(C2BBBBBB, C2BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override
	external pure returns (uint);
	function f7() override(C2BBBBBB, C2BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override(C2BBBBBB, C2BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f9() override(C2BBBBBBB, C2BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(C2BBBBBB, C2BBBBBBB)
	external payable returns (uint);
	function f11() override(C2BBBBBB, C2BBBBBBB)
	external view returns (uint);
	function f12() override
	external payable returns (uint);
	function f13() external payable returns (uint);
	function f14() external pure returns (uint);
	function f15() external payable returns (uint);
	function f16() external payable returns (uint);
}
interface C2BBBB is C2BBBBB {
	function f2() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f12() override
	external payable returns (uint);
	function f13() override
	external payable returns (uint);
}
interface C2BBB is C2BBBB {
	function f2() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external pure returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override
	external view returns (uint);
	function f14() override
	external pure returns (uint);
	function f15() override
	external payable returns (uint);
	function f16() override
	external payable returns (uint);
	function f17() external payable returns (uint);
}
interface C2BB is C2BBB {
	function f0() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f6() override
	external pure returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f15() override
	external payable returns (uint);
}
interface C2BBBBBBBBBBBBBBBBBBBBBB is C2BBB {
	function f5() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override
	external view returns (uint);
	function f14() override
	external pure returns (uint);
	function f16() override
	external payable returns (uint);
	function f17() override
	external payable returns (uint);
	function f18() external payable returns (uint);
}
interface C2B is C2BB, C2BBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(C2BB, C2BBBBB)
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override(C2BB, C2BBBBBBB)
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override(C2BBB, C2BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(C2BB, C2BBB)
	external pure returns (uint);
	function f7() override(C2BB, C2BBBBB)
	external payable returns (uint);
	function f8() override(C2BB, C2BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f9() override(C2BB, C2BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(C2BB, C2BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(C2BBB, C2BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f13() override
	external payable returns (uint);
	function f14() override(C2BBB, C2BBBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f15() override(C2BB, C2BBB)
	external payable returns (uint);
	function f16() override(C2BBB, C2BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f17() override(C2BBB, C2BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f18() override
	external payable returns (uint);
	function f19() external view returns (uint);
}
contract C2 is C2B {
	function f0() external view
	override
	returns (uint)
	{
		return 1031563487;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1603325935;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 60823433;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1016414447;
	}
	function f4() external payable
	override
	returns (uint)
	{
		return 1660507695;
	}
	function f5() external payable
	override
	returns (uint)
	{
		return 273714538;
	}
	function f6() virtual external pure
	override
	returns (uint)
	{
		return 1143144973;
	}
	function f7() virtual external payable
	override
	returns (uint)
	{
		return 1675588410;
	}
	function f8() external payable
	override
	returns (uint)
	{
		return 555646798;
	}
	function f9() external payable
	override
	returns (uint)
	{
		return 199022436;
	}
	function f10() external payable
	override
	returns (uint)
	{
		return 359882029;
	}
	function f11() virtual external view
	override
	returns (uint)
	{
		return 705658476;
	}
	function f12() external payable
	override
	returns (uint)
	{
		return 1016063348;
	}
	function f13() external payable
	override
	returns (uint)
	{
		return 2073121274;
	}
	function f14() external pure
	override
	returns (uint)
	{
		return 643575943;
	}
	function f15() external payable
	override
	returns (uint)
	{
		return 1381089556;
	}
	function f16() virtual external payable
	override
	returns (uint)
	{
		return 930231195;
	}
	function f17() virtual external payable
	override
	returns (uint)
	{
		return 1676161938;
	}
	function f18() virtual external payable
	override
	returns (uint)
	{
		return 1608971134;
	}
	function f19() virtual external view
	override
	returns (uint)
	{
		return 268855264;
	}
}
contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}
