pragma solidity >=0.0;
library L0 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) internal view returns (uint)
	{
		return 846930886;
	}
}
interface C1BB {
	function f0() external pure returns (uint);
}
interface C1B is C1BB {
	function f0() override
	external pure returns (uint);
}
contract C1 is C1B {
	function f0() virtual external pure
	override
	returns (uint)
	{
		return 1860554423;
	}
}
library L2 {
	function f0(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}
library L3 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
interface I4B {
	function f0() external payable returns (uint);
}
interface I4 is I4B {
	function f1() external payable returns (uint);
}
interface I5BB {
	function f0() external payable returns (uint);
}
interface I5BBBB {
	function f0() external payable returns (uint);
}
interface I5BBB is I5BB, I5BBBB {
	function f0() override(I5BB, I5BBBB)
	external payable returns (uint);
}
interface I5B is I5BB, I5BBB {
	function f0() override(I5BB, I5BBB)
	external payable returns (uint);
}
interface I5 is I5B {
	function f1() external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external payable returns (uint);
}
library L6 {
	function f0(uint) public view returns (uint)
	{
		return 424238335;
	}
	function f1(uint) public view returns (uint)
	{
		return 719885386;
	}
	function f2(uint) public view returns (uint)
	{
		return 1649760492;
	}
}
library L7 {
	function f0(uint) private pure returns (uint)
	{
		return 596516649;
	}
	function f1(uint) internal view returns (uint)
	{
		return 1189641421;
	}
	function f2(uint) public view returns (uint)
	{
		return 1025202362;
	}
}
contract C8 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 68865866;
	}
	function f1() public view
	
	returns (uint)
	{
		return 2067015777;
	}
	function f2() public payable
	
	returns (uint)
	{
		return 533364653;
	}
}
library L9 {
	function f0(uint) external pure returns (uint)
	{
		return 1350490027;
	}
}
library L10 {
	function f0(uint) public pure returns (uint)
	{
		return 783368690;
	}
	function f1(uint) public view returns (uint)
	{
		return 1102520059;
	}
}
interface C11BBB {
	function f0() external payable returns (uint);
}
interface C11BB is C11BBB {
}
interface C11B is C11BB {
	function f0() override
	external payable returns (uint);
}
contract C11 is C11B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1838990330;
	}
}
interface C12BBB {
	function f0() external view returns (uint);
}
interface C12BB is C12BBB {
	function f0() override
	external view returns (uint);
}
interface C12B is C12BB {
	function f0() override
	external view returns (uint);
}
contract C12 is C12B {
	function f0() external view
	override
	returns (uint)
	{
		return 189733958;
	}
}
interface C13BBBB {
	function f0() external payable returns (uint);
}
interface C13BBB is C13BBBB {
	function f0() override
	external payable returns (uint);
}
interface C13BB is C13BBB {
}
interface C13BBBBB is C13BBB {
	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
contract C13B is C13BB, C13BBBBB {
	function f0() external payable
	override(C13BBBBB, C13BBB)
	returns (uint)
	{
		return 1734917008;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 538873778;
	}
}
abstract contract C13 is C13B {
}
library L14 {
	function f0(uint) internal pure returns (uint)
	{
		return 1967513926;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1860554423)
				return 1;
			C11 tc1 = new C11();
			if (tc1.f0() != 1838990330)
				return 2;
			C12 tc2 = new C12();
			if (tc2.f0() != 189733958)
				return 3;
			C13B tc3 = new C13B();
			if (tc3.f0() != 1734917008)
				return 4;
			if (tc3.f1() != 538873778)
				return 5;
			C8 tc4 = new C8();
			if (tc4.f0() != 68865866)
				return 6;
			if (tc4.f1() != 2067015777)
				return 7;
			if (tc4.f2() != 533364653)
				return 8;
			return 0;
	}
}
