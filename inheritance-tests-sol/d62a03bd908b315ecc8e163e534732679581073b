
pragma solidity >=0.0;


library L1 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public view returns (uint)
	{
		return 846930886;
	}
}




interface C2BBB {

	function f0() external view returns (uint);
}
interface C2BB is C2BBB {

	function f0() override
	external view returns (uint);
}
contract C2B is C2BB {

	function f0() external view
	override
	returns (uint)
	{
		return 2078669041;
	}
	function f1() public view
	
	returns (uint)
	{
		return 407355683;
	}
}
contract C2 is C2B {

}


interface I4B {

	function f0() external view returns (uint);
}

interface I4BB is I4B {

	function f1() external view returns (uint);
}
interface I4 is I4B, I4BB {

}
library L5 {

	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) private view returns (uint)
	{
		return 1957747793;
	}
	function f2(uint) internal view returns (uint)
	{
		return 424238335;
	}
}




contract C6BBB {

	function f0() external pure
	
	returns (uint)
	{
		return 1250328747;
	}
}
contract C6BB is C6BBB {

}
contract C6B is C6BB {

}
contract C6 is C6B {

}
library L7 {

	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
}
library L8 {

	function f0(uint) private pure returns (uint)
	{
		return 1649760492;
	}
}



interface I9BB {

	function f0() external view returns (uint);
}
interface I9B is I9BB {

}
interface I9 is I9B {

}



interface C11BB {

	function f0() external view returns (uint);
}
interface C11B is C11BB {

	function f0() override
	external view returns (uint);
}
contract C11 is C11B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1402304087;
	}
}
library L13 {

	function f0(uint) public pure returns (uint)
	{
		return 596516649;
	}
}
library L14 {

	function f0(uint) external pure returns (uint)
	{
		return 1189641421;
	}
}









interface C15BBBBBBBB {

	function f0() external view returns (uint);
}
interface C15BBBBBBB is C15BBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C15BBBBBB is C15BBBBBBB {

}
interface C15BBBBB is C15BBBBBB {

}
interface C15BBBB is C15BBBBB {

}
interface C15BBB is C15BBBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface C15BB is C15BBB {

	function f0() override
	external view returns (uint);
}
contract C15B is C15BB {

	function f0() external view
	override
	returns (uint)
	{
		return 1308858262;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1287522347;
	}
}
contract C15 is C15B {

	function f1() external view
	override
	returns (uint)
	{
		return 153892771;
	}
}


contract C {
	using L13 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 596516649)
			return 1;
		return 0;
	}
}

