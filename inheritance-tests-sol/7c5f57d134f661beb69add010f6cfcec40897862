pragma solidity >=0.0;
interface C0BBBBB {
	function f0() external view returns (uint);
}
interface C0BBBB is C0BBBBB {
}
interface C0BBB is C0BBBB {
	function f0() override
	external view returns (uint);
}
contract C0BB is C0BBB {
	function f0() external view
	override
	returns (uint)
	{
		return 407355683;
	}
}
contract C0B is C0BB {
}
abstract contract C0 is C0B {
}
contract C1 {
	function f0() public payable
	
	returns (uint)
	{
		return 564586691;
	}
}
library L3 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
library L4 {
	function f0(uint) internal view returns (uint)
	{
		return 846930886;
	}
}
interface I5BB {
}
interface I5B is I5BB {
}
interface I5BBB is I5BB {
	function f0() external view returns (uint);
}
interface I5 is I5B, I5BBB {
}
interface I6BB {
	function f0() external payable returns (uint);
}
interface I6B is I6BB {
}
interface I6 is I6B {
}
library L7 {
	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}
library L8 {
	function f0(uint) internal view returns (uint)
	{
		return 1957747793;
	}
}
library L9 {
	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) public pure returns (uint)
	{
		return 719885386;
	}
}
interface I10B {
	function f0() external view returns (uint);
}
interface I10 is I10B {
}
library L11 {
	function f0(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0B tc0 = new C0B();
			if (tc0.f0() != 407355683)
				return 1;
			C0BB tc1 = new C0BB();
			if (tc1.f0() != 407355683)
				return 2;
			C1 tc2 = new C1();
			if (tc2.f0() != 564586691)
				return 3;
			return 0;
	}
}
