
pragma solidity >=0.0;


library L0 {

	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public view returns (uint)
	{
		return 846930886;
	}
}


interface C1B {

	function f0() external view returns (uint);
}

interface C1BB is C1B {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
contract C1 is C1B, C1BB {

	function f0() external view
	override(C1BB, C1B)
	returns (uint)
	{
		return 2078669041;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1105902161;
	}
	function f2() public pure
	
	returns (uint)
	{
		return 854716505;
	}
}

contract C2 {

	function f0() public view
	
	returns (uint)
	{
		return 564586691;
	}
}


interface C3B {

	function f0() external view returns (uint);
}
contract C3 is C3B {

	function f0() external view
	override
	returns (uint)
	{
		return 192302371;
	}
}









interface C4BBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C4BBBBBBB is C4BBBBBBBB {

	function f2() external payable returns (uint);
}
interface C4BBBBBB is C4BBBBBBB {

	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C4BBBBB is C4BBBBBB {

	function f2() override
	external payable returns (uint);
	function f4() override
	external view returns (uint);
}

interface C4BBBBBBBBB is C4BBBBBB {

	function f1() override
	external pure returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() external view returns (uint);
}
interface C4BBBB is C4BBBBB, C4BBBBBBBBB {

	function f1() override(C4BBBBBBBB, C4BBBBBBBBB)
	external pure returns (uint);
	function f2() override(C4BBBBB, C4BBBBBBBBB)
	external payable returns (uint);
	function f3() override(C4BBBBBB, C4BBBBBBBBB)
	external view returns (uint);
	function f4() override(C4BBBBB, C4BBBBBB)
	external view returns (uint);
	function f5() override
	external view returns (uint);
}
contract C4BBB is C4BBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 849178936;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 1479919876;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 1272185027;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1308858262;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1287522347;
	}
	function f5() external view
	override
	returns (uint)
	{
		return 1057382352;
	}
}
contract C4BB is C4BBB {

	function f4() external view
	override
	returns (uint)
	{
		return 1675824860;
	}
}
contract C4B is C4BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1243696899;
	}
}
contract C4 is C4B {

}
library L5 {

	function f0(uint) public view returns (uint)
	{
		return 1957747793;
	}
}


interface I6B {

	function f0() external view returns (uint);
}
interface I6 is I6B {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}









interface C7BBBBBBBB {

	function f0() external view returns (uint);
}
interface C7BBBBBBB is C7BBBBBBBB {

}
interface C7BBBBBB is C7BBBBBBB {

}
interface C7BBBBB is C7BBBBBB {

}
interface C7BBBB is C7BBBBB {

}
interface C7BBB is C7BBBB {

	function f1() external view returns (uint);
}
interface C7BB is C7BBB {

	function f2() external view returns (uint);
}
contract C7B is C7BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1003765604;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1447645967;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 143244144;
	}
}
contract C7 is C7B {

	function f0() external view
	override
	returns (uint)
	{
		return 355190910;
	}
}


interface C8B {

}


interface C8BBB {

	function f0() external view returns (uint);
}
contract C8BB is C8B, C8BBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 243877847;
	}
}
contract C8 is C8B, C8BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1318652553;
	}
}




interface I9BBB {

	function f0() external view returns (uint);
}


interface I9BBBBB {

	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface I9BBBB is I9BBB, I9BBBBB {

	function f0() override(I9BBB, I9BBBBB)
	external view returns (uint);
}
interface I9BB is I9BBB, I9BBBB {

	function f0() override(I9BBB, I9BBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I9B is I9BB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
interface I9 is I9B {

	function f2() override
	external payable returns (uint);
}

contract C10 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1391748448;
	}
}


contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1957747793)
			return 1;
		return 0;
	}
}

