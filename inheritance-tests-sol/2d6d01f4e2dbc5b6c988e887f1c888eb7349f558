pragma solidity >=0.0;
interface I0BB {
	function f0() external view returns (uint);
}
interface I0B is I0BB {
}
interface I0 is I0B {
	function f0() override
	external view returns (uint);
}
interface I1 {
	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface I2BB {
	function f0() external view returns (uint);
}
interface I2B is I2BB {
}
interface I2 is I2B {
}
library L3 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private pure returns (uint)
	{
		return 846930886;
	}
}
abstract contract C4BB {
}
contract C4B is C4BB {
}
interface C4BBBBB {
	function f0() external payable returns (uint);
}
interface C4BBBB is C4BBBBB {
}
interface C4BBB is C4BBBB {
}
contract C4 is C4B, C4BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1250328747;
	}
}
contract C {
	function test() public returns (uint)
	{
			C4 tc0 = new C4();
			if (tc0.f0() != 1250328747)
				return 1;
			return 0;
	}
}
