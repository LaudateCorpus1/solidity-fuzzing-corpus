
pragma solidity >=0.0;






interface C4BBB {

	function f0() external payable returns (uint);
}
interface C4BB is C4BBB {

	function f0() override
	external payable returns (uint);
}
interface C4B is C4BB {

}
contract C4 is C4B {

	function f0() external payable
	override
	returns (uint)
	{
		return 257282700;
	}
}


interface C6B {

}
contract C6 is C6B {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 395281099;
	}
}
library L9 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}




interface C12BBB {

	function f0() external payable returns (uint);
}
interface C12BB is C12BBB {

	function f0() override
	external payable returns (uint);
}
interface C12B is C12BB {

	function f0() override
	external payable returns (uint);
}
contract C12 is C12B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 201220124;
	}
}


interface I19B {

	function f0() external view returns (uint);
}
interface I19 is I19B {

}


interface C20B {

	function f0() external payable returns (uint);
}
contract C20 is C20B {

	function f0() external payable
	override
	returns (uint)
	{
		return 1573871231;
	}
}


contract C {
	using L9 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

