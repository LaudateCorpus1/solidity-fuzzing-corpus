pragma solidity >=0.0;
interface C0BBBBBB {
	function f0() external view returns (uint);
}
interface C0BBBBB is C0BBBBBB {
}
interface C0BBBB is C0BBBBB {
}
interface C0BBB is C0BBBB {
	function f0() override
	external view returns (uint);
}
interface C0BBBBBBBB {
}
interface C0BBBBBBB is C0BBBB, C0BBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C0BB is C0BBB, C0BBBBBBB {
	function f0() override(C0BBB, C0BBBBBBB)
	external view returns (uint);
}
interface C0B is C0BB {
}
contract C0 is C0B {
	function f0() external view
	override
	returns (uint)
	{
		return 1698906197;
	}
}
library L1 {
	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}
contract C2BBB {
	function f0() external pure
	
	returns (uint)
	{
		return 1709309780;
	}
}
contract C2BB is C2BBB {
}
abstract contract C2B is C2BB {
}
contract C2 is C2B {
}
interface C3BBB {
	function f0() external payable returns (uint);
}
interface C3BB is C3BBB {
}
contract C3B is C3BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 319011186;
	}
}
contract C3 is C3B {
}
library L4 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
interface I5BBB {
	function f0() external payable returns (uint);
}
interface I5BB is I5BBB {
}
interface I5B is I5BB {
	function f0() override
	external payable returns (uint);
}
interface I5 is I5B {
	function f0() override
	external payable returns (uint);
}
library L6 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
library L7 {
	function f0(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
contract C8BBB {
	function f0() external pure
	
	returns (uint)
	{
		return 2079025730;
	}
}
contract C8BB is C8BBB {
}
contract C8B is C8BB {
}
contract C8 is C8B {
}
library L9 {
	function f0(uint) internal view returns (uint)
	{
		return 424238335;
	}
	function f1(uint) public view returns (uint)
	{
		return 719885386;
	}
	function f2(uint) public view returns (uint)
	{
		return 1649760492;
	}
}
interface C10BBB {
	function f0() external payable returns (uint);
}
interface C10BB is C10BBB {
	function f0() override
	external payable returns (uint);
}
abstract contract C10B is C10BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1709834337;
	}
}
contract C10 is C10B {
}
contract C11BBB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 464135131;
	}
}
contract C11BBBB is C11BBB {
}
contract C11BB is C11BBB, C11BBBB {
	function f0() public pure
	override
	returns (uint)
	{
		return 1150688209;
	}
}
contract C11B is C11BB {
}
contract C11 is C11B {
	function f1() virtual public pure
	
	returns (uint)
	{
		return 837912430;
	}
}
interface C12BB {
	function f0() external view returns (uint);
}
interface C12B is C12BB {
	function f0() override
	external view returns (uint);
}
contract C12 is C12B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1695590273;
	}
}
contract C13 {
	function f0() public view
	
	returns (uint)
	{
		return 793829872;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1698906197)
				return 1;
			C10 tc1 = new C10();
			if (tc1.f0() != 1709834337)
				return 2;
			C11 tc2 = new C11();
			if (tc2.f0() != 1150688209)
				return 3;
			if (tc2.f1() != 837912430)
				return 4;
			C11B tc3 = new C11B();
			if (tc3.f0() != 1150688209)
				return 5;
			C11BB tc4 = new C11BB();
			if (tc4.f0() != 1150688209)
				return 6;
			C11BBB tc5 = new C11BBB();
			if (tc5.f0() != 464135131)
				return 7;
			C11BBBB tc6 = new C11BBBB();
			if (tc6.f0() != 464135131)
				return 8;
			C12 tc7 = new C12();
			if (tc7.f0() != 1695590273)
				return 9;
			C13 tc8 = new C13();
			if (tc8.f0() != 793829872)
				return 10;
			C2 tc9 = new C2();
			if (tc9.f0() != 1709309780)
				return 11;
			C2BB tc10 = new C2BB();
			if (tc10.f0() != 1709309780)
				return 12;
			C2BBB tc11 = new C2BBB();
			if (tc11.f0() != 1709309780)
				return 13;
			C3 tc12 = new C3();
			if (tc12.f0() != 319011186)
				return 14;
			C3B tc13 = new C3B();
			if (tc13.f0() != 319011186)
				return 15;
			C8 tc14 = new C8();
			if (tc14.f0() != 2079025730)
				return 16;
			return 0;
	}
}
