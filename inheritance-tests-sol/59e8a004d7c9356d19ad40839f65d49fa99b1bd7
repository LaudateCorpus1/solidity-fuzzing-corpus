
pragma solidity >=0.0;






interface I0BBB {

	function f0() external view returns (uint);
}


interface I0BBBBB {

	function f0() external view returns (uint);
}
interface I0BBBB is I0BBB, I0BBBBB {

	function f0() override(I0BBB, I0BBBBB)
	external view returns (uint);
}
interface I0BB is I0BBB, I0BBBB {

	function f0() override(I0BBB, I0BBBB)
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I0B is I0BB {

	function f0() override
	external view returns (uint);
}
interface I0 is I0B {

}




interface I1BBB {

	function f0() external view returns (uint);
}


interface I1BBBBB {

	function f0() external view returns (uint);
}
interface I1BBBB is I1BBB, I1BBBBB {

	function f0() override(I1BBB, I1BBBBB)
	external view returns (uint);
}
interface I1BB is I1BBB, I1BBBB {

	function f0() override(I1BBB, I1BBBB)
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I1B is I1BB {

}
interface I1 is I1B {

}



interface I2BB {

	function f0() external view returns (uint);
}
interface I2B is I2BB {

}
interface I2 is I2B {

	function f1() external payable returns (uint);
}


interface C3B {

	function f0() external view returns (uint);
}

interface C3BB is C3B {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
contract C3 is C3B, C3BB {

	function f0() external view
	override(C3BB, C3B)
	returns (uint)
	{
		return 638022372;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1931656580;
	}
	function f2() virtual public pure
	
	returns (uint)
	{
		return 1402304087;
	}
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

