pragma solidity >=0.0;
interface I0BB {
	function f0() external view returns (uint);
}
interface I0B is I0BB {
	function f0() override
	external view returns (uint);
}
interface I0 is I0B {
	function f1() external payable returns (uint);
}
library L1 {
	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private pure returns (uint)
	{
		return 846930886;
	}
}
interface C2BB {
	function f0() external view returns (uint);
}
contract C2B is C2BB {
	function f0() external view
	override
	returns (uint)
	{
		return 908951446;
	}
}
contract C2 is C2B {
}
interface I4BB {
	function f0() external view returns (uint);
}
interface I4B is I4BB {
	function f1() external view returns (uint);
}
interface I4 is I4B {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface C5BB {
	function f0() external view returns (uint);
}
contract C5B is C5BB {
	function f0() external view
	override
	returns (uint)
	{
		return 533364653;
	}
}
contract C5 is C5B {
}
library L6 {
	function f0(uint) private pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1714636915;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1957747793;
	}
}
library L7 {
	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) external pure returns (uint)
	{
		return 719885386;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1649760492;
	}
}
library L8 {
	function f0(uint) external pure returns (uint)
	{
		return 596516649;
	}
}
contract C {
	using L7 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 719885386)
			return 1;
		return 0;
	}
}
