pragma solidity >=0.0;
interface C0BBBBBBBBB {
	function f0() external view returns (uint);
}
interface C0BBBBBBBB is C0BBBBBBBBB {
}
interface C0BBBBBBB is C0BBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C0BBBBBB is C0BBBBBBB {
}
interface C0BBBBB is C0BBBBBB {
}
interface C0BBBB is C0BBBBB {
}
contract C0BBB is C0BBBB {
	function f0() external view
	override
	returns (uint)
	{
		return 1203428207;
	}
}
contract C0BB is C0BBB {
	function f1() internal pure
	
	returns (uint)
	{
		return 1738531149;
	}
}
contract C0B is C0BB {
}
contract C0 is C0B {
}
library L1 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1203428207)
				return 1;
			C0B tc1 = new C0B();
			if (tc1.f0() != 1203428207)
				return 2;
			C0BB tc2 = new C0BB();
			if (tc2.f0() != 1203428207)
				return 3;
			C0BBB tc3 = new C0BBB();
			if (tc3.f0() != 1203428207)
				return 4;
			return 0;
	}
}
