pragma solidity >=0.0;
interface C0BB {
	function f0() external view returns (uint);
}
interface C0B is C0BB {
	function f0() override
	external view returns (uint);
}
interface C0BBBB {
	function f0() external view returns (uint);
}
interface C0BBB is C0BB, C0BBBB {
	function f0() override(C0BB, C0BBBB)
	external view returns (uint);
}
contract C0 is C0B, C0BBB {
	function f0() virtual external view
	override(C0BBB, C0B)
	returns (uint)
	{
		return 1116245721;
	}
}
library L1 {
	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
}
interface C2BB {
	function f0() external view returns (uint);
}
interface C2B is C2BB {
}
contract C2 is C2B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1783813293;
	}
}
library L3 {
	function f0(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}
library L4 {
	function f0(uint) external pure returns (uint)
	{
		return 1714636915;
	}
}
interface I5 {
	function f0() external view returns (uint);
}
interface I6 {
	function f0() external view returns (uint);
}
interface C7BB {
	function f0() external view returns (uint);
}
interface C7B is C7BB {
}
interface C7BBBB {
	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface C7BBB is C7BB, C7BBBB {
	function f0() override(C7BB, C7BBBB)
	external view returns (uint);
}
contract C7 is C7B, C7BBB {
	function f0() external view
	override(C7BBB, C7BB)
	returns (uint)
	{
		return 1553860333;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1593231199;
	}
}
contract C {
	using L4 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1714636915)
			return 1;
		return 0;
	}
}
