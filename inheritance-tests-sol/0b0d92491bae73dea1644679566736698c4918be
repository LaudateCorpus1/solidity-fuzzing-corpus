pragma solidity >=0.0;
interface I0B {
	function f0() external view returns (uint);
}
interface I0 is I0B {
}
interface C1BBB {
	function f0() external payable returns (uint);
}
interface C1BB is C1BBB {
	function f0() override
	external payable returns (uint);
}
interface C1B is C1BB {
	function f1() external view returns (uint);
}
interface C1BBBB is C1BB {
	function f1() external view returns (uint);
}
contract C1 is C1B, C1BBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 192302371;
	}
	function f1() external view
	override(C1BBBB, C1B)
	returns (uint)
	{
		return 564586691;
	}
}
library L2 {
	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 192302371)
				return 1;
			if (tc0.f1() != 564586691)
				return 2;
			return 0;
	}
}
