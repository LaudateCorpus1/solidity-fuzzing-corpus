
pragma solidity >=0.0;




interface I0B {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I0 is I0B {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
library L1 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
library L2 {

	function f0(uint) external view returns (uint)
	{
		return 1681692777;
	}
}
library L3 {

	function f0(uint) external pure returns (uint)
	{
		return 1714636915;
	}
}





interface C4BBBB {

	function f0() external payable returns (uint);
}
interface C4BBB is C4BBBB {

}
contract C4BB is C4BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 160099598;
	}
}
contract C4B is C4BB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 68768197;
	}
}
contract C4 is C4B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 2038683636;
	}
}


interface I5B {

	function f0() external view returns (uint);
}

interface I5BB is I5B {

	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface I5 is I5B, I5BB {

	function f1() override
	external view returns (uint);
}

interface I6 {

	function f0() external view returns (uint);
}



interface I7BB {

	function f0() external view returns (uint);
}
interface I7B is I7BB {

}
interface I7 is I7B {

	function f1() external payable returns (uint);
}










interface C8BBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C8BBBBBBBB is C8BBBBBBBBB {

	function f1() override
	external pure returns (uint);
}
interface C8BBBBBBB is C8BBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C8BBBBBB is C8BBBBBBB {

	function f0() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
}

interface C8BBBBBBBBBB is C8BBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
	function f2() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface C8BBBBB is C8BBBBBB, C8BBBBBBBBBB {

	function f0() override(C8BBBBBB, C8BBBBBBBBBB)
	external payable returns (uint);
	function f1() override(C8BBBBBBBB, C8BBBBBBBBBB)
	external pure returns (uint);
	function f2() override(C8BBBBBB, C8BBBBBBBBBB)
	external view returns (uint);
	function f3() override(C8BBBBBB, C8BBBBBBB)
	external view returns (uint);
	function f4() override
	external view returns (uint);
}
contract C8BBBB is C8BBBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 151628124;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1595048886;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 601665773;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 523986004;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 509017165;
	}
}
contract C8BBB is C8BBBB {

	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1157279837;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 131569067;
	}
}
contract C8BB is C8BBB {

}
contract C8B is C8BB {

}

contract C8BBBBBBBBBBB is C8B {

}
contract C8 is C8B, C8BBBBBBBBBBB {

}
library L9 {

	function f0(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
}








interface C10BBBBBBB {

	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface C10BBBBBB is C10BBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface C10BBBBB is C10BBBBBB {

	function f0() override
	external view returns (uint);
}

interface C10BBBBBBBB is C10BBBBBB {

	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface C10BBBB is C10BBBBB, C10BBBBBBBB {

	function f0() override(C10BBBBB, C10BBBBBB)
	external view returns (uint);
	function f1() override(C10BBBBBB, C10BBBBBBBB)
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() external payable returns (uint);
}
interface C10BBB is C10BBBB {

	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external payable returns (uint);
}
interface C10BB is C10BBB {

	function f0() override
	external view returns (uint);
	function f3() override
	external payable returns (uint);
}
contract C10B is C10BB {

	function f0() external view
	override
	returns (uint)
	{
		return 322049084;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 766516262;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 142102543;
	}
	function f3() external payable
	override
	returns (uint)
	{
		return 560080573;
	}
}
contract C10 is C10B {

	function f1() external payable
	override
	returns (uint)
	{
		return 2056425363;
	}
}


contract C {
	function test() public returns (uint)
	{
			C10 tc0 = new C10();
			if (tc0.f0() != 322049084)
				return 1;
			if (tc0.f1() != 2056425363)
				return 2;
			if (tc0.f2() != 142102543)
				return 3;
			if (tc0.f3() != 560080573)
				return 4;
			C10B tc1 = new C10B();
			if (tc1.f0() != 322049084)
				return 5;
			if (tc1.f1() != 766516262)
				return 6;
			if (tc1.f2() != 142102543)
				return 7;
			if (tc1.f3() != 560080573)
				return 8;
			C4 tc2 = new C4();
			if (tc2.f0() != 2038683636)
				return 9;
			C4B tc3 = new C4B();
			if (tc3.f0() != 68768197)
				return 10;
			C4BB tc4 = new C4BB();
			if (tc4.f0() != 160099598)
				return 11;
			C8 tc5 = new C8();
			if (tc5.f0() != 151628124)
				return 12;
			if (tc5.f1() != 1157279837)
				return 13;
			if (tc5.f2() != 601665773)
				return 14;
			if (tc5.f3() != 523986004)
				return 15;
			if (tc5.f4() != 131569067)
				return 16;
			C8B tc6 = new C8B();
			if (tc6.f0() != 151628124)
				return 17;
			if (tc6.f1() != 1157279837)
				return 18;
			if (tc6.f2() != 601665773)
				return 19;
			if (tc6.f3() != 523986004)
				return 20;
			if (tc6.f4() != 131569067)
				return 21;
			C8BB tc7 = new C8BB();
			if (tc7.f0() != 151628124)
				return 22;
			if (tc7.f1() != 1157279837)
				return 23;
			if (tc7.f2() != 601665773)
				return 24;
			if (tc7.f3() != 523986004)
				return 25;
			if (tc7.f4() != 131569067)
				return 26;
			C8BBB tc8 = new C8BBB();
			if (tc8.f0() != 151628124)
				return 27;
			if (tc8.f1() != 1157279837)
				return 28;
			if (tc8.f2() != 601665773)
				return 29;
			if (tc8.f3() != 523986004)
				return 30;
			if (tc8.f4() != 131569067)
				return 31;
			C8BBBB tc9 = new C8BBBB();
			if (tc9.f0() != 151628124)
				return 32;
			if (tc9.f1() != 1595048886)
				return 33;
			if (tc9.f2() != 601665773)
				return 34;
			if (tc9.f3() != 523986004)
				return 35;
			if (tc9.f4() != 509017165)
				return 36;
			C8BBBBBBBBBBB tc10 = new C8BBBBBBBBBBB();
			if (tc10.f0() != 151628124)
				return 37;
			if (tc10.f1() != 1157279837)
				return 38;
			if (tc10.f2() != 601665773)
				return 39;
			if (tc10.f3() != 523986004)
				return 40;
			if (tc10.f4() != 131569067)
				return 41;
			return 0;
	}
}

