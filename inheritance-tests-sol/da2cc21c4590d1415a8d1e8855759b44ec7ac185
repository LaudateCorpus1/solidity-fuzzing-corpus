
pragma solidity >=0.0;





interface I0BB {

	function f0() external view returns (uint);
}
interface I0B is I0BB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I0 is I0B {

	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}



interface C1BB {

	function f0() external view returns (uint);
}

interface C1BBB is C1BB {

	function f1() external payable returns (uint);
}
contract C1B is C1BB, C1BBB {

	function f0() external view
	override
	returns (uint)
	{
		return 1301149675;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1218704829;
	}
}
contract C1 is C1B {

	function f1() virtual external payable
	override
	returns (uint)
	{
		return 2067015777;
	}
}
library L2 {

	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1681692777;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1714636915;
	}
}
library L3 {

	function f0(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
library L4 {

	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) external pure returns (uint)
	{
		return 719885386;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1649760492;
	}
}


contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1957747793)
			return 1;
		return 0;
	}
}

