pragma solidity >=0.0;
library L0 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public view returns (uint)
	{
		return 846930886;
	}
	function f2(uint) public view returns (uint)
	{
		return 1681692777;
	}
}
contract C1BB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1847108358;
	}
}
contract C1B is C1BB {
}
contract C1 is C1B {
	function f1() public pure
	
	returns (uint)
	{
		return 2089172319;
	}
}
interface I2BBBB {
}
interface I2BBBBB is I2BBBB {
	function f0() external payable returns (uint);
}
interface I2BBB is I2BBBB, I2BBBBB {
	function f0() override
	external payable returns (uint);
}
interface I2BB is I2BBB {
	function f0() override
	external payable returns (uint);
}
interface I2BBBBBBBBB {
	function f0() external payable returns (uint);
}
interface I2BBBBBBBB is I2BBBBBBBBB {
}
interface I2BBBBBBB is I2BBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I2BBBBBB is I2BBB, I2BBBBBBB {
	function f0() override(I2BBB, I2BBBBBBB)
	external payable returns (uint);
}
interface I2B is I2BB, I2BBBBBB {
	function f0() override(I2BB, I2BBBBBB)
	external payable returns (uint);
}
interface I2 is I2B {
}
contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 846930886)
			return 1;
		return 0;
	}
}
