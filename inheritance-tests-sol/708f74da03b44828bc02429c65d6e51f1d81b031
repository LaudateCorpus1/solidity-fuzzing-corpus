
pragma solidity >=0.0;





interface I0BB {

	function f0() external view returns (uint);
}
interface I0B is I0BB {

	function f1() external payable returns (uint);
}
interface I0 is I0B {

	function f0() override
	external view returns (uint);
}
library L1 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}





interface C3BBBB {

	function f0() external view returns (uint);
}
interface C3BBB is C3BBBB {

}
interface C3BB is C3BBB {

}
interface C3B is C3BB {

}
contract C3 is C3B {

	function f0() external view
	override
	returns (uint)
	{
		return 1250328747;
	}
}

contract C5 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1738531149;
	}
}
library L6 {

	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}







interface C7BBBBBB {

	function f0() external view returns (uint);
}
interface C7BBBBB is C7BBBBBB {

}
interface C7BBBB is C7BBBBB {

	function f0() override
	external view returns (uint);
}
interface C7BBB is C7BBBB {

}






interface C7BBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface C7BBBBBBBBBBB is C7BBBBBBBBBBBB {

}
interface C7BBBBBBBBBB is C7BBBBBBBBBBB {

}
interface C7BBBBBBBBB is C7BBBBBBBBBB {

	function f0() override
	external view returns (uint);
}



interface C7BBBBBBBBBBBBBBB {

}
interface C7BBBBBBBBBBBBBB is C7BBBBBBBBBBBBBBB {

}
interface C7BBBBBBBBBBBBB is C7BBBBBBBBBB, C7BBBBBBBBBBBBBB {

}
interface C7BBBBBBBB is C7BBBBBBBBB, C7BBBBBBBBBBBBB {

	function f0() override(C7BBBBBBBBB, C7BBBBBBBBBBBB)
	external view returns (uint);
}
interface C7BBBBBBB is C7BBBB, C7BBBBBBBB {

	function f0() override(C7BBBB, C7BBBBBBBB)
	external view returns (uint);
}
interface C7BB is C7BBB, C7BBBBBBB {

	function f0() override(C7BBBB, C7BBBBBBB)
	external view returns (uint);
}
interface C7B is C7BB {

	function f0() override
	external view returns (uint);
}
contract C7 is C7B {

	function f0() external view
	override
	returns (uint)
	{
		return 1479919876;
	}
}


abstract contract C8B {

	function f0() virtual public pure
	
	returns (uint);
}
contract C8 is C8B {

	function f0() public pure
	override
	returns (uint)
	{
		return 1308858262;
	}
}
library L9 {

	function f0(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}
library L10 {

	function f0(uint) public view returns (uint)
	{
		return 424238335;
	}
}





interface C11BBBB {

	function f0() external view returns (uint);
}
interface C11BBB is C11BBBB {

}
interface C11BB is C11BBB {

}
interface C11B is C11BB {

	function f0() override
	external view returns (uint);
}
contract C11 is C11B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 180318217;
	}
}




interface C12BBB {

	function f0() external view returns (uint);
}
interface C12BB is C12BBB {

	function f0() override
	external view returns (uint);
}
abstract contract C12B is C12BB {

	function f0() virtual external view
	override
	returns (uint);
}
contract C12 is C12B {

	function f0() external view
	override
	returns (uint)
	{
		return 1951824771;
	}
}



abstract contract C13BB {

}
contract C13B is C13BB {

}



interface C13BBBBB {

	function f0() external payable returns (uint);
}
interface C13BBBB is C13BBBBB {

	function f0() override
	external payable returns (uint);
}
interface C13BBB is C13BBBB {

}
contract C13 is C13B, C13BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 163677341;
	}
}
library L14 {

	function f0(uint) public pure returns (uint)
	{
		return 1649760492;
	}
}


contract C {
	function test() public returns (uint)
	{
			C11 tc0 = new C11();
			if (tc0.f0() != 180318217)
				return 1;
			C12 tc1 = new C12();
			if (tc1.f0() != 1951824771)
				return 2;
			C13 tc2 = new C13();
			if (tc2.f0() != 163677341)
				return 3;
			C3 tc3 = new C3();
			if (tc3.f0() != 1250328747)
				return 4;
			C5 tc4 = new C5();
			if (tc4.f0() != 1738531149)
				return 5;
			C7 tc5 = new C7();
			if (tc5.f0() != 1479919876)
				return 6;
			C8 tc6 = new C8();
			if (tc6.f0() != 1308858262)
				return 7;
			return 0;
	}
}

