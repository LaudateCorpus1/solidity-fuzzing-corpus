
pragma solidity >=0.0;





interface I0BB {

	function f0() external view returns (uint);
}
interface I0B is I0BB {

	function f1() external payable returns (uint);
}


interface I0BBBB {

	function f0() external view returns (uint);
}
interface I0BBB is I0BB, I0BBBB {

	function f0() override(I0BB, I0BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}


interface I0BBBBBB {

	function f0() external view returns (uint);
}
interface I0BBBBB is I0BBB, I0BBBBBB {

	function f0() override(I0BBB, I0BBBBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I0 is I0B, I0BBB, I0BBBBB {

	function f0() override(I0BB, I0BBB, I0BBBBB)
	external view returns (uint);
	function f1() override(I0B, I0BBB)
	external payable returns (uint);
}


interface C1B {

}

interface C1BB is C1B {

	function f0() external view returns (uint);
}
contract C1 is C1B, C1BB {

	function f0() external view
	override
	returns (uint)
	{
		return 564586691;
	}
	function f1() virtual public view
	
	returns (uint)
	{
		return 1596680831;
	}
}



interface I2BB {

	function f0() external view returns (uint);
}
interface I2B is I2BB {

	function f1() external payable returns (uint);
}
interface I2 is I2B {

}



interface I3BB {

	function f0() external view returns (uint);
}
interface I3B is I3BB {

	function f1() external payable returns (uint);
}


interface I3BBBB {

	function f0() external view returns (uint);
}
interface I3BBB is I3BB, I3BBBB {

	function f0() override(I3BB, I3BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}


interface I3BBBBBB {

	function f0() external view returns (uint);
}
interface I3BBBBB is I3BB, I3BBBBBB {

	function f0() override(I3BB, I3BBBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}

interface I3BBBBBBB is I3BB {

	function f1() external payable returns (uint);
}
interface I3 is I3B, I3BBB, I3BBBBB, I3BBBBBBB {

	function f0() override(I3BB, I3BBB, I3BBBBB)
	external view returns (uint);
	function f1() override(I3B, I3BBB, I3BBBBB, I3BBBBBBB)
	external payable returns (uint);
}


interface C4B {

}

interface C4BB is C4B {

	function f0() external view returns (uint);
}
contract C4 is C4B, C4BB {

	function f0() external view
	override
	returns (uint)
	{
		return 1931656580;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1402304087;
	}
}

contract C5 {

	function f0() external pure
	
	returns (uint)
	{
		return 1936030137;
	}
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

