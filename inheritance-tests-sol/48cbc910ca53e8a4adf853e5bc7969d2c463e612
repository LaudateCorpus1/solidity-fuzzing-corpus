pragma solidity >=0.0;
library L0 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private pure returns (uint)
	{
		return 846930886;
	}
}
library L1 {
	function f0(uint) external pure returns (uint)
	{
		return 1681692777;
	}
}
library L2 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
library L4 {
	function f0(uint) private pure returns (uint)
	{
		return 1957747793;
	}
}
interface C5B {
	function f0() external payable returns (uint);
}
contract C5 is C5B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1914720637;
	}
	function f1() public view
	
	returns (uint)
	{
		return 2078669041;
	}
}
library L6 {
	function f0(uint) public view returns (uint)
	{
		return 424238335;
	}
}
interface I7 {
	function f0() external view returns (uint);
}
library L8 {
	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
}
library L9 {
	function f0(uint) private pure returns (uint)
	{
		return 1649760492;
	}
}
interface C10BBBB {
	function f0() external payable returns (uint);
}
interface C10BBB is C10BBBB {
}
interface C10BB is C10BBB {
	function f1() external payable returns (uint);
}
interface C10B is C10BB {
}
contract C10 is C10B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1098894339;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 2136927794;
	}
}
library L12 {
	function f0(uint) private pure returns (uint)
	{
		return 596516649;
	}
}
interface C13BBBBBB {
	function f0() external view returns (uint);
}
interface C13BBBBB is C13BBBBBB {
}
interface C13BBBB is C13BBBBB {
	function f0() override
	external view returns (uint);
}
interface C13BBB is C13BBBB {
	function f0() override
	external view returns (uint);
}
interface C13BBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface C13BBBBBBBBBBB is C13BBBBBBBBBBBB {
}
interface C13BBBBBBBBBB is C13BBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C13BBBBBBBBB is C13BBBBBBBBBB {
}
interface C13BBBBBBBBBBBBBBB {
}
interface C13BBBBBBBBBBBBBB is C13BBBBBBBBBBBBBBB {
}
interface C13BBBBBBBBBBBBB is C13BBBBBBBBB, C13BBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C13BBBBBBBB is C13BBBBBBBBB, C13BBBBBBBBBBBBB {
	function f0() override(C13BBBBBBBBBB, C13BBBBBBBBBBBBB)
	external view returns (uint);
}
interface C13BBBBBBB is C13BBBB, C13BBBBBBBB {
	function f0() override(C13BBBB, C13BBBBBBBB)
	external view returns (uint);
}
interface C13BB is C13BBB, C13BBBBBBB {
	function f0() override(C13BBB, C13BBBBBBB)
	external view returns (uint);
}
interface C13B is C13BB {
	function f0() override
	external view returns (uint);
}
contract C13 is C13B {
	function f0() external view
	override
	returns (uint)
	{
		return 201068705;
	}
}
abstract contract C14BB {
}
contract C14B is C14BB {
}
interface C14BBBBB {
	function f0() external payable returns (uint);
}
interface C14BBBB is C14BBBBB {
	function f0() override
	external payable returns (uint);
}
interface C14BBB is C14BBBB {
}
contract C14 is C14B, C14BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 153892771;
	}
}
library L15 {
	function f0(uint) private pure returns (uint)
	{
		return 783368690;
	}
}
contract C16 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 412013968;
	}
}
contract C {
	function test() public returns (uint)
	{
			C10 tc0 = new C10();
			if (tc0.f0() != 1098894339)
				return 1;
			if (tc0.f1() != 2136927794)
				return 2;
			C13 tc1 = new C13();
			if (tc1.f0() != 201068705)
				return 3;
			C14 tc2 = new C14();
			if (tc2.f0() != 153892771)
				return 4;
			C16 tc3 = new C16();
			if (tc3.f0() != 412013968)
				return 5;
			C5 tc4 = new C5();
			if (tc4.f0() != 1914720637)
				return 6;
			if (tc4.f1() != 2078669041)
				return 7;
			return 0;
	}
}
