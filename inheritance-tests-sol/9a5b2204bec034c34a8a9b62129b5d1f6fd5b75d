
pragma solidity >=0.0;




contract C0B {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 5889062;
	}
}
contract C0 is C0B {

	function f0() public pure
	override
	returns (uint)
	{
		return 1667683838;
	}
}



abstract contract C2BB {

}


interface C2BBBB {

	function f0() external payable returns (uint);
}
interface C2BBB is C2BBBB {

	function f0() override
	external payable returns (uint);
}
abstract contract C2B is C2BB, C2BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 859669581;
	}
}



abstract contract C2BBBBBBB {

}

abstract contract C2BBBBBBBB is C2BBBBBBB {

}
contract C2BBBBBB is C2BBBBBBB, C2BBBBBBBB {

}
contract C2BBBBB is C2BB, C2BBBBBB {

}


contract C2BBBBBBBBBB {

}

contract C2BBBBBBBBBBB is C2BBBBBBBBBB {

}
contract C2BBBBBBBBB is C2BBBBB, C2BBBBBBBBBB, C2BBBBBBBBBBB {

}

contract C2BBBBBBBBBBBB is C2BBBBB {

}
contract C2 is C2B, C2BBBBB, C2BBBBBBBBB, C2BBBBBBBBBBBB {

}



abstract contract C3BB {

}


interface C3BBBB {

	function f0() external payable returns (uint);
}
interface C3BBB is C3BBBB {

	function f0() override
	external payable returns (uint);
}
contract C3B is C3BB, C3BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1870866689;
	}
}


contract C3BBBBBB {

}


contract C3BBBBBBBB {

}

abstract contract C3BBBBBBBBB is C3BBBBBBBB {

}
contract C3BBBBBBB is C3BBBBBB, C3BBBBBBBB, C3BBBBBBBBB {

}
contract C3BBBBB is C3BB, C3BBBBBB, C3BBBBBBB {

}



contract C3BBBBBBBBBBBB {

}

abstract contract C3BBBBBBBBBBBBB is C3BBBBBBBBBBBB {

}
contract C3BBBBBBBBBBB is C3BBBBBBBBBBBB, C3BBBBBBBBBBBBB {

}

contract C3BBBBBBBBBBBBBB is C3BBBBBBBBBBB {

}
contract C3BBBBBBBBBB is C3BBBBB, C3BBBBBBBBBBB, C3BBBBBBBBBBBBBB {

}

contract C3BBBBBBBBBBBBBBB is C3BBBBB {

}
contract C3 is C3B, C3BBBBB, C3BBBBBBBBBB, C3BBBBBBBBBBBBBBB {

}
library L4 {

	function f0(uint) external pure returns (uint)
	{
		return 521595368;
	}
}
library L5 {

	function f0(uint) external pure returns (uint)
	{
		return 294702567;
	}
}


contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 294702567)
			return 1;
		return 0;
	}
}

