
pragma solidity >=0.0;


library L0 {

	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}





interface I1BBBB {

	function f0() external payable returns (uint);
}
interface I1BBB is I1BBBB {

	function f0() override
	external payable returns (uint);
}




interface I1BBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I1BBBBBBB is I1BBBBBBBB {

	function f1() override
	external payable returns (uint);
}
interface I1BBBBBB is I1BBBBBBB {

	function f1() override
	external payable returns (uint);
}
interface I1BBBBB is I1BBB, I1BBBBBB {

	function f0() override(I1BBB, I1BBBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I1BB is I1BBB, I1BBBBB {

	function f0() override(I1BBB, I1BBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I1B is I1BB {

	function f1() override
	external payable returns (uint);
}
interface I1 is I1B {

	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

