
pragma solidity >=0.0;


library L0 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public pure returns (uint)
	{
		return 846930886;
	}
}




interface C1BBB {

	function f0() external payable returns (uint);
}
interface C1BB is C1BBB {

	function f0() override
	external payable returns (uint);
}
contract C1B is C1BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 2078669041;
	}
}
contract C1 is C1B {

}

interface I2 {

	function f0() external view returns (uint);
}








interface C3BBBBBBB {

	function f0() external view returns (uint);
}
interface C3BBBBBB is C3BBBBBBB {

}
interface C3BBBBB is C3BBBBBB {

}
interface C3BBBB is C3BBBBB {

}
interface C3BBB is C3BBBB {

}
interface C3BB is C3BBB {

}
contract C3B is C3BB {

	function f0() external view
	override
	returns (uint)
	{
		return 2136927794;
	}
}
contract C3 is C3B {

}
library L4 {

	function f0(uint) internal view returns (uint)
	{
		return 1681692777;
	}
}


interface C5B {

	function f0() external view returns (uint);
}
contract C5 is C5B {

	function f0() external view
	override
	returns (uint)
	{
		return 638022372;
	}
}
library L7 {

	function f0(uint) internal view returns (uint)
	{
		return 1714636915;
	}
}


interface I8B {

	function f0() external view returns (uint);
}
interface I8 is I8B {

	function f0() override
	external view returns (uint);
}


interface I9B {

	function f0() external view returns (uint);
}
interface I9 is I9B {

}


interface I10B {

	function f0() external payable returns (uint);
}

interface I10BB is I10B {

	function f1() external view returns (uint);
}
interface I10 is I10B, I10BB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
library L11 {

	function f0(uint) internal pure returns (uint)
	{
		return 424238335;
	}
}
library L12 {

	function f0(uint) internal pure returns (uint)
	{
		return 719885386;
	}
}


contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 846930886)
			return 1;
		return 0;
	}
}

