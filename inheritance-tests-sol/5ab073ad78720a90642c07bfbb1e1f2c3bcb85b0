
pragma solidity >=0.0;






interface I0BBB {

	function f0() external payable returns (uint);
}
interface I0BB is I0BBB {

	function f1() external payable returns (uint);
}
interface I0B is I0BB {

	function f0() override
	external payable returns (uint);
}


interface I0BBBBB {

	function f0() external payable returns (uint);
}
interface I0BBBB is I0BB, I0BBBBB {

	function f0() override(I0BBB, I0BBBBB)
	external payable returns (uint);
}

interface I0BBBBBB is I0BBBB {

	function f2() external payable returns (uint);
}
interface I0 is I0B, I0BBBB, I0BBBBBB {

	function f0() override(I0B, I0BBBB)
	external payable returns (uint);
}
library L1 {

	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}


contract C2B {

	function f0() public view
	
	returns (uint)
	{
		return 1250328747;
	}
}
abstract contract C2 is C2B {

}


contract C3B {

	function f0() public view
	
	returns (uint)
	{
		return 1738531149;
	}
}
contract C3 is C3B {

}



interface I4BB {

	function f0() external view returns (uint);
}
interface I4B is I4BB {

}
interface I4 is I4B {

}









interface C6BBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
	function f2() external payable returns (uint);
}
interface C6BBBBBBB is C6BBBBBBBB {

	function f1() override
	external pure returns (uint);
}
interface C6BBBBBB is C6BBBBBBB {

	function f2() override
	external payable returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C6BBBBB is C6BBBBBB {

	function f0() override
	external payable returns (uint);
	function f4() override
	external view returns (uint);
}

interface C6BBBBBBBBB is C6BBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
	function f3() override
	external view returns (uint);
	function f5() external view returns (uint);
}
interface C6BBBB is C6BBBBB, C6BBBBBBBBB {

	function f0() override(C6BBBBB, C6BBBBBBBBB)
	external payable returns (uint);
	function f1() override(C6BBBBBBB, C6BBBBBBBBB)
	external pure returns (uint);
	function f3() override(C6BBBBBB, C6BBBBBBBBB)
	external view returns (uint);
	function f4() override(C6BBBBB, C6BBBBBB)
	external view returns (uint);
	function f5() override
	external view returns (uint);
}
contract C6BBB is C6BBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1814467857;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1659675143;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 412013968;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1675824860;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 389431516;
	}
	function f5() external view
	override
	returns (uint)
	{
		return 1243696899;
	}
}
contract C6BB is C6BBB {

}
contract C6B is C6BB {

}
contract C6 is C6B {

}


interface C7B {

	function f0() external view returns (uint);
}

interface C7BB is C7B {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
contract C7 is C7B, C7BB {

	function f0() external view
	override(C7BB, C7B)
	returns (uint)
	{
		return 719080959;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 163677341;
	}
	function f2() public pure
	
	returns (uint)
	{
		return 276590098;
	}
}






interface C8BBBBB {

	function f0() external payable returns (uint);
}
interface C8BBBB is C8BBBBB {

}
contract C8BBB is C8BBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1082682476;
	}
}
contract C8BB is C8BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 200599677;
	}
}
contract C8B is C8BB {

}
contract C8 is C8B {

}

contract C9 {

	function f0() public payable
	
	returns (uint)
	{
		return 837051536;
	}
}
library L10 {

	function f0(uint) public view returns (uint)
	{
		return 424238335;
	}
	function f1(uint) public view returns (uint)
	{
		return 719885386;
	}
}


contract C {
	function test() public returns (uint)
	{
			C2B tc0 = new C2B();
			if (tc0.f0() != 1250328747)
				return 1;
			C3 tc1 = new C3();
			if (tc1.f0() != 1738531149)
				return 2;
			C3B tc2 = new C3B();
			if (tc2.f0() != 1738531149)
				return 3;
			C6 tc3 = new C6();
			if (tc3.f0() != 1814467857)
				return 4;
			if (tc3.f1() != 1659675143)
				return 5;
			if (tc3.f2() != 412013968)
				return 6;
			if (tc3.f3() != 1675824860)
				return 7;
			if (tc3.f4() != 389431516)
				return 8;
			if (tc3.f5() != 1243696899)
				return 9;
			C6B tc4 = new C6B();
			if (tc4.f0() != 1814467857)
				return 10;
			if (tc4.f1() != 1659675143)
				return 11;
			if (tc4.f2() != 412013968)
				return 12;
			if (tc4.f3() != 1675824860)
				return 13;
			if (tc4.f4() != 389431516)
				return 14;
			if (tc4.f5() != 1243696899)
				return 15;
			C6BB tc5 = new C6BB();
			if (tc5.f0() != 1814467857)
				return 16;
			if (tc5.f1() != 1659675143)
				return 17;
			if (tc5.f2() != 412013968)
				return 18;
			if (tc5.f3() != 1675824860)
				return 19;
			if (tc5.f4() != 389431516)
				return 20;
			if (tc5.f5() != 1243696899)
				return 21;
			C6BBB tc6 = new C6BBB();
			if (tc6.f0() != 1814467857)
				return 22;
			if (tc6.f1() != 1659675143)
				return 23;
			if (tc6.f2() != 412013968)
				return 24;
			if (tc6.f3() != 1675824860)
				return 25;
			if (tc6.f4() != 389431516)
				return 26;
			if (tc6.f5() != 1243696899)
				return 27;
			C7 tc7 = new C7();
			if (tc7.f0() != 719080959)
				return 28;
			if (tc7.f1() != 163677341)
				return 29;
			if (tc7.f2() != 276590098)
				return 30;
			C8 tc8 = new C8();
			if (tc8.f0() != 200599677)
				return 31;
			C8B tc9 = new C8B();
			if (tc9.f0() != 200599677)
				return 32;
			C8BB tc10 = new C8BB();
			if (tc10.f0() != 200599677)
				return 33;
			C8BBB tc11 = new C8BBB();
			if (tc11.f0() != 1082682476)
				return 34;
			C9 tc12 = new C9();
			if (tc12.f0() != 837051536)
				return 35;
			return 0;
	}
}

