pragma solidity >=0.0;
contract C0 {
	function f0() public payable
	
	returns (uint)
	{
		return 1575004944;
	}
}
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
interface I2BBBBBB {
	function f0() external pure returns (uint);
}
interface I2BBBBB is I2BBBBBB {
	function f0() override
	external pure returns (uint);
}
interface I2BBBB is I2BBBBB {
	function f0() override
	external pure returns (uint);
}
interface I2BBB is I2BBBB {
	function f0() override
	external pure returns (uint);
}
interface I2BB is I2BBB {
}
interface I2B is I2BB {
	function f0() override
	external pure returns (uint);
	function f1() external view returns (uint);
}
interface I2BBBBBBB is I2B {
	function f2() external view returns (uint);
}
interface I2 is I2B, I2BBBBBBB {
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
interface I4B {
	function f0() external payable returns (uint);
}
interface I4 is I4B {
}
interface C5BBBB {
	function f0() external view returns (uint);
}
interface C5BBB is C5BBBB {
	function f0() override
	external view returns (uint);
}
interface C5BB is C5BBB {
}
interface C5B is C5BB {
}
contract C5 is C5B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 170423502;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1575004944)
				return 1;
			C5 tc1 = new C5();
			if (tc1.f0() != 170423502)
				return 2;
			return 0;
	}
}
