
pragma solidity >=0.0;





interface C0BB {

	function f0() external view returns (uint);
}



interface C0BBBBB {

	function f0() external view returns (uint);
}
interface C0BBBB is C0BBBBB {

}
interface C0BBB is C0BB, C0BBBB {

	function f0() override(C0BB, C0BBBBB)
	external view returns (uint);
}
interface C0B is C0BB, C0BBB {

	function f0() override(C0BB, C0BBB)
	external view returns (uint);
}
contract C0 is C0B {

	function f0() external view
	override
	returns (uint)
	{
		return 407355683;
	}
}
library L1 {

	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
}
library L2 {

	function f0(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}
library L3 {

	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1957747793;
	}
	function f2(uint) internal view returns (uint)
	{
		return 424238335;
	}
}
library L4 {

	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1649760492;
	}
	function f2(uint) internal view returns (uint)
	{
		return 596516649;
	}
}



interface C5BB {

	function f0() external view returns (uint);
}
interface C5B is C5BB {

}
contract C5 is C5B {

	function f0() external view
	override
	returns (uint)
	{
		return 1203428207;
	}
}




interface I6BBB {

	function f0() external payable returns (uint);
}
interface I6BB is I6BBB {

}
interface I6B is I6BB {

}
interface I6 is I6B {

}




contract C7BBB {

	function f0() external pure
	
	returns (uint)
	{
		return 2136927794;
	}
}
contract C7BB is C7BBB {

}
abstract contract C7B is C7BB {

}
contract C7 is C7B {

}
library L8 {

	function f0(uint) private pure returns (uint)
	{
		return 1189641421;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1025202362;
	}
}
library L9 {

	function f0(uint) private pure returns (uint)
	{
		return 1350490027;
	}
	function f1(uint) external pure returns (uint)
	{
		return 783368690;
	}
}
library L10 {

	function f0(uint) public pure returns (uint)
	{
		return 1102520059;
	}
	function f1(uint) private pure returns (uint)
	{
		return 2044897763;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1967513926;
	}
}




interface I11BBB {

	function f0() external payable returns (uint);
}
interface I11BB is I11BBB {

}
interface I11B is I11BB {

	function f0() override
	external payable returns (uint);
}
interface I11 is I11B {

	function f0() override
	external payable returns (uint);
}




contract C12BBB {

	function f0() external pure
	
	returns (uint)
	{
		return 1947433875;
	}
}
contract C12BB is C12BBB {

}
abstract contract C12B is C12BB {

}
contract C12 is C12B {

}


contract C {
	using L8 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1025202362)
			return 1;
		return 0;
	}
}

