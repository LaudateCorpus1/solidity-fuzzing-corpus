
pragma solidity >=0.0;




interface I0B {

	function f0() external view returns (uint);
}
interface I0 is I0B {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
library L1 {

	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
}





interface C3BBBB {

}
interface C3BBB is C3BBBB {

	function f0() external payable returns (uint);
}
interface C3BB is C3BBB {

}
contract C3B is C3BB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 223870541;
	}
}
contract C3 is C3B {

	function f0() external payable
	override
	returns (uint)
	{
		return 2062763411;
	}
}


interface I4B {

	function f0() external view returns (uint);
}
interface I4 is I4B {

}
library L6 {

	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
}
library L7 {

	function f0(uint) private pure returns (uint)
	{
		return 1649760492;
	}
}
library L8 {

	function f0(uint) public pure returns (uint)
	{
		return 596516649;
	}
}

contract C9 {

	function f0() external view
	
	returns (uint)
	{
		return 496065181;
	}
	function f1() public view
	
	returns (uint)
	{
		return 1119688001;
	}
	function f2() public view
	
	returns (uint)
	{
		return 591068575;
	}
}


interface I10B {

	function f0() external view returns (uint);
}
interface I10 is I10B {

}


contract C {
	function test() public returns (uint)
	{
			C3 tc0 = new C3();
			if (tc0.f0() != 2062763411)
				return 1;
			C3B tc1 = new C3B();
			if (tc1.f0() != 223870541)
				return 2;
			C9 tc2 = new C9();
			if (tc2.f0() != 496065181)
				return 3;
			if (tc2.f1() != 1119688001)
				return 4;
			if (tc2.f2() != 591068575)
				return 5;
			return 0;
	}
}

