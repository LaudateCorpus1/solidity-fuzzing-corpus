
pragma solidity >=0.0;



contract C0 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 48271;
	}
}


interface I1B {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}



interface I1BBBB {

}
interface I1BBB is I1BBBB {

}
interface I1BB is I1B, I1BBB {

	function f0() override
	external payable returns (uint);
}
interface I1 is I1B, I1BB {

	function f0() override(I1B, I1BB)
	external payable returns (uint);
}


interface I2B {

	function f0() external view returns (uint);
}
interface I2 is I2B {

}


contract C3B {

}
contract C3 is C3B {

	function f0() public view
	
	returns (uint)
	{
		return 854716505;
	}
}

contract C4 {

	function f0() public view
	
	returns (uint)
	{
		return 564586691;
	}
}

contract C5 {

	function f0() public view
	
	returns (uint)
	{
		return 1596680831;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 48271)
				return 1;
			C3 tc1 = new C3();
			if (tc1.f0() != 854716505)
				return 2;
			C4 tc2 = new C4();
			if (tc2.f0() != 564586691)
				return 3;
			C5 tc3 = new C5();
			if (tc3.f0() != 1596680831)
				return 4;
			return 0;
	}
}

