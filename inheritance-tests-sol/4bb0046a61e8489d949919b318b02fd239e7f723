
pragma solidity >=0.0;


library L1 {

	function f0(uint) internal view returns (uint)
	{
		return 1957747793;
	}
}


interface I2B {

	function f0() external view returns (uint);
}




interface I2BBBBB {

	function f0() external view returns (uint);
}
interface I2BBBB is I2BBBBB {

	function f0() override
	external view returns (uint);
}
interface I2BBB is I2BBBB {

}
interface I2BB is I2B, I2BBB {

	function f0() override(I2B, I2BBBB)
	external view returns (uint);
}
interface I2 is I2B, I2BB {

	function f0() override(I2B, I2BB)
	external view returns (uint);
}
library L3 {

	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
}


abstract contract C4B {

	function f0() private pure
	
	returns (uint)
	{
		return 880453633;
	}
	function f1() virtual public pure
	
	returns (uint);
}
contract C4 is C4B {

	function f1() virtual public pure
	override
	returns (uint)
	{
		return 267835185;
	}
}


interface I5B {

}
interface I5 is I5B {

	function f0() external payable returns (uint);
}
library L6 {

	function f0(uint) public view returns (uint)
	{
		return 1649760492;
	}
}


interface I7B {

	function f0() external view returns (uint);
}
interface I7 is I7B {

}


contract C {
	function test() public returns (uint)
	{
			C4 tc0 = new C4();
			if (tc0.f1() != 267835185)
				return 1;
			return 0;
	}
}

