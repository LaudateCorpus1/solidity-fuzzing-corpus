pragma solidity >=0.0;
library L0 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
interface I1BB {
	function f0() external payable returns (uint);
}
interface I1B is I1BB {
	function f0() override
	external payable returns (uint);
}
interface I1 is I1B {
	function f0() override
	external payable returns (uint);
}
interface I2 {
	function f0() external payable returns (uint);
}
interface I3BBBB {
	function f0() external payable returns (uint);
}
interface I3BBB is I3BBBB {
}
interface I3BB is I3BBB {
	function f0() override
	external payable returns (uint);
}
interface I3BBBBBBBB {
	function f0() external payable returns (uint);
}
interface I3BBBBBBB is I3BBBBBBBB {
}
interface I3BBBBBB is I3BBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I3BBBBB is I3BB, I3BBBBBB {
	function f0() override(I3BB, I3BBBBBB)
	external payable returns (uint);
}
interface I3B is I3BB, I3BBBBB {
	function f0() override(I3BB, I3BBBBB)
	external payable returns (uint);
}
interface I3 is I3B {
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
