pragma solidity >=0.0;
library L0 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
}
interface C1B {
	function f0() external view returns (uint);
}
contract C1 is C1B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1291394886;
	}
}
interface I2B {
	function f0() external view returns (uint);
}
interface I2 is I2B {
}
library L3 {
	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}
interface C4BBBBB {
	function f0() external view returns (uint);
}
interface C4BBBB is C4BBBBB {
}
interface C4BBB is C4BBBB {
}
contract C4BB is C4BBB {
	function f0() external view
	override
	returns (uint)
	{
		return 192302371;
	}
}
contract C4B is C4BB {
}
abstract contract C4 is C4B {
}
contract C5 {
	function f0() public payable
	
	returns (uint)
	{
		return 1738531149;
	}
}
interface C6BB {
	function f0() external view returns (uint);
}
interface C6B is C6BB {
}
interface C6BBBB {
	function f0() external view returns (uint);
}
interface C6BBB is C6BB, C6BBBB {
	function f0() override(C6BB, C6BBBB)
	external view returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
contract C6 is C6B, C6BBB {
	function f0() virtual external view
	override(C6BBB, C6BB)
	returns (uint)
	{
		return 1559527823;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 638022372;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 1931656580;
	}
}
interface C7B {
	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
contract C7 is C7B {
	function f0() external view
	override
	returns (uint)
	{
		return 1936030137;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 353718330;
	}
}
contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}
