pragma solidity >=0.0;
interface I0BBBB {
	function f0() external view returns (uint);
}
interface I0BBB is I0BBBB {
}
interface I0BB is I0BBB {
	function f0() override
	external view returns (uint);
}
interface I0B is I0BB {
	function f1() external pure returns (uint);
	function f2() external pure returns (uint);
}
interface I0 is I0B {
}
interface C1B {
	function f0() external view returns (uint);
}
interface C1BB is C1B {
	function f1() external payable returns (uint);
}
contract C1 is C1B, C1BB {
	function f0() external view
	override
	returns (uint)
	{
		return 1250328747;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1271135913;
	}
}
interface C3B {
	function f0() external view returns (uint);
}
interface C3BB is C3B {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
contract C3 is C3B, C3BB {
	function f0() external view
	override(C3BB, C3B)
	returns (uint)
	{
		return 2010567813;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 662405787;
	}
	function f2() virtual public pure
	
	returns (uint)
	{
		return 1105724094;
	}
}
library L4 {
	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
