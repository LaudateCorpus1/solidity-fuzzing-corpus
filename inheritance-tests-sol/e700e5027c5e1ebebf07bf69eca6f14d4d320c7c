pragma solidity >=0.0;
interface C1BBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface C1BBBBBBBBBBBB is C1BBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface C1BBBBBBBBBB is C1BBBBBBBBBBB, C1BBBBBBBBBBBB {
	function f0() override(C1BBBBBBBBBBB, C1BBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external view returns (uint);
}
interface C1BBBBBBBBB is C1BBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
interface C1BBBBBBBB is C1BBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB {
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() external payable returns (uint);
}
interface C1BBBBBB is C1BBBBBBB {
	function f2() override
	external view returns (uint);
}
interface C1BBBBBBBBBBBBB is C1BBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external payable returns (uint);
	function f4() external payable returns (uint);
}
interface C1BBBBB is C1BBBBBB, C1BBBBBBBBBBBBB {
	function f0() override(C1BBBBBBBB, C1BBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override(C1BBBBBB, C1BBBBBBBBBBBBB)
	external view returns (uint);
	function f3() override(C1BBBBBBB, C1BBBBBBBBBBBBB)
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() external payable returns (uint);
	function f6() external pure returns (uint);
	function f7() external payable returns (uint);
	function f8() external payable returns (uint);
}
interface C1BBBB is C1BBBBB {
	function f1() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
}
interface C1BBB is C1BBBB {
	function f5() override
	external payable returns (uint);
	function f9() external payable returns (uint);
}
interface C1BB is C1BBB {
	function f2() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
}
interface C1BBBBBBBBBBBBBB is C1BBB {
	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f10() external payable returns (uint);
}
interface C1B is C1BB, C1BBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() override(C1BB, C1BBBBB)
	external view returns (uint);
	function f3() override
	external payable returns (uint);
	function f4() override(C1BBBB, C1BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override(C1BB, C1BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() external view returns (uint);
}
contract C1 is C1B {
	function f0() external view
	override
	returns (uint)
	{
		return 2097680013;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 53116079;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 614757996;
	}
	function f3() virtual external payable
	override
	returns (uint)
	{
		return 65332258;
	}
	function f4() virtual external payable
	override
	returns (uint)
	{
		return 1945221285;
	}
	function f5() external payable
	override
	returns (uint)
	{
		return 2125135227;
	}
	function f6() external pure
	override
	returns (uint)
	{
		return 242478147;
	}
	function f7() external payable
	override
	returns (uint)
	{
		return 1510077748;
	}
	function f8() external payable
	override
	returns (uint)
	{
		return 664695889;
	}
	function f9() external payable
	override
	returns (uint)
	{
		return 810198673;
	}
	function f10() virtual external payable
	override
	returns (uint)
	{
		return 983534843;
	}
	function f11() virtual external view
	override
	returns (uint)
	{
		return 1112925070;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 2097680013)
				return 1;
			if (tc0.f1() != 53116079)
				return 2;
			if (tc0.f10() != 983534843)
				return 3;
			if (tc0.f11() != 1112925070)
				return 4;
			if (tc0.f2() != 614757996)
				return 5;
			if (tc0.f3() != 65332258)
				return 6;
			if (tc0.f4() != 1945221285)
				return 7;
			if (tc0.f5() != 2125135227)
				return 8;
			if (tc0.f6() != 242478147)
				return 9;
			if (tc0.f7() != 1510077748)
				return 10;
			if (tc0.f8() != 664695889)
				return 11;
			if (tc0.f9() != 810198673)
				return 12;
			return 0;
	}
}
