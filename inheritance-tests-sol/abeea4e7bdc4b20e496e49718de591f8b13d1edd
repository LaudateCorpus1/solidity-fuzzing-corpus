
pragma solidity >=0.0;












interface C0BBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C0BBBBBBBB is C0BBBBBBBBB {

	function f1() override
	external pure returns (uint);
}

interface C0BBBBBBBBBB is C0BBBBBBBBB {

	function f2() external payable returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB, C0BBBBBBBBBB {

	function f1() override(C0BBBBBBBB, C0BBBBBBBBB)
	external pure returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C0BBBBBB is C0BBBBBBB {

}

interface C0BBBBBBBBBBB is C0BBBBBB {

	function f2() override
	external payable returns (uint);
	function f5() external view returns (uint);
}
interface C0BBBBB is C0BBBBBB, C0BBBBBBBBBBB {

	function f1() override
	external pure returns (uint);
	function f2() override(C0BBBBBBBBBB, C0BBBBBBBBBBB)
	external payable returns (uint);
	function f5() override
	external view returns (uint);
}
contract C0BBBB is C0BBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1947433875;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 2010567813;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 662405787;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 849178936;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 1479919876;
	}
	function f5() external view
	override
	returns (uint)
	{
		return 1272185027;
	}
}
contract C0BBB is C0BBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1287522347;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 153892771;
	}
}
contract C0BB is C0BBB {

	function f2() external payable
	override
	returns (uint)
	{
		return 389431516;
	}
}
contract C0B is C0BB {

}
contract C0 is C0B {

	function f6() public view
	
	returns (uint)
	{
		return 942409124;
	}
}


interface C1B {

	function f0() external view returns (uint);
}

interface C1BB is C1B {

	function f1() external view returns (uint);
}
contract C1 is C1B, C1BB {

	function f0() external view
	override
	returns (uint)
	{
		return 1239222494;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1500063655;
	}
	function f2() virtual public pure
	
	returns (uint)
	{
		return 719080959;
	}
}






interface C4BBBBB {

}
interface C4BBBB is C4BBBBB {

}
interface C4BBB is C4BBBB {

	function f0() external view returns (uint);
}
interface C4BB is C4BBB {

}
interface C4B is C4BB {

	function f0() override
	external view returns (uint);
}
contract C4 is C4B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 409875951;
	}
}



interface I6BB {

	function f0() external view returns (uint);
}
interface I6B is I6BB {

	function f1() external payable returns (uint);
}
interface I6 is I6B {

	function f1() override
	external payable returns (uint);
}






interface C7BBBBB {

}
interface C7BBBB is C7BBBBB {

}
interface C7BBB is C7BBBB {

	function f0() external view returns (uint);
}
interface C7BB is C7BBB {

}
interface C7B is C7BB {

	function f0() override
	external view returns (uint);
}
contract C7 is C7B {

	function f0() external view
	override
	returns (uint)
	{
		return 1273555394;
	}
}






interface C8BBBBB {

}
interface C8BBBB is C8BBBBB {

}
interface C8BBB is C8BBBB {

	function f0() external view returns (uint);
}
interface C8BB is C8BBB {

	function f0() override
	external view returns (uint);
}
interface C8B is C8BB {

}
contract C8 is C8B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1358404307;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1287522347)
				return 1;
			if (tc0.f1() != 2010567813)
				return 2;
			if (tc0.f2() != 389431516)
				return 3;
			if (tc0.f3() != 153892771)
				return 4;
			if (tc0.f4() != 1479919876)
				return 5;
			if (tc0.f5() != 1272185027)
				return 6;
			if (tc0.f6() != 942409124)
				return 7;
			C0B tc1 = new C0B();
			if (tc1.f0() != 1287522347)
				return 8;
			if (tc1.f1() != 2010567813)
				return 9;
			if (tc1.f2() != 389431516)
				return 10;
			if (tc1.f3() != 153892771)
				return 11;
			if (tc1.f4() != 1479919876)
				return 12;
			if (tc1.f5() != 1272185027)
				return 13;
			C0BB tc2 = new C0BB();
			if (tc2.f0() != 1287522347)
				return 14;
			if (tc2.f1() != 2010567813)
				return 15;
			if (tc2.f2() != 389431516)
				return 16;
			if (tc2.f3() != 153892771)
				return 17;
			if (tc2.f4() != 1479919876)
				return 18;
			if (tc2.f5() != 1272185027)
				return 19;
			C0BBB tc3 = new C0BBB();
			if (tc3.f0() != 1287522347)
				return 20;
			if (tc3.f1() != 2010567813)
				return 21;
			if (tc3.f2() != 662405787)
				return 22;
			if (tc3.f3() != 153892771)
				return 23;
			if (tc3.f4() != 1479919876)
				return 24;
			if (tc3.f5() != 1272185027)
				return 25;
			C0BBBB tc4 = new C0BBBB();
			if (tc4.f0() != 1947433875)
				return 26;
			if (tc4.f1() != 2010567813)
				return 27;
			if (tc4.f2() != 662405787)
				return 28;
			if (tc4.f3() != 849178936)
				return 29;
			if (tc4.f4() != 1479919876)
				return 30;
			if (tc4.f5() != 1272185027)
				return 31;
			C1 tc5 = new C1();
			if (tc5.f0() != 1239222494)
				return 32;
			if (tc5.f1() != 1500063655)
				return 33;
			if (tc5.f2() != 719080959)
				return 34;
			C4 tc6 = new C4();
			if (tc6.f0() != 409875951)
				return 35;
			C7 tc7 = new C7();
			if (tc7.f0() != 1273555394)
				return 36;
			C8 tc8 = new C8();
			if (tc8.f0() != 1358404307)
				return 37;
			return 0;
	}
}

