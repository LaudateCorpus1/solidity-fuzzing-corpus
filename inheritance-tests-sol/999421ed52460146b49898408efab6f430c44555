pragma solidity >=0.0;
abstract contract C0B {
}
interface C0BBBBBB {
	function f0() external view returns (uint);
}
interface C0BBBBB is C0BBBBBB {
}
interface C0BBBB is C0BBBBB {
	function f0() override
	external view returns (uint);
}
interface C0BBB is C0BBBB {
}
contract C0BB is C0B, C0BBB {
	function f0() external view
	override
	returns (uint)
	{
		return 854716505;
	}
}
contract C0 is C0B, C0BB {
}
library L1 {
	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1681692777;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1714636915;
	}
}
contract C3BBB {
	function f0() external pure
	
	returns (uint)
	{
		return 192302371;
	}
}
contract C3BB is C3BBB {
}
abstract contract C3B is C3BB {
}
contract C3 is C3B {
}
interface C5BBBB {
	function f0() external payable returns (uint);
}
interface C5BBB is C5BBBB {
}
contract C5BB is C5BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1882556969;
	}
}
contract C5B is C5BB {
}
contract C5 is C5B {
}
interface C6BBBBBBB {
	function f0() external view returns (uint);
}
interface C6BBBBBB is C6BBBBBBB {
}
interface C6BBBBB is C6BBBBBB {
}
interface C6BBBB is C6BBBBB {
}
interface C6BBB is C6BBBB {
	function f0() override
	external view returns (uint);
}
interface C6BB is C6BBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface C6B is C6BB {
	function f2() external view returns (uint);
}
contract C6 is C6B {
	function f0() external view
	override
	returns (uint)
	{
		return 1105724094;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1696049367;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1168816941;
	}
}
interface C8BBB {
	function f0() external payable returns (uint);
}
interface C8BB is C8BBB {
}
interface C8B is C8BB {
	function f0() override
	external payable returns (uint);
}
contract C8 is C8B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1057382352;
	}
}
library L9 {
	function f0(uint) private pure returns (uint)
	{
		return 1957747793;
	}
}
library L10 {
	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
}
library L11 {
	function f0(uint) private pure returns (uint)
	{
		return 719885386;
	}
}
library L12 {
	function f0(uint) private pure returns (uint)
	{
		return 1649760492;
	}
}
library L13 {
	function f0(uint) private pure returns (uint)
	{
		return 596516649;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1189641421;
	}
}
library L14 {
	function f0(uint) internal pure returns (uint)
	{
		return 1025202362;
	}
}
library L15 {
	function f0(uint) internal pure returns (uint)
	{
		return 1350490027;
	}
}
library L16 {
	function f0(uint) public pure returns (uint)
	{
		return 783368690;
	}
}
contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}
