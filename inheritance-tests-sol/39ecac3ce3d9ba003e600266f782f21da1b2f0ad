pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
contract C1 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1847580730;
	}
}
interface C2BBB {
	function f0() external view returns (uint);
}
interface C2BB is C2BBB {
}
contract C2B is C2BB {
	function f0() external view
	override
	returns (uint)
	{
		return 375855352;
	}
}
contract C2 is C2B {
}
interface C3BBB {
	function f0() external payable returns (uint);
}
interface C3BB is C3BBB {
}
contract C3B is C3BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 180753275;
	}
}
contract C3 is C3B {
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1847580730)
				return 1;
			C2 tc1 = new C2();
			if (tc1.f0() != 375855352)
				return 2;
			C2B tc2 = new C2B();
			if (tc2.f0() != 375855352)
				return 3;
			C3 tc3 = new C3();
			if (tc3.f0() != 180753275)
				return 4;
			C3B tc4 = new C3B();
			if (tc4.f0() != 180753275)
				return 5;
			return 0;
	}
}
