
pragma solidity >=0.0;



contract C0 {

	function f0() virtual public view
	
	returns (uint)
	{
		return 48271;
	}
}


contract C1B {

	function f0() public view
	
	returns (uint)
	{
		return 182605794;
	}
}
contract C1 is C1B {

}
library L2 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}







interface C3BBBBBB {

	function f0() external view returns (uint);
}
contract C3BBBBB is C3BBBBBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1914720637;
	}
}
contract C3BBBB is C3BBBBB {

}
abstract contract C3BBB is C3BBBB {

}


contract C3BBBBBBBB {

}
abstract contract C3BBBBBBB is C3BBB, C3BBBBBBBB {

}
contract C3BB is C3BBB, C3BBBBBBB {

	function f1() public view
	
	returns (uint)
	{
		return 1250328747;
	}
}
abstract contract C3B is C3BB {

}

abstract contract C3BBBBBBBBB is C3BB {

}

contract C3BBBBBBBBBB is C3BB {

	function f2() public payable
	
	returns (uint)
	{
		return 2075782095;
	}
}

abstract contract C3BBBBBBBBBBB is C3BB {

}
abstract contract C3 is C3B, C3BBBBBBBBB, C3BBBBBBBBBB, C3BBBBBBBBBBB {

}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 48271)
				return 1;
			C1 tc1 = new C1();
			if (tc1.f0() != 182605794)
				return 2;
			C1B tc2 = new C1B();
			if (tc2.f0() != 182605794)
				return 3;
			C3BB tc3 = new C3BB();
			if (tc3.f0() != 1914720637)
				return 4;
			if (tc3.f1() != 1250328747)
				return 5;
			C3BBBB tc4 = new C3BBBB();
			if (tc4.f0() != 1914720637)
				return 6;
			C3BBBBB tc5 = new C3BBBBB();
			if (tc5.f0() != 1914720637)
				return 7;
			C3BBBBBBBBBB tc6 = new C3BBBBBBBBBB();
			if (tc6.f0() != 1914720637)
				return 8;
			if (tc6.f1() != 1250328747)
				return 9;
			if (tc6.f2() != 2075782095)
				return 10;
			return 0;
	}
}

