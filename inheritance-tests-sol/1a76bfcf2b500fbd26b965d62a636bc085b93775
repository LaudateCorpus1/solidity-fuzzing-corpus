
pragma solidity >=0.0;


library L0 {

	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
library L1 {

	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}




interface I2BBB {

	function f0() external payable returns (uint);
}


interface I2BBBBB {

	function f0() external payable returns (uint);
}
interface I2BBBB is I2BBB, I2BBBBB {

	function f0() override(I2BBB, I2BBBBB)
	external payable returns (uint);
}
interface I2BB is I2BBB, I2BBBB {

	function f0() override(I2BBB, I2BBBB)
	external payable returns (uint);
}
interface I2B is I2BB {

	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface I2 is I2B {

	function f2() external view returns (uint);
}




interface I3BBB {

	function f0() external payable returns (uint);
}
interface I3BB is I3BBB {

}
interface I3B is I3BB {

	function f1() external view returns (uint);
}
interface I3 is I3B {

}


interface I4B {

	function f0() external payable returns (uint);
}
interface I4 is I4B {

	function f1() external payable returns (uint);
}

contract C5 {

	function f0() public view
	
	returns (uint)
	{
		return 1738531149;
	}
	function f1() public pure
	
	returns (uint)
	{
		return 1271135913;
	}
}



interface I6BB {

	function f0() external payable returns (uint);
}
interface I6B is I6BB {

}
interface I6 is I6B {

	function f0() override
	external payable returns (uint);
}

contract C7 {

	function f0() public payable
	
	returns (uint)
	{
		return 1559527823;
	}
}



interface C8BB {

	function f0() external view returns (uint);
}
interface C8B is C8BB {

}
contract C8 is C8B {

	function f0() external view
	override
	returns (uint)
	{
		return 1931656580;
	}
}



interface I9BB {

	function f0() external view returns (uint);
}
interface I9B is I9BB {

	function f1() external payable returns (uint);
}
interface I9 is I9B {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}




interface I10BBB {

	function f0() external view returns (uint);
}
interface I10BB is I10BBB {

	function f0() override
	external view returns (uint);
}
interface I10B is I10BB {

}

interface I10BBBB is I10BB {

	function f0() override
	external view returns (uint);
}
interface I10 is I10B, I10BBBB {

	function f0() override(I10BB, I10BBBB)
	external view returns (uint);
}




interface I11BBB {

}
interface I11BB is I11BBB {

	function f0() external view returns (uint);
}
interface I11B is I11BB {

	function f0() override
	external view returns (uint);
}



interface I11BBBBBB {

	function f0() external view returns (uint);
}
interface I11BBBBB is I11BBBBBB {

	function f0() override
	external view returns (uint);
}
interface I11BBBB is I11BB, I11BBBBB {

	function f0() override(I11BB, I11BBBBB)
	external view returns (uint);
}
interface I11 is I11B, I11BBBB {

	function f0() override(I11B, I11BBBB)
	external view returns (uint);
	function f1() external pure returns (uint);
}


interface I12B {

	function f0() external payable returns (uint);
}
interface I12 is I12B {

	function f1() external payable returns (uint);
}
library L13 {

	function f0(uint) internal view returns (uint)
	{
		return 424238335;
	}
}





interface I14BBBB {

	function f0() external view returns (uint);
}
interface I14BBB is I14BBBB {

	function f0() override
	external view returns (uint);
}
interface I14BB is I14BBB {

}
interface I14B is I14BB {

	function f0() override
	external view returns (uint);
}
interface I14 is I14B {

}


interface I15B {

	function f0() external view returns (uint);
}
interface I15 is I15B {

	function f0() override
	external view returns (uint);
}





interface C16BBBB {

	function f0() external payable returns (uint);
}
interface C16BBB is C16BBBB {

}
interface C16BB is C16BBB {

}
contract C16B is C16BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1243696899;
	}
}
abstract contract C16 is C16B {

}
library L17 {

	function f0(uint) public view returns (uint)
	{
		return 719885386;
	}
}




interface I18BBB {

	function f0() external view returns (uint);
}
interface I18BB is I18BBB {

	function f0() override
	external view returns (uint);
}
interface I18B is I18BB {

}
interface I18 is I18B {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
library L20 {

	function f0(uint) internal view returns (uint)
	{
		return 1649760492;
	}
}



interface I21BB {

	function f0() external payable returns (uint);
}
interface I21B is I21BB {

}
interface I21 is I21B {

	function f1() external payable returns (uint);
}
library L22 {

	function f0(uint) public view returns (uint)
	{
		return 596516649;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1189641421;
	}
}
library L23 {

	function f0(uint) external pure returns (uint)
	{
		return 1025202362;
	}
}


contract C {
	function test() public returns (uint)
	{
			C16B tc0 = new C16B();
			if (tc0.f0() != 1243696899)
				return 1;
			C5 tc1 = new C5();
			if (tc1.f0() != 1738531149)
				return 2;
			if (tc1.f1() != 1271135913)
				return 3;
			C7 tc2 = new C7();
			if (tc2.f0() != 1559527823)
				return 4;
			C8 tc3 = new C8();
			if (tc3.f0() != 1931656580)
				return 5;
			return 0;
	}
}

