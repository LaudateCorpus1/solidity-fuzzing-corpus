pragma solidity >=0.0;
interface I0 {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
library L1 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) external pure returns (uint)
	{
		return 846930886;
	}
}
library L2 {
	function f0(uint) public view returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
interface I3 {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C4BBBBBBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C4BBBBBBBBBBB is C4BBBBBBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface C4BBBBBBBBBB is C4BBBBBBBBBBB {
	function f3() external view returns (uint);
	function f4() external pure returns (uint);
}
interface C4BBBBBBBBB is C4BBBBBBBBBB {
}
interface C4BBBBBBBBBBBBB is C4BBBBBBBBBB {
	function f2() override
	external payable returns (uint);
	function f5() external view returns (uint);
}
interface C4BBBBBBBB is C4BBBBBBBBB, C4BBBBBBBBBBBBB {
	function f1() override
	external pure returns (uint);
	function f2() override(C4BBBBBBBBBBB, C4BBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override
	external view returns (uint);
}
contract C4BBBBBBB is C4BBBBBBBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1947433875;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 2010567813;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 662405787;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 849178936;
	}
	function f4() external pure
	override
	returns (uint)
	{
		return 1479919876;
	}
	function f5() external view
	override
	returns (uint)
	{
		return 1272185027;
	}
}
contract C4BBBBBB is C4BBBBBBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1287522347;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 153892771;
	}
	function f6() external pure
	
	returns (uint)
	{
		return 412013968;
	}
}
contract C4BBBBB is C4BBBBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 389431516;
	}
}
contract C4BBBB is C4BBBBB {
	function f2() external payable
	override
	returns (uint)
	{
		return 942409124;
	}
}
contract C4BBB is C4BBBB {
}
contract C4BBBBBBBBBBBBBB is C4BBBB {
	function f7() external pure
	
	returns (uint)
	{
		return 2130959757;
	}
}
contract C4BB is C4BBB, C4BBBBBBBBBBBBBB {
}
contract C4BBBBBBBBBBBBBBB is C4BB {
	function f8() external pure
	
	returns (uint)
	{
		return 1500063655;
	}
}
contract C4B is C4BB, C4BBBBBBBBBBBBBBB {
}
contract C4BBBBBBBBBBBBBBBB is C4B {
}
contract C4 is C4B, C4BBBBBBBBBBBBBBBB {
	function f9() public view
	
	returns (uint)
	{
		return 276590098;
	}
}
contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}
