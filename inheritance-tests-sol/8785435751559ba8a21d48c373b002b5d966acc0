pragma solidity >=0.0;
interface C0BBBBB {
	function f0() external payable returns (uint);
}
interface C0BBBB is C0BBBBB {
}
interface C0BBBBBB is C0BBBBB {
	function f1() external payable returns (uint);
	function f2() external payable returns (uint);
}
interface C0BBB is C0BBBB, C0BBBBBB {
	function f1() override
	external payable returns (uint);
}
interface C0BB is C0BBB {
	function f0() override
	external payable returns (uint);
}
interface C0B is C0BB {
}
contract C0 is C0B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 280765391;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1785544758;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 1778238631;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 280765391)
				return 1;
			if (tc0.f1() != 1785544758)
				return 2;
			if (tc0.f2() != 1778238631)
				return 3;
			return 0;
	}
}
