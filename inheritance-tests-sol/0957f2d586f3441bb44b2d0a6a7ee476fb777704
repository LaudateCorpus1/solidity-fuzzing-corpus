pragma solidity >=0.0;
library L0 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
interface C1BBBBBB {
	function f0() external payable returns (uint);
}
interface C1BBBBB is C1BBBBBB {
}
interface C1BBBB is C1BBBBB {
	function f0() override
	external payable returns (uint);
}
interface C1BBB is C1BBBB {
}
interface C1BB is C1BBB {
	function f1() external view returns (uint);
}
interface C1B is C1BB {
}
contract C1 is C1B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1250328747;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1271135913;
	}
}
library L2 {
	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public view returns (uint)
	{
		return 1681692777;
	}
}
contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1681692777)
			return 1;
		return 0;
	}
}
