
pragma solidity >=0.0;





interface I0BB {

	function f0() external view returns (uint);
}
interface I0B is I0BB {

	function f0() override
	external view returns (uint);
}
interface I0 is I0B {

	function f0() override
	external view returns (uint);
}




interface C1BBB {

	function f0() external payable returns (uint);
}
interface C1BB is C1BBB {

}
interface C1B is C1BB {

	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}


abstract contract C1BBBBB {

}
contract C1BBBB is C1BB, C1BBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 904096748;
	}
}
contract C1 is C1B, C1BBBB {

	function f0() virtual external payable
	override(C1BBBB, C1B)
	returns (uint)
	{
		return 1865744430;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 770348174;
	}
}




interface C2BBB {

	function f0() external payable returns (uint);
}
interface C2BB is C2BBB {

}
interface C2B is C2BB {

}
contract C2 is C2B {

	function f0() external payable
	override
	returns (uint)
	{
		return 757667499;
	}
}
library L3 {

	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
library L6 {

	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}
library L7 {

	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}
library L8 {

	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}




interface C9BBB {

	function f0() external payable returns (uint);
}
interface C9BB is C9BBB {

}
interface C9B is C9BB {

}
contract C9 is C9B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1594366071;
	}
}


abstract contract C11B {

}

abstract contract C11BB is C11B {

	function f0() virtual public pure
	
	returns (uint);
}
contract C11 is C11B, C11BB {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 462739901;
	}
}


contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}

