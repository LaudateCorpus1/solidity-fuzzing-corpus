pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
interface C2BBB {
	function f0() external payable returns (uint);
}
interface C2BB is C2BBB {
	function f0() override
	external payable returns (uint);
}
contract C2B is C2BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1116168985;
	}
}
abstract contract C2 is C2B {
	function f0() external payable
	override
	returns (uint)
	{
		return 317172907;
	}
}
library L3 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
library L4 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
library L5 {
	function f0(uint) public pure returns (uint)
	{
		return 1957747793;
	}
}
interface C6BBB {
	function f0() external payable returns (uint);
}
interface C6BB is C6BBB {
}
contract C6B is C6BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 399257814;
	}
}
contract C6 is C6B {
}
library L7 {
	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
}
interface C8BBB {
	function f0() external payable returns (uint);
}
interface C8BB is C8BBB {
	function f0() override
	external payable returns (uint);
}
contract C8B is C8BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1369023381;
	}
}
contract C8 is C8B {
}
contract C {
	using L4 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1714636915)
			return 1;
		return 0;
	}
}
