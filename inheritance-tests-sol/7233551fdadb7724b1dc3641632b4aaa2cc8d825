
pragma solidity >=0.0;




contract C0B {

}
contract C0 is C0B {

	function f0() public view
	
	returns (uint)
	{
		return 48271;
	}
}

contract C1 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 182605794;
	}
}





interface I2BBBB {

	function f0() external payable returns (uint);
}
interface I2BBB is I2BBBB {

	function f0() override
	external payable returns (uint);
}
interface I2BB is I2BBB {

}
interface I2B is I2BB {

	function f1() external view returns (uint);
}
interface I2 is I2B {

}




interface I3BBB {

	function f0() external view returns (uint);
}
interface I3BB is I3BBB {

}
interface I3B is I3BB {

}
interface I3 is I3B {

}

interface I4 {

	function f0() external payable returns (uint);
}


interface I6B {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}



interface I6BBBB {

}
interface I6BBB is I6BBBB {

}
interface I6BB is I6B, I6BBB {

}
interface I6 is I6B, I6BB {

	function f1() override
	external view returns (uint);
}


contract C7B {

}
contract C7 is C7B {

	function f0() public view
	
	returns (uint)
	{
		return 1402304087;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 48271)
				return 1;
			C1 tc1 = new C1();
			if (tc1.f0() != 182605794)
				return 2;
			C7 tc2 = new C7();
			if (tc2.f0() != 1402304087)
				return 3;
			return 0;
	}
}

