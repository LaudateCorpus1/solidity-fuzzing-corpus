pragma solidity >=0.0;
interface I0B {
	function f0() external view returns (uint);
}
interface I0BB is I0B {
}
interface I0 is I0B, I0BB {
	function f0() override
	external view returns (uint);
}
contract C1B {
}
contract C1 is C1B {
	function f0() public view
	
	returns (uint)
	{
		return 1914720637;
	}
}
interface C2BBB {
	function f0() external payable returns (uint);
}
interface C2BB is C2BBB {
}
contract C2B is C2BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 854716505;
	}
}
abstract contract C2 is C2B {
}
library L3 {
	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}
contract C4 {
	function f0() public view
	
	returns (uint)
	{
		return 192302371;
	}
}
contract C5B {
}
contract C5 is C5B {
	function f0() public view
	
	returns (uint)
	{
		return 1203428207;
	}
}
interface I7B {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I7BBBBB {
	function f0() external payable returns (uint);
}
interface I7BBBB is I7BBBBB {
}
interface I7BBB is I7BBBB {
}
interface I7BB is I7B, I7BBB {
	function f0() override(I7B, I7BBBBB)
	external payable returns (uint);
}
interface I7 is I7B, I7BB {
	function f0() override(I7B, I7BB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
contract C8 {
	function f0() public view
	
	returns (uint)
	{
		return 353718330;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1914720637)
				return 1;
			C2B tc1 = new C2B();
			if (tc1.f0() != 854716505)
				return 2;
			C4 tc2 = new C4();
			if (tc2.f0() != 192302371)
				return 3;
			C5 tc3 = new C5();
			if (tc3.f0() != 1203428207)
				return 4;
			C8 tc4 = new C8();
			if (tc4.f0() != 353718330)
				return 5;
			return 0;
	}
}
