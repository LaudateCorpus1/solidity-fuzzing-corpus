
pragma solidity >=0.0;







interface I0BBBB {

	function f0() external view returns (uint);
}
interface I0BBB is I0BBBB {

}
interface I0BB is I0BBB {

	function f0() override
	external view returns (uint);
}
interface I0B is I0BB {

}
interface I0 is I0B {

}



interface I1BB {

	function f0() external payable returns (uint);
}
interface I1B is I1BB {

}
interface I1 is I1B {

}

interface I2 {

	function f0() external payable returns (uint);
}





interface I4BBBB {

	function f0() external view returns (uint);
}
interface I4BBB is I4BBBB {

}
interface I4BB is I4BBB {

}
interface I4B is I4BB {

}
interface I4 is I4B {

}






interface I5BBBBB {

	function f0() external view returns (uint);
}
interface I5BBBB is I5BBBBB {

	function f0() override
	external view returns (uint);
}
interface I5BBB is I5BBBB {

	function f1() external payable returns (uint);
}
interface I5BB is I5BBB {

	function f1() override
	external payable returns (uint);
}
interface I5B is I5BB {

	function f1() override
	external payable returns (uint);
}
interface I5 is I5B {

	function f0() override
	external view returns (uint);
}
library L7 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}


contract C {
	using L7 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

