pragma solidity >=0.0;
interface I0B {
	function f0() external payable returns (uint);
}
interface I0BB is I0B {
	function f1() external view returns (uint);
}
interface I0 is I0B, I0BB {
	function f1() override
	external view returns (uint);
}
interface I1BB {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I1B is I1BB {
	function f0() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface I1 is I1B {
	function f0() override
	external payable returns (uint);
}
interface I2 {
	function f0() external payable returns (uint);
}
interface I3BBB {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I3BB is I3BBB {
}
interface I3B is I3BB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface I3 is I3B {
	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
contract C7 {
	function f0() public view
	
	returns (uint)
	{
		return 471204562;
	}
}
contract C8 {
	function f0() public payable
	
	returns (uint)
	{
		return 1516106925;
	}
}
library L10 {
	function f0(uint) external pure returns (uint)
	{
		return 719885386;
	}
}
contract C {
	using L10 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 719885386)
			return 1;
		return 0;
	}
}
