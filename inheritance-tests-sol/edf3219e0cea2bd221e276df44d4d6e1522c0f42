
pragma solidity >=0.0;






interface C0BBB {

	function f0() external payable returns (uint);
}
interface C0BB is C0BBB {

	function f0() override
	external payable returns (uint);
}
abstract contract C0B is C0BB {

	function f0() virtual external payable
	override
	returns (uint);
}


abstract contract C0BBBBB {

}
contract C0BBBB is C0BB, C0BBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 223870541;
	}
}
contract C0 is C0B, C0BBBB {

	function f0() virtual external payable
	override(C0BBBB, C0B)
	returns (uint)
	{
		return 180753275;
	}
}





interface C1BBBB {

	function f0() external view returns (uint);
}
interface C1BBB is C1BBBB {

}
interface C1BB is C1BBB {

	function f0() override
	external view returns (uint);
}
interface C1B is C1BB {

	function f0() override
	external view returns (uint);
}
contract C1 is C1B {

	function f0() external view
	override
	returns (uint)
	{
		return 1379193482;
	}
}




interface C2BBB {

	function f0() external payable returns (uint);
}
interface C2BB is C2BBB {

}
interface C2B is C2BB {

}
contract C2 is C2B {

	function f0() external payable
	override
	returns (uint)
	{
		return 1943064494;
	}
}



abstract contract C3BB {

}
contract C3B is C3BB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 170423502;
	}
}
contract C3 is C3B {

}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

