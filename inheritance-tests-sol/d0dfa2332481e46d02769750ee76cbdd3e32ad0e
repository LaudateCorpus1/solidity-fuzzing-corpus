
pragma solidity >=0.0;





interface I0BB {

	function f0() external view returns (uint);
}
interface I0B is I0BB {

	function f0() override
	external view returns (uint);
}
interface I0 is I0B {

	function f1() external view returns (uint);
}
library L1 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}




interface C2BBB {

	function f0() external view returns (uint);
}
interface C2BB is C2BBB {

}
interface C2B is C2BB {

}
contract C2 is C2B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1218704829;
	}
}
library L3 {

	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1681692777;
	}
}
library L4 {

	function f0(uint) internal view returns (uint)
	{
		return 1714636915;
	}
}
library L6 {

	function f0(uint) external pure returns (uint)
	{
		return 424238335;
	}
}




interface C7BBB {

	function f0() external view returns (uint);
}
interface C7BB is C7BBB {

}
interface C7B is C7BB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
contract C7 is C7B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1777615810;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 2062626965;
	}
}
library L8 {

	function f0(uint) external pure returns (uint)
	{
		return 719885386;
	}
}

contract C9 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1080935576;
	}
}


contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 1218704829)
				return 1;
			C7 tc1 = new C7();
			if (tc1.f0() != 1777615810)
				return 2;
			if (tc1.f1() != 2062626965)
				return 3;
			C9 tc2 = new C9();
			if (tc2.f0() != 1080935576)
				return 4;
			return 0;
	}
}

