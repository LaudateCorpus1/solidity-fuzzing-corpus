
pragma solidity >=0.0;




interface I0B {

	function f0() external payable returns (uint);
}



interface I0BBBB {

}
interface I0BBB is I0BBBB {

}
interface I0BB is I0B, I0BBB {

	function f0() override
	external payable returns (uint);
}
interface I0 is I0B, I0BB {

	function f0() override(I0B, I0BB)
	external payable returns (uint);
	function f1() external payable returns (uint);
}




interface I1BBB {

	function f0() external view returns (uint);
}
interface I1BB is I1BBB {

}
interface I1B is I1BB {

}
interface I1 is I1B {

}





interface I2BBBB {

	function f0() external payable returns (uint);
}
interface I2BBB is I2BBBB {

}
interface I2BB is I2BBB {

}
interface I2B is I2BB {

}
interface I2 is I2B {

	function f1() external payable returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}




interface I3BBB {

	function f0() external view returns (uint);
}
interface I3BB is I3BBB {

}
interface I3B is I3BB {

	function f0() override
	external view returns (uint);
}
interface I3 is I3B {

}

contract C4 {

	function f0() public view
	
	returns (uint)
	{
		return 638022372;
	}
}

contract C5 {

	function f0() public view
	
	returns (uint)
	{
		return 914937185;
	}
	function f1() public view
	
	returns (uint)
	{
		return 1931656580;
	}
}



interface I6BB {

	function f0() external view returns (uint);
}
interface I6B is I6BB {

	function f1() external payable returns (uint);
}
interface I6 is I6B {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}

contract C8 {

	function f0() public view
	
	returns (uint)
	{
		return 890442452;
	}
}


contract C9B {

}
contract C9 is C9B {

	function f0() public view
	
	returns (uint)
	{
		return 662405787;
	}
	function f1() external view
	
	returns (uint)
	{
		return 1105724094;
	}
	function f2() public view
	
	returns (uint)
	{
		return 849178936;
	}
}


contract C10B {

}
contract C10 is C10B {

	function f0() public view
	
	returns (uint)
	{
		return 1696049367;
	}
}


interface I11B {

	function f0() external pure returns (uint);
}
interface I11 is I11B {

	function f0() override
	external pure returns (uint);
}



interface I12BB {

	function f0() external view returns (uint);
}
interface I12B is I12BB {

	function f1() external payable returns (uint);
}
interface I12 is I12B {

	function f1() override
	external payable returns (uint);
}



interface I13BB {

	function f0() external view returns (uint);
}
interface I13B is I13BB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I13 is I13B {

	function f1() override
	external payable returns (uint);
}

contract C14 {

	function f0() public view
	
	returns (uint)
	{
		return 1659675143;
	}
}

interface I15 {

	function f0() external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C10 tc0 = new C10();
			if (tc0.f0() != 1696049367)
				return 1;
			C14 tc1 = new C14();
			if (tc1.f0() != 1659675143)
				return 2;
			C4 tc2 = new C4();
			if (tc2.f0() != 638022372)
				return 3;
			C5 tc3 = new C5();
			if (tc3.f0() != 914937185)
				return 4;
			if (tc3.f1() != 1931656580)
				return 5;
			C8 tc4 = new C8();
			if (tc4.f0() != 890442452)
				return 6;
			C9 tc5 = new C9();
			if (tc5.f0() != 662405787)
				return 7;
			if (tc5.f1() != 1105724094)
				return 8;
			if (tc5.f2() != 849178936)
				return 9;
			return 0;
	}
}

