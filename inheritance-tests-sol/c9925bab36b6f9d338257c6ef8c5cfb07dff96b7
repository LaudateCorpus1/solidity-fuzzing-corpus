pragma solidity >=0.0;
contract C0 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 494295040;
	}
}
interface C1BBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C1BBB is C1BBBB {
	function f0() override
	external payable returns (uint);
}
interface C1BB is C1BBB {
	function f1() override
	external payable returns (uint);
}
contract C1B is C1BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 341738116;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 2081258388;
	}
}
abstract contract C1 is C1B {
}
library L2 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
library L3 {
	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
contract C4BBB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 68865866;
	}
}
contract C4BBBB is C4BBB {
}
contract C4BB is C4BBB, C4BBBB {
}
contract C4B is C4BB {
}
contract C4 is C4B {
	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1633106186;
	}
}
interface I5BBB {
	function f0() external payable returns (uint);
}
interface I5BB is I5BBB {
	function f0() override
	external payable returns (uint);
}
interface I5B is I5BB {
}
interface I5 is I5B {
	function f0() override
	external payable returns (uint);
}
contract C6BBB {
	function f0() virtual external pure
	
	returns (uint)
	{
		return 1697268305;
	}
}
contract C6BB is C6BBB {
	function f0() virtual external pure
	override
	returns (uint)
	{
		return 288681331;
	}
}
contract C6B is C6BB {
	function f0() virtual external pure
	override
	returns (uint)
	{
		return 431017937;
	}
}
contract C6 is C6B {
	function f0() external pure
	override
	returns (uint)
	{
		return 538873778;
	}
}
contract C7 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1654205374;
	}
}
library L8 {
	function f0(uint) private pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}
interface C9BBBB {
	function f0() external payable returns (uint);
}
interface C9BBB is C9BBBB {
	function f0() override
	external payable returns (uint);
}
contract C9BB is C9BBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 2130219953;
	}
}
contract C9B is C9BB {
}
contract C9 is C9B {
	function f1() public view
	
	returns (uint)
	{
		return 2052226870;
	}
}
contract C10 {
	function f0() external pure
	
	returns (uint)
	{
		return 1770089307;
	}
	function f1() private pure
	
	returns (uint)
	{
		return 2049075008;
	}
}
contract C11 {
	function f0() public view
	
	returns (uint)
	{
		return 2097897642;
	}
}
library L12 {
	function f0(uint) internal pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) private pure returns (uint)
	{
		return 719885386;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
}
library L13 {
	function f0(uint) public pure returns (uint)
	{
		return 596516649;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1189641421;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1025202362;
	}
}
contract C {
	using L8 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1957747793)
			return 1;
		return 0;
	}
}
