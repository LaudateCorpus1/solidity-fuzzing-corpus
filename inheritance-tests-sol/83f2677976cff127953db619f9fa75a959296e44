
pragma solidity >=0.0;





abstract contract C2BB {

}


interface C2BBBB {

	function f0() external payable returns (uint);
}
interface C2BBB is C2BBBB {

}
contract C2B is C2BB, C2BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 203963320;
	}
}


contract C2BBBBBB {

}


contract C2BBBBBBBB {

}

abstract contract C2BBBBBBBBB is C2BBBBBBBB {

}
contract C2BBBBBBB is C2BBBBBB, C2BBBBBBBB, C2BBBBBBBBB {

}
contract C2BBBBB is C2B, C2BBBBBB, C2BBBBBBB {

}



contract C2BBBBBBBBBBBB {

}

abstract contract C2BBBBBBBBBBBBB is C2BBBBBBBBBBBB {

}
contract C2BBBBBBBBBBB is C2BBBBBBBBBBBB, C2BBBBBBBBBBBBB {

}

contract C2BBBBBBBBBBBBBB is C2BBBBBBBBBBB {

}
contract C2BBBBBBBBBB is C2B, C2BBBBBBBBBBB, C2BBBBBBBBBBBBBB {

}

contract C2BBBBBBBBBBBBBBB is C2B {

}
contract C2 is C2B, C2BBBBB, C2BBBBBBBBBB, C2BBBBBBBBBBBBBBB {

}
library L3 {

	function f0(uint) external pure returns (uint)
	{
		return 1726956429;
	}
}


contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1726956429)
			return 1;
		return 0;
	}
}

