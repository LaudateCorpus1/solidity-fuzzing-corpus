
pragma solidity >=0.0;


library L0 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}








interface C1BBBBBBB {

	function f0() external view returns (uint);
}
interface C1BBBBBB is C1BBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C1BBBBB is C1BBBBBB {

}
interface C1BBBB is C1BBBBB {

}
interface C1BBB is C1BBBB {

	function f0() override
	external view returns (uint);
}
interface C1BB is C1BBB {

}
contract C1B is C1BB {

	function f0() external view
	override
	returns (uint)
	{
		return 2062763411;
	}
}
abstract contract C1 is C1B {

}


contract C {
	function test() public returns (uint)
	{
			C1B tc0 = new C1B();
			if (tc0.f0() != 2062763411)
				return 1;
			return 0;
	}
}

