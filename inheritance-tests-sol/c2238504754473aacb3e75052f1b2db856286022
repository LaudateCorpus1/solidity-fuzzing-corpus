pragma solidity >=0.0;
interface I1 {
	function f0() external payable returns (uint);
}
interface I2 {
	function f0() external payable returns (uint);
}
interface I4 {
	function f0() external view returns (uint);
}
contract C5 {
	function f0() external pure
	
	returns (uint)
	{
		return 678715;
	}
}
interface I6 {
	function f0() external view returns (uint);
	function f1() external pure returns (uint);
}
interface I7B {
	function f0() external payable returns (uint);
}
interface I7 is I7B {
	function f0() override
	external payable returns (uint);
}
interface I8BBB {
}
interface I8BB is I8BBB {
	function f0() external view returns (uint);
}
interface I8B is I8BB {
}
interface I8BBBBBB {
	function f0() external view returns (uint);
}
interface I8BBBBB is I8BBBBBB {
	function f1() external payable returns (uint);
}
interface I8BBBB is I8BB, I8BBBBB {
	function f0() override(I8BB, I8BBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I8 is I8B, I8BBBB {
	function f0() override(I8BB, I8BBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I9BBBBB {
	function f0() external view returns (uint);
}
interface I9BBBB is I9BBBBB {
	function f0() override
	external view returns (uint);
}
interface I9BBB is I9BBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I9BB is I9BBB {
	function f0() override
	external view returns (uint);
}
interface I9B is I9BB {
	function f1() override
	external payable returns (uint);
}
interface I9 is I9B {
	function f0() override
	external view returns (uint);
}
interface C10BB {
	function f0() external payable returns (uint);
}
interface C10B is C10BB {
	function f0() override
	external payable returns (uint);
}
contract C10 is C10B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1810573007;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 2027638938;
	}
}
interface I11BBBBB {
	function f0() external view returns (uint);
}
interface I11BBBB is I11BBBBB {
}
interface I11BBB is I11BBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I11BB is I11BBB {
}
interface I11B is I11BB {
	function f1() override
	external payable returns (uint);
}
interface I11 is I11B {
	function f0() override
	external view returns (uint);
}
interface I12 {
	function f0() external pure returns (uint);
}
contract C13 {
	function f0() public pure
	
	returns (uint)
	{
		return 1573232780;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
