
pragma solidity >=0.0;


library L0 {

	function f0(uint) internal view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public view returns (uint)
	{
		return 846930886;
	}
	function f2(uint) public view returns (uint)
	{
		return 1681692777;
	}
}
library L1 {

	function f0(uint) internal view returns (uint)
	{
		return 1714636915;
	}
}









interface C2BBBBBBBB {

	function f0() external view returns (uint);
}
interface C2BBBBBBB is C2BBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C2BBBBBB is C2BBBBBBB {

}
interface C2BBBBB is C2BBBBBB {

}
interface C2BBBB is C2BBBBB {

}
interface C2BBB is C2BBBB {

	function f1() external payable returns (uint);
}
interface C2BB is C2BBB {

}
contract C2B is C2BB {

	function f0() external view
	override
	returns (uint)
	{
		return 1098894339;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 2136927794;
	}
}
abstract contract C2 is C2B {

}
library L3 {

	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) public view returns (uint)
	{
		return 424238335;
	}
}



interface C4BB {

	function f0() external view returns (uint);
}
interface C4B is C4BB {

	function f0() override
	external view returns (uint);
}
contract C4 is C4B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1402304087;
	}
}
library L5 {

	function f0(uint) public view returns (uint)
	{
		return 719885386;
	}
}




interface C6BBB {

	function f0() external view returns (uint);
}
interface C6BB is C6BBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface C6B is C6BB {

	function f0() override
	external view returns (uint);
}
contract C6 is C6B {

	function f0() external view
	override
	returns (uint)
	{
		return 890442452;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1105724094;
	}
}
library L7 {

	function f0(uint) public view returns (uint)
	{
		return 1649760492;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 596516649;
	}
}




interface C9BBB {

	function f0() external payable returns (uint);
}
interface C9BB is C9BBB {

	function f0() override
	external payable returns (uint);
}
interface C9B is C9BB {

}



interface C9BBBBBB {

	function f0() external payable returns (uint);
}
interface C9BBBBB is C9BBBBBB {

	function f0() override
	external payable returns (uint);
}
interface C9BBBB is C9BB, C9BBBBB {

	function f0() override(C9BB, C9BBBBB)
	external payable returns (uint);
}
contract C9 is C9B, C9BBBB {

	function f0() external payable
	override(C9BBBB, C9BB)
	returns (uint)
	{
		return 1057382352;
	}
}
library L10 {

	function f0(uint) private pure returns (uint)
	{
		return 1025202362;
	}
}
library L11 {

	function f0(uint) private pure returns (uint)
	{
		return 1350490027;
	}
}



interface I13BB {

	function f0() external payable returns (uint);
}
interface I13B is I13BB {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I13 is I13B {

	function f0() override
	external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C2B tc0 = new C2B();
			if (tc0.f0() != 1098894339)
				return 1;
			if (tc0.f1() != 2136927794)
				return 2;
			C4 tc1 = new C4();
			if (tc1.f0() != 1402304087)
				return 3;
			C6 tc2 = new C6();
			if (tc2.f0() != 890442452)
				return 4;
			if (tc2.f1() != 1105724094)
				return 5;
			C9 tc3 = new C9();
			if (tc3.f0() != 1057382352)
				return 6;
			return 0;
	}
}

