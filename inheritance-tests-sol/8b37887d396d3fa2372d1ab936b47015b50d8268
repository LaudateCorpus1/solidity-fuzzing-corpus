pragma solidity >=0.0;
interface I0BBBBB {
	function f0() external view returns (uint);
}
interface I0BBBBBBBBB {
	function f0() external view returns (uint);
}
interface I0BBBBBBBB is I0BBBBBBBBB {
}
interface I0BBBBBBB is I0BBBBBBBB {
}
interface I0BBBBBB is I0BBBBB, I0BBBBBBB {
	function f0() override(I0BBBBB, I0BBBBBBBBB)
	external view returns (uint);
}
interface I0BBBB is I0BBBBB, I0BBBBBB {
	function f0() override(I0BBBBB, I0BBBBBB)
	external view returns (uint);
}
interface I0BBB is I0BBBB {
	function f0() override
	external view returns (uint);
}
interface I0BB is I0BBB {
}
interface I0B is I0BB {
}
interface I0BBBBBBBBBB is I0B {
	function f1() external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBB {
}
interface I0BBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBB {
}
interface I0BBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBB {
}
interface I0BBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBB {
}
interface I0BBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I0BBBBBBBBBBBBB is I0BBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I0BBBBBBBBBBBB is I0BBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f3() external view returns (uint);
}
interface I0BBBBBBBBBBB is I0BB, I0BBBBBBBBBBBB {
	function f0() override(I0BBB, I0BBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBBBB {
}
interface I0BBBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBB is I0BB, I0BBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I0BBB, I0BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I0 is I0B, I0BBBBBBBBBB, I0BBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I0BBB, I0BBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I0BBBBBBBBBB, I0BBBBBBBBBBB)
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
