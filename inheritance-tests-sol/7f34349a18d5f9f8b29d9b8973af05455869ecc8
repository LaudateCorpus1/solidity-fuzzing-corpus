
pragma solidity >=0.0;





interface C0BB {

	function f0() external view returns (uint);
}
interface C0B is C0BB {

}
contract C0 is C0B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1914720637;
	}
}


interface C1B {

	function f0() external payable returns (uint);
}
contract C1 is C1B {

	function f0() external payable
	override
	returns (uint)
	{
		return 407355683;
	}
}
library L2 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public view returns (uint)
	{
		return 846930886;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1914720637)
				return 1;
			C1 tc1 = new C1();
			if (tc1.f0() != 407355683)
				return 2;
			return 0;
	}
}

