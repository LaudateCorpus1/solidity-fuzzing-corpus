pragma solidity >=0.0;
library L0 {
	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}
interface I1BBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I1BB is I1BBB {
	function f0() override
	external payable returns (uint);
}
interface I1B is I1BB {
}
interface I1BBBBB {
	function f0() external payable returns (uint);
}
interface I1BBBB is I1B, I1BBBBB {
	function f0() override(I1BB, I1BBBBB)
	external payable returns (uint);
}
interface I1 is I1B, I1BBBB {
	function f0() override(I1BB, I1BBBB)
	external payable returns (uint);
}
interface I2B {
	function f0() external payable returns (uint);
}
interface I2 is I2B {
	function f0() override
	external payable returns (uint);
}
interface I3 {
	function f0() external payable returns (uint);
}
interface I4B {
	function f0() external payable returns (uint);
}
interface I4 is I4B {
	function f0() override
	external payable returns (uint);
}
interface I5B {
	function f0() external payable returns (uint);
}
interface I5BB is I5B {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I5 is I5B, I5BB {
	function f0() override(I5B, I5BB)
	external payable returns (uint);
}
contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}
