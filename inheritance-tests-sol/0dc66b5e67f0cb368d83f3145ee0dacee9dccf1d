pragma solidity >=0.0;
interface I0B {
	function f0() external payable returns (uint);
}
interface I0 is I0B {
}
interface I1B {
	function f0() external payable returns (uint);
}
interface I1 is I1B {
}
interface C2BBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C2BBB is C2BBBB {
}
interface C2BB is C2BBB {
	function f0() override
	external payable returns (uint);
}
interface C2B is C2BB {
	function f0() override
	external payable returns (uint);
}
contract C2 is C2B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1199337955;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1426772249;
	}
}
contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 1199337955)
				return 1;
			if (tc0.f1() != 1426772249)
				return 2;
			return 0;
	}
}
