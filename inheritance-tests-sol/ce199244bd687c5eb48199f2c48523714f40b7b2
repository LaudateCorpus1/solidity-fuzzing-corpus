pragma solidity >=0.0;
interface I0B {
	function f0() external view returns (uint);
}
interface I0BBBBB {
	function f0() external view returns (uint);
}
interface I0BBBB is I0BBBBB {
}
interface I0BBB is I0BBBB {
	function f0() override
	external view returns (uint);
}
interface I0BB is I0B, I0BBB {
	function f0() override(I0B, I0BBB)
	external view returns (uint);
}
interface I0 is I0B, I0BB {
	function f0() override(I0B, I0BB)
	external view returns (uint);
}
interface I1B {
	function f0() external payable returns (uint);
}
interface I1BBBBB {
	function f0() external payable returns (uint);
}
interface I1BBBB is I1BBBBB {
}
interface I1BBB is I1BBBB {
}
interface I1BB is I1B, I1BBB {
	function f0() override(I1B, I1BBBBB)
	external payable returns (uint);
}
interface I1 is I1B, I1BB {
	function f0() override(I1B, I1BB)
	external payable returns (uint);
}
interface I2BB {
	function f0() external payable returns (uint);
}
interface I2B is I2BB {
	function f1() external view returns (uint);
}
interface I2 is I2B {
}
interface I3BBBBBB {
}
interface I3BBBBB is I3BBBBBB {
}
interface I3BBBB is I3BBBBB {
}
interface I3BBBBBBBBBB {
}
interface I3BBBBBBBBB is I3BBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I3BBBBBBBB is I3BBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I3BBBBBBB is I3BBBBB, I3BBBBBBBB {
}
interface I3BBB is I3BBBB, I3BBBBBBB {
	function f1() external payable returns (uint);
}
interface I3BB is I3BBB {
	function f2() external view returns (uint);
}
interface I3BBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBB is I3BBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I3BBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I3BBBBBBBBBBBB is I3BBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I3BBBBBBBBBBB is I3BBB, I3BBBBBBBBBBBB {
	function f0() override(I3BBBBBBBB, I3BBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I3BBB, I3BBBBBBBBBBBB)
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I3B is I3BB, I3BBBBBBBBBBB {
	function f0() override(I3BBBBBBBB, I3BBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I3BBB, I3BBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I3BB, I3BBBBBBBBBBB)
	external view returns (uint);
}
interface I3BBBBBBBBBBBBBBBBBBBB is I3BB {
	function f3() external payable returns (uint);
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I3BBBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I3BBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I3BBBBBBBBBBBBBBBBBBBBBBBBB is I3B, I3BBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I3B, I3BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I3 is I3B, I3BBBBBBBBBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I3B, I3BBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I3B, I3BBB, I3BBBBBBBBBBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I3B, I3BB)
	external view returns (uint);
	function f3() override
	external payable returns (uint);
	function f4() external payable returns (uint);
}
interface I4B {
	function f0() external view returns (uint);
}
interface I4 is I4B {
}
interface I5 {
	function f0() external payable returns (uint);
}
interface I6B {
	function f0() external view returns (uint);
}
interface I6BBBBB {
	function f0() external view returns (uint);
}
interface I6BBBB is I6BBBBB {
	function f0() override
	external view returns (uint);
}
interface I6BBBBBB is I6BBBBB {
	function f1() external payable returns (uint);
}
interface I6BBB is I6BBBB, I6BBBBBB {
	function f0() override(I6BBBB, I6BBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I6BB is I6B, I6BBB {
	function f0() override(I6B, I6BBB)
	external view returns (uint);
}
interface I6 is I6B, I6BB {
	function f0() override(I6B, I6BB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I8 {
	function f0() external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
