
pragma solidity >=0.0;




interface I0B {

	function f0() external view returns (uint);
}
interface I0 is I0B {

}


interface C1B {

	function f0() external view returns (uint);
}
contract C1 is C1B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1291394886;
	}
}


interface I2B {

	function f0() external view returns (uint);
}
interface I2 is I2B {

	function f1() external view returns (uint);
}


interface C3B {

	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
contract C3 is C3B {

	function f0() external view
	override
	returns (uint)
	{
		return 407355683;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 854716505;
	}
}


interface C4B {

	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
contract C4 is C4B {

	function f0() external view
	override
	returns (uint)
	{
		return 1596680831;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1203428207;
	}
}



interface C5BB {

	function f0() external view returns (uint);
}
interface C5B is C5BB {

}


interface C5BBBB {

	function f0() external view returns (uint);
}
interface C5BBB is C5BB, C5BBBB {

	function f0() override(C5BB, C5BBBB)
	external view returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
contract C5 is C5B, C5BBB {

	function f0() external view
	override(C5BBB, C5BB)
	returns (uint)
	{
		return 1882556969;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1559527823;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 638022372;
	}
}


interface C6B {

	function f0() external view returns (uint);
}
contract C6 is C6B {

	function f0() external view
	override
	returns (uint)
	{
		return 1931656580;
	}
}



interface C7BB {

	function f0() external view returns (uint);
}
interface C7B is C7BB {

}


interface C7BBBB {

	function f0() external view returns (uint);
}
interface C7BBB is C7B, C7BBBB {

	function f0() override(C7BB, C7BBBB)
	external view returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
contract C7 is C7B, C7BBB {

	function f0() virtual external view
	override(C7BBB, C7BB)
	returns (uint)
	{
		return 1842513780;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 631416347;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 890442452;
	}
}


interface I8B {

	function f0() external view returns (uint);
}
interface I8 is I8B {

	function f1() external view returns (uint);
}


interface I9B {

	function f0() external view returns (uint);
}
interface I9 is I9B {

	function f0() override
	external view returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1291394886)
				return 1;
			C3 tc1 = new C3();
			if (tc1.f0() != 407355683)
				return 2;
			if (tc1.f1() != 854716505)
				return 3;
			C4 tc2 = new C4();
			if (tc2.f0() != 1596680831)
				return 4;
			if (tc2.f1() != 1203428207)
				return 5;
			C5 tc3 = new C5();
			if (tc3.f0() != 1882556969)
				return 6;
			if (tc3.f1() != 1559527823)
				return 7;
			if (tc3.f2() != 638022372)
				return 8;
			C6 tc4 = new C6();
			if (tc4.f0() != 1931656580)
				return 9;
			C7 tc5 = new C7();
			if (tc5.f0() != 1842513780)
				return 10;
			if (tc5.f1() != 631416347)
				return 11;
			if (tc5.f2() != 890442452)
				return 12;
			return 0;
	}
}

