
pragma solidity >=0.0;





contract C0BB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1073765959;
	}
}
contract C0B is C0BB {

}
contract C0 is C0B {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1277419665;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1626692904;
	}
}


interface I1B {

	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface I1 is I1B {

	function f0() override
	external view returns (uint);
}


contract C2B {

	function f0() public view
	
	returns (uint)
	{
		return 1872082239;
	}
}
contract C2 is C2B {

}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1277419665)
				return 1;
			if (tc0.f1() != 1626692904)
				return 2;
			C0B tc1 = new C0B();
			if (tc1.f0() != 1073765959)
				return 3;
			C0BB tc2 = new C0BB();
			if (tc2.f0() != 1073765959)
				return 4;
			C2 tc3 = new C2();
			if (tc3.f0() != 1872082239)
				return 5;
			C2B tc4 = new C2B();
			if (tc4.f0() != 1872082239)
				return 6;
			return 0;
	}
}

