pragma solidity >=0.0;
library L0 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
}
interface C1BBB {
	function f0() external payable returns (uint);
}
interface C1BB is C1BBB {
	function f0() override
	external payable returns (uint);
}
contract C1B is C1BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1116168985;
	}
}
contract C1 is C1B {
	function f0() external payable
	override
	returns (uint)
	{
		return 317172907;
	}
}
library L2 {
	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
library L3 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
library L5 {
	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
interface C7BBBBBB {
	function f0() external view returns (uint);
}
interface C7BBBBB is C7BBBBBB {
}
interface C7BBBBBBB is C7BBBBBB {
	function f1() external view returns (uint);
}
interface C7BBBB is C7BBBBB, C7BBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
contract C7BBB is C7BBBB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 562351922;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 447122901;
	}
}
contract C7BB is C7BBB {
}
contract C7B is C7BB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 959124913;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 552744463;
	}
}
contract C7 is C7B {
	function f1() external view
	override
	returns (uint)
	{
		return 1488084345;
	}
}
library L8 {
	function f0(uint) public view returns (uint)
	{
		return 719885386;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1649760492;
	}
}
library L9 {
	function f0(uint) public pure returns (uint)
	{
		return 596516649;
	}
}
interface C10BBB {
	function f0() external payable returns (uint);
}
interface C10BB is C10BBB {
}
contract C10B is C10BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1849502422;
	}
}
contract C10 is C10B {
}
contract C {
	using L8 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 719885386)
			return 1;
		return 0;
	}
}
