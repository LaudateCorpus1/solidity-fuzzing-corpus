
pragma solidity >=0.0;






interface C2BBB {

	function f0() external payable returns (uint);
}
interface C2BB is C2BBB {

}
interface C2B is C2BB {

}
contract C2 is C2B {

	function f0() external payable
	override
	returns (uint)
	{
		return 399257814;
	}
}
library L3 {

	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}


interface C6B {

	function f0() external payable returns (uint);
}
contract C6 is C6B {

	function f0() external payable
	override
	returns (uint)
	{
		return 1379193482;
	}
}


interface I9B {

	function f0() external view returns (uint);
}
interface I9 is I9B {

}
library L10 {

	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}


interface C12B {

}
contract C12 is C12B {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1760838767;
	}
}


contract C {
	using L10 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1714636915)
			return 1;
		return 0;
	}
}

