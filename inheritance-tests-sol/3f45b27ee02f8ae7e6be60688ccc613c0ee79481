
pragma solidity >=0.0;





interface I0BB {

	function f0() external view returns (uint);
}
interface I0B is I0BB {

	function f1() external payable returns (uint);
}
interface I0 is I0B {

	function f0() override
	external view returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}





interface C1BBBB {

	function f0() external view returns (uint);
}
interface C1BBB is C1BBBB {

}
interface C1BB is C1BBB {

}
interface C1B is C1BB {

}
contract C1 is C1B {

	function f0() external view
	override
	returns (uint)
	{
		return 1203428207;
	}
}

contract C2 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1250328747;
	}
}





interface C3BBBB {

	function f0() external payable returns (uint);
}
interface C3BBB is C3BBBB {

}
interface C3BB is C3BBB {

	function f1() external payable returns (uint);
}
interface C3B is C3BB {

	function f0() override
	external payable returns (uint);
}
contract C3 is C3B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 914937185;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1402304087;
	}
}



abstract contract C4BB {

}
contract C4B is C4BB {

}



interface C4BBBBB {

	function f0() external payable returns (uint);
}
interface C4BBBB is C4BBBBB {

	function f0() override
	external payable returns (uint);
}
interface C4BBB is C4BBBB {

	function f0() override
	external payable returns (uint);
}
contract C4 is C4B, C4BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 2010567813;
	}
}

contract C5 {

	function f0() public pure
	
	returns (uint)
	{
		return 890442452;
	}
}




interface C6BBB {

	function f0() external view returns (uint);
}
interface C6BB is C6BBB {

}
interface C6B is C6BB {

	function f0() override
	external view returns (uint);
}
contract C6 is C6B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1168816941;
	}
}
library L7 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}





interface C8BBBB {

	function f0() external view returns (uint);
}
interface C8BBB is C8BBBB {

}
interface C8BB is C8BBB {

	function f0() override
	external view returns (uint);
}
abstract contract C8B is C8BB {

	function f0() virtual external view
	override
	returns (uint);
}
contract C8 is C8B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 480194461;
	}
	function f1() public view
	
	returns (uint)
	{
		return 1675824860;
	}
}
library L9 {

	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1203428207)
				return 1;
			C2 tc1 = new C2();
			if (tc1.f0() != 1250328747)
				return 2;
			C3 tc2 = new C3();
			if (tc2.f0() != 914937185)
				return 3;
			if (tc2.f1() != 1402304087)
				return 4;
			C4 tc3 = new C4();
			if (tc3.f0() != 2010567813)
				return 5;
			C5 tc4 = new C5();
			if (tc4.f0() != 890442452)
				return 6;
			C6 tc5 = new C6();
			if (tc5.f0() != 1168816941)
				return 7;
			C8 tc6 = new C8();
			if (tc6.f0() != 480194461)
				return 8;
			if (tc6.f1() != 1675824860)
				return 9;
			return 0;
	}
}

