
pragma solidity >=0.0;


library L0 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}





interface C1BBBB {

	function f0() external payable returns (uint);
}
interface C1BBB is C1BBBB {

}
interface C1BB is C1BBB {

	function f0() override
	external payable returns (uint);
}
interface C1B is C1BB {

}
contract C1 is C1B {

	function f0() external payable
	override
	returns (uint)
	{
		return 854716505;
	}
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 854716505)
				return 1;
			return 0;
	}
}

