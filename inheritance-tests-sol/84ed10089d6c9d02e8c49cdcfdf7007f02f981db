
pragma solidity >=0.0;





interface I0BB {

	function f0() external view returns (uint);
}
interface I0B is I0BB {

	function f1() external payable returns (uint);
}


interface I0BBBB {

	function f0() external view returns (uint);
}
interface I0BBB is I0BB, I0BBBB {

	function f0() override(I0BB, I0BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I0 is I0B, I0BBB {

	function f0() override(I0BB, I0BBB)
	external view returns (uint);
	function f1() override(I0B, I0BBB)
	external payable returns (uint);
}


interface I1B {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I1 is I1B {

}


interface I2B {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I2 is I2B {

	function f0() override
	external payable returns (uint);
}



interface I3BB {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I3B is I3BB {

	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I3 is I3B {

}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

