pragma solidity >=0.0;
interface I0BBB {
	function f0() external payable returns (uint);
}
interface I0BB is I0BBB {
}
interface I0B is I0BB {
	function f0() override
	external payable returns (uint);
}
interface I0 is I0B {
}
contract C1B {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 407355683;
	}
}
abstract contract C1 is C1B {
}
interface I2 {
	function f0() external payable returns (uint);
}
contract C4BBB {
	function f0() external pure
	
	returns (uint)
	{
		return 564586691;
	}
}
contract C4BB is C4BBB {
	function f1() public view
	
	returns (uint)
	{
		return 1596680831;
	}
}
abstract contract C4B is C4BB {
}
contract C4 is C4B {
}
library L5 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
interface C6BBBB {
	function f0() external payable returns (uint);
}
interface C6BBB is C6BBBB {
}
contract C6BB is C6BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1098894339;
	}
}
contract C6B is C6BB {
}
contract C6 is C6B {
}
contract C8BBB {
	function f0() external pure
	
	returns (uint)
	{
		return 2075782095;
	}
}
contract C8BB is C8BBB {
}
contract C8B is C8BB {
}
contract C8 is C8B {
}
library L9 {
	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1681692777;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1714636915;
	}
}
interface C10BB {
	function f0() external view returns (uint);
}
interface C10B is C10BB {
}
contract C10 is C10B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 353718330;
	}
}
library L11 {
	function f0(uint) public pure returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) private view returns (uint)
	{
		return 424238335;
	}
	function f2(uint) internal view returns (uint)
	{
		return 719885386;
	}
}
abstract contract C12B {
}
interface C12BBBBBB {
	function f0() external view returns (uint);
}
interface C12BBBBB is C12BBBBBB {
}
interface C12BBBB is C12BBBBB {
}
interface C12BBB is C12BBBB {
}
contract C12BB is C12B, C12BBB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1696049367;
	}
}
contract C12 is C12B, C12BB {
}
contract C13BBB {
	function f0() external pure
	
	returns (uint)
	{
		return 1272185027;
	}
}
contract C13BB is C13BBB {
	function f1() public view
	
	returns (uint)
	{
		return 201068705;
	}
}
abstract contract C13B is C13BB {
}
contract C13 is C13B {
}
contract C {
	function test() public returns (uint)
	{
			C10 tc0 = new C10();
			if (tc0.f0() != 353718330)
				return 1;
			C12 tc1 = new C12();
			if (tc1.f0() != 1696049367)
				return 2;
			C12BB tc2 = new C12BB();
			if (tc2.f0() != 1696049367)
				return 3;
			C13 tc3 = new C13();
			if (tc3.f0() != 1272185027)
				return 4;
			if (tc3.f1() != 201068705)
				return 5;
			C13BB tc4 = new C13BB();
			if (tc4.f0() != 1272185027)
				return 6;
			if (tc4.f1() != 201068705)
				return 7;
			C13BBB tc5 = new C13BBB();
			if (tc5.f0() != 1272185027)
				return 8;
			C1B tc6 = new C1B();
			if (tc6.f0() != 407355683)
				return 9;
			C4 tc7 = new C4();
			if (tc7.f0() != 564586691)
				return 10;
			if (tc7.f1() != 1596680831)
				return 11;
			C4BB tc8 = new C4BB();
			if (tc8.f0() != 564586691)
				return 12;
			if (tc8.f1() != 1596680831)
				return 13;
			C4BBB tc9 = new C4BBB();
			if (tc9.f0() != 564586691)
				return 14;
			C6 tc10 = new C6();
			if (tc10.f0() != 1098894339)
				return 15;
			C6B tc11 = new C6B();
			if (tc11.f0() != 1098894339)
				return 16;
			C6BB tc12 = new C6BB();
			if (tc12.f0() != 1098894339)
				return 17;
			C8 tc13 = new C8();
			if (tc13.f0() != 2075782095)
				return 18;
			C8B tc14 = new C8B();
			if (tc14.f0() != 2075782095)
				return 19;
			return 0;
	}
}
