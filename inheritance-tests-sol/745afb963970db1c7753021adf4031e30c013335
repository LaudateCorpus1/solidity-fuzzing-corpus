
pragma solidity >=0.0;









interface I0BBBBBB {

	function f0() external pure returns (uint);
}
interface I0BBBBB is I0BBBBBB {

}
interface I0BBBB is I0BBBBB {

	function f0() override
	external pure returns (uint);
}
interface I0BBB is I0BBBB {

}
interface I0BB is I0BBB {

}
interface I0B is I0BB {

}






interface I0BBBBBBBBBBBB {

	function f0() external pure returns (uint);
}
interface I0BBBBBBBBBBB is I0BBBBBBBBBBBB {

}
interface I0BBBBBBBBBB is I0BBBBBBBBBBB {

}
interface I0BBBBBBBBB is I0BBBBBBBBBB {

}
interface I0BBBBBBBB is I0BBBBBBBBB {

}
interface I0BBBBBBB is I0BB, I0BBBBBBBB {

	function f0() override(I0BBBB, I0BBBBBBBBBBBB)
	external pure returns (uint);
}
interface I0 is I0B, I0BBBBBBB {

	function f0() override(I0BBBB, I0BBBBBBB)
	external pure returns (uint);
}


interface I1B {

	function f0() external payable returns (uint);
}
interface I1 is I1B {

}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

