
pragma solidity >=0.0;







interface C0BBBB {

	function f0() external payable returns (uint);
}
interface C0BBB is C0BBBB {

	function f1() external view returns (uint);
}
interface C0BB is C0BBB {

	function f0() override
	external payable returns (uint);
}
interface C0B is C0BB {

}
contract C0 is C0B {

	function f0() external payable
	override
	returns (uint)
	{
		return 1596680831;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1203428207;
	}
}


interface I1B {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I1 is I1B {

}


interface I2B {

	function f0() external view returns (uint);
}
interface I2 is I2B {

}
library L3 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
library L4 {

	function f0(uint) internal view returns (uint)
	{
		return 1681692777;
	}
}
library L5 {

	function f0(uint) public view returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
	function f2(uint) private pure returns (uint)
	{
		return 424238335;
	}
}


interface I6B {

}
interface I6 is I6B {

}
library L7 {

	function f0(uint) private pure returns (uint)
	{
		return 719885386;
	}
}
library L8 {

	function f0(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
}








interface C9BBBBBBB {

	function f0() external payable returns (uint);
}
interface C9BBBBBB is C9BBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface C9BBBBB is C9BBBBBB {

}

interface C9BBBBBBBB is C9BBBBBB {

	function f1() external view returns (uint);
}
interface C9BBBB is C9BBBBB, C9BBBBBBBB {

}
interface C9BBB is C9BBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
contract C9BB is C9BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 2010567813;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 662405787;
	}
}
contract C9B is C9BB {

	function f1() external view
	override
	returns (uint)
	{
		return 1479919876;
	}
}
abstract contract C9 is C9B {

}
library L10 {

	function f0(uint) internal view returns (uint)
	{
		return 1189641421;
	}
}



interface C11BB {

	function f0() external view returns (uint);
}
interface C11B is C11BB {

}
contract C11 is C11B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 928270262;
	}
}
library L12 {

	function f0(uint) internal pure returns (uint)
	{
		return 1025202362;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1350490027;
	}
}



interface C13BB {

	function f0() external view returns (uint);
}
interface C13B is C13BB {

}
contract C13 is C13B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1659675143;
	}
}
library L14 {

	function f0(uint) internal view returns (uint)
	{
		return 783368690;
	}
}
library L15 {

	function f0(uint) internal pure returns (uint)
	{
		return 1102520059;
	}
}


interface I16B {

}
interface I16 is I16B {

}
library L17 {

	function f0(uint) private pure returns (uint)
	{
		return 2044897763;
	}
	function f1(uint) public view returns (uint)
	{
		return 1967513926;
	}
}
library L18 {

	function f0(uint) internal pure returns (uint)
	{
		return 1365180540;
	}
	function f1(uint) public view returns (uint)
	{
		return 1540383426;
	}
}
library L19 {

	function f0(uint) internal pure returns (uint)
	{
		return 304089172;
	}
}


contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1714636915)
			return 1;
		return 0;
	}
}

