
pragma solidity >=0.0;





interface C0BB {

	function f0() external view returns (uint);
}
interface C0B is C0BB {

	function f0() override
	external view returns (uint);
}
contract C0 is C0B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 787147398;
	}
	function f1() private pure
	
	returns (uint)
	{
		return 963882487;
	}
}
library L1 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}


contract C3B {

}
contract C3 is C3B {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1669200614;
	}
}
library L4 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public view returns (uint)
	{
		return 1681692777;
	}
}


abstract contract C5B {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 56550718;
	}
}
contract C5 is C5B {

}











contract C6BBBBBBBBBB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 112448130;
	}
}
contract C6BBBBBBBBB is C6BBBBBBBBBB {

}
contract C6BBBBBBBB is C6BBBBBBBBB {

}
contract C6BBBBBBB is C6BBBBBBBB {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 908044934;
	}
}
contract C6BBBBBB is C6BBBBBBB {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 527206317;
	}
}
contract C6BBBBB is C6BBBBBB {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1250989170;
	}
}
abstract contract C6BBBB is C6BBBBB {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1011623293;
	}
}
contract C6BBB is C6BBBB {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 409855449;
	}
}
contract C6BB is C6BBB {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 642445233;
	}
}
contract C6B is C6BB {

}
contract C6 is C6B {

}


contract C {
	using L4 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}

