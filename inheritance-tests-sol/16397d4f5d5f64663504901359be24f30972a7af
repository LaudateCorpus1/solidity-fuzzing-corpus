pragma solidity >=0.0;
interface C0BBBB {
	function f0() external payable returns (uint);
}
interface C0BBB is C0BBBB {
}
contract C0BB is C0BBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1914720637;
	}
	function f1() external pure
	
	returns (uint)
	{
		return 2078669041;
	}
	function f2() external pure
	
	returns (uint)
	{
		return 407355683;
	}
}
contract C0B is C0BB {
}
contract C0BBBBB is C0BB {
}
contract C0 is C0B, C0BBBBB {
}
library L2 {
	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
}
interface I3BB {
	function f0() external payable returns (uint);
}
interface I3B is I3BB {
	function f1() external view returns (uint);
}
interface I3BBB is I3BB {
}
interface I3 is I3B, I3BBB {
	function f0() override
	external payable returns (uint);
}
library L4 {
	function f0(uint) public view returns (uint)
	{
		return 1714636915;
	}
}
library L5 {
	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1914720637)
				return 1;
			if (tc0.f1() != 2078669041)
				return 2;
			if (tc0.f2() != 407355683)
				return 3;
			C0B tc1 = new C0B();
			if (tc1.f0() != 1914720637)
				return 4;
			if (tc1.f1() != 2078669041)
				return 5;
			if (tc1.f2() != 407355683)
				return 6;
			C0BB tc2 = new C0BB();
			if (tc2.f0() != 1914720637)
				return 7;
			if (tc2.f1() != 2078669041)
				return 8;
			if (tc2.f2() != 407355683)
				return 9;
			C0BBBBB tc3 = new C0BBBBB();
			if (tc3.f0() != 1914720637)
				return 10;
			if (tc3.f1() != 2078669041)
				return 11;
			if (tc3.f2() != 407355683)
				return 12;
			return 0;
	}
}
