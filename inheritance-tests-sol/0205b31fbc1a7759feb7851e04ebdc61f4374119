pragma solidity >=0.0;
interface C0BBBBB {
	function f0() external payable returns (uint);
}
interface C0BBBB is C0BBBBB {
}
interface C0BBB is C0BBBB {
	function f0() override
	external payable returns (uint);
}
interface C0BB is C0BBB {
}
interface C0B is C0BB {
}
contract C0 is C0B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1596680831;
	}
}
contract C1B {
}
contract C1 is C1B {
	function f0() public view
	
	returns (uint)
	{
		return 192302371;
	}
}
library L2 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
contract C3 {
	function f0() public view
	
	returns (uint)
	{
		return 1203428207;
	}
}
interface I4B {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I4BBBBB {
	function f0() external payable returns (uint);
}
interface I4BBBB is I4BBBBB {
}
interface I4BBB is I4BBBB {
}
interface I4BB is I4B, I4BBB {
	function f0() override(I4B, I4BBBBB)
	external payable returns (uint);
}
interface I4 is I4B, I4BB {
	function f0() override(I4B, I4BB)
	external payable returns (uint);
}
contract C6 {
	function f0() public view
	
	returns (uint)
	{
		return 1402304087;
	}
}
interface C7BBB {
	function f0() external payable returns (uint);
}
interface C7BB is C7BBB {
}
contract C7B is C7BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1842513780;
	}
}
abstract contract C7 is C7B {
}
contract C8 {
	function f0() public view
	
	returns (uint)
	{
		return 2010567813;
	}
}
contract C9B {
}
contract C9 is C9B {
	function f0() public view
	
	returns (uint)
	{
		return 890442452;
	}
}
interface I10B {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I10BBBB {
}
interface I10BBB is I10BBBB {
}
interface I10BBBBBB {
	function f0() external payable returns (uint);
}
interface I10BBBBB is I10BBBB, I10BBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I10BB is I10B, I10BBB, I10BBBBB {
	function f0() override(I10B, I10BBBBB)
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I10 is I10B, I10BB {
	function f0() override(I10B, I10BB)
	external payable returns (uint);
}
contract C11B {
}
contract C11 is C11B {
	function f0() public view
	
	returns (uint)
	{
		return 201068705;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1596680831)
				return 1;
			C1 tc1 = new C1();
			if (tc1.f0() != 192302371)
				return 2;
			C11 tc2 = new C11();
			if (tc2.f0() != 201068705)
				return 3;
			C3 tc3 = new C3();
			if (tc3.f0() != 1203428207)
				return 4;
			C6 tc4 = new C6();
			if (tc4.f0() != 1402304087)
				return 5;
			C7B tc5 = new C7B();
			if (tc5.f0() != 1842513780)
				return 6;
			C8 tc6 = new C8();
			if (tc6.f0() != 2010567813)
				return 7;
			C9 tc7 = new C9();
			if (tc7.f0() != 890442452)
				return 8;
			return 0;
	}
}
