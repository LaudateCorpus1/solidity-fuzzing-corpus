pragma solidity >=0.0;
interface I0BBBBBB {
	function f0() external pure returns (uint);
}
interface I0BBBBB is I0BBBBBB {
}
interface I0BBBB is I0BBBBB {
	function f0() override
	external pure returns (uint);
}
interface I0BBB is I0BBBB {
}
interface I0BB is I0BBB {
}
interface I0B is I0BB {
}
interface I0BBBBBBB is I0BB {
	function f1() external view returns (uint);
}
interface I0 is I0B, I0BBBBBBB {
}
contract C1 {
	function f0() public pure
	
	returns (uint)
	{
		return 1271135913;
	}
	function f1() public view
	
	returns (uint)
	{
		return 1098894339;
	}
}
interface I2BBBBBB {
	function f0() external pure returns (uint);
}
interface I2BBBBB is I2BBBBBB {
}
interface I2BBBB is I2BBBBB {
}
interface I2BBB is I2BBBB {
	function f0() override
	external pure returns (uint);
}
interface I2BB is I2BBB {
	function f0() override
	external pure returns (uint);
}
interface I2B is I2BB {
}
interface I2BBBBBBB is I2B {
	function f0() override
	external pure returns (uint);
	function f1() external view returns (uint);
}
interface I2 is I2B, I2BBBBBBB {
	function f0() override(I2BB, I2BBBBBBB)
	external pure returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1271135913)
				return 1;
			if (tc0.f1() != 1098894339)
				return 2;
			return 0;
	}
}
