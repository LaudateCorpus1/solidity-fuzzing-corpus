
pragma solidity >=0.0;







interface C3BBBB {

	function f0() external view returns (uint);
}
interface C3BBB is C3BBBB {

	function f0() override
	external view returns (uint);
}
interface C3BB is C3BBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface C3B is C3BB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}








interface C3BBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface C3BBBBBBBBBBB is C3BBBBBBBBBBBB {

}
interface C3BBBBBBBBBB is C3BBBBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C3BBBBBBBBB is C3BBBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C3BBBBBBBB is C3BBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C3BBBBBBB is C3BBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface C3BBBBBB is C3BBBBBBB {

}
contract C3BBBBB is C3BB, C3BBBBBB {

	function f0() virtual external view
	override(C3BBBBBBB, C3BB)
	returns (uint)
	{
		return 141111539;
	}
	function f1() virtual external payable
	override(C3BBBBBBB, C3BB)
	returns (uint)
	{
		return 1639768793;
	}
}
contract C3 is C3B, C3BBBBB {

	function f0() virtual external view
	override(C3BBBBB, C3B)
	returns (uint)
	{
		return 1693822553;
	}
	function f1() virtual external payable
	override(C3BBBBB, C3B)
	returns (uint)
	{
		return 206299722;
	}
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

