pragma solidity >=0.0;
interface C0BBBBBBBBB {
	function f0() external pure returns (uint);
}
interface C0BBBBBBBB is C0BBBBBBBBB {
	function f1() external view returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB {
	function f0() override
	external pure returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C0BBBBBB is C0BBBBBBB {
}
interface C0BBBBBBBBBB is C0BBBBBBB {
	function f4() external view returns (uint);
}
interface C0BBBBB is C0BBBBBB, C0BBBBBBBBBB {
	function f2() override
	external view returns (uint);
}
contract C0BBBB is C0BBBBB {
	function f0() external pure
	override
	returns (uint)
	{
		return 1931656580;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1936030137;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 353718330;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1947433875;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 2010567813;
	}
}
contract C0BBB is C0BBBB {
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1696049367;
	}
	function f5() internal pure
	
	returns (uint)
	{
		return 1479919876;
	}
}
contract C0BB is C0BBB {
}
contract C0B is C0BB {
	function f2() external view
	override
	returns (uint)
	{
		return 1814467857;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 153892771;
	}
}
contract C0 is C0B {
}
contract C1B {
}
interface C1BBBBBBBBBB {
	function f0() external pure returns (uint);
}
interface C1BBBBBBBBB is C1BBBBBBBBBB {
	function f1() external view returns (uint);
}
interface C1BBBBBBBB is C1BBBBBBBBB {
	function f1() override
	external view returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB {
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
interface C1BBBBBBBBBBB is C1BBBBBBBB {
	function f2() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface C1BBBBBB is C1BBBBBBB, C1BBBBBBBBBBB {
	function f1() override(C1BBBBBBB, C1BBBBBBBB)
	external view returns (uint);
	function f2() override(C1BBBBBBBB, C1BBBBBBBBBBB)
	external view returns (uint);
	function f3() override(C1BBBBBBB, C1BBBBBBBB)
	external view returns (uint);
	function f4() override
	external view returns (uint);
}
contract C1BBBBB is C1BBBBBB {
	function f0() virtual external pure
	override
	returns (uint)
	{
		return 374787159;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 80100956;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1003765604;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1447645967;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 143244144;
	}
}
contract C1BBBB is C1BBBBB {
	function f0() external pure
	override
	returns (uint)
	{
		return 355190910;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1869683330;
	}
	function f5() internal pure
	
	returns (uint)
	{
		return 1336273608;
	}
}
contract C1BBB is C1BBBB {
}
contract C1BB is C1B, C1BBB {
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1715708819;
	}
}
contract C1 is C1B, C1BB {
	function f2() virtual external view
	override
	returns (uint)
	{
		return 425095546;
	}
	function f6() public view
	
	returns (uint)
	{
		return 580853881;
	}
}
library L2 {
	function f0(uint) internal view returns (uint)
	{
		return 1714636915;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
