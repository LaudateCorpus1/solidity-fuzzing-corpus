pragma solidity >=0.0;
library L0 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
contract C1 {
	function f0() public view
	
	returns (uint)
	{
		return 494295040;
	}
}
contract C2 {
	function f0() external pure
	
	returns (uint)
	{
		return 1572557670;
	}
	function f1() private pure
	
	returns (uint)
	{
		return 1826818061;
	}
}
contract C3 {
	function f0() external pure
	
	returns (uint)
	{
		return 213625770;
	}
	function f1() private pure
	
	returns (uint)
	{
		return 1860554423;
	}
}
interface I4B {
	function f0() external view returns (uint);
}
interface I4 is I4B {
	function f0() override
	external view returns (uint);
}
contract C5BBB {
	function f0() virtual external pure
	
	returns (uint)
	{
		return 756858009;
	}
}
contract C5BB is C5BBB {
}
contract C5B is C5BB {
}
contract C5 is C5B {
	function f0() virtual external pure
	override
	returns (uint)
	{
		return 2067015777;
	}
}
abstract contract C6B {
}
contract C6BB is C6B {
}
interface C6BBBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C6BBBB is C6BBBBB {
	function f1() override
	external payable returns (uint);
}
interface C6BBB is C6BBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
contract C6 is C6B, C6BB, C6BBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1838990330;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1527057423;
	}
}
contract C7 {
	function f0() external pure
	
	returns (uint)
	{
		return 212682358;
	}
	function f1() private pure
	
	returns (uint)
	{
		return 1418270358;
	}
}
interface C8BBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C8BBB is C8BBBB {
	function f1() override
	external payable returns (uint);
}
interface C8BB is C8BBB {
}
contract C8B is C8BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 431017937;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1734917008;
	}
}
abstract contract C8 is C8B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 263161953;
	}
}
contract C9B {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 724861258;
	}
}
contract C9 is C9B {
}
contract C10 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 122341836;
	}
}
library L11 {
	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}
library L12 {
	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
interface C13BBBB {
	function f0() external payable returns (uint);
}
interface C13BBB is C13BBBB {
}
contract C13BB is C13BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1365149612;
	}
}
contract C13B is C13BB {
}
contract C13 is C13B {
	function f1() public view
	
	returns (uint)
	{
		return 1770089307;
	}
}
interface I14BBB {
	function f0() external payable returns (uint);
}
interface I14BB is I14BBB {
	function f0() override
	external payable returns (uint);
}
interface I14B is I14BB {
	function f0() override
	external payable returns (uint);
}
interface I14 is I14B {
	function f0() override
	external payable returns (uint);
}
contract C15BBB {
	function f0() virtual external pure
	
	returns (uint)
	{
		return 1625403789;
	}
}
contract C15BB is C15BBB {
	function f0() external pure
	override
	returns (uint)
	{
		return 446574513;
	}
}
contract C15B is C15BB {
}
contract C15 is C15B {
}
library L16 {
	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) external pure returns (uint)
	{
		return 719885386;
	}
}
contract C {
	using L16 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 719885386)
			return 1;
		return 0;
	}
}
