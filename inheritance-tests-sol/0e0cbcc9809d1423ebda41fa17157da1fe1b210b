pragma solidity >=0.0;
library L0 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private view returns (uint)
	{
		return 846930886;
	}
}
interface I1 {
	function f0() external payable returns (uint);
}
interface I2BBBBBBBBB {
	function f0() external view returns (uint);
}
interface I2BBBBBBBBBB is I2BBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I2BBBBBBBB is I2BBBBBBBBB, I2BBBBBBBBBB {
	function f0() override(I2BBBBBBBBB, I2BBBBBBBBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I2BBBBBBB is I2BBBBBBBB {
}
interface I2BBBBBB is I2BBBBBBB {
}
interface I2BBBBB is I2BBBBBB {
	function f2() override
	external payable returns (uint);
	function f4() external payable returns (uint);
}
interface I2BBBB is I2BBBBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
interface I2BBBBBBBBBBB is I2BBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f5() external payable returns (uint);
}
interface I2BBB is I2BBBB, I2BBBBBBBBBBB {
	function f0() override(I2BBBB, I2BBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I2BBBBBBBBBB, I2BBBBBBBBBBB)
	external view returns (uint);
	function f2() override(I2BBBB, I2BBBBB)
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() external view returns (uint);
	function f7() external payable returns (uint);
	function f8() external view returns (uint);
	function f9() external payable returns (uint);
}
interface I2BB is I2BBB {
	function f0() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
}
interface I2B is I2BB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBB {
	function f1() external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBB {
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBB {
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBB {
	function f2() override
	external payable returns (uint);
	function f4() external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBB {
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() external payable returns (uint);
}
interface I2BBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I2BBBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I2BBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override(I2BBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() external view returns (uint);
	function f7() external payable returns (uint);
	function f8() external view returns (uint);
	function f9() external payable returns (uint);
}
interface I2BBBBBBBBBBBBB is I2BBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
}
interface I2BBBBBBBBBBBB is I2BB, I2BBBBBBBBBBBBB {
	function f0() override(I2BB, I2BBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I2BBB, I2BBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(I2BBB, I2BBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I2BBBBBBBB, I2BBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I2BB, I2BBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override(I2BB, I2BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(I2BBB, I2BBBBBBBBBBBBBB)
	external view returns (uint);
	function f7() override(I2BBB, I2BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override(I2BB, I2BBBBBBBBBBBBBB)
	external view returns (uint);
	function f9() override(I2BBB, I2BBBBBBBBBBBBBB)
	external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBBBB is I2B {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() external payable returns (uint);
}
interface I2 is I2B, I2BBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I2B, I2BBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I2BBB, I2BBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(I2B, I2BBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I2BBBBBBBB, I2BBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I2B, I2BBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override(I2BB, I2BBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(I2BBB, I2BBBBBBBBBBBB)
	external view returns (uint);
	function f7() override(I2B, I2BBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override(I2BB, I2BBBBBBBBBBBB)
	external view returns (uint);
	function f9() override(I2B, I2BBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
}
contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}
