
pragma solidity >=0.0;














interface C0BBBBBBBBBBB {

	function f0() external view returns (uint);
}

interface C0BBBBBBBBBBBB is C0BBBBBBBBBBB {

	function f1() external view returns (uint);
}
interface C0BBBBBBBBBB is C0BBBBBBBBBBB, C0BBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C0BBBBBBBBB is C0BBBBBBBBBB {

}
interface C0BBBBBBBB is C0BBBBBBBBB {

}
interface C0BBBBBBB is C0BBBBBBBB {

	function f2() override
	external view returns (uint);
}
interface C0BBBBBB is C0BBBBBBB {

	function f0() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
}

interface C0BBBBBBBBBBBBB is C0BBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f4() external payable returns (uint);
}
interface C0BBBBB is C0BBBBBB, C0BBBBBBBBBBBBB {

	function f0() override(C0BBBBBB, C0BBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(C0BBBBBBBBBBBB, C0BBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(C0BBBBBB, C0BBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() external pure returns (uint);
	function f6() external pure returns (uint);
	function f7() external payable returns (uint);
	function f8() external payable returns (uint);
}
interface C0BBBB is C0BBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
}
interface C0BBB is C0BBBB {

	function f1() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f6() override
	external pure returns (uint);
	function f8() override
	external payable returns (uint);
	function f9() external payable returns (uint);
	function f10() external payable returns (uint);
}
interface C0BB is C0BBB {

	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f7() override
	external payable returns (uint);
}

interface C0BBBBBBBBBBBBBB is C0BBB {

	function f1() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external pure returns (uint);
	function f6() override
	external pure returns (uint);
	function f7() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() external view returns (uint);
	function f12() external payable returns (uint);
}
interface C0B is C0BB, C0BBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override(C0BB, C0BBBBBBBBBBBBBB)
	external view returns (uint);
	function f3() override(C0BB, C0BBBB)
	external view returns (uint);
	function f4() override(C0BBB, C0BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override(C0BBBBB, C0BBBBBBBBBBBBBB)
	external pure returns (uint);
	function f6() override(C0BBB, C0BBBBBBBBBBBBBB)
	external pure returns (uint);
	function f7() override(C0BB, C0BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
	function f10() override(C0BBB, C0BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override
	external view returns (uint);
	function f13() external view returns (uint);
}

interface C0BBBBBBBBBBBBBBB is C0BB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external pure returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() external view returns (uint);
}
contract C0 is C0B, C0BBBBBBBBBBBBBBB {

	function f0() external view
	override(C0BBBBBBBBBBBBBBB, C0B)
	returns (uint)
	{
		return 206008598;
	}
	function f1() virtual external view
	override(C0BBBBBBBBBBBBBBB, C0B)
	returns (uint)
	{
		return 1358404307;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1427401579;
	}
	function f3() external view
	override(C0BB, C0B)
	returns (uint)
	{
		return 324855843;
	}
	function f4() external payable
	override(C0BBBBBBBBBBBBBBB, C0B)
	returns (uint)
	{
		return 2037666653;
	}
	function f5() external pure
	override(C0BBBBBBBBBBBBBBB, C0B)
	returns (uint)
	{
		return 91491940;
	}
	function f6() virtual external pure
	override(C0BBB, C0B)
	returns (uint)
	{
		return 1578591759;
	}
	function f7() virtual external payable
	override(C0BBBBBBBBBBBBBBB, C0B)
	returns (uint)
	{
		return 999647265;
	}
	function f8() external payable
	override(C0BBBBBBBBBBBBBBB, C0B)
	returns (uint)
	{
		return 477900025;
	}
	function f9() external payable
	override(C0BBBBBBBBBBBBBBB, C0BBB)
	returns (uint)
	{
		return 1227253027;
	}
	function f10() external payable
	override(C0BBBBBBBBBBBBBBB, C0B)
	returns (uint)
	{
		return 1298302928;
	}
	function f11() external view
	override(C0BBBBBBBBBBBBBBB, C0B)
	returns (uint)
	{
		return 1498947413;
	}
	function f12() virtual external payable
	override
	returns (uint)
	{
		return 372915282;
	}
	function f13() virtual external view
	override
	returns (uint)
	{
		return 1613822255;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 206008598)
				return 1;
			if (tc0.f1() != 1358404307)
				return 2;
			if (tc0.f10() != 1298302928)
				return 3;
			if (tc0.f11() != 1498947413)
				return 4;
			if (tc0.f12() != 372915282)
				return 5;
			if (tc0.f13() != 1613822255)
				return 6;
			if (tc0.f2() != 1427401579)
				return 7;
			if (tc0.f3() != 324855843)
				return 8;
			if (tc0.f4() != 2037666653)
				return 9;
			if (tc0.f5() != 91491940)
				return 10;
			if (tc0.f6() != 1578591759)
				return 11;
			if (tc0.f7() != 999647265)
				return 12;
			if (tc0.f8() != 477900025)
				return 13;
			if (tc0.f9() != 1227253027)
				return 14;
			return 0;
	}
}

