
pragma solidity >=0.0;










interface I0BBBBBBB {

	function f0() external payable returns (uint);
}
interface I0BBBBBB is I0BBBBBBB {

}
interface I0BBBBB is I0BBBBBB {

	function f0() override
	external payable returns (uint);
}






interface I0BBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I0BBBBBBBBBBBB is I0BBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBB is I0BBBBBBBBBBBB {

}
interface I0BBBBBBBBBB is I0BBBBBBBBBBB {

}
interface I0BBBBBBBBB is I0BBBBBBBBBB {

}
interface I0BBBBBBBB is I0BBBBBB, I0BBBBBBBBB {

	function f0() override(I0BBBBBBB, I0BBBBBBBBBBBBB)
	external payable returns (uint);
}
interface I0BBBB is I0BBBBB, I0BBBBBBBB {

	function f0() override(I0BBBBB, I0BBBBBBBB)
	external payable returns (uint);
}
interface I0BBB is I0BBBB {

}
interface I0BB is I0BBB {

}






interface I0BBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I0BBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I0BBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBBBBB is I0BB, I0BBBBBBBBBBBBBBB {

	function f0() override(I0BBBB, I0BBBBBBBBBBBBBBBB)
	external payable returns (uint);
}
interface I0B is I0BB, I0BBBBBBBBBBBBBB {

	function f0() override(I0BBBB, I0BBBBBBBBBBBBBB)
	external payable returns (uint);
}
interface I0 is I0B {

}
library L1 {

	function f0(uint) private view returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public view returns (uint)
	{
		return 1714636915;
	}
}



interface C2BB {

	function f0() external view returns (uint);
}
interface C2B is C2BB {

}


interface C2BBBB {

	function f0() external view returns (uint);
}
interface C2BBB is C2BB, C2BBBB {

	function f0() override(C2BB, C2BBBB)
	external view returns (uint);
}
contract C2 is C2B, C2BBB {

	function f0() virtual external view
	override(C2BBB, C2BB)
	returns (uint)
	{
		return 849178936;
	}
}





interface I3BBBB {

	function f0() external payable returns (uint);
}
interface I3BBB is I3BBBB {

}
interface I3BB is I3BBB {

}
interface I3B is I3BB {

}
interface I3 is I3B {

	function f0() override
	external payable returns (uint);
}



interface C4BB {

	function f0() external view returns (uint);
}
interface C4B is C4BB {

}


interface C4BBBB {

	function f0() external view returns (uint);
}
interface C4BBB is C4BB, C4BBBB {

	function f0() override(C4BB, C4BBBB)
	external view returns (uint);
}
contract C4 is C4B, C4BBB {

	function f0() external view
	override(C4BBB, C4BB)
	returns (uint)
	{
		return 153892771;
	}
}


contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1714636915)
			return 1;
		return 0;
	}
}

