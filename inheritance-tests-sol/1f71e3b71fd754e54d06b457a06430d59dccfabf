pragma solidity >=0.0;
interface C1BBBB {
	function f0() external payable returns (uint);
}
interface C1BBBBB is C1BBBB {
	function f1() external view returns (uint);
}
interface C1BBB is C1BBBB, C1BBBBB {
	function f0() override
	external payable returns (uint);
}
interface C1BB is C1BBB {
	function f2() external payable returns (uint);
}
interface C1B is C1BB {
}
contract C1 is C1B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1738531149;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1098894339;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 2136927794;
	}
}
interface C2BBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C2BBBBBBB is C2BBBBBBBB {
}
interface C2BBBBBB is C2BBBBBBB {
	function f1() override
	external pure returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C2BBBBB is C2BBBBBB {
	function f1() override
	external pure returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
interface C2BBBBBBBBB is C2BBBBB {
	function f2() override
	external view returns (uint);
}
interface C2BBBB is C2BBBBB, C2BBBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f2() override(C2BBBBB, C2BBBBBBBBB)
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
contract C2BBB is C2BBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 201068705;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 928270262;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1814467857;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1659675143;
	}
}
contract C2BB is C2BBB {
	function f1() external pure
	override
	returns (uint)
	{
		return 1675824860;
	}
}
contract C2B is C2BB {
}
contract C2 is C2B {
	function f3() external view
	override
	returns (uint)
	{
		return 942409124;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1738531149)
				return 1;
			if (tc0.f1() != 1098894339)
				return 2;
			if (tc0.f2() != 2136927794)
				return 3;
			C2 tc1 = new C2();
			if (tc1.f0() != 201068705)
				return 4;
			if (tc1.f1() != 1675824860)
				return 5;
			if (tc1.f2() != 1814467857)
				return 6;
			if (tc1.f3() != 942409124)
				return 7;
			C2B tc2 = new C2B();
			if (tc2.f0() != 201068705)
				return 8;
			if (tc2.f1() != 1675824860)
				return 9;
			if (tc2.f2() != 1814467857)
				return 10;
			if (tc2.f3() != 1659675143)
				return 11;
			C2BB tc3 = new C2BB();
			if (tc3.f0() != 201068705)
				return 12;
			if (tc3.f1() != 1675824860)
				return 13;
			if (tc3.f2() != 1814467857)
				return 14;
			if (tc3.f3() != 1659675143)
				return 15;
			C2BBB tc4 = new C2BBB();
			if (tc4.f0() != 201068705)
				return 16;
			if (tc4.f1() != 928270262)
				return 17;
			if (tc4.f2() != 1814467857)
				return 18;
			if (tc4.f3() != 1659675143)
				return 19;
			return 0;
	}
}
