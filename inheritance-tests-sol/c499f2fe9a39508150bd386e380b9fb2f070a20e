pragma solidity >=0.0;
interface I0BBB {
	function f0() external payable returns (uint);
}
interface I0BB is I0BBB {
}
interface I0B is I0BB {
	function f0() override
	external payable returns (uint);
}
interface I0 is I0B {
}
interface C1BB {
	function f0() external view returns (uint);
}
interface C1B is C1BB {
}
interface C1BBBB {
	function f0() external view returns (uint);
}
interface C1BBB is C1BB, C1BBBB {
	function f0() override(C1BB, C1BBBB)
	external view returns (uint);
}
contract C1 is C1B, C1BBB {
	function f0() external view
	override(C1BBB, C1BB)
	returns (uint)
	{
		return 1596680831;
	}
}
library L2 {
	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public view returns (uint)
	{
		return 1681692777;
	}
}
interface C3BB {
	function f0() external view returns (uint);
}
interface C3B is C3BB {
}
contract C3 is C3B {
	function f0() external view
	override
	returns (uint)
	{
		return 1271135913;
	}
}
contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1681692777)
			return 1;
		return 0;
	}
}
