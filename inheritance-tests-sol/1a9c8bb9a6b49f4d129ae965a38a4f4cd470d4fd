pragma solidity >=0.0;
interface I0 {
	function f0() external payable returns (uint);
}
interface I1 {
	function f0() external payable returns (uint);
}
interface I3BBB {
}
interface I3BB is I3BBB {
	function f0() external view returns (uint);
}
interface I3B is I3BB {
	function f0() override
	external view returns (uint);
}
interface I3BBBBBBB {
}
interface I3BBBBBB is I3BBBBBBB {
	function f0() external view returns (uint);
}
interface I3BBBBB is I3BBBBBB {
}
interface I3BBBB is I3BB, I3BBBBB {
	function f0() override(I3BB, I3BBBBBB)
	external view returns (uint);
}
interface I3 is I3B, I3BBBB {
	function f0() override(I3B, I3BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
