pragma solidity >=0.0;
library L0 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
interface C1BB {
	function f0() external view returns (uint);
}
interface C1B is C1BB {
}
contract C1 is C1B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1914720637;
	}
}
interface C2BB {
	function f0() external view returns (uint);
}
interface C2B is C2BB {
}
contract C2 is C2B {
	function f0() external view
	override
	returns (uint)
	{
		return 854716505;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1914720637)
				return 1;
			C2 tc1 = new C2();
			if (tc1.f0() != 854716505)
				return 2;
			return 0;
	}
}
