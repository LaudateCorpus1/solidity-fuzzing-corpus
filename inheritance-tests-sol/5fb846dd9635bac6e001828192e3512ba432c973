
pragma solidity >=0.0;


library L0 {

	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) external pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}




interface I2BBB {

	function f0() external view returns (uint);
}
interface I2BB is I2BBB {

}
interface I2B is I2BB {

	function f0() override
	external view returns (uint);
}
interface I2 is I2B {

	function f0() override
	external view returns (uint);
}





interface I3BBBB {

	function f0() external payable returns (uint);
}
interface I3BBB is I3BBBB {

	function f0() override
	external payable returns (uint);
}
interface I3BB is I3BBB {

	function f1() external view returns (uint);
}
interface I3B is I3BB {

	function f1() override
	external view returns (uint);
}
interface I3 is I3B {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}



interface I4BB {

	function f0() external view returns (uint);
}
interface I4B is I4BB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I4 is I4B {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
library L5 {

	function f0(uint) external pure returns (uint)
	{
		return 1714636915;
	}
}
library L6 {

	function f0(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}







interface C8BBBBBB {

	function f0() external view returns (uint);
}
interface C8BBBBB is C8BBBBBB {

}
interface C8BBBB is C8BBBBB {

	function f0() override
	external view returns (uint);
}
interface C8BBB is C8BBBB {

}
interface C8BB is C8BBB {

}
interface C8B is C8BB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
contract C8 is C8B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 826724347;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 2130219953;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1756461789;
	}
}





interface I9BBBB {

	function f0() external payable returns (uint);
}
interface I9BBB is I9BBBB {

	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface I9BB is I9BBB {

	function f0() override
	external payable returns (uint);
}
interface I9B is I9BB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface I9 is I9B {

	function f0() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C8 tc0 = new C8();
			if (tc0.f0() != 826724347)
				return 1;
			if (tc0.f1() != 2130219953)
				return 2;
			if (tc0.f2() != 1756461789)
				return 3;
			return 0;
	}
}

