pragma solidity >=0.0;
library L0 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
interface I1BBBBB {
	function f0() external payable returns (uint);
}
interface I1BBBB is I1BBBBB {
}
interface I1BBB is I1BBBB {
	function f1() external payable returns (uint);
}
interface I1BB is I1BBB {
	function f1() override
	external payable returns (uint);
}
interface I1B is I1BB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I1BBBBBBBBBB {
	function f0() external payable returns (uint);
}
interface I1BBBBBBBBB is I1BBBBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBB is I1BBBBBBBBB {
	function f1() external payable returns (uint);
}
interface I1BBBBBBB is I1BBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I1BBBBBB is I1BB, I1BBBBBBB {
	function f0() override(I1BBBBB, I1BBBBBBB)
	external payable returns (uint);
	function f1() override(I1BB, I1BBBBBBB)
	external payable returns (uint);
}
interface I1BBBBBBBBBBB is I1BBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBB is I1BBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBB is I1BBBBBBB {
}
interface I1BBBBBBBBBBBBBBBBBB {
	function f0() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBB {
}
interface I1BBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBB {
	function f1() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBB is I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBBB {
	function f0() override(I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBBBB)
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBB {
	function f0() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBB {
}
interface I1BBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBB {
	function f1() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBB {
}
interface I1BBBBBBBBBBBBBBBBBBB is I1B, I1BBBBBBBBBBBBBBBBBBBB {
	function f0() override(I1B, I1BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I1B, I1BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBB is I1BB {
	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I1 is I1B, I1BBBBBB, I1BBBBBBBBBBB, I1BBBBBBBBBBBB, I1BBBBBBBBBBBBB, I1BBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I1B, I1BBBBBB, I1BBBBBBBBBBB, I1BBBBBBBBBBBB, I1BBBBBBB, I1BBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I1B, I1BBBBBB, I1BBBBBBB, I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBB, I1BB, I1BBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
}
library L2 {
	function f0(uint) internal pure returns (uint)
	{
		return 1350490027;
	}
	function f1(uint) public view returns (uint)
	{
		return 783368690;
	}
}
interface I3BB {
	function f0() external payable returns (uint);
}
interface I3B is I3BB {
}
interface I3 is I3B {
	function f1() external payable returns (uint);
}
library L4 {
	function f0(uint) internal pure returns (uint)
	{
		return 1102520059;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 2044897763;
	}
	function f2(uint) public view returns (uint)
	{
		return 1967513926;
	}
}
interface I5BB {
	function f0() external view returns (uint);
}
interface I5B is I5BB {
	function f1() external payable returns (uint);
}
interface I5BBB is I5B {
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface I5 is I5B, I5BBB {
	function f0() override
	external view returns (uint);
	function f1() override(I5B, I5BBB)
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
interface I6 {
	function f0() external view returns (uint);
}
contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 846930886)
			return 1;
		return 0;
	}
}
