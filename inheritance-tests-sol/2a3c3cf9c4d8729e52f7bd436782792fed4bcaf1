
pragma solidity >=0.0;


library L1 {

	function f0(uint) public view returns (uint)
	{
		return 1714636915;
	}
}


interface I4B {

	function f0() external view returns (uint);
}


interface I4BBB {

	function f0() external view returns (uint);
}
interface I4BB is I4B, I4BBB {

	function f0() override(I4B, I4BBB)
	external view returns (uint);
	function f1() external pure returns (uint);
}
interface I4 is I4B, I4BB {

	function f0() override(I4B, I4BB)
	external view returns (uint);
	function f1() override
	external pure returns (uint);
}


interface I5B {

	function f0() external view returns (uint);
}


interface I5BBB {

	function f0() external view returns (uint);
}
interface I5BB is I5B, I5BBB {

	function f0() override(I5B, I5BBB)
	external view returns (uint);
	function f1() external pure returns (uint);
}
interface I5 is I5B, I5BB {

	function f0() override(I5B, I5BB)
	external view returns (uint);
}




interface I6BBB {

	function f0() external view returns (uint);
}
interface I6BB is I6BBB {

	function f1() external view returns (uint);
}
interface I6B is I6BB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external view returns (uint);
}

interface I6BBBB is I6B {

	function f2() override
	external view returns (uint);
	function f3() external view returns (uint);
}
interface I6 is I6B, I6BBBB {

	function f1() override
	external view returns (uint);
	function f2() override(I6B, I6BBBB)
	external view returns (uint);
	function f3() override
	external view returns (uint);
}


interface I7B {

	function f0() external payable returns (uint);
}
interface I7 is I7B {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

