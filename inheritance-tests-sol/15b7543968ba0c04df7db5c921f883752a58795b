
pragma solidity >=0.0;












interface I0BBBBBBBBB {

}
interface I0BBBBBBBB is I0BBBBBBBBB {

}
interface I0BBBBBBB is I0BBBBBBBB {

}
interface I0BBBBBB is I0BBBBBBB {

}
interface I0BBBBB is I0BBBBBB {

}
interface I0BBBB is I0BBBBB {

}




interface I0BBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBBB is I0BBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I0BBBBBBBBBBB is I0BBBBBBBBBBBB {

}
interface I0BBBBBBBBBB is I0BBBBB, I0BBBBBBBBBBB {

}
interface I0BBB is I0BBBB, I0BBBBBBBBBB {

	function f1() external payable returns (uint);
}
interface I0BB is I0BBB {

	function f2() external view returns (uint);
}
interface I0B is I0BB {

	function f2() override
	external view returns (uint);
}








interface I0BBBBBBBBBBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBB {

}




interface I0BBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBB {

	function f1() external payable returns (uint);
}
interface I0BBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBB {

	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I0BBBBBBBBBBBBBB is I0B, I0BBBBBBBBBBBBBBB {

	function f0() override(I0BBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I0BBB, I0BBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I0B, I0BBBBBBBBBBBBBBB)
	external view returns (uint);
}




interface I0BBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBBBBBBBBBBBBBBBBB is I0B, I0BBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I0BBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}




interface I0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I0BBBBBBBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I0 is I0B, I0BBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I0BBBBBBBBBBBB, I0BBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I0BBB, I0BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I0B, I0BBBBBBBBBBBBBB)
	external view returns (uint);
	function f3() external payable returns (uint);
}










interface I2BBBBBBBBB {

}
interface I2BBBBBBBB is I2BBBBBBBBB {

}
interface I2BBBBBBB is I2BBBBBBBB {

}
interface I2BBBBBB is I2BBBBBBB {

}
interface I2BBBBB is I2BBBBBB {

}
interface I2BBBB is I2BBBBB {

}




interface I2BBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBB is I2BBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I2BBBBBBBBBBB is I2BBBBBBBBBBBB {

}
interface I2BBBBBBBBBB is I2BBBBB, I2BBBBBBBBBBB {

}
interface I2BBB is I2BBBB, I2BBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I2BB is I2BBB {

	function f0() override
	external view returns (uint);
	function f2() external view returns (uint);
}
interface I2B is I2BB {

	function f1() override
	external payable returns (uint);
}









interface I2BBBBBBBBBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBB {

}




interface I2BBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBB {

	function f1() external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f2() external view returns (uint);
}
interface I2BBBBBBBBBBBBBB is I2B, I2BBBBBBBBBBBBBBB {

	function f0() override(I2BB, I2BBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I2B, I2BBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I2BB, I2BBBBBBBBBBBBBBB)
	external view returns (uint);
}




interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBB is I2BB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I2BB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override
	external view returns (uint);
}




interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I2BB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I2BB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
}
interface I2 is I2B, I2BBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I2BB, I2BBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I2B, I2BBBBBBBBBBBBBB, I2BBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I2BB, I2BBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f3() external payable returns (uint);
}



contract C3BB {

}


interface C3BBBB {

	function f0() external view returns (uint);
}
interface C3BBB is C3BBBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
contract C3B is C3BB, C3BBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 425095546;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 851194519;
	}
}


contract C3BBBBBB {

}
abstract contract C3BBBBB is C3BB, C3BBBBBB {

}
contract C3 is C3B, C3BBBBB {

}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

