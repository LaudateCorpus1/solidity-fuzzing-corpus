pragma solidity >=0.0;
interface I0BBBB {
	function f0() external payable returns (uint);
}
interface I0BBB is I0BBBB {
}
interface I0BB is I0BBB {
}
interface I0B is I0BB {
	function f0() override
	external payable returns (uint);
}
interface I0 is I0B {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
contract C1 {
	function f0() virtual public view
	
	returns (uint)
	{
		return 1955020726;
	}
}
contract C2B {
}
contract C2 is C2B {
	function f0() public payable
	
	returns (uint)
	{
		return 1784080978;
	}
}
interface I3B {
	function f0() external view returns (uint);
}
interface I3 is I3B {
	function f0() override
	external view returns (uint);
}
contract C4 {
	function f0() public view
	
	returns (uint)
	{
		return 63672107;
	}
}
contract C5 {
	function f0() public view
	
	returns (uint)
	{
		return 467178140;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 430218793;
	}
}
interface I6B {
	function f0() external pure returns (uint);
}
interface I6 is I6B {
}
interface I7BB {
	function f0() external view returns (uint);
}
interface I7B is I7BB {
	function f1() external payable returns (uint);
}
interface I7 is I7B {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
contract C9 {
	function f0() public view
	
	returns (uint)
	{
		return 884939321;
	}
}
contract C10 {
	function f0() public view
	
	returns (uint)
	{
		return 1308741514;
	}
}
interface I11BB {
	function f0() external view returns (uint);
}
interface I11B is I11BB {
	function f1() external payable returns (uint);
}
interface I11 is I11B {
	function f1() override
	external payable returns (uint);
}
interface I12BBB {
	function f0() external view returns (uint);
}
interface I12BB is I12BBB {
	function f0() override
	external view returns (uint);
}
interface I12B is I12BB {
}
interface I12 is I12B {
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1955020726)
				return 1;
			C10 tc1 = new C10();
			if (tc1.f0() != 1308741514)
				return 2;
			C2 tc2 = new C2();
			if (tc2.f0() != 1784080978)
				return 3;
			C4 tc3 = new C4();
			if (tc3.f0() != 63672107)
				return 4;
			C5 tc4 = new C5();
			if (tc4.f0() != 467178140)
				return 5;
			if (tc4.f1() != 430218793)
				return 6;
			C9 tc5 = new C9();
			if (tc5.f0() != 884939321)
				return 7;
			return 0;
	}
}
