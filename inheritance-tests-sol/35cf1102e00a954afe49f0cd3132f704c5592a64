pragma solidity >=0.0;
interface I0BB {
	function f0() external view returns (uint);
}
interface I0B is I0BB {
	function f1() external payable returns (uint);
}
interface I0 is I0B {
	function f0() override
	external view returns (uint);
}
library L1 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
interface C2BBBB {
	function f0() external payable returns (uint);
}
interface C2BBB is C2BBBB {
}
interface C2BB is C2BBB {
	function f1() external payable returns (uint);
}
interface C2B is C2BB {
}
contract C2 is C2B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1738531149;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1098894339;
	}
}
interface C3BBBB {
	function f0() external view returns (uint);
}
interface C3BBB is C3BBBB {
}
interface C3BB is C3BBB {
}
interface C3B is C3BB {
	function f0() override
	external view returns (uint);
}
contract C3 is C3B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1402304087;
	}
}
contract C5 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1936030137;
	}
}
contract C6B {
	function f0() public view
	
	returns (uint)
	{
		return 2064876628;
	}
}
contract C6 is C6B {
}
library L7 {
	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
abstract contract C9B {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1947433875;
	}
}
contract C9 is C9B {
}
library L10 {
	function f0(uint) external pure returns (uint)
	{
		return 1681692777;
	}
}
library L11 {
	function f0(uint) public view returns (uint)
	{
		return 1714636915;
	}
}
interface C12BBBB {
	function f0() external view returns (uint);
}
interface C12BBB is C12BBBB {
}
interface C12BB is C12BBB {
	function f0() override
	external view returns (uint);
}
interface C12B is C12BB {
	function f0() override
	external view returns (uint);
}
contract C12 is C12B {
	function f0() external view
	override
	returns (uint)
	{
		return 201068705;
	}
}
interface C13BBBB {
	function f0() external payable returns (uint);
}
interface C13BBB is C13BBBB {
	function f0() override
	external payable returns (uint);
}
contract C13BB is C13BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1814467857;
	}
}
abstract contract C13B is C13BB {
}
contract C13 is C13B {
}
abstract contract C14BB {
}
contract C14B is C14BB {
}
interface C14BBBBB {
	function f0() external payable returns (uint);
}
interface C14BBBB is C14BBBBB {
	function f0() override
	external payable returns (uint);
}
interface C14BBB is C14BBBB {
	function f0() override
	external payable returns (uint);
}
contract C14 is C14B, C14BBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1324346645;
	}
}
library L15 {
	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
}
contract C {
	function test() public returns (uint)
	{
			C12 tc0 = new C12();
			if (tc0.f0() != 201068705)
				return 1;
			C13 tc1 = new C13();
			if (tc1.f0() != 1814467857)
				return 2;
			C13BB tc2 = new C13BB();
			if (tc2.f0() != 1814467857)
				return 3;
			C14 tc3 = new C14();
			if (tc3.f0() != 1324346645)
				return 4;
			C2 tc4 = new C2();
			if (tc4.f0() != 1738531149)
				return 5;
			if (tc4.f1() != 1098894339)
				return 6;
			C3 tc5 = new C3();
			if (tc5.f0() != 1402304087)
				return 7;
			C5 tc6 = new C5();
			if (tc6.f0() != 1936030137)
				return 8;
			C6 tc7 = new C6();
			if (tc7.f0() != 2064876628)
				return 9;
			C6B tc8 = new C6B();
			if (tc8.f0() != 2064876628)
				return 10;
			C9 tc9 = new C9();
			if (tc9.f0() != 1947433875)
				return 11;
			return 0;
	}
}
