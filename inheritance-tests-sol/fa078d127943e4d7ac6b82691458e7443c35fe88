
pragma solidity >=0.0;




abstract contract C0B {

}

contract C0BB is C0B {

}
contract C0 is C0B, C0BB {

	function f0() public view
	
	returns (uint)
	{
		return 182605794;
	}
}


interface I1B {

	function f0() external payable returns (uint);
}
interface I1 is I1B {

	function f0() override
	external payable returns (uint);
}

contract C2 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1914720637;
	}
}




interface C4BBB {

	function f0() external payable returns (uint);
}
interface C4BB is C4BBB {

}
contract C4B is C4BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1203428207;
	}
}
abstract contract C4 is C4B {

}


interface I6B {

	function f0() external payable returns (uint);
}
interface I6 is I6B {

}


contract C7B {

}

abstract contract C7BB is C7B {

}

contract C7BBB is C7B {

}
contract C7 is C7B, C7BB, C7BBB {

	function f0() public view
	
	returns (uint)
	{
		return 1882556969;
	}
}

contract C8 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 2136927794;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 182605794)
				return 1;
			C2 tc1 = new C2();
			if (tc1.f0() != 1914720637)
				return 2;
			C4B tc2 = new C4B();
			if (tc2.f0() != 1203428207)
				return 3;
			C7 tc3 = new C7();
			if (tc3.f0() != 1882556969)
				return 4;
			C8 tc4 = new C8();
			if (tc4.f0() != 2136927794)
				return 5;
			return 0;
	}
}

