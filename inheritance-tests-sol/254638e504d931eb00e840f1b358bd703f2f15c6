
pragma solidity >=0.0;


library L0 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}


abstract contract C1B {

}





interface C1BBBBBB {

	function f0() external view returns (uint);
}
interface C1BBBBB is C1BBBBBB {

	function f0() override
	external view returns (uint);
}


interface C1BBBBBBBB {

	function f0() external view returns (uint);
}
interface C1BBBBBBB is C1BBBBBB, C1BBBBBBBB {

	function f0() override(C1BBBBBB, C1BBBBBBBB)
	external view returns (uint);
}
interface C1BBBB is C1BBBBB, C1BBBBBBB {

	function f0() override(C1BBBBB, C1BBBBBBB)
	external view returns (uint);
}
interface C1BBB is C1BBBB {

}
contract C1BB is C1B, C1BBB {

	function f0() external view
	override
	returns (uint)
	{
		return 564586691;
	}
}
contract C1 is C1B, C1BB {

}
library L2 {

	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}
library L3 {

	function f0(uint) public pure returns (uint)
	{
		return 1957747793;
	}
}








interface C5BBBBBBB {

	function f0() external view returns (uint);
}
interface C5BBBBBB is C5BBBBBBB {

}
interface C5BBBBB is C5BBBBBB {

}
interface C5BBBB is C5BBBBB {

	function f1() external view returns (uint);
}
interface C5BBB is C5BBBB {

	function f0() override
	external view returns (uint);
}
interface C5BB is C5BBB {

	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface C5B is C5BB {

	function f2() override
	external payable returns (uint);
	function f3() external view returns (uint);
}
contract C5 is C5B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1947433875;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 2010567813;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 662405787;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 849178936;
	}
}


interface I7B {

	function f0() external view returns (uint);
}

interface I7BB is I7B {

	function f1() external view returns (uint);
}
interface I7 is I7B, I7BB {

}


contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

