pragma solidity >=0.0;
library L0 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
}
library L1 {
	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
interface C2BBBBBB {
	function f0() external view returns (uint);
}
interface C2BBBBB is C2BBBBBB {
	function f1() external payable returns (uint);
}
interface C2BBBB is C2BBBBB {
	function f0() override
	external view returns (uint);
}
interface C2BBB is C2BBBB {
	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface C2BB is C2BBB {
}
contract C2B is C2BB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1623188993;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1068463897;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 2111632871;
	}
}
contract C2 is C2B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1774893867;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 176859165;
	}
}
interface C3BBBBBBB {
	function f0() external payable returns (uint);
}
interface C3BBBBBB is C3BBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface C3BBBBB is C3BBBBBB {
	function f1() override
	external view returns (uint);
}
interface C3BBBB is C3BBBBB {
}
interface C3BBB is C3BBBB {
	function f1() override
	external view returns (uint);
}
interface C3BBBBBBBBBB {
	function f0() external payable returns (uint);
}
interface C3BBBBBBBBB is C3BBBBBBBBBB {
}
interface C3BBBBBBBB is C3BBBB, C3BBBBBBBBB {
	function f0() override(C3BBBBBB, C3BBBBBBBBBB)
	external payable returns (uint);
}
interface C3BB is C3BBB, C3BBBBBBBB {
	function f0() override(C3BBBBBB, C3BBBBBBBB)
	external payable returns (uint);
	function f1() override(C3BBB, C3BBBBB)
	external view returns (uint);
}
interface C3B is C3BB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
contract C3 is C3B {
	function f0() external payable
	override
	returns (uint)
	{
		return 206006984;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 837912430;
	}
}
contract C4B {
}
interface C4BBBB {
	function f0() external payable returns (uint);
}
interface C4BBB is C4BBBB {
	function f0() override
	external payable returns (uint);
}
interface C4BBBBB is C4BBBB {
	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface C4BBBBBBBB {
	function f0() external payable returns (uint);
}
interface C4BBBBBBB is C4BBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface C4BBBBBB is C4BBBB, C4BBBBBBB {
	function f0() override(C4BBBB, C4BBBBBBB)
	external payable returns (uint);
}
interface C4BB is C4BBB, C4BBBBB, C4BBBBBB {
	function f0() override(C4BBB, C4BBBBB, C4BBBBBB)
	external payable returns (uint);
}
contract C4 is C4B, C4BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 619611247;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1823773651;
	}
}
library L5 {
	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
}
library L6 {
	function f0(uint) public pure returns (uint)
	{
		return 1649760492;
	}
}
contract C7 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1155580494;
	}
}
interface I8BB {
	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface I8B is I8BB {
	function f2() external payable returns (uint);
}
interface I8 is I8B {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
abstract contract C9BB {
}
contract C9B is C9BB {
}
interface C9BBBBB {
	function f0() external payable returns (uint);
}
interface C9BBBB is C9BBBBB {
}
interface C9BBB is C9BBBB {
	function f0() override
	external payable returns (uint);
}
contract C9 is C9B, C9BBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1278679799;
	}
}
library L10 {
	function f0(uint) public pure returns (uint)
	{
		return 1189641421;
	}
}
contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 1774893867)
				return 1;
			if (tc0.f1() != 176859165)
				return 2;
			if (tc0.f2() != 2111632871)
				return 3;
			C2B tc1 = new C2B();
			if (tc1.f0() != 1623188993)
				return 4;
			if (tc1.f1() != 1068463897)
				return 5;
			if (tc1.f2() != 2111632871)
				return 6;
			C3 tc2 = new C3();
			if (tc2.f0() != 206006984)
				return 7;
			if (tc2.f1() != 837912430)
				return 8;
			C4 tc3 = new C4();
			if (tc3.f0() != 619611247)
				return 9;
			if (tc3.f1() != 1823773651)
				return 10;
			C7 tc4 = new C7();
			if (tc4.f0() != 1155580494)
				return 11;
			C9 tc5 = new C9();
			if (tc5.f0() != 1278679799)
				return 12;
			return 0;
	}
}
