pragma solidity >=0.0;
interface I0BBBBB {
	function f0() external view returns (uint);
}
interface I0BBBB is I0BBBBB {
}
interface I0BBBBBB is I0BBBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
	function f2() external view returns (uint);
}
interface I0BBB is I0BBBB, I0BBBBBB {
	function f0() override(I0BBBBB, I0BBBBBB)
	external view returns (uint);
}
interface I0BBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I0BBBBBBBBB is I0BBBBBBBBBB {
}
interface I0BBBBBBBB is I0BBBBBBBBB {
}
interface I0BBBBBBB is I0BBB, I0BBBBBBBB {
	function f0() override(I0BBB, I0BBBBBBBBBB)
	external view returns (uint);
}
interface I0BBBBBBBBBBB is I0BBBBBB {
	function f3() external payable returns (uint);
}
interface I0BB is I0BBB, I0BBBBBBB, I0BBBBBBBBBBB {
	function f0() override(I0BBB, I0BBBBBBB, I0BBBBBB)
	external view returns (uint);
	function f3() override
	external payable returns (uint);
}
interface I0B is I0BB {
	function f0() override
	external view returns (uint);
	function f3() override
	external payable returns (uint);
	function f4() external payable returns (uint);
}
interface I0 is I0B {
	function f0() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
