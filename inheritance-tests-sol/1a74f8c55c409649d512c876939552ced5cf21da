pragma solidity >=0.0;
contract C0B {
}
contract C0 is C0B {
	function f0() public view
	
	returns (uint)
	{
		return 1575004944;
	}
}
library L2 {
	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
contract C3BB {
	function f0() private pure
	
	returns (uint)
	{
		return 971846536;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 223870541;
	}
}
contract C3B is C3BB {
}
contract C3 is C3B {
	function f2() virtual public pure
	
	returns (uint)
	{
		return 2062763411;
	}
}
library L4 {
	function f0(uint) external pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1714636915;
	}
}
interface I5BB {
	function f0() external view returns (uint);
}
interface I5B is I5BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I5 is I5B {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I6B {
	function f0() external view returns (uint);
}
interface I6BBBB {
}
interface I6BBB is I6BBBB {
}
interface I6BB is I6B, I6BBB {
	function f0() override
	external view returns (uint);
}
interface I6 is I6B, I6BB {
	function f0() override(I6B, I6BB)
	external view returns (uint);
}
contract C7BB {
	function f0() private pure
	
	returns (uint)
	{
		return 1325416955;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1369023381;
	}
}
contract C7B is C7BB {
}
abstract contract C7BBBB {
}
contract C7BBB is C7BB, C7BBBB {
	function f1() virtual public pure
	override
	returns (uint)
	{
		return 1650497032;
	}
}
contract C7 is C7B, C7BBB {
	function f1() virtual public pure
	override(C7BBB, C7BB)
	returns (uint)
	{
		return 562351922;
	}
}
contract C8BB {
	function f0() private pure
	
	returns (uint)
	{
		return 1096328782;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 447122901;
	}
}
contract C8B is C8BB {
}
abstract contract C8BBBB {
}
contract C8BBB is C8B, C8BBBB {
}
contract C8 is C8B, C8BBB {
	function f1() virtual public pure
	override
	returns (uint)
	{
		return 959124913;
	}
}
contract C9B {
}
contract C9 is C9B {
	function f0() external pure
	
	returns (uint)
	{
		return 318729750;
	}
}
contract C10B {
}
contract C10 is C10B {
	function f0() public view
	
	returns (uint)
	{
		return 830915142;
	}
}
interface C11BBB {
	function f0() external payable returns (uint);
}
interface C11BB is C11BBB {
}
contract C11B is C11BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1932363884;
	}
}
contract C11 is C11B {
}
contract C {
	using L4 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}
