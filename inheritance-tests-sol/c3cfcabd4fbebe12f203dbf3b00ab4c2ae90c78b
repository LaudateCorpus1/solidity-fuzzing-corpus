
pragma solidity >=0.0;





interface I0BB {

	function f0() external view returns (uint);
}
interface I0B is I0BB {

}
interface I0 is I0B {

	function f0() override
	external view returns (uint);
}


interface I5B {

	function f0() external view returns (uint);
}



interface I5BBBB {

}



interface I5BBBBBBB {

	function f0() external view returns (uint);
}
interface I5BBBBBB is I5BBBBBBB {

}
interface I5BBBBB is I5BBBB, I5BBBBBB {

}
interface I5BBB is I5BBBB, I5BBBBB {

}
interface I5BB is I5B, I5BBB {

	function f0() override(I5B, I5BBBBBBB)
	external view returns (uint);
}
interface I5 is I5B, I5BB {

	function f0() override(I5B, I5BB)
	external view returns (uint);
}



interface I6BB {

	function f0() external view returns (uint);
}
interface I6B is I6BB {

	function f1() external payable returns (uint);
}


interface I6BBBB {

	function f0() external view returns (uint);
}
interface I6BBB is I6B, I6BBBB {

	function f0() override(I6BB, I6BBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I6 is I6B, I6BBB {

	function f0() override(I6BB, I6BBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}


interface I7B {

	function f0() external pure returns (uint);
}
interface I7 is I7B {

	function f0() override
	external pure returns (uint);
}


interface I9B {

	function f0() external view returns (uint);
}



interface I9BBBB {

}
interface I9BBB is I9BBBB {

}
interface I9BB is I9B, I9BBB {

}
interface I9 is I9B, I9BB {

}


interface I10B {

	function f0() external view returns (uint);
}



interface I10BBBB {

}
interface I10BBB is I10BBBB {

}
interface I10BB is I10B, I10BBB {

	function f0() override
	external view returns (uint);
}
interface I10 is I10B, I10BB {

	function f0() override(I10B, I10BB)
	external view returns (uint);
}


interface I11B {

	function f0() external pure returns (uint);
}
interface I11 is I11B {

	function f0() override
	external pure returns (uint);
}



interface I12BB {

	function f0() external view returns (uint);
}
interface I12B is I12BB {

	function f1() external payable returns (uint);
}


interface I12BBBB {

	function f0() external view returns (uint);
}
interface I12BBB is I12BB, I12BBBB {

	function f0() override(I12BB, I12BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I12 is I12B, I12BBB {

	function f0() override(I12BB, I12BBB)
	external view returns (uint);
	function f1() override(I12B, I12BBB)
	external payable returns (uint);
}



interface I13BB {

	function f0() external payable returns (uint);
}
interface I13B is I13BB {

	function f0() override
	external payable returns (uint);
}

interface I13BBB is I13B {

	function f1() external pure returns (uint);
}
interface I13 is I13B, I13BBB {

	function f0() override
	external payable returns (uint);
}


interface I14B {

	function f0() external view returns (uint);
}
interface I14 is I14B {

	function f1() external payable returns (uint);
}


interface I15B {

	function f0() external view returns (uint);
}



interface I15BBBB {

}
interface I15BBB is I15BBBB {

}
interface I15BB is I15B, I15BBB {

}
interface I15 is I15B, I15BB {

}
library L16 {

	function f0(uint) public view returns (uint)
	{
		return 2044897763;
	}
}

interface I18 {

	function f0() external payable returns (uint);
}



interface I19BB {

	function f0() external view returns (uint);
}
interface I19B is I19BB {

	function f1() external payable returns (uint);
}


interface I19BBBB {

	function f0() external view returns (uint);
}
interface I19BBB is I19B, I19BBBB {

	function f0() override(I19BB, I19BBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external pure returns (uint);
}
interface I19 is I19B, I19BBB {

	function f0() override(I19BB, I19BBB)
	external view returns (uint);
	function f1() override(I19B, I19BBB)
	external payable returns (uint);
	function f2() override
	external pure returns (uint);
}

interface I20 {

	function f0() external view returns (uint);
}


interface I21B {

	function f0() external view returns (uint);
}



interface I21BBBB {

}
interface I21BBB is I21BBBB {

}
interface I21BB is I21B, I21BBB {

}
interface I21 is I21B, I21BB {

	function f0() override
	external view returns (uint);
}
library L22 {

	function f0(uint) external pure returns (uint)
	{
		return 1540383426;
	}
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

