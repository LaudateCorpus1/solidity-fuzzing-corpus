pragma solidity >=0.0;
interface I2BBBBBBBBB {
}
interface I2BBBBBBBB is I2BBBBBBBBB {
	function f0() external view returns (uint);
}
interface I2BBBBBBB is I2BBBBBBBB {
}
interface I2BBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I2BBBBBBBBBBB is I2BBBBBBBBBBBB {
	function f1() external payable returns (uint);
}
interface I2BBBBBBBBBB is I2BBBBBBBB, I2BBBBBBBBBBB {
	function f0() override(I2BBBBBBBB, I2BBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I2BBBBBB is I2BBBBBBB, I2BBBBBBBBBB {
	function f0() override(I2BBBBBBBB, I2BBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface I2BBBBB is I2BBBBBB {
	function f3() external payable returns (uint);
}
interface I2BBBB is I2BBBBB {
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external payable returns (uint);
}
interface I2BBB is I2BBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() override
	external payable returns (uint);
	function f4() external payable returns (uint);
}
interface I2BB is I2BBB {
	function f3() override
	external payable returns (uint);
	function f5() external view returns (uint);
}
interface I2B is I2BB {
	function f3() override
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external view returns (uint);
}
interface I2BBBBBBBBBBBBB is I2B {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() override
	external payable returns (uint);
	function f5() override
	external view returns (uint);
}
interface I2 is I2B, I2BBBBBBBBBBBBB {
	function f0() override(I2BBB, I2BBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I2BBB, I2BBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I2B, I2BBBBBBBBBBBBB)
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override(I2B, I2BBBBBBBBBBBBB)
	external view returns (uint);
	function f6() external payable returns (uint);
}
interface C3BBBBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C3BBBBBBBBB is C3BBBBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
contract C3BBBBBBBB is C3BBBBBBBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 989720220;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 587190582;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 647359417;
	}
}
contract C3BBBBBBB is C3BBBBBBBB {
	function f1() external payable
	override
	returns (uint)
	{
		return 1112598097;
	}
}
contract C3BBBBBB is C3BBBBBBB {
	function f2() external payable
	override
	returns (uint)
	{
		return 2129472840;
	}
}
contract C3BBBBB is C3BBBBBB {
}
contract C3BBBB is C3BBBBB {
}
contract C3BBB is C3BBBB {
}
contract C3BB is C3BBB {
}
contract C3B is C3BB {
}
contract C3BBBBBBBBBBB is C3BB {
	function f3() public payable
	
	returns (uint)
	{
		return 1763628830;
	}
}
contract C3 is C3B, C3BBBBBBBBBBB {
	function f4() public payable
	
	returns (uint)
	{
		return 1707173354;
	}
}
interface I4B {
	function f0() external view returns (uint);
}
interface I4 is I4B {
}
contract C {
	function test() public returns (uint)
	{
			C3 tc0 = new C3();
			if (tc0.f0() != 989720220)
				return 1;
			if (tc0.f1() != 1112598097)
				return 2;
			if (tc0.f2() != 2129472840)
				return 3;
			if (tc0.f3() != 1763628830)
				return 4;
			if (tc0.f4() != 1707173354)
				return 5;
			C3B tc1 = new C3B();
			if (tc1.f0() != 989720220)
				return 6;
			if (tc1.f1() != 1112598097)
				return 7;
			if (tc1.f2() != 2129472840)
				return 8;
			C3BB tc2 = new C3BB();
			if (tc2.f0() != 989720220)
				return 9;
			if (tc2.f1() != 1112598097)
				return 10;
			if (tc2.f2() != 2129472840)
				return 11;
			C3BBB tc3 = new C3BBB();
			if (tc3.f0() != 989720220)
				return 12;
			if (tc3.f1() != 1112598097)
				return 13;
			if (tc3.f2() != 2129472840)
				return 14;
			C3BBBB tc4 = new C3BBBB();
			if (tc4.f0() != 989720220)
				return 15;
			if (tc4.f1() != 1112598097)
				return 16;
			if (tc4.f2() != 2129472840)
				return 17;
			C3BBBBB tc5 = new C3BBBBB();
			if (tc5.f0() != 989720220)
				return 18;
			if (tc5.f1() != 1112598097)
				return 19;
			if (tc5.f2() != 2129472840)
				return 20;
			C3BBBBBB tc6 = new C3BBBBBB();
			if (tc6.f0() != 989720220)
				return 21;
			if (tc6.f1() != 1112598097)
				return 22;
			if (tc6.f2() != 2129472840)
				return 23;
			C3BBBBBBB tc7 = new C3BBBBBBB();
			if (tc7.f0() != 989720220)
				return 24;
			if (tc7.f1() != 1112598097)
				return 25;
			if (tc7.f2() != 647359417)
				return 26;
			C3BBBBBBBB tc8 = new C3BBBBBBBB();
			if (tc8.f0() != 989720220)
				return 27;
			if (tc8.f1() != 587190582)
				return 28;
			if (tc8.f2() != 647359417)
				return 29;
			C3BBBBBBBBBBB tc9 = new C3BBBBBBBBBBB();
			if (tc9.f0() != 989720220)
				return 30;
			if (tc9.f1() != 1112598097)
				return 31;
			if (tc9.f2() != 2129472840)
				return 32;
			if (tc9.f3() != 1763628830)
				return 33;
			return 0;
	}
}
