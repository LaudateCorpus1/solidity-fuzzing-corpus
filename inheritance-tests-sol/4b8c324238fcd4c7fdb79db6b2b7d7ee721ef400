pragma solidity >=0.0;
library L0 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
}
interface C1BBBBBBB {
	function f0() external view returns (uint);
}
interface C1BBBBBB is C1BBBBBBB {
}
interface C1BBBBB is C1BBBBBB {
	function f0() override
	external view returns (uint);
}
interface C1BBBBBBBB is C1BBBBB {
	function f1() external payable returns (uint);
}
interface C1BBBB is C1BBBBB, C1BBBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface C1BBB is C1BBBB {
}
interface C1BB is C1BBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
contract C1B is C1BB {
	function f0() external view
	override
	returns (uint)
	{
		return 2111632871;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1531210416;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1774893867;
	}
}
contract C1 is C1B {
	function f1() external payable
	override
	returns (uint)
	{
		return 921256890;
	}
}
contract C2 {
	function f0() public view
	
	returns (uint)
	{
		return 1389449997;
	}
}
abstract contract C3BB {
	function f0() virtual public view
	
	returns (uint)
	{
		return 445221226;
	}
}
abstract contract C3B is C3BB {
	function f1() virtual public payable
	
	returns (uint);
}
contract C3 is C3B {
	function f0() virtual public view
	override
	returns (uint)
	{
		return 1709834337;
	}
	function f1() virtual public payable
	override
	returns (uint)
	{
		return 654429131;
	}
}
contract C4 {
	function f0() public payable
	
	returns (uint)
	{
		return 464135131;
	}
}
interface C5BBB {
	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface C5BB is C5BBB {
	function f1() override
	external payable returns (uint);
}
interface C5B is C5BB {
}
contract C5 is C5B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 837912430;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 194715758;
	}
}
interface I6BBB {
}
interface I6BB is I6BBB {
	function f0() external view returns (uint);
}
interface I6B is I6BB {
}
interface I6BBBBBB {
	function f0() external view returns (uint);
}
interface I6BBBBB is I6BBBBBB {
	function f1() external payable returns (uint);
}
interface I6BBBB is I6BB, I6BBBBB {
	function f0() override(I6BB, I6BBBBBB)
	external view returns (uint);
}
interface I6 is I6B, I6BBBB {
	function f0() override(I6BB, I6BBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
contract C7 {
	function f0() public view
	
	returns (uint)
	{
		return 619611247;
	}
}
library L8 {
	function f0(uint) public view returns (uint)
	{
		return 1714636915;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 2111632871)
				return 1;
			if (tc0.f1() != 921256890)
				return 2;
			if (tc0.f2() != 1774893867)
				return 3;
			C1B tc1 = new C1B();
			if (tc1.f0() != 2111632871)
				return 4;
			if (tc1.f1() != 1531210416)
				return 5;
			if (tc1.f2() != 1774893867)
				return 6;
			C2 tc2 = new C2();
			if (tc2.f0() != 1389449997)
				return 7;
			C3 tc3 = new C3();
			if (tc3.f0() != 1709834337)
				return 8;
			if (tc3.f1() != 654429131)
				return 9;
			C4 tc4 = new C4();
			if (tc4.f0() != 464135131)
				return 10;
			C5 tc5 = new C5();
			if (tc5.f0() != 837912430)
				return 11;
			if (tc5.f1() != 194715758)
				return 12;
			C7 tc6 = new C7();
			if (tc6.f0() != 619611247)
				return 13;
			return 0;
	}
}
