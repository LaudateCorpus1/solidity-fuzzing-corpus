pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
contract C1 {
	function f0() public view
	
	returns (uint)
	{
		return 182605794;
	}
}
library L3 {
	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
interface C4BBBBBBB {
	function f0() external view returns (uint);
}
interface C4BBBBBB is C4BBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C4BBBBB is C4BBBBBB {
}
interface C4BBBB is C4BBBBB {
}
interface C4BBB is C4BBBB {
}
interface C4BB is C4BBB {
	function f1() external payable returns (uint);
}
interface C4B is C4BB {
	function f2() external view returns (uint);
}
contract C4 is C4B {
	function f0() external view
	override
	returns (uint)
	{
		return 1882556969;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1559527823;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 638022372;
	}
}
interface C8BBBBB {
	function f0() external payable returns (uint);
}
interface C8BBBB is C8BBBBB {
}
interface C8BBB is C8BBBB {
	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface C8BB is C8BBB {
	function f0() override
	external payable returns (uint);
}
abstract contract C8B is C8BB {
	function f0() virtual external payable
	override
	returns (uint);
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1696049367;
	}
}
contract C8 is C8B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1272185027;
	}
}
library L9 {
	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}
contract C10BB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1308858262;
	}
}
contract C10B is C10BB {
	function f0() public pure
	override
	returns (uint)
	{
		return 1814467857;
	}
}
interface C10BBB {
}
contract C10BBBB is C10BBB {
}
abstract contract C10 is C10B, C10BBB, C10BBBB {
}
interface C11BBB {
	function f0() external payable returns (uint);
}
interface C11BB is C11BBB {
}
interface C11B is C11BB {
}
contract C11 is C11B {
	function f0() external payable
	override
	returns (uint)
	{
		return 389431516;
	}
}
contract C12 {
	function f0() public view
	
	returns (uint)
	{
		return 1324346645;
	}
}
library L13 {
	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) external pure returns (uint)
	{
		return 719885386;
	}
}
library L14 {
	function f0(uint) public pure returns (uint)
	{
		return 1649760492;
	}
}
interface C15BBBB {
	function f0() external payable returns (uint);
}
interface C15BBB is C15BBBB {
}
contract C15BB is C15BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1951824771;
	}
}
contract C15B is C15BB {
}
contract C15 is C15B {
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 182605794)
				return 1;
			C10B tc1 = new C10B();
			if (tc1.f0() != 1814467857)
				return 2;
			C10BB tc2 = new C10BB();
			if (tc2.f0() != 1308858262)
				return 3;
			C11 tc3 = new C11();
			if (tc3.f0() != 389431516)
				return 4;
			C12 tc4 = new C12();
			if (tc4.f0() != 1324346645)
				return 5;
			C15 tc5 = new C15();
			if (tc5.f0() != 1951824771)
				return 6;
			C15B tc6 = new C15B();
			if (tc6.f0() != 1951824771)
				return 7;
			C15BB tc7 = new C15BB();
			if (tc7.f0() != 1951824771)
				return 8;
			C4 tc8 = new C4();
			if (tc8.f0() != 1882556969)
				return 9;
			if (tc8.f1() != 1559527823)
				return 10;
			if (tc8.f2() != 638022372)
				return 11;
			C8 tc9 = new C8();
			if (tc9.f0() != 1272185027)
				return 12;
			if (tc9.f1() != 1696049367)
				return 13;
			return 0;
	}
}
