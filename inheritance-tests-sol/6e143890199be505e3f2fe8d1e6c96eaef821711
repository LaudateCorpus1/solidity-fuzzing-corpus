
pragma solidity >=0.0;




interface I0B {

	function f0() external payable returns (uint);
}

interface I0BB is I0B {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I0 is I0B, I0BB {

	function f0() override(I0B, I0BB)
	external payable returns (uint);
}
library L1 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}


contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}

