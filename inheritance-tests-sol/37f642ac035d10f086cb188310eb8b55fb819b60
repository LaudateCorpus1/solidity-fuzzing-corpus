pragma solidity >=0.0;
contract C0 {
	function f0() public view
	
	returns (uint)
	{
		return 494295040;
	}
}
interface I1 {
	function f0() external payable returns (uint);
}
interface I2BBBBB {
	function f0() external view returns (uint);
}
interface I2BBBBBB is I2BBBBB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I2BBBB is I2BBBBB, I2BBBBBB {
	function f0() override(I2BBBBB, I2BBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I2BBB is I2BBBB {
	function f0() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
interface I2BB is I2BBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
interface I2B is I2BB {
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external payable returns (uint);
}
interface I2 is I2B {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
library L3 {
	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1681692777;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1714636915;
	}
}
interface I4B {
	function f0() external view returns (uint);
}
interface I4 is I4B {
	function f0() override
	external view returns (uint);
}
interface I5BBBBBBBBB {
	function f0() external view returns (uint);
}
interface I5BBBBBBBBBB is I5BBBBBBBBB {
	function f1() external view returns (uint);
}
interface I5BBBBBBBB is I5BBBBBBBBB, I5BBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I5BBBBBBB is I5BBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I5BBBBBB is I5BBBBBBB {
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
interface I5BBBBB is I5BBBBBB {
	function f1() override
	external view returns (uint);
	function f4() external payable returns (uint);
}
interface I5BBBB is I5BBBBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
}
interface I5BBBBBBBBBBB is I5BBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() external payable returns (uint);
}
interface I5BBB is I5BBBB, I5BBBBBBBBBBB {
	function f0() override(I5BBBB, I5BBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I5BBBBB, I5BBBBBBBBBBB)
	external view returns (uint);
	function f2() override(I5BBBB, I5BBBBBBBBBBB)
	external payable returns (uint);
	function f4() override(I5BBBB, I5BBBBBBBBBBB)
	external payable returns (uint);
	function f6() external view returns (uint);
	function f7() external payable returns (uint);
	function f8() external view returns (uint);
	function f9() external payable returns (uint);
}
interface I5BB is I5BBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
}
interface I5B is I5BB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
}
interface I5BBBBBBBBBBBB is I5B {
	function f3() override
	external view returns (uint);
	function f7() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() external payable returns (uint);
}
interface I5BBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I5BBBBBBBBBBBBB is I5B, I5BBBBBBBBBBBBBB {
	function f0() override(I5B, I5BBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() external payable returns (uint);
}
interface I5BBBBBBBBBBBBBBB is I5B {
	function f0() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f10() external payable returns (uint);
}
interface I5 is I5B, I5BBBBBBBBBBBB, I5BBBBBBBBBBBBB, I5BBBBBBBBBBBBBBB {
	function f0() override(I5B, I5BBBBBBBBBBBBB, I5BBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override(I5BBB, I5BBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I5B, I5BBBBBBBBBBBB, I5BBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I5BB, I5BBBBBBBBBBBBB, I5BBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override(I5B, I5BBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(I5BBB, I5BBBBBBBBBBBBB, I5BBBBBBBBBBBBBBB)
	external view returns (uint);
	function f7() override(I5BBB, I5BBBBBBBBBBBB)
	external payable returns (uint);
	function f9() override(I5B, I5BBBBBBBBBBBB, I5BBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(I5BBBBBBBBBBBB, I5BBBBBBBBBBBBB, I5BBBBBBBBBBBBBBB)
	external payable returns (uint);
}
library L6 {
	function f0(uint) external pure returns (uint)
	{
		return 1189641421;
	}
}
contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1681692777)
			return 1;
		return 0;
	}
}
