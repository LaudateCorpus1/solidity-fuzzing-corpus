pragma solidity >=0.0;
library L0 {
	function f0(uint) internal view returns (uint)
	{
		return 1804289383;
	}
}
library L1 {
	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
}
library L2 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
	function f2(uint) public pure returns (uint)
	{
		return 1957747793;
	}
}
interface C3BBB {
	function f0() external payable returns (uint);
}
interface C3BB is C3BBB {
}
contract C3B is C3BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 2020420659;
	}
}
contract C3 is C3B {
}
interface I5BBB {
	function f0() external view returns (uint);
}
interface I5BB is I5BBB {
}
interface I5B is I5BB {
}
interface I5 is I5B {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I6 {
	function f0() external pure returns (uint);
}
interface I7BBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I7BBBBBBBBB is I7BBBBBBBBBB {
}
interface I7BBBBBBBBBBB is I7BBBBBBBBBB {
	function f1() external payable returns (uint);
}
interface I7BBBBBBBB is I7BBBBBBBBB, I7BBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I7BBBBBBB is I7BBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
interface I7BBBBBB is I7BBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() external pure returns (uint);
}
interface I7BBBBB is I7BBBBBB {
	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external pure returns (uint);
	function f5() external payable returns (uint);
}
interface I7BBBB is I7BBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external pure returns (uint);
	function f5() override
	external payable returns (uint);
}
interface I7BBBBBBBBBBBB is I7BBBB {
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() external payable returns (uint);
}
interface I7BBB is I7BBBB, I7BBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override(I7BBBB, I7BBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I7BBBB, I7BBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I7BBBB, I7BBBBBBBBBBBB)
	external view returns (uint);
	function f4() override
	external pure returns (uint);
	function f5() override(I7BBBB, I7BBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override
	external payable returns (uint);
	function f7() external view returns (uint);
}
interface I7BB is I7BBB {
	function f0() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
}
interface I7B is I7BB {
	function f0() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
}
interface I7 is I7B {
	function f5() override
	external payable returns (uint);
	function f7() override
	external view returns (uint);
}
library L9 {
	function f0(uint) public view returns (uint)
	{
		return 1350490027;
	}
}
library L10 {
	function f0(uint) internal view returns (uint)
	{
		return 783368690;
	}
}
contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}
