pragma solidity >=0.0;
library L0 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
interface C2BBB {
	function f0() external payable returns (uint);
}
interface C2BB is C2BBB {
	function f0() override
	external payable returns (uint);
}
contract C2B is C2BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 254372588;
	}
}
contract C2 is C2B {
}
interface I3B {
	function f0() external view returns (uint);
}
interface I3BBBBBB {
}
interface I3BBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I3BBBBBBBBB is I3BBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I3BBBBBBBB is I3BBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I3BBBBBBB is I3BBBBBB, I3BBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I3BBBBB is I3BBBBBB, I3BBBBBBB {
}
interface I3BBBB is I3BBBBB {
	function f0() override
	external view returns (uint);
}
interface I3BBB is I3BBBB {
	function f0() override
	external view returns (uint);
}
interface I3BB is I3B, I3BBB {
	function f0() override(I3B, I3BBB)
	external view returns (uint);
}
interface I3 is I3B, I3BB {
	function f0() override(I3B, I3BB)
	external view returns (uint);
}
interface I5B {
	function f0() external view returns (uint);
}
interface I5BBBBBB {
}
interface I5BBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I5BBBBBBBBB is I5BBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I5BBBBBBBB is I5BBBBBBBBB {
}
interface I5BBBBBBB is I5BBBBBB, I5BBBBBBBB {
}
interface I5BBBBB is I5BBBBBB, I5BBBBBBB {
}
interface I5BBBB is I5BBBBB {
	function f0() override
	external view returns (uint);
}
interface I5BBB is I5BBBB {
}
interface I5BB is I5B, I5BBB {
	function f0() override(I5B, I5BBBB)
	external view returns (uint);
}
interface I5BBBBBBBBBBB is I5BB {
	function f1() external view returns (uint);
}
interface I5BBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I5BBBBBBBBBBBBBB is I5BBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I5BBBBBBBBBBBBBBBB is I5BBBBBBBBBBBBBBB {
	function f1() external view returns (uint);
}
interface I5BBBBBBBBBBBBB is I5BBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBBB {
	function f0() override(I5BBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I5BBBBBBBBBBBB is I5BBB, I5BBBBBBBBBBBBB {
	function f0() override(I5BBBB, I5BBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I5 is I5B, I5BB, I5BBBBBBBBBBB, I5BBBBBBBBBBBB {
	function f0() override(I5B, I5BB, I5BBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I5BBBBBBBBBBB, I5BBBBBBBBBBBB)
	external view returns (uint);
}
library L6 {
	function f0(uint) public view returns (uint)
	{
		return 1189641421;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1025202362;
	}
}
interface I7BB {
	function f0() external view returns (uint);
}
interface I7B is I7BB {
}
interface I7BBB is I7BB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I7 is I7B, I7BBB {
	function f0() override(I7BB, I7BBB)
	external view returns (uint);
}
library L8 {
	function f0(uint) internal pure returns (uint)
	{
		return 783368690;
	}
	function f1(uint) public view returns (uint)
	{
		return 1102520059;
	}
}
contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 254372588)
				return 1;
			C2B tc1 = new C2B();
			if (tc1.f0() != 254372588)
				return 2;
			return 0;
	}
}
