
pragma solidity >=0.0;





interface C0BB {

	function f0() external view returns (uint);
}
interface C0B is C0BB {

}
contract C0 is C0B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1914720637;
	}
}







interface C1BBBBBB {

	function f0() external view returns (uint);
}
interface C1BBBBB is C1BBBBBB {

}
contract C1BBBB is C1BBBBB {

	function f0() external view
	override
	returns (uint)
	{
		return 854716505;
	}
}
contract C1BBB is C1BBBB {

}
contract C1BB is C1BBB {

}
contract C1B is C1BB {

}
contract C1 is C1B {

}
library L2 {

	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1914720637)
				return 1;
			C1 tc1 = new C1();
			if (tc1.f0() != 854716505)
				return 2;
			C1B tc2 = new C1B();
			if (tc2.f0() != 854716505)
				return 3;
			C1BB tc3 = new C1BB();
			if (tc3.f0() != 854716505)
				return 4;
			C1BBB tc4 = new C1BBB();
			if (tc4.f0() != 854716505)
				return 5;
			C1BBBB tc5 = new C1BBBB();
			if (tc5.f0() != 854716505)
				return 6;
			return 0;
	}
}

