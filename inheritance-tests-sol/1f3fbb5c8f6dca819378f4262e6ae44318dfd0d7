
pragma solidity >=0.0;


library L0 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}



interface C1BB {

	function f0() external view returns (uint);
}
interface C1B is C1BB {

	function f0() override
	external view returns (uint);
}
contract C1 is C1B {

	function f0() external view
	override
	returns (uint)
	{
		return 2078669041;
	}
}


















interface I2BBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}

interface I2BBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBB {

	function f1() external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBB {

	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I2BBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBB {

	function f2() override
	external payable returns (uint);
}
interface I2BBBBBBBBBBBBB is I2BBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() external payable returns (uint);
}
interface I2BBBBBBBBBBBB is I2BBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}

interface I2BBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() external payable returns (uint);
}
interface I2BBBBBBBBBBB is I2BBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBB {

	function f0() override(I2BBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I2BBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(I2BBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I2BBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f6() external payable returns (uint);
	function f7() external payable returns (uint);
	function f8() external payable returns (uint);
	function f9() external payable returns (uint);
}
interface I2BBBBBBBBBB is I2BBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
}
interface I2BBBBBBBBB is I2BBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() external payable returns (uint);
}
interface I2BBBBBBBB is I2BBBBBBBBB {

	function f2() override
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
}

interface I2BBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBB {

	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() external view returns (uint);
}
interface I2BBBBBBB is I2BBBBBBBB, I2BBBBBBBBBBBBBBBBBBBB {

	function f1() override(I2BBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(I2BBBBBBBB, I2BBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I2BBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I2BBBBBBBB, I2BBBBBBBBBB)
	external payable returns (uint);
	function f5() override(I2BBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f7() override(I2BBBBBBBB, I2BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override(I2BBBBBBBB, I2BBBBBBBBBBB)
	external payable returns (uint);
	function f9() override(I2BBBBBBBB, I2BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(I2BBBBBBBB, I2BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override
	external view returns (uint);
	function f12() external payable returns (uint);
	function f13() external pure returns (uint);
	function f14() external payable returns (uint);
	function f15() external view returns (uint);
}
interface I2BBBBBB is I2BBBBBBB {

	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
	function f15() override
	external view returns (uint);
}
interface I2BBBBB is I2BBBBBB {

	function f1() override
	external view returns (uint);
	function f8() override
	external payable returns (uint);
	function f11() override
	external view returns (uint);
	function f13() override
	external pure returns (uint);
	function f14() override
	external payable returns (uint);
	function f15() override
	external view returns (uint);
	function f16() external pure returns (uint);
}


interface I2BBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBB is I2BBBBBB, I2BBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I2BBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override
	external view returns (uint);
	function f12() override
	external payable returns (uint);
	function f13() override
	external pure returns (uint);
	function f14() override
	external payable returns (uint);
	function f15() override
	external view returns (uint);
}
interface I2BBBB is I2BBBBB, I2BBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I2BBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I2BBBBB, I2BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(I2BBBBBB, I2BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f4() override(I2BBBBBB, I2BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override(I2BBBBBBB, I2BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(I2BBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f7() override(I2BBBBBB, I2BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override(I2BBBBB, I2BBBBBB)
	external payable returns (uint);
	function f10() override(I2BBBBBBB, I2BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(I2BBBBB, I2BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f12() override(I2BBBBBBB, I2BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f13() override(I2BBBBB, I2BBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f14() override(I2BBBBB, I2BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f15() override(I2BBBBB, I2BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}

interface I2BBBBBBBBBBBBBBBBBBBBBBB is I2BBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
	function f11() override
	external view returns (uint);
	function f17() external payable returns (uint);
}
interface I2BBB is I2BBBB, I2BBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I2BBBB, I2BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I2BBBB, I2BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(I2BBBB, I2BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I2BBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I2BBBB, I2BBBBBB)
	external payable returns (uint);
	function f5() override(I2BBBB, I2BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(I2BBBB, I2BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f7() override(I2BBBB, I2BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override(I2BBBB, I2BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override(I2BBBB, I2BBBBBBB)
	external payable returns (uint);
	function f11() override(I2BBBB, I2BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f12() override(I2BBBB, I2BBBBBBB)
	external payable returns (uint);
	function f13() override(I2BBBB, I2BBBBB)
	external pure returns (uint);
	function f14() override(I2BBBB, I2BBBBB)
	external payable returns (uint);
	function f15() override(I2BBBB, I2BBBBB)
	external view returns (uint);
	function f16() override
	external pure returns (uint);
	function f18() external view returns (uint);
}
interface I2BB is I2BBB {

	function f0() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
	function f17() override
	external payable returns (uint);
}
interface I2B is I2BB {

	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f11() override
	external view returns (uint);
	function f12() override
	external payable returns (uint);
	function f14() override
	external payable returns (uint);
	function f15() override
	external view returns (uint);
	function f17() override
	external payable returns (uint);
}

interface I2BBBBBBBBBBBBBBBBBBBBBBBB is I2B {

	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f6() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f11() override
	external view returns (uint);
	function f13() override
	external pure returns (uint);
	function f14() override
	external payable returns (uint);
	function f15() override
	external view returns (uint);
	function f16() override
	external pure returns (uint);
	function f19() external payable returns (uint);
}
interface I2 is I2B, I2BBBBBBBBBBBBBBBBBBBBBBBB {

	function f2() override(I2BBB, I2BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I2B, I2BBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I2B, I2BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override(I2BB, I2BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override(I2BB, I2BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f9() override(I2BBB, I2BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(I2B, I2BBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f13() override(I2BBB, I2BBBBBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f14() override(I2B, I2BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f15() override(I2B, I2BBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f16() override(I2BBB, I2BBBBBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f19() override
	external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 2078669041)
				return 1;
			return 0;
	}
}

