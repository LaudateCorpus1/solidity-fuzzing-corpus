
pragma solidity >=0.0;





abstract contract C0BB {

	function f0() virtual public payable
	
	returns (uint);
}
abstract contract C0B is C0BB {

	function f0() virtual public payable
	override
	returns (uint);
	function f1() virtual public payable
	
	returns (uint);
}




interface C0BBBBBB {

}
contract C0BBBBB is C0BBBBBB {

}
contract C0BBBB is C0BBBBB {

}
contract C0BBB is C0BB, C0BBBB {

	function f0() virtual public payable
	override
	returns (uint)
	{
		return 489324777;
	}
}
abstract contract C0 is C0B, C0BBB {

	function f0() public payable
	override(C0BBB, C0B)
	returns (uint)
	{
		return 699130566;
	}
	function f1() virtual public payable
	override
	returns (uint)
	{
		return 689644887;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0BBB tc0 = new C0BBB();
			if (tc0.f0() != 489324777)
				return 1;
			return 0;
	}
}

