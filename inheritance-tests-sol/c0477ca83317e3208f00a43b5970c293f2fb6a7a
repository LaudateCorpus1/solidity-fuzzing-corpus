
pragma solidity >=0.0;






interface I0BBB {

	function f0() external payable returns (uint);
}
interface I0BB is I0BBB {

}
interface I0B is I0BB {

	function f0() override
	external payable returns (uint);
}



interface I0BBBBBB {

	function f0() external payable returns (uint);
}



interface I0BBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I0BBBBBBBB is I0BBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I0BBBBBBB is I0BBBBBB, I0BBBBBBBB {

	function f0() override(I0BBBBBB, I0BBBBBBBB)
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface I0BBBBB is I0BBBBBB, I0BBBBBBB {

	function f0() override(I0BBBBBB, I0BBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() external view returns (uint);
}
interface I0BBBB is I0BB, I0BBBBB {

	function f0() override(I0BBB, I0BBBBB)
	external payable returns (uint);
}

interface I0BBBBBBBBBB is I0BB {

	function f0() override
	external payable returns (uint);
}

interface I0BBBBBBBBBBB is I0BB {

}

interface I0BBBBBBBBBBBB is I0BB {

}


interface I0BBBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBBBB is I0BB, I0BBBBBBBBBBBBBB {

}





interface I0BBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBB {

	function f1() external payable returns (uint);
}
interface I0BBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I0BBBBBBBBBBBBBBB is I0BBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBB {

	function f0() override(I0BBB, I0BBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}

interface I0BBBBBBBBBBBBBBBBBBBB is I0BBBB {

	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}

interface I0BBBBBBBBBBBBBBBBBBBBB is I0BB {

}

interface I0BBBBBBBBBBBBBBBBBBBBBB is I0BB {

	function f0() override
	external payable returns (uint);
}
interface I0 is I0B, I0BBBB, I0BBBBBBBBBB, I0BBBBBBBBBBB, I0BBBBBBBBBBBB, I0BBBBBBBBBBBBB, I0BBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I0B, I0BBBB, I0BBBBBBBBBB, I0BBB, I0BBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I0BBBBB, I0BBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I0BBBBBBB, I0BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
}






interface I1BBBBB {

	function f0() external payable returns (uint);
}
interface I1BBBB is I1BBBBB {

}
interface I1BBB is I1BBBB {

	function f1() external payable returns (uint);
}
interface I1BB is I1BBB {

	function f1() override
	external payable returns (uint);
}
interface I1B is I1BB {

	function f0() override
	external payable returns (uint);
}

interface I1BBBBBB is I1B {

	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}

interface I1BBBBBBB is I1B {

	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}

interface I1BBBBBBBB is I1BBBBBB {

	function f1() override
	external payable returns (uint);
}

interface I1BBBBBBBBB is I1B {

}





interface I1BBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I1BBBBBBBBBBBBB is I1BBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBB is I1BBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I1BBBBBBBBBBB is I1BBBBBBBBBBBB {

	function f2() external view returns (uint);
}
interface I1BBBBBBBBBB is I1B, I1BBBBBBBBBBB {

	function f0() override(I1B, I1BBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I1BB, I1BBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override
	external view returns (uint);
}



interface I1BBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBB is I1BBBBBBBBBB, I1BBBBBBBBBBBBBBBB {

	function f0() override(I1BBBBBBBBBB, I1BBBBBBBBBBBBBBBB)
	external payable returns (uint);
}

interface I1BBBBBBBBBBBBBBBBBB is I1BBBBBBBBBB {

}


interface I1BBBBBBBBBBBBBBBBBBBB {

}
interface I1BBBBBBBBBBBBBBBBBBB is I1BBBBBB, I1BBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}

interface I1BBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBB {

}

interface I1BBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBB {

	function f1() override
	external payable returns (uint);
}

interface I1BBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBB {

}



interface I1BBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBB {

}


interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1BBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1B, I1BBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}

interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1B {

	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}



interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}



interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1BBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I1BBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
}

interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBB {

	function f0() override
	external payable returns (uint);
}

interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1B {

	function f1() override
	external payable returns (uint);
}

interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBB {

}



interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1BBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I1 is I1B, I1BBBBBB, I1BBBBBBB, I1BBBBBBBB, I1BBBBBBBBB, I1BBBBBBBBBB, I1BBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1B, I1BBBBBB, I1BBBBBBB, I1BBBBBBBBBB, I1BBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I1BB, I1BBBBBB, I1BBBBBBB, I1BBBBBBBB, I1BBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I1BBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}




interface I2BBB {

	function f0() external payable returns (uint);
}
interface I2BB is I2BBB {

	function f0() override
	external payable returns (uint);
}


interface I2BBBBB {

	function f0() external payable returns (uint);
}
interface I2BBBB is I2BBB, I2BBBBB {

	function f0() override(I2BBB, I2BBBBB)
	external payable returns (uint);
}
interface I2B is I2BB, I2BBBB {

	function f0() override(I2BB, I2BBBB)
	external payable returns (uint);
}





interface I2BBBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I2BBBBBBBBB is I2BBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I2BBBBBBBB is I2BBBBBBBBB {

	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface I2BBBBBBB is I2BBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() external view returns (uint);
}
interface I2BBBBBB is I2B, I2BBBBBBB {

	function f0() override(I2B, I2BBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}

interface I2BBBBBBBBBBB is I2BBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}

interface I2BBBBBBBBBBBB is I2B {

	function f0() override
	external payable returns (uint);
}

interface I2BBBBBBBBBBBBB is I2BBBBBB {

	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}



interface I2BBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I2BBBBBBBBBBBBBB is I2B, I2BBBBBBBBBBBBBBB {

	function f0() override(I2B, I2BBBBBBBBBBBBBBB)
	external payable returns (uint);
}





interface I2BBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBB {

	function f1() override
	external payable returns (uint);
}


interface I2BBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I2BBBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBB is I2BBBB, I2BBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I2BBBB, I2BBBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I2BBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
}

interface I2BBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBB {

}

interface I2BBBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBB {

}

interface I2BBBBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBB {

	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
interface I2 is I2B, I2BBBBBB, I2BBBBBBBBBBB, I2BBBBBBBBBBBB, I2BBBBBBBBBBBBB, I2BBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I2B, I2BBBBBB, I2BBBBBBBBBBB, I2BBBBBBBBBBBB, I2BBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I2BBBBBB, I2BBBBBBBBBBB, I2BBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I2BBBBBBB, I2BBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I2BBBBBB, I2BBBBBBBBBBB, I2BBBBBBBBBBBBB)
	external view returns (uint);
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

