
pragma solidity >=0.0;




interface I0B {

	function f0() external view returns (uint);
}
interface I0 is I0B {

}


interface C1B {

	function f0() external view returns (uint);
}

interface C1BB is C1B {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}

interface C1BBB is C1BB {

	function f2() external view returns (uint);
}
contract C1 is C1B, C1BB, C1BBB {

	function f0() external view
	override(C1BB, C1B)
	returns (uint)
	{
		return 854716505;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1596680831;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1203428207;
	}
}
library L2 {

	function f0(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 854716505)
				return 1;
			if (tc0.f1() != 1596680831)
				return 2;
			if (tc0.f2() != 1203428207)
				return 3;
			return 0;
	}
}

