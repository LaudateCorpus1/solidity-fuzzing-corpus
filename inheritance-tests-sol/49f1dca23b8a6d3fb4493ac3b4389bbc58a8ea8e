
pragma solidity >=0.0;








interface I0BBBBB {

	function f0() external view returns (uint);
}
interface I0BBBB is I0BBBBB {

	function f0() override
	external view returns (uint);
}
interface I0BBB is I0BBBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I0BB is I0BBB {

	function f0() override
	external view returns (uint);
}
interface I0B is I0BB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I0 is I0B {

	function f0() override
	external view returns (uint);
}




interface I1BBB {

}
interface I1BB is I1BBB {

	function f0() external view returns (uint);
}
interface I1B is I1BB {

}



interface I1BBBBBB {

	function f0() external view returns (uint);
}
interface I1BBBBB is I1BBBBBB {

	function f1() external payable returns (uint);
}
interface I1BBBB is I1BB, I1BBBBB {

	function f0() override(I1BB, I1BBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I1 is I1B, I1BBBB {

	function f0() override(I1BB, I1BBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}
library L2 {

	function f0(uint) external pure returns (uint)
	{
		return 846930886;
	}
}

interface I3 {

	function f0() external payable returns (uint);
}


contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}

