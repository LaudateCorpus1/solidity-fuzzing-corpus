pragma solidity >=0.0;
interface C0BBBBBBB {
	function f0() external view returns (uint);
}
interface C0BBBBBB is C0BBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C0BBBBB is C0BBBBBB {
}
interface C0BBBB is C0BBBBB {
}
interface C0BBB is C0BBBB {
}
interface C0BB is C0BBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface C0B is C0BB {
	function f2() external view returns (uint);
}
contract C0 is C0B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 758502328;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1354798862;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 714404773;
	}
}
abstract contract C1B {
}
interface C1BBBBBB {
	function f0() external view returns (uint);
}
interface C1BBBBB is C1BBBBBB {
}
interface C1BBBB is C1BBBBB {
}
interface C1BBB is C1BBBB {
	function f0() override
	external view returns (uint);
}
contract C1BB is C1B, C1BBB {
	function f0() external view
	override
	returns (uint)
	{
		return 461049841;
	}
}
contract C1 is C1B, C1BB {
}
library L2 {
	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
interface C5BBBB {
	function f0() external payable returns (uint);
}
interface C5BBB is C5BBBB {
	function f0() override
	external payable returns (uint);
}
contract C5BB is C5BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1672420416;
	}
}
contract C5B is C5BB {
}
contract C5 is C5B {
}
contract C6B {
}
interface C6BBBBBB {
	function f0() external view returns (uint);
}
interface C6BBBBB is C6BBBBBB {
	function f0() override
	external view returns (uint);
}
interface C6BBBB is C6BBBBB {
}
interface C6BBB is C6BBBB {
	function f0() override
	external view returns (uint);
}
contract C6BB is C6B, C6BBB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1047480955;
	}
}
contract C6 is C6B, C6BB {
}
contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}
