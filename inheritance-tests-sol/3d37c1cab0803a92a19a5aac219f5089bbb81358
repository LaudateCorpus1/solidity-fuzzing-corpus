
pragma solidity >=0.0;






interface I0BBB {

	function f0() external payable returns (uint);
}
interface I0BB is I0BBB {

	function f1() external payable returns (uint);
}
interface I0B is I0BB {

	function f0() override
	external payable returns (uint);
}


interface I0BBBBB {

	function f0() external payable returns (uint);
}
interface I0BBBB is I0BB, I0BBBBB {

	function f0() override(I0BBB, I0BBBBB)
	external payable returns (uint);
}
interface I0 is I0B, I0BBBB {

	function f0() override(I0B, I0BBBB)
	external payable returns (uint);
}



contract C1BB {

	function f0() public view
	
	returns (uint)
	{
		return 564586691;
	}
}
contract C1B is C1BB {

	function f1() virtual public pure
	
	returns (uint)
	{
		return 1596680831;
	}
}
contract C1 is C1B {

}










interface C2BBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C2BBBBBBBB is C2BBBBBBBBB {

}
interface C2BBBBBBB is C2BBBBBBBB {

	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C2BBBBBB is C2BBBBBBB {

	function f2() override
	external view returns (uint);
}

interface C2BBBBBBBBBB is C2BBBBBB {

	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface C2BBBBB is C2BBBBBB, C2BBBBBBBBBB {

	function f2() override(C2BBBBBB, C2BBBBBBBBBB)
	external view returns (uint);
	function f3() override(C2BBBBBBB, C2BBBBBBBBBB)
	external view returns (uint);
}
contract C2BBBB is C2BBBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1105724094;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1696049367;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1168816941;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 201068705;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 928270262;
	}
}
contract C2BBB is C2BBBB {

	function f2() external view
	override
	returns (uint)
	{
		return 153892771;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 1675824860;
	}
}
contract C2BB is C2BBB {

	function f1() external pure
	override
	returns (uint)
	{
		return 1243696899;
	}
}
contract C2B is C2BB {

}

contract C2BBBBBBBBBBB is C2BB {

}
contract C2 is C2B, C2BBBBBBBBBBB {

}
library L3 {

	function f0(uint) public view returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) private view returns (uint)
	{
		return 1957747793;
	}
}









interface C4BBBBBBBB {

	function f0() external view returns (uint);
}
interface C4BBBBBBB is C4BBBBBBBB {

}
interface C4BBBBBB is C4BBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C4BBBBB is C4BBBBBB {

}
interface C4BBBB is C4BBBBB {

	function f0() override
	external view returns (uint);
}
interface C4BBB is C4BBBB {

	function f0() override
	external view returns (uint);
}
interface C4BB is C4BBB {

}
interface C4B is C4BB {

	function f0() override
	external view returns (uint);
}

interface C4BBBBBBBBB is C4BB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
contract C4 is C4B, C4BBBBBBBBB {

	function f0() external view
	override(C4BBBBBBBBB, C4B)
	returns (uint)
	{
		return 143244144;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 837051536;
	}
}


interface I5B {

	function f0() external view returns (uint);
}




interface I5BBBBB {

	function f0() external view returns (uint);
}
interface I5BBBB is I5BBBBB {

}
interface I5BBB is I5BBBB {

}
interface I5BB is I5B, I5BBB {

	function f0() override(I5B, I5BBBBB)
	external view returns (uint);
}




interface I5BBBBBBBBB {

	function f0() external view returns (uint);
}
interface I5BBBBBBBB is I5BBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I5BBBBBBB is I5BBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I5BBBBBB is I5B, I5BBBBBBB {

	function f0() override(I5B, I5BBBBBBB)
	external view returns (uint);
}
interface I5 is I5B, I5BB, I5BBBBBB {

	function f0() override(I5B, I5BB, I5BBBBBB)
	external view returns (uint);
}


contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1714636915)
			return 1;
		return 0;
	}
}

