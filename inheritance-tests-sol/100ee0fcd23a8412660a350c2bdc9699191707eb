pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
contract C3 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1291394886;
	}
}
library L4 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
interface I5BBB {
	function f0() external pure returns (uint);
	function f1() external view returns (uint);
}
interface I5BB is I5BBB {
	function f2() external payable returns (uint);
}
interface I5B is I5BB {
}
interface I5 is I5B {
}
interface I6BBBBBBBBB {
	function f0() external view returns (uint);
}
interface I6BBBBBBBBBB is I6BBBBBBBBB {
	function f1() external payable returns (uint);
}
interface I6BBBBBBBB is I6BBBBBBBBB, I6BBBBBBBBBB {
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I6BBBBBBB is I6BBBBBBBB {
	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
interface I6BBBBBB is I6BBBBBBB {
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
interface I6BBBBB is I6BBBBBB {
	function f2() override
	external payable returns (uint);
	function f4() external payable returns (uint);
}
interface I6BBBB is I6BBBBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
interface I6BBBBBBBBBBB is I6BBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() external payable returns (uint);
}
interface I6BBB is I6BBBB, I6BBBBBBBBBBB {
	function f0() override(I6BBBB, I6BBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I6BBBBBB, I6BBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I6BBBB, I6BBBBB)
	external payable returns (uint);
	function f4() override(I6BBBBB, I6BBBBBBBBBBB)
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() external view returns (uint);
	function f7() external payable returns (uint);
	function f8() external view returns (uint);
	function f9() external payable returns (uint);
}
interface I6BB is I6BBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
}
interface I6B is I6BB {
	function f0() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
}
interface I6BBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I6BBBBBBBBBBBBBBBBBBBBB is I6BBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I6BBBBBBBBBBBBBBBBBBB is I6BBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I6BBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I6BBBBBBBBBBBBBBBBBB is I6BBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
interface I6BBBBBBBBBBBBBBBBB is I6BBBBBBBBBBBBBBBBBB {
	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
interface I6BBBBBBBBBBBBBBBB is I6BBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external payable returns (uint);
}
interface I6BBBBBBBBBBBBBBB is I6BBBBBBBBBBBBBBBB {
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
}
interface I6BBBBBBBBBBBBBBBBBBBBBB is I6BBBBBBBBBBBBBBBB {
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f5() external payable returns (uint);
}
interface I6BBBBBBBBBBBBBB is I6BBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBB {
	function f1() override(I6BBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I6BBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I6BBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I6BBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() external view returns (uint);
	function f7() external payable returns (uint);
	function f8() external view returns (uint);
	function f9() external payable returns (uint);
}
interface I6BBBBBBBBBBBBB is I6BBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
interface I6BBBBBBBBBBBBBBBBBBBBBBB is I6BBBBBBBBBBBBBB {
	function f2() override
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f8() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() external payable returns (uint);
}
interface I6BBBBBBBBBBBB is I6B, I6BBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I6B, I6BBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I6BBB, I6BBBBBBBBBBBBB, I6BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I6BB, I6BBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I6BBBBBB, I6BBBBBBBBBBBBB, I6BBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I6B, I6BBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override(I6BB, I6BBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(I6B, I6BBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f7() override(I6BB, I6BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override(I6BBB, I6BBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f9() override(I6B, I6BBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
}
interface I6BBBBBBBBBBBBBBBBBBBBBBBB is I6BBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() external payable returns (uint);
}
interface I6BBBBBBBBBBBBBBBBBBBBBBBBB is I6BB {
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f8() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() external payable returns (uint);
}
interface I6BBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I6BBBBBBBBBBBBBBBBBBBBBBBBBB is I6BBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I6BBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
}
interface I6BBBBBBBBBBBBBBBBBBBBBBBBBBBB is I6BBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f11() external payable returns (uint);
}
interface I6 is I6B, I6BBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I6B, I6BBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBB, I6BB, I6BBBBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I6BBB, I6BBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I6BB, I6BBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I6BBBBBB, I6BBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I6B, I6BBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override(I6BB, I6BBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(I6B, I6BBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f7() override(I6BB, I6BBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override(I6BBB, I6BBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f9() override(I6B, I6BBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(I6BBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(I6BBBBBBBBBBBBBBBBBBBBBBBB, I6BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f12() external payable returns (uint);
}
contract C {
	using L4 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1714636915)
			return 1;
		return 0;
	}
}
