pragma solidity >=0.0;
library L0 {
	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}
interface I1 {
	function f0() external payable returns (uint);
}
interface I3B {
	function f0() external pure returns (uint);
}
interface I3BB is I3B {
	function f0() override
	external pure returns (uint);
	function f1() external pure returns (uint);
}
interface I3 is I3B, I3BB {
	function f0() override(I3B, I3BB)
	external pure returns (uint);
}
interface I4 {
	function f0() external payable returns (uint);
}
library L5 {
	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}
interface I6BBBBBB {
}
interface I6BBBBB is I6BBBBBB {
	function f0() external view returns (uint);
}
interface I6BBBB is I6BBBBB {
}
interface I6BBBBBBBBBB {
}
interface I6BBBBBBBBB is I6BBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I6BBBBBBBB is I6BBBBBBBBB {
}
interface I6BBBBBBB is I6BBBBB, I6BBBBBBBB {
	function f0() override(I6BBBBB, I6BBBBBBBBB)
	external view returns (uint);
}
interface I6BBB is I6BBBB, I6BBBBBBB {
	function f0() override(I6BBBBB, I6BBBBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I6BB is I6BBB {
	function f2() external view returns (uint);
}
interface I6B is I6BB {
	function f2() override
	external view returns (uint);
}
interface I6BBBBBBBBBBBBBB {
}
interface I6BBBBBBBBBBBBB is I6BBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I6BBBBBBBBBBBB is I6BBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I6BBBBBBBBBBB is I6BB, I6BBBBBBBBBBBB {
	function f0() override(I6BBB, I6BBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I6 is I6B, I6BBBBBBBBBBB {
	function f0() override(I6BBB, I6BBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I6BBB, I6BBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I6B, I6BB)
	external view returns (uint);
	function f3() external payable returns (uint);
}
contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}
