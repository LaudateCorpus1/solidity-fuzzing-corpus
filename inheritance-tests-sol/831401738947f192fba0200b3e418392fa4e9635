
pragma solidity >=0.0;




interface C0B {

	function f0() external view returns (uint);
}
contract C0 is C0B {

	function f0() external view
	override
	returns (uint)
	{
		return 2008663734;
	}
}
library L1 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}
library L3 {

	function f0(uint) external pure returns (uint)
	{
		return 1714636915;
	}
}

contract C4 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 2115326081;
	}
}





interface I5BBBB {

	function f0() external payable returns (uint);
}
interface I5BBB is I5BBBB {

}
interface I5BB is I5BBB {

}




interface I5BBBBBBBB {

	function f0() external payable returns (uint);
}
interface I5BBBBBBB is I5BBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I5BBBBBB is I5BBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I5BBBBB is I5BBB, I5BBBBBB {

	function f0() override(I5BBBB, I5BBBBBB)
	external payable returns (uint);
}
interface I5B is I5BB, I5BBBBB {

	function f0() override(I5BBBB, I5BBBBB)
	external payable returns (uint);
}
interface I5 is I5B {

}






interface I6BBBBB {

	function f0() external view returns (uint);
}

interface I6BBBBBB is I6BBBBB {

	function f1() external view returns (uint);
}
interface I6BBBB is I6BBBBB, I6BBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I6BBB is I6BBBB {

	function f1() override
	external view returns (uint);
}
interface I6BB is I6BBB {

	function f1() override
	external view returns (uint);
}


interface I6BBBBBBBB {

	function f0() external view returns (uint);
}
interface I6BBBBBBB is I6BB, I6BBBBBBBB {

	function f0() override(I6BBBB, I6BBBBBBBB)
	external view returns (uint);
}
interface I6B is I6BB, I6BBBBBBB {

	function f0() override(I6BBBB, I6BBBBBBB)
	external view returns (uint);
}

interface I6BBBBBBBBB is I6B {

	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I6 is I6B, I6BBBBBBBBB {

	function f0() override(I6B, I6BBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}


interface C7B {

	function f0() external view returns (uint);
}
contract C7 is C7B {

	function f0() external view
	override
	returns (uint)
	{
		return 631793604;
	}
}

interface I8 {

	function f0() external view returns (uint);
}

interface I9 {

	function f0() external view returns (uint);
}




interface I10BBB {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I10BB is I10BBB {

}
interface I10B is I10BB {

	function f0() override
	external payable returns (uint);
}


interface I10BBBBB {

	function f0() external payable returns (uint);
}
interface I10BBBB is I10BB, I10BBBBB {

	function f0() override(I10BBB, I10BBBBB)
	external payable returns (uint);
}
interface I10 is I10B, I10BBBB {

	function f0() override(I10B, I10BBBB)
	external payable returns (uint);
}

contract C11 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 795764007;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 2008663734)
				return 1;
			C11 tc1 = new C11();
			if (tc1.f0() != 795764007)
				return 2;
			C4 tc2 = new C4();
			if (tc2.f0() != 2115326081)
				return 3;
			C7 tc3 = new C7();
			if (tc3.f0() != 631793604)
				return 4;
			return 0;
	}
}

