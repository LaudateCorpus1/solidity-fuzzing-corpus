pragma solidity >=0.0;
interface I0BB {
	function f0() external pure returns (uint);
}
interface I0B is I0BB {
	function f0() override
	external pure returns (uint);
}
interface I0 is I0B {
	function f1() external payable returns (uint);
}
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
library L2 {
	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}
library L4 {
	function f0(uint) private pure returns (uint)
	{
		return 1957747793;
	}
}
library L5 {
	function f0(uint) internal pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) external pure returns (uint)
	{
		return 719885386;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1649760492;
	}
	function f3(uint) internal pure returns (uint)
	{
		return 596516649;
	}
	function f4(uint) public pure returns (uint)
	{
		return 1189641421;
	}
}
interface I6BB {
	function f0() external payable returns (uint);
}
interface I6B is I6BB {
	function f0() override
	external payable returns (uint);
}
interface I6 is I6B {
}
library L7 {
	function f0(uint) internal pure returns (uint)
	{
		return 1025202362;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1350490027;
	}
}
interface I8BB {
	function f0() external view returns (uint);
}
interface I8B is I8BB {
	function f1() external payable returns (uint);
}
interface I8BBBB {
	function f0() external view returns (uint);
}
interface I8BBB is I8B, I8BBBB {
	function f0() override(I8BB, I8BBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I8 is I8B, I8BBB {
	function f0() override(I8BB, I8BBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
contract C11BB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1697268305;
	}
}
contract C11B is C11BB {
	function f0() virtual public pure
	override
	returns (uint)
	{
		return 288681331;
	}
}
contract C11 is C11B {
	function f0() virtual public pure
	override
	returns (uint)
	{
		return 431017937;
	}
}
abstract contract C12BB {
	function f0() virtual public pure
	
	returns (uint);
	function f1() virtual public view
	
	returns (uint);
}
contract C12B is C12BB {
	function f0() virtual public pure
	override
	returns (uint)
	{
		return 263161953;
	}
	function f1() virtual public view
	override
	returns (uint)
	{
		return 826724347;
	}
}
contract C12 is C12B {
}
contract C {
	function test() public returns (uint)
	{
			C11 tc0 = new C11();
			if (tc0.f0() != 431017937)
				return 1;
			C11B tc1 = new C11B();
			if (tc1.f0() != 288681331)
				return 2;
			C11BB tc2 = new C11BB();
			if (tc2.f0() != 1697268305)
				return 3;
			C12 tc3 = new C12();
			if (tc3.f0() != 263161953)
				return 4;
			if (tc3.f1() != 826724347)
				return 5;
			C12B tc4 = new C12B();
			if (tc4.f0() != 263161953)
				return 6;
			if (tc4.f1() != 826724347)
				return 7;
			return 0;
	}
}
