pragma solidity >=0.0;
interface I0BBBB {
	function f0() external payable returns (uint);
}
interface I0BBBBB is I0BBBB {
	function f1() external payable returns (uint);
}
interface I0BBB is I0BBBB, I0BBBBB {
	function f0() override
	external payable returns (uint);
}
interface I0BB is I0BBB {
}
interface I0BBBBBBBBB {
	function f0() external payable returns (uint);
}
interface I0BBBBBBBB is I0BBBBBBBBB {
}
interface I0BBBBBBB is I0BBBBBBBB {
}
interface I0BBBBBB is I0BB, I0BBBBBBB {
	function f0() override(I0BBB, I0BBBBBBBBB)
	external payable returns (uint);
}
interface I0B is I0BB, I0BBBBBB {
	function f0() override(I0BBB, I0BBBBBB)
	external payable returns (uint);
}
interface I0 is I0B {
	function f1() override
	external payable returns (uint);
}
interface C1B {
	function f0() external payable returns (uint);
}
contract C1 is C1B {
	function f0() external payable
	override
	returns (uint)
	{
		return 2075782095;
	}
}
library L2 {
	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public view returns (uint)
	{
		return 1714636915;
	}
	function f2(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 2075782095)
				return 1;
			return 0;
	}
}
