pragma solidity >=0.0;
interface I0BB {
	function f0() external view returns (uint);
}
interface I0B is I0BB {
	function f1() external payable returns (uint);
}
interface I0 is I0B {
	function f0() override
	external view returns (uint);
}
library L1 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
}
interface I2B {
	function f0() external view returns (uint);
}
interface I2BB is I2B {
}
interface I2 is I2B, I2BB {
}
interface I3BBB {
	function f0() external view returns (uint);
}
interface I3BB is I3BBB {
}
interface I3B is I3BB {
}
interface I3 is I3B {
	function f1() external view returns (uint);
}
interface I4B {
	function f0() external view returns (uint);
}
interface I4BB is I4B {
}
interface I4 is I4B, I4BB {
	function f1() external view returns (uint);
}
interface I5B {
	function f0() external payable returns (uint);
}
interface I5 is I5B {
}
library L6 {
	function f0(uint) private pure returns (uint)
	{
		return 1714636915;
	}
}
interface I7BBB {
	function f0() external view returns (uint);
}
interface I7BB is I7BBB {
	function f0() override
	external view returns (uint);
}
interface I7B is I7BB {
}
interface I7 is I7B {
	function f1() external view returns (uint);
}
interface I8 {
	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface I9BBB {
	function f0() external view returns (uint);
}
interface I9BB is I9BBB {
	function f0() override
	external view returns (uint);
}
interface I9B is I9BB {
}
interface I9 is I9B {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I10BBB {
	function f0() external view returns (uint);
}
interface I10BB is I10BBB {
	function f0() override
	external view returns (uint);
}
interface I10B is I10BB {
}
interface I10BBBBB {
	function f0() external view returns (uint);
}
interface I10BBBB is I10BB, I10BBBBB {
	function f0() override(I10BB, I10BBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I10 is I10B, I10BBBB {
	function f0() override(I10BB, I10BBBB)
	external view returns (uint);
	function f2() external view returns (uint);
}
library L11 {
	function f0(uint) external pure returns (uint)
	{
		return 424238335;
	}
}
interface I12BBBB {
	function f0() external view returns (uint);
}
interface I12BBB is I12BBBB {
	function f0() override
	external view returns (uint);
}
interface I12BB is I12BBB {
	function f0() override
	external view returns (uint);
}
interface I12B is I12BB {
}
interface I12BBBBB is I12B {
	function f0() override
	external view returns (uint);
	function f1() external pure returns (uint);
}
interface I12BBBBBBBBB {
	function f0() external view returns (uint);
}
interface I12BBBBBBBB is I12BBBBBBBBB {
}
interface I12BBBBBBB is I12BBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I12BBBBBB is I12B, I12BBBBBBB {
	function f0() override(I12BB, I12BBBBBBB)
	external view returns (uint);
}
interface I12 is I12B, I12BBBBB, I12BBBBBB {
	function f0() override(I12BB, I12BBBBB, I12BBBBBB)
	external view returns (uint);
	function f1() override
	external pure returns (uint);
}
interface I13B {
	function f0() external view returns (uint);
}
interface I13 is I13B {
}
interface I14BBBB {
	function f0() external view returns (uint);
}
interface I14BBB is I14BBBB {
	function f0() override
	external view returns (uint);
}
interface I14BB is I14BBB {
	function f0() override
	external view returns (uint);
}
interface I14B is I14BB {
}
interface I14BBBBB is I14BB {
	function f1() external payable returns (uint);
}
interface I14BBBBBBBBB {
	function f0() external view returns (uint);
}
interface I14BBBBBBBB is I14BBBBBBBBB {
}
interface I14BBBBBBB is I14BBBBBBBB {
}
interface I14BBBBBB is I14BB, I14BBBBBBB {
	function f0() override(I14BB, I14BBBBBBBBB)
	external view returns (uint);
}
interface I14 is I14B, I14BBBBB, I14BBBBBB {
	function f0() override(I14BB, I14BBBBBB)
	external view returns (uint);
}
interface I15BBBBB {
	function f0() external view returns (uint);
}
interface I15BBBB is I15BBBBB {
}
interface I15BBB is I15BBBB {
}
interface I15BB is I15BBB {
	function f1() external payable returns (uint);
}
interface I15B is I15BB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I15 is I15B {
	function f0() override
	external view returns (uint);
}
contract C16 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 200599677;
	}
}
library L17 {
	function f0(uint) private pure returns (uint)
	{
		return 1025202362;
	}
}
contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}
