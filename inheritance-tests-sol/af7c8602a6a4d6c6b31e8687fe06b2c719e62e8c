pragma solidity >=0.0;
contract C0B {
	function f0() public view
	
	returns (uint)
	{
		return 1910517586;
	}
}
contract C0 is C0B {
}
interface I1B {
	function f0() external view returns (uint);
}
interface I1BB is I1B {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I1BBB is I1BB {
	function f1() override
	external view returns (uint);
	function f2() external view returns (uint);
}
interface I1 is I1B, I1BB, I1BBB {
	function f0() override(I1B, I1BB)
	external view returns (uint);
	function f1() override(I1BB, I1BBB)
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
interface I2BB {
	function f0() external view returns (uint);
}
interface I2B is I2BB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I2 is I2B {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
library L3 {
	function f0(uint) external pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1714636915;
	}
}
contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}
