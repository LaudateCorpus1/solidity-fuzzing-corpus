pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}
interface C2BBB {
}
interface C2BBBBBB {
	function f0() external payable returns (uint);
}
interface C2BBBBB is C2BBBBBB {
	function f0() override
	external payable returns (uint);
}
interface C2BBBB is C2BBB, C2BBBBB {
}
interface C2BB is C2BBB, C2BBBB {
}
interface C2B is C2BB {
	function f0() override
	external payable returns (uint);
}
contract C2 is C2B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 379178538;
	}
}
library L4 {
	function f0(uint) internal pure returns (uint)
	{
		return 1350490027;
	}
}
interface C5BB {
	function f0() external payable returns (uint);
}
interface C5B is C5BB {
}
contract C5 is C5B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1157092122;
	}
}
contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 379178538)
				return 1;
			C5 tc1 = new C5();
			if (tc1.f0() != 1157092122)
				return 2;
			return 0;
	}
}
