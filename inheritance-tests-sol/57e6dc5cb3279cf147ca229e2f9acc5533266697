
pragma solidity >=0.0;




contract C0B {

}

abstract contract C0BB is C0B {

}













interface C0BBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C0BBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
}

interface C0BBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBB {

	function f2() external payable returns (uint);
	function f3() external payable returns (uint);
}
interface C0BBBBBBBBBBBBB is C0BBBBBBBBBBBBBB, C0BBBBBBBBBBBBBBBB {

	function f0() override(C0BBBBBBBBBBBBBB, C0BBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(C0BBBBBBBBBBBBBB, C0BBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f4() external view returns (uint);
	function f5() external view returns (uint);
}
interface C0BBBBBBBBBBBB is C0BBBBBBBBBBBBB {

}

interface C0BBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f3() override
	external payable returns (uint);
	function f5() override
	external view returns (uint);
	function f6() external payable returns (uint);
	function f7() external payable returns (uint);
}
interface C0BBBBBBBBBBB is C0BBBBBBBBBBBB, C0BBBBBBBBBBBBBBBBB {

	function f0() override(C0BBBBBBBBBBBBB, C0BBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override(C0BBBBBBBBBBBBBBBB, C0BBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override(C0BBBBBBBBBBBBB, C0BBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f6() override
	external payable returns (uint);
	function f8() external view returns (uint);
	function f9() external view returns (uint);
}
interface C0BBBBBBBBBB is C0BBBBBBBBBBB {

	function f1() override
	external pure returns (uint);
	function f3() override
	external payable returns (uint);
	function f4() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
}

interface C0BBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f3() override
	external payable returns (uint);
	function f6() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f10() external view returns (uint);
	function f11() external payable returns (uint);
}
interface C0BBBBBBBBB is C0BBBBBBBBBB, C0BBBBBBBBBBBBBBBBBB {

	function f0() override(C0BBBBBBBBBBB, C0BBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(C0BBBBBBBBBB, C0BBBBBBBBBBBBB)
	external pure returns (uint);
	function f3() override(C0BBBBBBBBBB, C0BBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f4() override(C0BBBBBBBBBB, C0BBBBBBBBBBB)
	external view returns (uint);
	function f6() override(C0BBBBBBBBBB, C0BBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override(C0BBBBBBBBBBB, C0BBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f10() override
	external view returns (uint);
	function f12() external view returns (uint);
	function f13() external view returns (uint);
}
interface C0BBBBBBBB is C0BBBBBBBBB {

	function f1() override
	external pure returns (uint);
	function f5() override
	external view returns (uint);
	function f7() override
	external payable returns (uint);
	function f10() override
	external view returns (uint);
	function f11() override
	external payable returns (uint);
	function f12() override
	external view returns (uint);
	function f13() override
	external view returns (uint);
}

interface C0BBBBBBBBBBBBBBBBBBB is C0BBBBBBBBB {

	function f1() override
	external pure returns (uint);
	function f3() override
	external payable returns (uint);
	function f5() override
	external view returns (uint);
	function f7() override
	external payable returns (uint);
	function f9() override
	external view returns (uint);
	function f10() override
	external view returns (uint);
	function f11() override
	external payable returns (uint);
	function f14() external pure returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB, C0BBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override(C0BBBBBBBB, C0BBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f3() override(C0BBBBBBBBB, C0BBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override(C0BBBBBBBB, C0BBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f6() override
	external payable returns (uint);
	function f7() override(C0BBBBBBBB, C0BBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f9() override(C0BBBBBBBBBBB, C0BBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f10() override(C0BBBBBBBB, C0BBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f11() override(C0BBBBBBBB, C0BBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f12() override(C0BBBBBBBB, C0BBBBBBBBB)
	external view returns (uint);
	function f13() override(C0BBBBBBBB, C0BBBBBBBBB)
	external view returns (uint);
	function f14() override
	external pure returns (uint);
}
abstract contract C0BBBBBB is C0BBBBBBB {

	function f0() virtual external payable
	override
	returns (uint);
	function f1() virtual external pure
	override
	returns (uint);
	function f2() virtual external payable
	override
	returns (uint);
	function f3() virtual external payable
	override
	returns (uint)
	{
		return 1578591759;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 15580725;
	}
	function f5() virtual external view
	override
	returns (uint);
	function f6() virtual external payable
	override
	returns (uint);
	function f7() virtual external payable
	override
	returns (uint);
	function f8() virtual external view
	override
	returns (uint)
	{
		return 785648268;
	}
	function f9() virtual external view
	override
	returns (uint);
	function f10() virtual external view
	override
	returns (uint);
	function f11() virtual external payable
	override
	returns (uint)
	{
		return 1143645057;
	}
	function f12() virtual external view
	override
	returns (uint);
	function f13() virtual external view
	override
	returns (uint)
	{
		return 1959645388;
	}
	function f14() virtual external pure
	override
	returns (uint)
	{
		return 1228493995;
	}
}
contract C0BBBBB is C0BBBBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1095330162;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 634782546;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1202416766;
	}
	function f5() virtual external view
	override
	returns (uint)
	{
		return 1957310938;
	}
	function f6() virtual external payable
	override
	returns (uint)
	{
		return 1703981298;
	}
	function f7() external payable
	override
	returns (uint)
	{
		return 136665771;
	}
	function f8() external view
	override
	returns (uint)
	{
		return 963283007;
	}
	function f9() external view
	override
	returns (uint)
	{
		return 651791047;
	}
	function f10() external view
	override
	returns (uint)
	{
		return 120706635;
	}
	function f11() virtual external payable
	override
	returns (uint)
	{
		return 937051507;
	}
	function f12() external view
	override
	returns (uint)
	{
		return 1318139310;
	}
}
contract C0BBBB is C0BBBBB {

	function f3() external payable
	override
	returns (uint)
	{
		return 383910756;
	}
	function f15() external pure
	
	returns (uint)
	{
		return 1518866227;
	}
}
contract C0BBB is C0BB, C0BBBB {

	function f2() external payable
	override
	returns (uint)
	{
		return 2047876379;
	}
	function f6() external payable
	override
	returns (uint)
	{
		return 1229515992;
	}
	function f11() virtual external payable
	override
	returns (uint)
	{
		return 147380597;
	}
}
abstract contract C0 is C0B, C0BB, C0BBB {

	function f5() virtual external view
	override
	returns (uint)
	{
		return 872671849;
	}
	function f11() virtual external payable
	override
	returns (uint)
	{
		return 2111659831;
	}
	function f13() external view
	override
	returns (uint)
	{
		return 1967069686;
	}
}
library L1 {

	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0BBB tc0 = new C0BBB();
			if (tc0.f0() != 1095330162)
				return 1;
			if (tc0.f1() != 634782546)
				return 2;
			if (tc0.f10() != 120706635)
				return 3;
			if (tc0.f11() != 147380597)
				return 4;
			if (tc0.f12() != 1318139310)
				return 5;
			if (tc0.f13() != 1959645388)
				return 6;
			if (tc0.f14() != 1228493995)
				return 7;
			if (tc0.f15() != 1518866227)
				return 8;
			if (tc0.f2() != 2047876379)
				return 9;
			if (tc0.f3() != 383910756)
				return 10;
			if (tc0.f4() != 15580725)
				return 11;
			if (tc0.f5() != 1957310938)
				return 12;
			if (tc0.f6() != 1229515992)
				return 13;
			if (tc0.f7() != 136665771)
				return 14;
			if (tc0.f8() != 963283007)
				return 15;
			if (tc0.f9() != 651791047)
				return 16;
			C0BBBB tc1 = new C0BBBB();
			if (tc1.f0() != 1095330162)
				return 17;
			if (tc1.f1() != 634782546)
				return 18;
			if (tc1.f10() != 120706635)
				return 19;
			if (tc1.f11() != 937051507)
				return 20;
			if (tc1.f12() != 1318139310)
				return 21;
			if (tc1.f13() != 1959645388)
				return 22;
			if (tc1.f14() != 1228493995)
				return 23;
			if (tc1.f15() != 1518866227)
				return 24;
			if (tc1.f2() != 1202416766)
				return 25;
			if (tc1.f3() != 383910756)
				return 26;
			if (tc1.f4() != 15580725)
				return 27;
			if (tc1.f5() != 1957310938)
				return 28;
			if (tc1.f6() != 1703981298)
				return 29;
			if (tc1.f7() != 136665771)
				return 30;
			if (tc1.f8() != 963283007)
				return 31;
			if (tc1.f9() != 651791047)
				return 32;
			C0BBBBB tc2 = new C0BBBBB();
			if (tc2.f0() != 1095330162)
				return 33;
			if (tc2.f1() != 634782546)
				return 34;
			if (tc2.f10() != 120706635)
				return 35;
			if (tc2.f11() != 937051507)
				return 36;
			if (tc2.f12() != 1318139310)
				return 37;
			if (tc2.f13() != 1959645388)
				return 38;
			if (tc2.f14() != 1228493995)
				return 39;
			if (tc2.f2() != 1202416766)
				return 40;
			if (tc2.f3() != 1578591759)
				return 41;
			if (tc2.f4() != 15580725)
				return 42;
			if (tc2.f5() != 1957310938)
				return 43;
			if (tc2.f6() != 1703981298)
				return 44;
			if (tc2.f7() != 136665771)
				return 45;
			if (tc2.f8() != 963283007)
				return 46;
			if (tc2.f9() != 651791047)
				return 47;
			return 0;
	}
}

