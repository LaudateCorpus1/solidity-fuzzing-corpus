
pragma solidity >=0.0;



contract C0 {

	function f0() virtual public view
	
	returns (uint)
	{
		return 48271;
	}
}
library L1 {

	function f0(uint) internal view returns (uint)
	{
		return 1804289383;
	}
}







interface I2BBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface I2BBBBB is I2BBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
}
interface I2BBBB is I2BBBBB {

}
interface I2BBB is I2BBBB {

}
interface I2BB is I2BBB {

}
interface I2B is I2BB {

}

interface I2BBBBBBB is I2B {

	function f1() override
	external pure returns (uint);
	function f2() external view returns (uint);
}
interface I2 is I2B, I2BBBBBBB {

	function f1() override(I2BBBBB, I2BBBBBBB)
	external pure returns (uint);
	function f2() override
	external view returns (uint);
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

