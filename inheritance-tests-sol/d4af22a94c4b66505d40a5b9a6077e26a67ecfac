
pragma solidity >=0.0;







interface C0BBBB {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface C0BBB is C0BBBB {

	function f1() override
	external view returns (uint);
}
contract C0BB is C0BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 2078669041;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1105902161;
	}
}
contract C0B is C0BB {

}
contract C0 is C0B {

}



interface C1BB {

	function f0() external view returns (uint);
}
interface C1B is C1BB {

}
contract C1 is C1B {

	function f0() external view
	override
	returns (uint)
	{
		return 1250328747;
	}
}










interface C2BBBBBBBBB {

	function f0() external view returns (uint);
}
contract C2BBBBBBBB is C2BBBBBBBBB {

	function f0() external view
	override
	returns (uint)
	{
		return 1271135913;
	}
	function f1() public view
	
	returns (uint)
	{
		return 1098894339;
	}
	function f2() public pure
	
	returns (uint)
	{
		return 1882556969;
	}
}
contract C2BBBBBBB is C2BBBBBBBB {

}
contract C2BBBBBB is C2BBBBBBB {

}
contract C2BBBBB is C2BBBBBB {

}
contract C2BBBB is C2BBBBB {

	function f3() public view
	
	returns (uint)
	{
		return 914937185;
	}
	function f4() public pure
	
	returns (uint)
	{
		return 1931656580;
	}
}
contract C2BBB is C2BBBB {

	function f5() public view
	
	returns (uint)
	{
		return 1936030137;
	}
	function f6() public pure
	
	returns (uint)
	{
		return 2064876628;
	}
}
contract C2BB is C2BBB {

}

contract C2BBBBBBBBBB is C2BBB {

	function f7() virtual public pure
	
	returns (uint)
	{
		return 1947433875;
	}
}
contract C2B is C2BB, C2BBBBBBBBBB {

}

contract C2BBBBBBBBBBB is C2B {

}
contract C2 is C2B, C2BBBBBBBBBBB {

	function f7() public pure
	override
	returns (uint)
	{
		return 1479919876;
	}
	function f8() public view
	
	returns (uint)
	{
		return 1168816941;
	}
	function f9() virtual public pure
	
	returns (uint)
	{
		return 1272185027;
	}
}
library L3 {

	function f0(uint) public view returns (uint)
	{
		return 1681692777;
	}
}
library L4 {

	function f0(uint) public view returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) internal view returns (uint)
	{
		return 1957747793;
	}
}


contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}

