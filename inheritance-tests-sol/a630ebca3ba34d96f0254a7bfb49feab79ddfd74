pragma solidity >=0.0;
library L1 {
	function f0(uint) private view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) external pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}
interface C2BBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C2BBBBBBB is C2BBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
}
interface C2BBBBBB is C2BBBBBBB {
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C2BBBBB is C2BBBBBB {
}
interface C2BBBBBBBBB is C2BBBBBB {
	function f4() external view returns (uint);
}
interface C2BBBB is C2BBBBB, C2BBBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
contract C2BBB is C2BBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1936030137;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 353718330;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1947433875;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 2010567813;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 662405787;
	}
}
contract C2BB is C2BBB {
	function f1() external pure
	override
	returns (uint)
	{
		return 1479919876;
	}
}
contract C2B is C2BB {
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1287522347;
	}
}
contract C2 is C2B {
}
library L3 {
	function f0(uint) public view returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) external pure returns (uint)
	{
		return 424238335;
	}
}
library L4 {
	function f0(uint) private pure returns (uint)
	{
		return 719885386;
	}
}
interface C5BBBB {
	function f0() external payable returns (uint);
}
interface C5BBB is C5BBBB {
}
interface C5BB is C5BBB {
	function f1() external payable returns (uint);
}
interface C5B is C5BB {
}
contract C5 is C5B {
	function f0() external payable
	override
	returns (uint)
	{
		return 942409124;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1951824771;
	}
}
contract C6B {
}
abstract contract C6BB is C6B {
}
interface C6BBBBBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C6BBBBBBBBBB is C6BBBBBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface C6BBBBBBBBBBBB is C6BBBBBBBBBBB {
	function f1() override
	external pure returns (uint);
	function f2() external payable returns (uint);
}
interface C6BBBBBBBBB is C6BBBBBBBBBB, C6BBBBBBBBBBBB {
	function f0() override(C6BBBBBBBBBB, C6BBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(C6BBBBBBBBBBB, C6BBBBBBBBBBBB)
	external pure returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C6BBBBBBBB is C6BBBBBBBBB {
	function f1() override
	external pure returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
}
interface C6BBBBBBBBBBBBB is C6BBBBBBBB {
	function f1() override
	external pure returns (uint);
	function f3() override
	external view returns (uint);
	function f5() external view returns (uint);
}
interface C6BBBBBBB is C6BBBBBBBB, C6BBBBBBBBBBBBB {
	function f1() override(C6BBBBBBBB, C6BBBBBBBBBBBBB)
	external pure returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override(C6BBBBBBBB, C6BBBBBBBBBBBBB)
	external view returns (uint);
	function f5() override
	external view returns (uint);
}
contract C6BBBBBB is C6BBBBBBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1318652553;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 324062450;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1715708819;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1925544752;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 425095546;
	}
	function f5() external view
	override
	returns (uint)
	{
		return 851194519;
	}
}
contract C6BBBBB is C6BBBBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 268625699;
	}
}
contract C6BBBB is C6BBBBB {
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1578591759;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 15580725;
	}
}
contract C6BBB is C6B, C6BBBB {
}
abstract contract C6 is C6B, C6BB, C6BBB {
}
library L7 {
	function f0(uint) public view returns (uint)
	{
		return 1350490027;
	}
}
library L8 {
	function f0(uint) public view returns (uint)
	{
		return 783368690;
	}
	function f1(uint) public view returns (uint)
	{
		return 1102520059;
	}
}
contract C {
	using L7 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1350490027)
			return 1;
		return 0;
	}
}
