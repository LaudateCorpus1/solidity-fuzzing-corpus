
pragma solidity >=0.0;



interface I0 {

	function f0() external view returns (uint);
}


interface I1B {

}
interface I1 is I1B {

	function f0() external payable returns (uint);
}

interface I2 {

	function f0() external view returns (uint);
}


interface I3B {

}


interface I3BBB {

}

interface I3BBBB is I3BBB {

	function f0() external view returns (uint);
}
interface I3BB is I3B, I3BBB, I3BBBB {

	function f0() override
	external view returns (uint);
}
interface I3 is I3B, I3BB {

	function f0() override
	external view returns (uint);
}


interface I4B {

}
interface I4 is I4B {

	function f0() external payable returns (uint);
}




interface C5BBB {

	function f0() external view returns (uint);
}
interface C5BB is C5BBB {

	function f0() override
	external view returns (uint);
}
interface C5B is C5BB {

}





interface C5BBBBBBBB {

}
interface C5BBBBBBB is C5BBBBBBBB {

}
interface C5BBBBBB is C5BBBBBBB {

	function f0() external view returns (uint);
}
interface C5BBBBB is C5BBBBBB {

	function f0() override
	external view returns (uint);
}
interface C5BBBB is C5BB, C5BBBBB {

	function f0() override(C5BB, C5BBBBB)
	external view returns (uint);
}
contract C5 is C5B, C5BBBB {

	function f0() external view
	override(C5BBBB, C5BB)
	returns (uint)
	{
		return 1072339320;
	}
}



interface I6BB {

}
interface I6B is I6BB {

}

interface I6BBB is I6BB {

}
interface I6 is I6B, I6BBB {

}


interface I7B {

}


interface I7BBB {

}

interface I7BBBB is I7BBB {

	function f0() external view returns (uint);
}
interface I7BB is I7B, I7BBB, I7BBBB {

	function f0() override
	external view returns (uint);
}
interface I7 is I7B, I7BB {

	function f0() override
	external view returns (uint);
}




interface C8BBB {

	function f0() external view returns (uint);
}
interface C8BB is C8BBB {

}
interface C8B is C8BB {

	function f0() override
	external view returns (uint);
}





interface C8BBBBBBBB {

}
interface C8BBBBBBB is C8BBBBBBBB {

}
interface C8BBBBBB is C8BBBBBBB {

	function f0() external view returns (uint);
}
interface C8BBBBB is C8BBBBBB {

	function f0() override
	external view returns (uint);
}
interface C8BBBB is C8B, C8BBBBB {

	function f0() override(C8B, C8BBBBB)
	external view returns (uint);
}
contract C8 is C8B, C8BBBB {

	function f0() virtual external view
	override(C8BBBB, C8B)
	returns (uint)
	{
		return 825050786;
	}
}



interface I10BB {

}
interface I10B is I10BB {

}

interface I10BBB is I10B {

}
interface I10 is I10B, I10BBB {

}

contract C11 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1091178879;
	}
}


contract C {
	function test() public returns (uint)
	{
			C11 tc0 = new C11();
			if (tc0.f0() != 1091178879)
				return 1;
			C5 tc1 = new C5();
			if (tc1.f0() != 1072339320)
				return 2;
			C8 tc2 = new C8();
			if (tc2.f0() != 825050786)
				return 3;
			return 0;
	}
}

