
pragma solidity >=0.0;


library L1 {

	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public view returns (uint)
	{
		return 846930886;
	}
}
library L2 {

	function f0(uint) public view returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}
library L3 {

	function f0(uint) public pure returns (uint)
	{
		return 1957747793;
	}
}
library L4 {

	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
}









interface C5BBBBBBBB {

	function f0() external pure returns (uint);
}
interface C5BBBBBBB is C5BBBBBBBB {

	function f1() external payable returns (uint);
}
interface C5BBBBBB is C5BBBBBBB {

	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C5BBBBB is C5BBBBBB {

}

interface C5BBBBBBBBB is C5BBBBB {

	function f3() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface C5BBBB is C5BBBBB, C5BBBBBBBBB {

	function f1() override
	external payable returns (uint);
	function f3() override(C5BBBBBB, C5BBBBBBBBB)
	external view returns (uint);
	function f4() override
	external view returns (uint);
}
contract C5BBB is C5BBBB {

	function f0() external pure
	override
	returns (uint)
	{
		return 2064876628;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1842513780;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 631416347;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 890442452;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 1105724094;
	}
}
contract C5BB is C5BBB {

}
contract C5B is C5BB {

}
contract C5 is C5B {

}

contract C7 {

	function f0() public view
	
	returns (uint)
	{
		return 928270262;
	}
}







interface C9BBBBBB {

	function f0() external pure returns (uint);
}
interface C9BBBBB is C9BBBBBB {

	function f1() external payable returns (uint);
}
interface C9BBBB is C9BBBBB {

	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C9BBB is C9BBBB {

	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}

interface C9BBBBBBB is C9BBB {

	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface C9BB is C9BBB, C9BBBBBBB {

	function f1() override(C9BBB, C9BBBBBBB)
	external payable returns (uint);
	function f3() override(C9BBB, C9BBBBBBB)
	external view returns (uint);
	function f4() override
	external view returns (uint);
}
contract C9B is C9BB {

	function f0() external pure
	override
	returns (uint)
	{
		return 719080959;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 163677341;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 374787159;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 80100956;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1003765604;
	}
}
contract C9 is C9B {

	function f4() external view
	override
	returns (uint)
	{
		return 837051536;
	}
}


contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

