
pragma solidity >=0.0;





interface C0BB {

	function f0() external view returns (uint);
}
contract C0B is C0BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1572557670;
	}
}
contract C0 is C0B {

	function f0() external view
	override
	returns (uint)
	{
		return 908951446;
	}
}
library L1 {

	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}



interface I2BB {

	function f0() external view returns (uint);
}
interface I2B is I2BB {

	function f1() external view returns (uint);
}
interface I2 is I2B {

	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
}



interface C3BB {

	function f0() external view returns (uint);
}
contract C3B is C3BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 843673194;
	}
}
contract C3 is C3B {

}
library L4 {

	function f0(uint) external pure returns (uint)
	{
		return 1714636915;
	}
}
library L5 {

	function f0(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
library L7 {

	function f0(uint) private pure returns (uint)
	{
		return 719885386;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1649760492;
	}
	function f2(uint) private pure returns (uint)
	{
		return 596516649;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 908951446)
				return 1;
			C0B tc1 = new C0B();
			if (tc1.f0() != 1572557670)
				return 2;
			C3 tc2 = new C3();
			if (tc2.f0() != 843673194)
				return 3;
			C3B tc3 = new C3B();
			if (tc3.f0() != 843673194)
				return 4;
			return 0;
	}
}

