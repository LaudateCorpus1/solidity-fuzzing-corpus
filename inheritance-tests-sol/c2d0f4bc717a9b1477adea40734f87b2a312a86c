
pragma solidity >=0.0;


library L0 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}




interface C2BBB {

	function f0() external payable returns (uint);
}
interface C2BB is C2BBB {

}
abstract contract C2B is C2BB {

	function f0() virtual external payable
	override
	returns (uint);
}


interface C2BBBBB {

	function f0() external payable returns (uint);
}
interface C2BBBB is C2BB, C2BBBBB {

	function f0() override(C2BBB, C2BBBBB)
	external payable returns (uint);
}
contract C2 is C2B, C2BBBB {

	function f0() external payable
	override(C2B, C2BBBB)
	returns (uint)
	{
		return 1882556969;
	}
}




interface C3BBB {

	function f0() external view returns (uint);
}
interface C3BB is C3BBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface C3B is C3BB {

	function f1() override
	external view returns (uint);
}
contract C3 is C3B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1402304087;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 2064876628;
	}
}
library L4 {

	function f0(uint) private view returns (uint)
	{
		return 1714636915;
	}
}
library L5 {

	function f0(uint) private view returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) private view returns (uint)
	{
		return 424238335;
	}
}

interface I6 {

	function f0() external view returns (uint);
}
library L7 {

	function f0(uint) public view returns (uint)
	{
		return 719885386;
	}
	function f1(uint) internal view returns (uint)
	{
		return 1649760492;
	}
}



contract C8BB {

	function f0() private pure
	
	returns (uint)
	{
		return 1842513780;
	}
}
contract C8B is C8BB {

	function f1() public payable
	
	returns (uint)
	{
		return 1947433875;
	}
}
contract C8 is C8B {

}


contract C {
	using L7 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 719885386)
			return 1;
		return 0;
	}
}

