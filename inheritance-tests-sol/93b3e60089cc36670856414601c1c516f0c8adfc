pragma solidity >=0.0;
library L0 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
interface C1BB {
	function f0() external view returns (uint);
}
interface C1B is C1BB {
}
contract C1 is C1B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1914720637;
	}
	function f1() private pure
	
	returns (uint)
	{
		return 2078669041;
	}
}
library L2 {
	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public view returns (uint)
	{
		return 1681692777;
	}
}
library L3 {
	function f0(uint) public view returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
interface I4 {
	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
library L5 {
	function f0(uint) public view returns (uint)
	{
		return 424238335;
	}
	function f1(uint) internal view returns (uint)
	{
		return 719885386;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
	function f3(uint) internal pure returns (uint)
	{
		return 596516649;
	}
}
interface I6B {
}
interface I6 is I6B {
	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface I7BBB {
	function f0() external payable returns (uint);
}
interface I7BB is I7BBB {
	function f1() external payable returns (uint);
}
interface I7B is I7BB {
	function f2() external view returns (uint);
}
interface I7BBBBB {
	function f0() external payable returns (uint);
}
interface I7BBBB is I7BB, I7BBBBB {
	function f0() override(I7BBB, I7BBBBB)
	external payable returns (uint);
}
interface I7 is I7B, I7BBBB {
	function f0() override(I7BBB, I7BBBB)
	external payable returns (uint);
}
interface I8B {
	function f0() external payable returns (uint);
}
interface I8 is I8B {
	function f0() override
	external payable returns (uint);
}
interface I9BBB {
	function f0() external payable returns (uint);
}
interface I9BB is I9BBB {
	function f1() external payable returns (uint);
}
interface I9B is I9BB {
	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I9BBBBB {
	function f0() external payable returns (uint);
}
interface I9BBBB is I9B, I9BBBBB {
	function f0() override(I9B, I9BBBBB)
	external payable returns (uint);
}
interface I9 is I9B, I9BBBB {
	function f0() override(I9B, I9BBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1914720637)
				return 1;
			return 0;
	}
}
