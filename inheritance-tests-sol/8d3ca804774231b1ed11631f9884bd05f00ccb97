
pragma solidity >=0.0;






interface C0BBB {

	function f0() external payable returns (uint);
}
interface C0BB is C0BBB {

}
abstract contract C0B is C0BB {

	function f0() virtual external payable
	override
	returns (uint);
}
contract C0 is C0B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1501100076;
	}
}


interface I1B {

	function f0() external payable returns (uint);
}
interface I1 is I1B {

}




interface C2BBB {

	function f0() external payable returns (uint);
}
interface C2BB is C2BBB {

}
contract C2B is C2BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1698906197;
	}
}
contract C2 is C2B {

}
library L4 {

	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
library L5 {

	function f0(uint) internal pure returns (uint)
	{
		return 424238335;
	}
}
library L6 {

	function f0(uint) public view returns (uint)
	{
		return 719885386;
	}
}


interface I7B {

	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface I7 is I7B {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}




interface C8BBB {

	function f0() external payable returns (uint);
}
interface C8BB is C8BBB {

}
interface C8B is C8BB {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
contract C8 is C8B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 2047458761;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 2079025730;
	}
}





interface C9BBBB {

	function f0() external payable returns (uint);
}
interface C9BBB is C9BBBB {

	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface C9BB is C9BBB {

	function f1() override
	external view returns (uint);
}
interface C9B is C9BB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
contract C9 is C9B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 654429131;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1717502997;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1501100076)
				return 1;
			C2 tc1 = new C2();
			if (tc1.f0() != 1698906197)
				return 2;
			C2B tc2 = new C2B();
			if (tc2.f0() != 1698906197)
				return 3;
			C8 tc3 = new C8();
			if (tc3.f0() != 2047458761)
				return 4;
			if (tc3.f1() != 2079025730)
				return 5;
			C9 tc4 = new C9();
			if (tc4.f0() != 654429131)
				return 6;
			if (tc4.f1() != 1717502997)
				return 7;
			return 0;
	}
}

