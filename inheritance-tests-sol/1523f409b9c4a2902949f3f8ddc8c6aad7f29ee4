
pragma solidity >=0.0;


library L0 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
library L1 {

	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public view returns (uint)
	{
		return 1681692777;
	}
	function f2(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
library L2 {

	function f0(uint) public pure returns (uint)
	{
		return 1957747793;
	}
}
library L3 {

	function f0(uint) public view returns (uint)
	{
		return 424238335;
	}
}



interface C4BB {

	function f0() external view returns (uint);
}
interface C4B is C4BB {

}


interface C4BBBB {

	function f0() external view returns (uint);
}
interface C4BBB is C4B, C4BBBB {

	function f0() override(C4BB, C4BBBB)
	external view returns (uint);
}
contract C4 is C4B, C4BBB {

	function f0() external view
	override(C4BBB, C4BB)
	returns (uint)
	{
		return 317172907;
	}
}




interface C5BBB {

	function f0() external payable returns (uint);
}
interface C5BB is C5BBB {

	function f0() override
	external payable returns (uint);
}
contract C5B is C5BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1425835579;
	}
}
contract C5 is C5B {

}
library L7 {

	function f0(uint) public view returns (uint)
	{
		return 596516649;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1189641421;
	}
}
library L8 {

	function f0(uint) public pure returns (uint)
	{
		return 1025202362;
	}
	function f1(uint) public view returns (uint)
	{
		return 1350490027;
	}
	function f2(uint) public pure returns (uint)
	{
		return 783368690;
	}
}


contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

