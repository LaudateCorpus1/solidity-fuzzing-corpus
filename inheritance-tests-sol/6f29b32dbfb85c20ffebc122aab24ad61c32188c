pragma solidity >=0.0;
contract C0 {
	function f0() external pure
	
	returns (uint)
	{
		return 48271;
	}
}
contract C1BBB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 182605794;
	}
}
contract C1BB is C1BBB {
	function f0() public pure
	override
	returns (uint)
	{
		return 2078669041;
	}
}
contract C1B is C1BB {
}
contract C1 is C1B {
	function f1() virtual public pure
	
	returns (uint)
	{
		return 854716505;
	}
}
interface C2BBBB {
}
interface C2BBB is C2BBBB {
	function f0() external payable returns (uint);
}
interface C2BB is C2BBB {
}
abstract contract C2B is C2BB {
	function f0() virtual external payable
	override
	returns (uint);
	function f1() virtual public pure
	
	returns (uint);
}
contract C2 is C2B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1559527823;
	}
	function f1() public pure
	override
	returns (uint)
	{
		return 638022372;
	}
	function f2() external pure
	
	returns (uint)
	{
		return 914937185;
	}
}
library L3 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
contract C4BBB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1931656580;
	}
}
contract C4BB is C4BBB {
}
contract C4B is C4BB {
	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1842513780;
	}
}
contract C4 is C4B {
	function f1() virtual public pure
	
	returns (uint)
	{
		return 2010567813;
	}
}
interface I5BBB {
	function f0() external view returns (uint);
}
interface I5BB is I5BBB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
interface I5BBBBB {
}
interface I5BBBB is I5BB, I5BBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f3() external view returns (uint);
}
interface I5B is I5BB, I5BBBB {
	function f0() override(I5BB, I5BBBB)
	external view returns (uint);
	function f1() override(I5BB, I5BBBB)
	external view returns (uint);
}
interface I5 is I5B {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f4() external view returns (uint);
	function f5() external payable returns (uint);
}
interface I6 {
	function f0() external view returns (uint);
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
