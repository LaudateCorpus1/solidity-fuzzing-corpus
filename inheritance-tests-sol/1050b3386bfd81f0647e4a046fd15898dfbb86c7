pragma solidity >=0.0;
interface I0B {
	function f0() external pure returns (uint);
	function f1() external view returns (uint);
}
interface I0 is I0B {
}
contract C1 {
	function f0() external pure
	
	returns (uint)
	{
		return 338644667;
	}
	function f1() external pure
	
	returns (uint)
	{
		return 71199793;
	}
}
interface C2B {
	function f0() external view returns (uint);
}
contract C2 is C2B {
	function f0() external view
	override
	returns (uint)
	{
		return 1669237718;
	}
}
interface C3B {
	function f0() external view returns (uint);
}
interface C3BB is C3B {
}
contract C3 is C3B, C3BB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1048498435;
	}
}
interface I4BB {
	function f0() external view returns (uint);
}
interface I4B is I4BB {
	function f1() external payable returns (uint);
}
interface I4BBBB {
	function f0() external view returns (uint);
}
interface I4BBB is I4B, I4BBBB {
	function f0() override(I4BB, I4BBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I4 is I4B, I4BBB {
	function f0() override(I4BB, I4BBB)
	external view returns (uint);
}
interface I5BB {
	function f0() external view returns (uint);
}
interface I5B is I5BB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I5 is I5B {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I6B {
	function f0() external view returns (uint);
}
interface I6 is I6B {
}
interface I7 {
	function f0() external payable returns (uint);
}
library L8 {
	function f0(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}
interface C9B {
	function f0() external view returns (uint);
}
interface C9BB is C9B {
}
contract C9 is C9B, C9BB {
	function f0() external view
	override
	returns (uint)
	{
		return 1348465915;
	}
}
interface I10BB {
	function f0() external view returns (uint);
}
interface I10B is I10BB {
	function f1() external view returns (uint);
}
interface I10 is I10B {
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 338644667)
				return 1;
			if (tc0.f1() != 71199793)
				return 2;
			C2 tc1 = new C2();
			if (tc1.f0() != 1669237718)
				return 3;
			C3 tc2 = new C3();
			if (tc2.f0() != 1048498435)
				return 4;
			C9 tc3 = new C9();
			if (tc3.f0() != 1348465915)
				return 5;
			return 0;
	}
}
