
pragma solidity >=0.0;











interface C0BBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB {

	function f1() override
	external pure returns (uint);
}
interface C0BBBBBB is C0BBBBBBB {

	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C0BBBBB is C0BBBBBB {

}

interface C0BBBBBBBBB is C0BBBBBB {

	function f4() external view returns (uint);
}
interface C0BBBB is C0BBBBB, C0BBBBBBBBB {

	function f1() override
	external pure returns (uint);
	function f4() override
	external view returns (uint);
}
contract C0BBB is C0BBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1402304087;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 2064876628;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1842513780;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 631416347;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 890442452;
	}
}
contract C0BB is C0BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1696049367;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1272185027;
	}
}
contract C0B is C0BB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1287522347;
	}
}
contract C0 is C0B {

	function f0() external payable
	override
	returns (uint)
	{
		return 153892771;
	}
}
library L1 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1681692777;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1714636915;
	}
}


contract C2B {

}

abstract contract C2BB is C2B {

}









interface C2BBBBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C2BBBBBBBBBB is C2BBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}

interface C2BBBBBBBBBBBB is C2BBBBBBBBBB {

	function f2() external payable returns (uint);
}
interface C2BBBBBBBBB is C2BBBBBBBBBB, C2BBBBBBBBBBBB {

	function f1() override
	external pure returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C2BBBBBBBB is C2BBBBBBBBB {

	function f1() override
	external pure returns (uint);
}

interface C2BBBBBBBBBBBBB is C2BBBBBBBB {

	function f1() override
	external pure returns (uint);
	function f4() override
	external view returns (uint);
	function f5() external view returns (uint);
}
interface C2BBBBBBB is C2BBBBBBBB, C2BBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override(C2BBBBBBBB, C2BBBBBBBBBBBBB)
	external pure returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() override(C2BBBBBBBBB, C2BBBBBBBBBBBBB)
	external view returns (uint);
}
contract C2BBBBBB is C2BBBBBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 837051536;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 355190910;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 2127735996;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1869683330;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1444510476;
	}
	function f5() external view
	override
	returns (uint)
	{
		return 1262088783;
	}
}
contract C2BBBBB is C2BBBBBB {

	function f4() external view
	override
	returns (uint)
	{
		return 1273555394;
	}
}
contract C2BBBB is C2BBBBB {

}
contract C2BBB is C2BB, C2BBBB {

}
abstract contract C2 is C2B, C2BB, C2BBB {

}
library L3 {

	function f0(uint) public pure returns (uint)
	{
		return 596516649;
	}
}
library L4 {

	function f0(uint) public view returns (uint)
	{
		return 1189641421;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1025202362;
	}
}
library L5 {

	function f0(uint) public view returns (uint)
	{
		return 1350490027;
	}
}
library L6 {

	function f0(uint) public view returns (uint)
	{
		return 783368690;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1102520059;
	}
}
library L7 {

	function f0(uint) external pure returns (uint)
	{
		return 2044897763;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1967513926;
	}
	function f2(uint) public view returns (uint)
	{
		return 1365180540;
	}
	function f3(uint) public view returns (uint)
	{
		return 1540383426;
	}
}


contract C {
	using L7 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f3() != 1540383426)
			return 1;
		return 0;
	}
}

