
pragma solidity >=0.0;



contract C0 {

	function f0() public view
	
	returns (uint)
	{
		return 48271;
	}
}


interface I2B {

	function f0() external view returns (uint);
}
interface I2 is I2B {

}



interface C3BB {

	function f0() external view returns (uint);
}

interface C3BBB is C3BB {

	function f1() external view returns (uint);
}
interface C3B is C3BB, C3BBB {

	function f2() external payable returns (uint);
}



interface C3BBBBBB {

	function f0() external view returns (uint);
}
interface C3BBBBB is C3BBBBBB {

}
interface C3BBBB is C3B, C3BBBBB {

	function f0() override(C3BB, C3BBBBBB)
	external view returns (uint);
}
contract C3 is C3B, C3BBBB {

	function f0() external view
	override(C3BBBB, C3BB)
	returns (uint)
	{
		return 1098894339;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 2136927794;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 2075782095;
	}
}









interface C4BBBBBBBB {

	function f0() external view returns (uint);
}
contract C4BBBBBBB is C4BBBBBBBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 914937185;
	}
}
contract C4BBBBBB is C4BBBBBBB {

}
contract C4BBBBB is C4BBBBBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1842513780;
	}
}
contract C4BBBB is C4BBBBB {

	function f1() public pure
	
	returns (uint)
	{
		return 2010567813;
	}
}
contract C4BBB is C4BBBB {

}
contract C4BB is C4BBB {

	function f0() external view
	override
	returns (uint)
	{
		return 1479919876;
	}
}
contract C4B is C4BB {

}
contract C4 is C4B {

}



interface I5BB {

	function f0() external view returns (uint);
}
interface I5B is I5BB {

	function f1() external payable returns (uint);
}
interface I5 is I5B {

	function f0() override
	external view returns (uint);
}


abstract contract C6B {

}

contract C6BB is C6B {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1814467857;
	}
}
abstract contract C6 is C6B, C6BB {

}


interface I7B {

	function f0() external view returns (uint);
}
interface I7 is I7B {

}

contract C8 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 412013968;
	}
}
library L9 {

	function f0(uint) private view returns (uint)
	{
		return 1714636915;
	}
}

contract C11 {

	function f0() public view
	
	returns (uint)
	{
		return 1243696899;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1587659744;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 48271)
				return 1;
			C11 tc1 = new C11();
			if (tc1.f0() != 1243696899)
				return 2;
			if (tc1.f1() != 1587659744)
				return 3;
			C3 tc2 = new C3();
			if (tc2.f0() != 1098894339)
				return 4;
			if (tc2.f1() != 2136927794)
				return 5;
			if (tc2.f2() != 2075782095)
				return 6;
			C4 tc3 = new C4();
			if (tc3.f0() != 1479919876)
				return 7;
			if (tc3.f1() != 2010567813)
				return 8;
			C4B tc4 = new C4B();
			if (tc4.f0() != 1479919876)
				return 9;
			if (tc4.f1() != 2010567813)
				return 10;
			C4BB tc5 = new C4BB();
			if (tc5.f0() != 1479919876)
				return 11;
			if (tc5.f1() != 2010567813)
				return 12;
			C4BBB tc6 = new C4BBB();
			if (tc6.f0() != 1842513780)
				return 13;
			if (tc6.f1() != 2010567813)
				return 14;
			C4BBBB tc7 = new C4BBBB();
			if (tc7.f0() != 1842513780)
				return 15;
			if (tc7.f1() != 2010567813)
				return 16;
			C4BBBBB tc8 = new C4BBBBB();
			if (tc8.f0() != 1842513780)
				return 17;
			C4BBBBBB tc9 = new C4BBBBBB();
			if (tc9.f0() != 914937185)
				return 18;
			C4BBBBBBB tc10 = new C4BBBBBBB();
			if (tc10.f0() != 914937185)
				return 19;
			C6BB tc11 = new C6BB();
			if (tc11.f0() != 1814467857)
				return 20;
			C8 tc12 = new C8();
			if (tc12.f0() != 412013968)
				return 21;
			return 0;
	}
}

