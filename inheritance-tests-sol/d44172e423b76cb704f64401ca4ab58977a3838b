pragma solidity >=0.0;
interface C0BBBBBBBBBBBB {
	function f0() external payable returns (uint);
}
interface C0BBBBBBBBBBB is C0BBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBB is C0BBBBBBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C0BBBBBBBBBB is C0BBBBBBBBBBB, C0BBBBBBBBBBBBB {
	function f0() override(C0BBBBBBBBBBBB, C0BBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() external payable returns (uint);
	function f3() external payable returns (uint);
}
interface C0BBBBBBBBB is C0BBBBBBBBBB {
	function f4() external view returns (uint);
	function f5() external pure returns (uint);
}
interface C0BBBBBBBB is C0BBBBBBBBB {
}
interface C0BBBBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBBB is C0BBBBBBBB, C0BBBBBBBBBBBBBBB {
	function f1() override
	external pure returns (uint);
	function f3() override
	external payable returns (uint);
	function f6() external view returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB, C0BBBBBBBBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override(C0BBBBBBBBBBBBB, C0BBBBBBBBBBBBBB)
	external pure returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override(C0BBBBBBBBBB, C0BBBBBBBBBBBBBB)
	external payable returns (uint);
}
contract C0BBBBBB is C0BBBBBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1105724094;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1696049367;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1168816941;
	}
	function f3() external payable
	override
	returns (uint)
	{
		return 201068705;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 928270262;
	}
	function f5() external pure
	override
	returns (uint)
	{
		return 1814467857;
	}
	function f6() virtual external view
	override
	returns (uint)
	{
		return 1659675143;
	}
}
contract C0BBBBB is C0BBBBBB {
	function f1() external pure
	override
	returns (uint)
	{
		return 1675824860;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 1243696899;
	}
	function f6() external view
	override
	returns (uint)
	{
		return 942409124;
	}
	function f7() internal pure
	
	returns (uint)
	{
		return 884730203;
	}
}
contract C0BBBB is C0BBBBB {
}
contract C0BBB is C0BBBB {
}
contract C0BB is C0BBB {
}
contract C0BBBBBBBBBBBBBBBBB is C0BBB {
	function f8() external pure
	
	returns (uint)
	{
		return 276590098;
	}
}
contract C0B is C0BB, C0BBBBBBBBBBBBBBBBB {
}
abstract contract C0BBBBBBBBBBBBBBBBBB is C0BB {
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1243427070;
	}
}
contract C0 is C0B, C0BBBBBBBBBBBBBBBBBB {
	function f2() external payable
	override(C0BBBBBBBBBBBBBBBBBB, C0BBBBBB)
	returns (uint)
	{
		return 143244144;
	}
	function f9() public view
	
	returns (uint)
	{
		return 1788215331;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
