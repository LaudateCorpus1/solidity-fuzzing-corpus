
pragma solidity >=0.0;




interface I0B {

	function f0() external view returns (uint);
}

interface I0BB is I0B {

}
interface I0 is I0B, I0BB {

	function f0() override
	external view returns (uint);
}





interface I1BBBB {

	function f0() external view returns (uint);
}
interface I1BBB is I1BBBB {

}
interface I1BB is I1BBB {

}
interface I1B is I1BB {

}

interface I1BBBBB is I1B {

	function f1() external payable returns (uint);
}




interface I1BBBBBBBBB {

	function f0() external view returns (uint);
}
interface I1BBBBBBBB is I1BBBBBBBBB {

}
interface I1BBBBBBB is I1BBBBBBBB {

}
interface I1BBBBBB is I1BB, I1BBBBBBB {

	function f0() override(I1BBBB, I1BBBBBBBBB)
	external view returns (uint);
}
interface I1 is I1B, I1BBBBB, I1BBBBBB {

	function f0() override(I1BBBB, I1BBBBBB)
	external view returns (uint);
}


interface I2B {

	function f0() external view returns (uint);
}

interface I2BB is I2B {

	function f0() override
	external view returns (uint);
}
interface I2 is I2B, I2BB {

	function f0() override(I2B, I2BB)
	external view returns (uint);
	function f1() external view returns (uint);
}




interface I3BBB {

	function f0() external view returns (uint);
}
interface I3BB is I3BBB {

}
interface I3B is I3BB {

}
interface I3 is I3B {

	function f1() external view returns (uint);
}


interface I4B {

	function f0() external view returns (uint);
}
interface I4 is I4B {

}






interface I5BBBBB {

	function f0() external view returns (uint);
}
interface I5BBBB is I5BBBBB {

	function f0() override
	external view returns (uint);
}
interface I5BBB is I5BBBB {

	function f0() override
	external view returns (uint);
}
interface I5BB is I5BBB {

	function f1() external payable returns (uint);
}
interface I5B is I5BB {

	function f0() override
	external view returns (uint);
}
interface I5 is I5B {

	function f0() override
	external view returns (uint);
}
library L6 {

	function f0(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}



interface I7BB {

	function f0() external view returns (uint);
}
interface I7B is I7BB {

	function f1() external payable returns (uint);
}
interface I7 is I7B {

	function f1() override
	external payable returns (uint);
}




interface I8BBB {

	function f0() external view returns (uint);
}
interface I8BB is I8BBB {

	function f0() override
	external view returns (uint);
}
interface I8B is I8BB {

}
interface I8 is I8B {

	function f1() external view returns (uint);
}



interface I9BB {

	function f0() external view returns (uint);
}
interface I9B is I9BB {

	function f1() external payable returns (uint);
}
interface I9 is I9B {

	function f1() override
	external payable returns (uint);
}
library L10 {

	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
}




interface I11BBB {

	function f0() external view returns (uint);
}
interface I11BB is I11BBB {

}
interface I11B is I11BB {

}


interface I11BBBBB {

	function f0() external view returns (uint);
}
interface I11BBBB is I11B, I11BBBBB {

	function f0() override(I11BBB, I11BBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I11 is I11B, I11BBBB {

	function f0() override(I11BBB, I11BBBB)
	external view returns (uint);
	function f2() external view returns (uint);
}




interface I12BBB {

	function f0() external view returns (uint);
}
interface I12BB is I12BBB {

	function f0() override
	external view returns (uint);
}
interface I12B is I12BB {

}
interface I12 is I12B {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
library L14 {

	function f0(uint) private pure returns (uint)
	{
		return 1649760492;
	}
}





interface I15BBBB {

	function f0() external view returns (uint);
}
interface I15BBB is I15BBBB {

}
interface I15BB is I15BBB {

}
interface I15B is I15BB {

}

interface I15BBBBB is I15BB {

	function f0() override
	external view returns (uint);
	function f1() external pure returns (uint);
}




interface I15BBBBBBBBB {

	function f0() external view returns (uint);
}
interface I15BBBBBBBB is I15BBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I15BBBBBBB is I15BBBBBBBB {

}
interface I15BBBBBB is I15BB, I15BBBBBBB {

	function f0() override(I15BBBB, I15BBBBBBBB)
	external view returns (uint);
}
interface I15 is I15B, I15BBBBB, I15BBBBBB {

	function f0() override(I15BBBB, I15BBBBB, I15BBBBBB)
	external view returns (uint);
}


contract C {
	using L6 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1957747793)
			return 1;
		return 0;
	}
}

