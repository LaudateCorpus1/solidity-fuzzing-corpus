
pragma solidity >=0.0;


library L0 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}




interface C1BBB {

	function f0() external payable returns (uint);
}
interface C1BB is C1BBB {

	function f0() override
	external payable returns (uint);
}
interface C1B is C1BB {

	function f1() external view returns (uint);
}

interface C1BBBB is C1B {

	function f2() external view returns (uint);
}
contract C1 is C1B, C1BBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1596680831;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1203428207;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1738531149;
	}
}


contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

