
pragma solidity >=0.0;




interface I0B {

	function f0() external payable returns (uint);
}
interface I0 is I0B {

}



interface I1BB {

	function f0() external view returns (uint);
}
interface I1B is I1BB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I1 is I1B {

}





interface I2BBBB {

	function f0() external view returns (uint);
}
interface I2BBB is I2BBBB {

	function f1() external payable returns (uint);
}

interface I2BBBBB is I2BBBB {

	function f1() external payable returns (uint);
}
interface I2BB is I2BBB, I2BBBBB {

	function f1() override(I2BBB, I2BBBBB)
	external payable returns (uint);
}
interface I2B is I2BB {

	function f2() external payable returns (uint);
}


interface I2BBBBBBB {

	function f0() external view returns (uint);
}
interface I2BBBBBB is I2B, I2BBBBBBB {

	function f0() override(I2BBBB, I2BBBBBBB)
	external view returns (uint);
	function f3() external payable returns (uint);
}
interface I2 is I2B, I2BBBBBB {

	function f0() override(I2BBBB, I2BBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}


interface I3B {

	function f0() external payable returns (uint);
}
interface I3 is I3B {

	function f0() override
	external payable returns (uint);
}


interface I4B {

	function f0() external payable returns (uint);
}
interface I4 is I4B {

}





interface I5BBBB {

	function f0() external view returns (uint);
}
interface I5BBB is I5BBBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}

interface I5BBBBB is I5BBBB {

	function f1() external payable returns (uint);
}
interface I5BB is I5BBB, I5BBBBB {

	function f0() override(I5BBB, I5BBBB)
	external view returns (uint);
	function f1() override(I5BBB, I5BBBBB)
	external payable returns (uint);
}
interface I5B is I5BB {

	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
}


interface I5BBBBBBB {

	function f0() external view returns (uint);
}
interface I5BBBBBB is I5BB, I5BBBBBBB {

	function f0() override(I5BB, I5BBBBBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I5 is I5B, I5BBBBBB {

	function f0() override(I5B, I5BBBBBB)
	external view returns (uint);
	function f2() override(I5B, I5BBBBBB)
	external payable returns (uint);
}


interface I6B {

	function f0() external payable returns (uint);
}
interface I6 is I6B {

	function f0() override
	external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

