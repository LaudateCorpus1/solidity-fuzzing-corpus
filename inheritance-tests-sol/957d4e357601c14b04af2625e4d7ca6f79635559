pragma solidity >=0.0;
interface C0B {
	function f0() external payable returns (uint);
}
contract C0 is C0B {
	function f0() external payable
	override
	returns (uint)
	{
		return 182605794;
	}
}
contract C2B {
	function f0() public view
	
	returns (uint)
	{
		return 2078669041;
	}
}
contract C2BB is C2B {
	function f1() public view
	
	returns (uint)
	{
		return 407355683;
	}
}
contract C2 is C2B, C2BB {
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 182605794)
				return 1;
			C2 tc1 = new C2();
			if (tc1.f0() != 2078669041)
				return 2;
			if (tc1.f1() != 407355683)
				return 3;
			C2B tc2 = new C2B();
			if (tc2.f0() != 2078669041)
				return 4;
			C2BB tc3 = new C2BB();
			if (tc3.f0() != 2078669041)
				return 5;
			if (tc3.f1() != 407355683)
				return 6;
			return 0;
	}
}
