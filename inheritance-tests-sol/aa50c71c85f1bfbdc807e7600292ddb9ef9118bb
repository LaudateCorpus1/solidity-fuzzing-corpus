pragma solidity >=0.0;
library L0 {
	function f0(uint) internal view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public view returns (uint)
	{
		return 846930886;
	}
}
library L1 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
abstract contract C2BB {
}
interface C2BBBB {
	function f0() external payable returns (uint);
}
interface C2BBB is C2BBBB {
	function f0() override
	external payable returns (uint);
}
contract C2B is C2BB, C2BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 407355683;
	}
}
contract C2 is C2B {
}
library L3 {
	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
library L4 {
	function f0(uint) public view returns (uint)
	{
		return 424238335;
	}
	function f1(uint) internal view returns (uint)
	{
		return 719885386;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
}
library L5 {
	function f0(uint) internal view returns (uint)
	{
		return 596516649;
	}
}
contract C6 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 564586691;
	}
}
library L7 {
	function f0(uint) internal view returns (uint)
	{
		return 1189641421;
	}
	function f1(uint) internal view returns (uint)
	{
		return 1025202362;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1350490027;
	}
}
library L8 {
	function f0(uint) public pure returns (uint)
	{
		return 783368690;
	}
}
interface I9 {
	function f0() external payable returns (uint);
}
interface I10B {
	function f0() external view returns (uint);
}
interface I10 is I10B {
}
interface I11BBBB {
	function f0() external payable returns (uint);
}
interface I11BBBBB is I11BBBB {
	function f1() external payable returns (uint);
}
interface I11BBB is I11BBBB, I11BBBBB {
}
interface I11BB is I11BBB {
	function f1() override
	external payable returns (uint);
}
interface I11BBBBBBB {
}
interface I11BBBBBB is I11BBB, I11BBBBBBB {
	function f1() override
	external payable returns (uint);
}
interface I11B is I11BB, I11BBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override(I11BB, I11BBBBBB)
	external payable returns (uint);
}
interface I11 is I11B {
	function f1() override
	external payable returns (uint);
}
library L12 {
	function f0(uint) internal view returns (uint)
	{
		return 1967513926;
	}
	function f1(uint) internal view returns (uint)
	{
		return 1365180540;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1540383426;
	}
}
library L13 {
	function f0(uint) internal view returns (uint)
	{
		return 304089172;
	}
}
library L14 {
	function f0(uint) internal pure returns (uint)
	{
		return 1303455736;
	}
}
interface C15BBB {
	function f0() external view returns (uint);
}
interface C15BB is C15BBB {
	function f0() override
	external view returns (uint);
}
contract C15B is C15BB {
	function f0() external view
	override
	returns (uint)
	{
		return 631416347;
	}
}
contract C15 is C15B {
}
contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 846930886)
			return 1;
		return 0;
	}
}
