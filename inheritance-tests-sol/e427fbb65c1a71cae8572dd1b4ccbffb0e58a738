pragma solidity >=0.0;
interface I0BB {
	function f0() external view returns (uint);
}
interface I0BBB is I0BB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I0B is I0BB, I0BBB {
	function f0() override(I0BB, I0BBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I0BBBBB {
	function f0() external view returns (uint);
}
interface I0BBBB is I0B, I0BBBBB {
	function f0() override(I0B, I0BBBBB)
	external view returns (uint);
	function f3() external payable returns (uint);
}
interface I0 is I0B, I0BBBB {
	function f0() override(I0B, I0BBBB)
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
interface I1B {
	function f0() external view returns (uint);
}
interface I1BB is I1B {
	function f0() override
	external view returns (uint);
}
interface I1 is I1B, I1BB {
	function f0() override(I1B, I1BB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I3BBB {
	function f0() external view returns (uint);
}
interface I3BB is I3BBB {
}
interface I3B is I3BB {
}
interface I3BBBBB {
	function f0() external view returns (uint);
}
interface I3BBBB is I3BB, I3BBBBB {
	function f0() override(I3BBB, I3BBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I3 is I3B, I3BBBB {
	function f0() override(I3BBB, I3BBBB)
	external view returns (uint);
	function f2() external view returns (uint);
}
library L4 {
	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
}
interface I5BB {
	function f0() external view returns (uint);
}
interface I5B is I5BB {
	function f1() external payable returns (uint);
}
interface I5BBBB {
	function f0() external view returns (uint);
}
interface I5BBB is I5B, I5BBBB {
	function f0() override(I5BB, I5BBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I5 is I5B, I5BBB {
	function f0() override(I5BB, I5BBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() external payable returns (uint);
}
library L6 {
	function f0(uint) private pure returns (uint)
	{
		return 1649760492;
	}
}
interface I7BB {
	function f0() external view returns (uint);
}
interface I7B is I7BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I7BBBB {
	function f0() external view returns (uint);
}
interface I7BBB is I7BB, I7BBBB {
	function f0() override(I7BB, I7BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I7 is I7B, I7BBB {
	function f0() override(I7B, I7BBB)
	external view returns (uint);
	function f1() override(I7B, I7BBB)
	external payable returns (uint);
}
interface I10BB {
	function f0() external view returns (uint);
}
interface I10BBB is I10BB {
	function f1() external view returns (uint);
}
interface I10B is I10BB, I10BBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I10BBBBB {
	function f0() external view returns (uint);
}
interface I10BBBB is I10B, I10BBBBB {
	function f0() override(I10B, I10BBBBB)
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() external view returns (uint);
}
interface I10 is I10B, I10BBBB {
	function f0() override(I10B, I10BBBB)
	external view returns (uint);
	function f2() override(I10B, I10BBBB)
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
interface I11BB {
	function f0() external view returns (uint);
}
interface I11B is I11BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I11BBBB {
	function f0() external view returns (uint);
}
interface I11BBB is I11BB, I11BBBB {
	function f0() override(I11BB, I11BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I11 is I11B, I11BBB {
	function f0() override(I11B, I11BBB)
	external view returns (uint);
	function f1() override(I11B, I11BBB)
	external payable returns (uint);
}
library L12 {
	function f0(uint) private pure returns (uint)
	{
		return 2044897763;
	}
}
interface I13 {
	function f0() external pure returns (uint);
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
