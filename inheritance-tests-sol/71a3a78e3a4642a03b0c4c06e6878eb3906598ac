pragma solidity >=0.0;
interface C0BB {
	function f0() external view returns (uint);
}
interface C0B is C0BB {
}
interface C0BBBB {
	function f0() external view returns (uint);
}
interface C0BBB is C0BB, C0BBBB {
	function f0() override(C0BB, C0BBBB)
	external view returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
contract C0 is C0B, C0BBB {
	function f0() external view
	override(C0BBB, C0BB)
	returns (uint)
	{
		return 2078669041;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1105902161;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 564586691;
	}
}
interface C1B {
	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
contract C1 is C1B {
	function f0() external view
	override
	returns (uint)
	{
		return 192302371;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1250328747;
	}
}
contract C4B {
	function f0() public view
	
	returns (uint)
	{
		return 2064876628;
	}
}
contract C4 is C4B {
}
interface I5B {
	function f0() external view returns (uint);
}
interface I5 is I5B {
	function f0() override
	external view returns (uint);
}
contract C6B {
}
contract C6 is C6B {
	function f0() public view
	
	returns (uint)
	{
		return 1842513780;
	}
}
interface I7B {
	function f0() external view returns (uint);
}
interface I7 is I7B {
	function f1() external view returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 2078669041)
				return 1;
			if (tc0.f1() != 1105902161)
				return 2;
			if (tc0.f2() != 564586691)
				return 3;
			C1 tc1 = new C1();
			if (tc1.f0() != 192302371)
				return 4;
			if (tc1.f1() != 1250328747)
				return 5;
			C4 tc2 = new C4();
			if (tc2.f0() != 2064876628)
				return 6;
			C4B tc3 = new C4B();
			if (tc3.f0() != 2064876628)
				return 7;
			C6 tc4 = new C6();
			if (tc4.f0() != 1842513780)
				return 8;
			return 0;
	}
}
