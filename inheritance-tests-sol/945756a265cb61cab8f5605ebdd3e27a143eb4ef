
pragma solidity >=0.0;


library L0 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}





interface C1BBBB {

	function f0() external payable returns (uint);
}
interface C1BBB is C1BBBB {

}
contract C1BB is C1BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1914720637;
	}
}
contract C1B is C1BB {

}
contract C1 is C1B {

}
library L2 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public view returns (uint)
	{
		return 1681692777;
	}
}


interface C3B {

}



interface C3BBBB {

}
contract C3BBB is C3BBBB {

}

interface C3BBBBB is C3BBBB {

	function f0() external view returns (uint);
}
contract C3BB is C3B, C3BBB, C3BBBBB {

	function f0() external view
	override
	returns (uint)
	{
		return 1250328747;
	}
}
contract C3 is C3B, C3BB {

}









interface C4BBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C4BBBBBBB is C4BBBBBBBB {

}
interface C4BBBBBB is C4BBBBBBB {

	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C4BBBBB is C4BBBBBB {

	function f0() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
}

interface C4BBBBBBBBB is C4BBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
	function f2() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface C4BBBB is C4BBBBB, C4BBBBBBBBB {

	function f0() override(C4BBBBB, C4BBBBBBBBB)
	external payable returns (uint);
	function f1() override(C4BBBBBBBB, C4BBBBBBBBB)
	external pure returns (uint);
	function f2() override(C4BBBBB, C4BBBBBBBBB)
	external view returns (uint);
	function f4() override
	external view returns (uint);
}
contract C4BBB is C4BBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 849178936;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 1479919876;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1272185027;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1308858262;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1287522347;
	}
}
contract C4BB is C4BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 153892771;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 1675824860;
	}
}
contract C4B is C4BB {

}
contract C4 is C4B {

}

contract C5 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1324346645;
	}
}




interface I6BBB {

	function f0() external payable returns (uint);
}
interface I6BB is I6BBB {

	function f1() external payable returns (uint);
}
interface I6B is I6BB {

	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}


interface I6BBBBB {

	function f0() external payable returns (uint);
}
interface I6BBBB is I6B, I6BBBBB {

	function f0() override(I6BBB, I6BBBBB)
	external payable returns (uint);
}

interface I6BBBBBB is I6B {

	function f3() external payable returns (uint);
}
interface I6 is I6B, I6BBBB, I6BBBBBB {

	function f0() override(I6BBB, I6BBBB)
	external payable returns (uint);
	function f2() override
	external view returns (uint);
}









interface C7BBBBBBBB {

	function f0() external view returns (uint);
}
interface C7BBBBBBB is C7BBBBBBBB {

}
interface C7BBBBBB is C7BBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C7BBBBB is C7BBBBBB {

	function f0() override
	external view returns (uint);
}
interface C7BBBB is C7BBBBB {

}
interface C7BBB is C7BBBB {

	function f1() external view returns (uint);
}
interface C7BB is C7BBB {

	function f1() override
	external view returns (uint);
}
contract C7B is C7BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 243877847;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1336273608;
	}
}
contract C7 is C7B {

}


interface C8B {

	function f0() external view returns (uint);
}

interface C8BB is C8B {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
contract C8 is C8B, C8BB {

	function f0() external view
	override(C8BB, C8B)
	returns (uint)
	{
		return 1273555394;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 583514338;
	}
	function f2() public pure
	
	returns (uint)
	{
		return 425095546;
	}
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1914720637)
				return 1;
			C1B tc1 = new C1B();
			if (tc1.f0() != 1914720637)
				return 2;
			C1BB tc2 = new C1BB();
			if (tc2.f0() != 1914720637)
				return 3;
			C3 tc3 = new C3();
			if (tc3.f0() != 1250328747)
				return 4;
			C3BB tc4 = new C3BB();
			if (tc4.f0() != 1250328747)
				return 5;
			C4 tc5 = new C4();
			if (tc5.f0() != 153892771)
				return 6;
			if (tc5.f1() != 1479919876)
				return 7;
			if (tc5.f2() != 1272185027)
				return 8;
			if (tc5.f3() != 1308858262)
				return 9;
			if (tc5.f4() != 1675824860)
				return 10;
			C4B tc6 = new C4B();
			if (tc6.f0() != 153892771)
				return 11;
			if (tc6.f1() != 1479919876)
				return 12;
			if (tc6.f2() != 1272185027)
				return 13;
			if (tc6.f3() != 1308858262)
				return 14;
			if (tc6.f4() != 1675824860)
				return 15;
			C4BB tc7 = new C4BB();
			if (tc7.f0() != 153892771)
				return 16;
			if (tc7.f1() != 1479919876)
				return 17;
			if (tc7.f2() != 1272185027)
				return 18;
			if (tc7.f3() != 1308858262)
				return 19;
			if (tc7.f4() != 1675824860)
				return 20;
			C4BBB tc8 = new C4BBB();
			if (tc8.f0() != 849178936)
				return 21;
			if (tc8.f1() != 1479919876)
				return 22;
			if (tc8.f2() != 1272185027)
				return 23;
			if (tc8.f3() != 1308858262)
				return 24;
			if (tc8.f4() != 1287522347)
				return 25;
			C5 tc9 = new C5();
			if (tc9.f0() != 1324346645)
				return 26;
			C7 tc10 = new C7();
			if (tc10.f0() != 243877847)
				return 27;
			if (tc10.f1() != 1336273608)
				return 28;
			C7B tc11 = new C7B();
			if (tc11.f0() != 243877847)
				return 29;
			if (tc11.f1() != 1336273608)
				return 30;
			C8 tc12 = new C8();
			if (tc12.f0() != 1273555394)
				return 31;
			if (tc12.f1() != 583514338)
				return 32;
			if (tc12.f2() != 425095546)
				return 33;
			return 0;
	}
}

