pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
interface I1 {
	function f0() external payable returns (uint);
}
library L2 {
	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
library L3 {
	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}
interface C4BBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C4BBBBBBB is C4BBBBBBBB {
}
interface C4BBBBBB is C4BBBBBBB {
	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C4BBBBB is C4BBBBBB {
	function f0() override
	external payable returns (uint);
}
interface C4BBBBBBBBB is C4BBBBBB {
	function f1() override
	external pure returns (uint);
	function f2() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface C4BBBB is C4BBBBB, C4BBBBBBBBB {
	function f0() override(C4BBBBB, C4BBBBBB)
	external payable returns (uint);
	function f1() override(C4BBBBBBBB, C4BBBBBBBBB)
	external pure returns (uint);
	function f2() override(C4BBBBBB, C4BBBBBBBBB)
	external view returns (uint);
}
contract C4BBB is C4BBBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1531210416;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1774893867;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1032438314;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 921256890;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 1389449997;
	}
}
contract C4BB is C4BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 552862047;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 739959938;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1174276176;
	}
	function f5() virtual public pure
	
	returns (uint)
	{
		return 654429131;
	}
}
contract C4B is C4BB {
}
contract C4 is C4B {
	function f5() public pure
	override
	returns (uint)
	{
		return 1150688209;
	}
}
interface C5BBBBBB {
	function f0() external view returns (uint);
}
interface C5BBBBB is C5BBBBBB {
	function f0() override
	external view returns (uint);
}
interface C5BBBB is C5BBBBB {
	function f0() override
	external view returns (uint);
}
interface C5BBB is C5BBBB {
	function f0() override
	external view returns (uint);
}
contract C5BB is C5BBB {
	function f0() external view
	override
	returns (uint)
	{
		return 793829872;
	}
}
contract C5B is C5BB {
}
contract C5 is C5B {
}
interface I6BBB {
	function f0() external payable returns (uint);
}
interface I6BB is I6BBB {
	function f1() external payable returns (uint);
}
interface I6B is I6BB {
	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I6BBBBB {
	function f0() external payable returns (uint);
}
interface I6BBBB is I6BB, I6BBBBB {
	function f0() override(I6BBB, I6BBBBB)
	external payable returns (uint);
}
interface I6BBBBBB is I6BBBBB {
	function f0() override
	external payable returns (uint);
}
interface I6 is I6B, I6BBBB, I6BBBBBB {
	function f0() override(I6B, I6BBBB, I6BBBBBB)
	external payable returns (uint);
}
library L7 {
	function f0(uint) internal pure returns (uint)
	{
		return 719885386;
	}
}
interface I8BB {
	function f0() external view returns (uint);
}
interface I8B is I8BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I8 is I8B {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I9BBB {
	function f0() external payable returns (uint);
}
interface I9BB is I9BBB {
	function f1() external payable returns (uint);
}
interface I9B is I9BB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I9BBBBB {
	function f0() external payable returns (uint);
}
interface I9BBBB is I9B, I9BBBBB {
	function f0() override(I9B, I9BBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I9 is I9B, I9BBBB {
	function f0() override(I9B, I9BBBB)
	external payable returns (uint);
	function f1() override(I9B, I9BBBB)
	external payable returns (uint);
	function f2() override
	external view returns (uint);
}
contract C10 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1063867998;
	}
}
interface I11BBB {
	function f0() external payable returns (uint);
}
interface I11BB is I11BBB {
	function f1() external payable returns (uint);
	function f2() external pure returns (uint);
}
interface I11B is I11BB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external pure returns (uint);
	function f3() external view returns (uint);
}
interface I11BBBBB {
	function f0() external payable returns (uint);
}
interface I11BBBB is I11BB, I11BBBBB {
	function f0() override(I11BBB, I11BBBBB)
	external payable returns (uint);
}
interface I11 is I11B, I11BBBB {
	function f0() override(I11B, I11BBBB)
	external payable returns (uint);
	function f1() override(I11B, I11BB)
	external payable returns (uint);
	function f2() override(I11B, I11BB)
	external pure returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C10 tc0 = new C10();
			if (tc0.f0() != 1063867998)
				return 1;
			C4 tc1 = new C4();
			if (tc1.f0() != 552862047)
				return 2;
			if (tc1.f1() != 739959938)
				return 3;
			if (tc1.f2() != 1174276176)
				return 4;
			if (tc1.f3() != 921256890)
				return 5;
			if (tc1.f4() != 1389449997)
				return 6;
			if (tc1.f5() != 1150688209)
				return 7;
			C4B tc2 = new C4B();
			if (tc2.f0() != 552862047)
				return 8;
			if (tc2.f1() != 739959938)
				return 9;
			if (tc2.f2() != 1174276176)
				return 10;
			if (tc2.f3() != 921256890)
				return 11;
			if (tc2.f4() != 1389449997)
				return 12;
			if (tc2.f5() != 654429131)
				return 13;
			C4BB tc3 = new C4BB();
			if (tc3.f0() != 552862047)
				return 14;
			if (tc3.f1() != 739959938)
				return 15;
			if (tc3.f2() != 1174276176)
				return 16;
			if (tc3.f3() != 921256890)
				return 17;
			if (tc3.f4() != 1389449997)
				return 18;
			if (tc3.f5() != 654429131)
				return 19;
			C4BBB tc4 = new C4BBB();
			if (tc4.f0() != 1531210416)
				return 20;
			if (tc4.f1() != 1774893867)
				return 21;
			if (tc4.f2() != 1032438314)
				return 22;
			if (tc4.f3() != 921256890)
				return 23;
			if (tc4.f4() != 1389449997)
				return 24;
			C5 tc5 = new C5();
			if (tc5.f0() != 793829872)
				return 25;
			C5B tc6 = new C5B();
			if (tc6.f0() != 793829872)
				return 26;
			C5BB tc7 = new C5BB();
			if (tc7.f0() != 793829872)
				return 27;
			return 0;
	}
}
