
pragma solidity >=0.0;



interface I0 {

	function f0() external payable returns (uint);
}


interface I1B {

}
interface I1 is I1B {

}

interface I2 {

	function f0() external payable returns (uint);
}
library L3 {

	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public view returns (uint)
	{
		return 846930886;
	}
}





interface C4BBBB {

	function f0() external pure returns (uint);
}
interface C4BBB is C4BBBB {

	function f0() override
	external pure returns (uint);
}
interface C4BB is C4BBB {

}
interface C4B is C4BB {

}
contract C4 is C4B {

	function f0() external pure
	override
	returns (uint)
	{
		return 564586691;
	}
}

interface I5 {

	function f0() external payable returns (uint);
}


interface I6B {

	function f0() external payable returns (uint);
}
interface I6 is I6B {

}

interface I7 {

	function f0() external payable returns (uint);
}


contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 846930886)
			return 1;
		return 0;
	}
}

