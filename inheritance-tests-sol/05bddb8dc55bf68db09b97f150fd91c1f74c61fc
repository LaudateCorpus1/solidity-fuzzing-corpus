pragma solidity >=0.0;
library L1 {
	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public view returns (uint)
	{
		return 846930886;
	}
}
interface I2 {
	function f0() external view returns (uint);
}
interface I3BB {
	function f0() external payable returns (uint);
}
interface I3B is I3BB {
	function f0() override
	external payable returns (uint);
}
interface I3 is I3B {
}
library L5 {
	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public view returns (uint)
	{
		return 1714636915;
	}
}
interface C8B {
	function f0() external view returns (uint);
}
contract C8 is C8B {
	function f0() external view
	override
	returns (uint)
	{
		return 1098894339;
	}
}
contract C9 {
	function f0() public view
	
	returns (uint)
	{
		return 1882556969;
	}
}
interface C10BB {
	function f0() external view returns (uint);
}
interface C10B is C10BB {
	function f0() override
	external view returns (uint);
}
contract C10 is C10B {
	function f0() external view
	override
	returns (uint)
	{
		return 638022372;
	}
}
library L11 {
	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
library L12 {
	function f0(uint) external pure returns (uint)
	{
		return 424238335;
	}
}
interface I13BB {
	function f0() external view returns (uint);
}
interface I13B is I13BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I13BBBB {
	function f0() external view returns (uint);
}
interface I13BBB is I13B, I13BBBB {
	function f0() override(I13B, I13BBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I13 is I13B, I13BBB {
	function f0() override(I13B, I13BBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
interface C15BB {
	function f0() external view returns (uint);
}
interface C15B is C15BB {
	function f0() override
	external view returns (uint);
}
contract C15 is C15B {
	function f0() external view
	override
	returns (uint)
	{
		return 1814467857;
	}
}
library L16 {
	function f0(uint) private pure returns (uint)
	{
		return 596516649;
	}
}
contract C {
	function test() public returns (uint)
	{
			C10 tc0 = new C10();
			if (tc0.f0() != 638022372)
				return 1;
			C15 tc1 = new C15();
			if (tc1.f0() != 1814467857)
				return 2;
			C8 tc2 = new C8();
			if (tc2.f0() != 1098894339)
				return 3;
			C9 tc3 = new C9();
			if (tc3.f0() != 1882556969)
				return 4;
			return 0;
	}
}
