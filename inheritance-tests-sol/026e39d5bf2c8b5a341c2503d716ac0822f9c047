
pragma solidity >=0.0;











interface C0BBBBBBBB {

	function f0() external view returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C0BBBBBB is C0BBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C0BBBBB is C0BBBBBB {

}
interface C0BBBB is C0BBBBB {

	function f0() override
	external view returns (uint);
}
interface C0BBB is C0BBBB {

	function f1() external payable returns (uint);
}
interface C0BB is C0BBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
contract C0B is C0BB {

	function f0() external view
	override
	returns (uint)
	{
		return 789576358;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1087776935;
	}
}
abstract contract C0 is C0B {

	function f1() external payable
	override
	returns (uint)
	{
		return 404605841;
	}
}









interface C1BBBBBBBB {

	function f0() external view returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB {

}
interface C1BBBBBB is C1BBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C1BBBBB is C1BBBBBB {

}
interface C1BBBB is C1BBBBB {

}
interface C1BBB is C1BBBB {

	function f1() external payable returns (uint);
}
interface C1BB is C1BBB {

}
contract C1B is C1BB {

	function f0() external view
	override
	returns (uint)
	{
		return 341746527;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 380300470;
	}
}
abstract contract C1 is C1B {

	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1565597401;
	}
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

