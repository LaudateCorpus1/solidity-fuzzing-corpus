pragma solidity >=0.0;
library L0 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
interface I1B {
}
interface I1 is I1B {
	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface I2BBB {
	function f0() external payable returns (uint);
}
interface I2BB is I2BBB {
	function f1() external payable returns (uint);
}
interface I2B is I2BB {
	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I2BBBBB {
	function f0() external payable returns (uint);
}
interface I2BBBB is I2B, I2BBBBB {
	function f0() override(I2B, I2BBBBB)
	external payable returns (uint);
}
interface I2 is I2B, I2BBBB {
	function f0() override(I2B, I2BBBB)
	external payable returns (uint);
}
contract C3BB {
}
abstract contract C3BBB is C3BB {
}
contract C3B is C3BB, C3BBB {
}
interface C3BBBBBBB {
	function f0() external view returns (uint);
}
interface C3BBBBBB is C3BBBBBBB {
}
interface C3BBBBB is C3BBBBBB {
}
interface C3BBBB is C3BBBBB {
}
contract C3 is C3B, C3BBBB {
	function f0() external view
	override
	returns (uint)
	{
		return 2075782095;
	}
}
abstract contract C4BB {
}
interface C4BBBB {
	function f0() external payable returns (uint);
}
interface C4BBB is C4BBBB {
	function f0() override
	external payable returns (uint);
}
contract C4B is C4BB, C4BBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1402304087;
	}
}
contract C4 is C4B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1842513780;
	}
}
interface I5BBB {
	function f0() external payable returns (uint);
}
interface I5BB is I5BBB {
	function f1() external payable returns (uint);
}
interface I5B is I5BB {
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I5BBBBB {
	function f0() external payable returns (uint);
}
interface I5BBBB is I5BB, I5BBBBB {
	function f0() override(I5BBB, I5BBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I5BBBBBB is I5BBBB {
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I5 is I5B, I5BBBB, I5BBBBBB {
	function f0() override(I5BBB, I5BBBB)
	external payable returns (uint);
	function f1() override(I5B, I5BBBB, I5BBBBBB)
	external payable returns (uint);
	function f2() override(I5B, I5BBBBBB)
	external view returns (uint);
}
library L6 {
	function f0(uint) public view returns (uint)
	{
		return 1649760492;
	}
}
library L7 {
	function f0(uint) public view returns (uint)
	{
		return 596516649;
	}
	function f1(uint) internal view returns (uint)
	{
		return 1189641421;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1025202362;
	}
	function f3(uint) internal pure returns (uint)
	{
		return 1350490027;
	}
}
library L8 {
	function f0(uint) public view returns (uint)
	{
		return 783368690;
	}
	function f1(uint) public view returns (uint)
	{
		return 1102520059;
	}
}
library L9 {
	function f0(uint) private pure returns (uint)
	{
		return 2044897763;
	}
	function f1(uint) public view returns (uint)
	{
		return 1967513926;
	}
}
library L10 {
	function f0(uint) public view returns (uint)
	{
		return 1365180540;
	}
	function f1(uint) public view returns (uint)
	{
		return 1540383426;
	}
}
library L11 {
	function f0(uint) public view returns (uint)
	{
		return 304089172;
	}
	function f1(uint) public view returns (uint)
	{
		return 1303455736;
	}
}
contract C12 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1057382352;
	}
}
interface C13BB {
	function f0() external payable returns (uint);
}
interface C13B is C13BB {
}
contract C13 is C13B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 480194461;
	}
	function f1() private pure
	
	returns (uint)
	{
		return 1675824860;
	}
}
contract C {
	function test() public returns (uint)
	{
			C12 tc0 = new C12();
			if (tc0.f0() != 1057382352)
				return 1;
			C13 tc1 = new C13();
			if (tc1.f0() != 480194461)
				return 2;
			C3 tc2 = new C3();
			if (tc2.f0() != 2075782095)
				return 3;
			C4 tc3 = new C4();
			if (tc3.f0() != 1842513780)
				return 4;
			C4B tc4 = new C4B();
			if (tc4.f0() != 1402304087)
				return 5;
			return 0;
	}
}
