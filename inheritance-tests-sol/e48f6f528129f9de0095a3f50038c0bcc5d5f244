pragma solidity >=0.0;
interface I0B {
	function f0() external view returns (uint);
}
interface I0 is I0B {
}
contract C1 {
	function f0() public view
	
	returns (uint)
	{
		return 182605794;
	}
	function f1() public pure
	
	returns (uint)
	{
		return 1291394886;
	}
}
interface I2 {
	function f0() external payable returns (uint);
}
interface C3BBBBBBB {
	function f0() external view returns (uint);
}
interface C3BBBBBB is C3BBBBBBB {
}
interface C3BBBBB is C3BBBBBB {
}
interface C3BBBBBBBB is C3BBBBBB {
	function f1() external payable returns (uint);
}
interface C3BBBB is C3BBBBB, C3BBBBBBBB {
	function f2() external payable returns (uint);
}
interface C3BBB is C3BBBB {
}
interface C3BBBBBBBBBB {
	function f0() external view returns (uint);
}
interface C3BBBBBBBBB is C3BBB, C3BBBBBBBBBB {
	function f0() override(C3BBBBBBB, C3BBBBBBBBBB)
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
interface C3BB is C3BBB, C3BBBBBBBBB {
	function f0() override(C3BBBBBBB, C3BBBBBBBBB)
	external view returns (uint);
	function f2() override(C3BBBB, C3BBBBBBBBB)
	external payable returns (uint);
}
contract C3B is C3BB {
	function f0() external view
	override
	returns (uint)
	{
		return 1931656580;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1936030137;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 353718330;
	}
}
contract C3 is C3B {
}
contract C4 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 631416347;
	}
}
library L5 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
library L7 {
	function f0(uint) private pure returns (uint)
	{
		return 1957747793;
	}
}
interface I8 {
	function f0() external view returns (uint);
}
contract C9 {
	function f0() public payable
	
	returns (uint)
	{
		return 890442452;
	}
}
library L10 {
	function f0(uint) public view returns (uint)
	{
		return 424238335;
	}
}
interface I11BB {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I11B is I11BB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I11 is I11B {
	function f0() override
	external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 182605794)
				return 1;
			if (tc0.f1() != 1291394886)
				return 2;
			C3 tc1 = new C3();
			if (tc1.f0() != 1931656580)
				return 3;
			if (tc1.f1() != 1936030137)
				return 4;
			if (tc1.f2() != 353718330)
				return 5;
			C3B tc2 = new C3B();
			if (tc2.f0() != 1931656580)
				return 6;
			if (tc2.f1() != 1936030137)
				return 7;
			if (tc2.f2() != 353718330)
				return 8;
			C4 tc3 = new C4();
			if (tc3.f0() != 631416347)
				return 9;
			C9 tc4 = new C9();
			if (tc4.f0() != 890442452)
				return 10;
			return 0;
	}
}
