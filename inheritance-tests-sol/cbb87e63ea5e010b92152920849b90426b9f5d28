
pragma solidity >=0.0;




interface C0B {

	function f0() external view returns (uint);
}
contract C0 is C0B {

	function f0() external view
	override
	returns (uint)
	{
		return 182605794;
	}
}



interface C1BB {

	function f0() external view returns (uint);
}


abstract contract C1BBBB {

}
contract C1BBB is C1BB, C1BBBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1914720637;
	}
}
abstract contract C1B is C1BB, C1BBB {

	function f0() external view
	override(C1BBB, C1BB)
	returns (uint)
	{
		return 854716505;
	}
	function f1() virtual public pure
	
	returns (uint);
}
abstract contract C1 is C1B {

	function f1() public pure
	override
	returns (uint)
	{
		return 1738531149;
	}
}



interface C2BB {

	function f0() external view returns (uint);
}
contract C2B is C2BB {

	function f0() external view
	override
	returns (uint)
	{
		return 1098894339;
	}
}
contract C2 is C2B {

}


interface I3B {

	function f0() external view returns (uint);
}
interface I3 is I3B {

	function f0() override
	external view returns (uint);
}



interface I4BB {

	function f0() external view returns (uint);
}
interface I4B is I4BB {

}
interface I4 is I4B {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}


interface C6B {

	function f0() external view returns (uint);
}

interface C6BB is C6B {

	function f1() external view returns (uint);
}
contract C6 is C6B, C6BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 353718330;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1947433875;
	}
	function f2() virtual public pure
	
	returns (uint)
	{
		return 631416347;
	}
}




interface C7BBB {

	function f0() external payable returns (uint);
}
interface C7BB is C7BBB {

}
interface C7B is C7BB {

}
contract C7 is C7B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1696049367;
	}
}








interface C8BBBBBBB {

	function f0() external view returns (uint);
}
interface C8BBBBBB is C8BBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C8BBBBB is C8BBBBBB {

}
interface C8BBBB is C8BBBBB {

	function f0() override
	external view returns (uint);
}
interface C8BBB is C8BBBB {

}
interface C8BB is C8BBB {

	function f0() override
	external view returns (uint);
}
contract C8B is C8BB {

	function f0() external view
	override
	returns (uint)
	{
		return 412013968;
	}
}
contract C8 is C8B {

}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 182605794)
				return 1;
			C1BBB tc1 = new C1BBB();
			if (tc1.f0() != 1914720637)
				return 2;
			C2 tc2 = new C2();
			if (tc2.f0() != 1098894339)
				return 3;
			C2B tc3 = new C2B();
			if (tc3.f0() != 1098894339)
				return 4;
			C6 tc4 = new C6();
			if (tc4.f0() != 353718330)
				return 5;
			if (tc4.f1() != 1947433875)
				return 6;
			if (tc4.f2() != 631416347)
				return 7;
			C7 tc5 = new C7();
			if (tc5.f0() != 1696049367)
				return 8;
			C8 tc6 = new C8();
			if (tc6.f0() != 412013968)
				return 9;
			C8B tc7 = new C8B();
			if (tc7.f0() != 412013968)
				return 10;
			return 0;
	}
}

