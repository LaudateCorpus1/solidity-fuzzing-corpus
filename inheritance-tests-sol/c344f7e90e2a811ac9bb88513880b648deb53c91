
pragma solidity >=0.0;





interface I0BB {

	function f0() external view returns (uint);
}
interface I0B is I0BB {

	function f1() external payable returns (uint);
}

interface I0BBB is I0BB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I0 is I0B, I0BBB {

	function f0() override(I0BB, I0BBB)
	external view returns (uint);
	function f1() override(I0B, I0BBB)
	external payable returns (uint);
}



interface I1BB {

	function f0() external view returns (uint);
}
interface I1B is I1BB {

	function f1() external payable returns (uint);
}
interface I1 is I1B {

}


interface C2B {

	function f0() external view returns (uint);
}

interface C2BB is C2B {

	function f1() external payable returns (uint);
}
contract C2 is C2B, C2BB {

	function f0() external view
	override
	returns (uint)
	{
		return 1203428207;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1738531149;
	}
}
library L4 {

	function f0(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}
library L5 {

	function f0(uint) external pure returns (uint)
	{
		return 424238335;
	}
}

contract C6 {

	function f0() virtual internal pure
	
	returns (uint)
	{
		return 1931656580;
	}
	function f1() external pure
	
	returns (uint)
	{
		return 1402304087;
	}
}

interface I7 {

	function f0() external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 1203428207)
				return 1;
			if (tc0.f1() != 1738531149)
				return 2;
			C6 tc1 = new C6();
			if (tc1.f1() != 1402304087)
				return 3;
			return 0;
	}
}

