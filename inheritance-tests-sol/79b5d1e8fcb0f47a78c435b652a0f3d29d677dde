
pragma solidity >=0.0;


library L0 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}
library L1 {

	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
	function f3(uint) external pure returns (uint)
	{
		return 1957747793;
	}
	function f4(uint) internal pure returns (uint)
	{
		return 424238335;
	}
}
library L2 {

	function f0(uint) public view returns (uint)
	{
		return 719885386;
	}
}
library L3 {

	function f0(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
}











interface I4BBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I4BBBBBBBBB is I4BBBBBBBBBB {

}
interface I4BBBBBBBB is I4BBBBBBBBB {

}
interface I4BBBBBBB is I4BBBBBBBB {

}
interface I4BBBBBB is I4BBBBBBB {

	function f1() external payable returns (uint);
}
interface I4BBBBB is I4BBBBBB {

}






interface I4BBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I4BBBBBBBBBBBBBBB is I4BBBBBBBBBBBBBBBB {

}
interface I4BBBBBBBBBBBBBB is I4BBBBBBBBBBBBBBB {

}
interface I4BBBBBBBBBBBBB is I4BBBBBBBBBBBBBB {

}
interface I4BBBBBBBBBBBB is I4BBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I4BBBBBBBBBBB is I4BBBBBB, I4BBBBBBBBBBBB {

	function f0() override(I4BBBBBBBBBB, I4BBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I4BBBB is I4BBBBB, I4BBBBBBBBBBB {

	function f0() override(I4BBBBBBBBBB, I4BBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I4BBBBBB, I4BBBBBBBBBBB)
	external payable returns (uint);
}
interface I4BBB is I4BBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I4BB is I4BBB {

}






interface I4BBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I4BBBBBBBBBBBBBBBBBBBBB is I4BBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I4BBBBBBBBBBBBBBBBBBBB is I4BBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I4BBBBBBBBBBBBBBBBBBB is I4BBBBBBBBBBBBBBBBBBBB {

}
interface I4BBBBBBBBBBBBBBBBBB is I4BBBBBBBBBBBBBBBBBBB {

}
interface I4BBBBBBBBBBBBBBBBB is I4BBB, I4BBBBBBBBBBBBBBBBBB {

	function f0() override(I4BBB, I4BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
}
interface I4B is I4BB, I4BBBBBBBBBBBBBBBBB {

	function f0() override(I4BBB, I4BBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I4 is I4B {

	function f1() override
	external payable returns (uint);
}
library L5 {

	function f0(uint) internal pure returns (uint)
	{
		return 1025202362;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1350490027;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 783368690;
	}
	function f3(uint) external pure returns (uint)
	{
		return 1102520059;
	}
}


contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

