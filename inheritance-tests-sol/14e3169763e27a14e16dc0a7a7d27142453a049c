pragma solidity >=0.0;
interface I0BB {
	function f0() external view returns (uint);
}
interface I0B is I0BB {
	function f1() external view returns (uint);
}
interface I0 is I0B {
	function f0() override
	external view returns (uint);
}
abstract contract C1BB {
	function f0() virtual public pure
	
	returns (uint);
	function f1() virtual public view
	
	returns (uint);
}
contract C1B is C1BB {
	function f0() public pure
	override
	returns (uint)
	{
		return 1596680831;
	}
	function f1() public view
	override
	returns (uint)
	{
		return 1203428207;
	}
}
contract C1 is C1B {
}
library L2 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
}
interface I3BB {
	function f0() external payable returns (uint);
}
interface I3B is I3BB {
}
interface I3 is I3B {
}
library L4 {
	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
interface C5BBBBB {
	function f0() external payable returns (uint);
}
interface C5BBBB is C5BBBBB {
}
interface C5BBB is C5BBBB {
	function f0() override
	external payable returns (uint);
}
interface C5BB is C5BBB {
	function f0() override
	external payable returns (uint);
}
contract C5B is C5BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 2064876628;
	}
}
contract C5 is C5B {
}
library L7 {
	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}
library L8 {
	function f0(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1596680831)
				return 1;
			if (tc0.f1() != 1203428207)
				return 2;
			C1B tc1 = new C1B();
			if (tc1.f0() != 1596680831)
				return 3;
			if (tc1.f1() != 1203428207)
				return 4;
			C5 tc2 = new C5();
			if (tc2.f0() != 2064876628)
				return 5;
			C5B tc3 = new C5B();
			if (tc3.f0() != 2064876628)
				return 6;
			return 0;
	}
}
