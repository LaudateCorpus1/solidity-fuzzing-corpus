pragma solidity >=0.0;
interface I0BBBBB {
	function f0() external payable returns (uint);
}
interface I0BBBB is I0BBBBB {
}
interface I0BBB is I0BBBB {
	function f0() override
	external payable returns (uint);
}
interface I0BBBBBB is I0BBBB {
	function f1() external payable returns (uint);
}
interface I0BB is I0BBB, I0BBBBBB {
	function f0() override(I0BBB, I0BBBBB)
	external payable returns (uint);
}
interface I0B is I0BB {
}
interface I0 is I0B {
}
interface C1BB {
	function f0() external view returns (uint);
}
interface C1B is C1BB {
}
interface C1BBBB {
	function f0() external view returns (uint);
}
interface C1BBB is C1B, C1BBBB {
	function f0() override(C1BB, C1BBBB)
	external view returns (uint);
}
contract C1 is C1B, C1BBB {
	function f0() external view
	override(C1BBB, C1BB)
	returns (uint)
	{
		return 2136927794;
	}
}
library L2 {
	function f0(uint) private pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public view returns (uint)
	{
		return 1714636915;
	}
}
interface C3BB {
	function f0() external view returns (uint);
}
interface C3B is C3BB {
}
contract C3 is C3B {
	function f0() external view
	override
	returns (uint)
	{
		return 1931656580;
	}
}
contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1714636915)
			return 1;
		return 0;
	}
}
