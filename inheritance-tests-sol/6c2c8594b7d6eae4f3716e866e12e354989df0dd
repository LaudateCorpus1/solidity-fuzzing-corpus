
pragma solidity >=0.0;



interface I0 {

	function f0() external view returns (uint);
}






interface I1BBBBB {

	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface I1BBBB is I1BBBBB {

}
interface I1BBB is I1BBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external view returns (uint);
}


interface I1BBBBBBB {

	function f0() external view returns (uint);
}
interface I1BBBBBB is I1BBBB, I1BBBBBBB {

	function f0() override(I1BBBBB, I1BBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I1BB is I1BBB, I1BBBBBB {

	function f0() override(I1BBB, I1BBBBBB)
	external view returns (uint);
	function f1() override(I1BBB, I1BBBBBB)
	external view returns (uint);
	function f3() external view returns (uint);
}
interface I1B is I1BB {

	function f3() override
	external view returns (uint);
}
interface I1 is I1B {

	function f1() override
	external view returns (uint);
}





interface C2BBBB {

}
contract C2BBB is C2BBBB {

}
contract C2BB is C2BBB {

}

abstract contract C2BBBBB is C2BB {

	function f0() public payable
	
	returns (uint)
	{
		return 965828290;
	}
}
abstract contract C2B is C2BB, C2BBBBB {

	function f1() public payable
	
	returns (uint)
	{
		return 1032438314;
	}
}
contract C2 is C2B {

}
library L3 {

	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

