
pragma solidity >=0.0;











interface C0BBBBBBBB {

}
interface C0BBBBBBB is C0BBBBBBBB {

}
interface C0BBBBBB is C0BBBBBBB {

}
interface C0BBBBB is C0BBBBBB {

}
interface C0BBBB is C0BBBBB {

}







interface C0BBBBBBBBBBBBBBB {

}
interface C0BBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBB {

}
interface C0BBBBBBBBBBBBB is C0BBBBBBBBBBBBBB {

}
interface C0BBBBBBBBBBBB is C0BBBBBBBBBBBBB {

}
interface C0BBBBBBBBBBB is C0BBBBBBBBBBBB {

}





interface C0BBBBBBBBBBBBBBBBBBBB {

}
interface C0BBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBB {

}
interface C0BBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBB {

}
interface C0BBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBB {

}
interface C0BBBBBBBBBBBBBBBB is C0BBBBBBBBBBB, C0BBBBBBBBBBBBBBBBB {

}
interface C0BBBBBBBBBB is C0BBBBBBBBBBB, C0BBBBBBBBBBBBBBBB {

}
interface C0BBBBBBBBB is C0BBBBB, C0BBBBBBBBBB {

}
interface C0BBB is C0BBBB, C0BBBBBBBBB {

}
contract C0BB is C0BBB {

}
contract C0B is C0BB {

}





interface C0BBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface C0BBBBBBBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBBBBBBB {

	function f1() override
	external view returns (uint);
}
interface C0BBBBBBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBBBBBB {

}
interface C0BBBBBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBBBBB {

}
contract C0BBBBBBBBBBBBBBBBBBBBB is C0BB, C0BBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 358599013;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 721184178;
	}
}

abstract contract C0BBBBBBBBBBBBBBBBBBBBBBBBBB is C0BB {

}
contract C0 is C0B, C0BBBBBBBBBBBBBBBBBBBBB, C0BBBBBBBBBBBBBBBBBBBBBBBBBB {

}









interface C1BBBBBBBB {

}
interface C1BBBBBBB is C1BBBBBBBB {

}
interface C1BBBBBB is C1BBBBBBB {

}
interface C1BBBBB is C1BBBBBB {

}
interface C1BBBB is C1BBBBB {

}







interface C1BBBBBBBBBBBBBBB {

}
interface C1BBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBB {

}
interface C1BBBBBBBBBBBBB is C1BBBBBBBBBBBBBB {

}
interface C1BBBBBBBBBBBB is C1BBBBBBBBBBBBB {

}
interface C1BBBBBBBBBBB is C1BBBBBBBBBBBB {

}





interface C1BBBBBBBBBBBBBBBBBBBB {

}
interface C1BBBBBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBBBBBB {

}
interface C1BBBBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBBBBB {

}
interface C1BBBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBBBB {

}
interface C1BBBBBBBBBBBBBBBB is C1BBBBBBBBBBBB, C1BBBBBBBBBBBBBBBBB {

}
interface C1BBBBBBBBBB is C1BBBBBBBBBBB, C1BBBBBBBBBBBBBBBB {

}
interface C1BBBBBBBBB is C1BBBBB, C1BBBBBBBBBB {

}
interface C1BBB is C1BBBB, C1BBBBBBBBB {

}
contract C1BB is C1BBB {

}
contract C1B is C1BB {

}





interface C1BBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface C1BBBBBBBBBBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface C1BBBBBBBBBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface C1BBBBBBBBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
contract C1BBBBBBBBBBBBBBBBBBBBB is C1B, C1BBBBBBBBBBBBBBBBBBBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1406646884;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1345561933;
	}
}

abstract contract C1BBBBBBBBBBBBBBBBBBBBBBBBBB is C1B {

}
contract C1 is C1B, C1BBBBBBBBBBBBBBBBBBBBB, C1BBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 860090038;
	}
}
library L2 {

	function f0(uint) public pure returns (uint)
	{
		return 596516649;
	}
}
library L3 {

	function f0(uint) private view returns (uint)
	{
		return 1189641421;
	}
	function f1(uint) public view returns (uint)
	{
		return 1025202362;
	}
}
library L4 {

	function f0(uint) public view returns (uint)
	{
		return 1350490027;
	}
	function f1(uint) internal view returns (uint)
	{
		return 783368690;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1102520059;
	}
	function f3(uint) internal pure returns (uint)
	{
		return 2044897763;
	}
}

interface I5 {

	function f0() external payable returns (uint);
}


contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 596516649)
			return 1;
		return 0;
	}
}

