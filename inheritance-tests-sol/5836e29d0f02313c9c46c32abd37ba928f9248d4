pragma solidity >=0.0;
library L0 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
abstract contract C1B {
	function f0() private pure
	
	returns (uint)
	{
		return 265263626;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1691062339;
	}
}
contract C1 is C1B {
	function f1() virtual public pure
	override
	returns (uint)
	{
		return 669620633;
	}
}
contract C2 {
	function f0() public view
	
	returns (uint)
	{
		return 1481204546;
	}
}
abstract contract C3B {
	function f0() private pure
	
	returns (uint)
	{
		return 491448374;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1865744430;
	}
}
contract C3 is C3B {
	function f1() virtual public pure
	override
	returns (uint)
	{
		return 1797359349;
	}
}
contract C4 {
	function f0() public view
	
	returns (uint)
	{
		return 1993796779;
	}
}
contract C5 {
	function f0() external pure
	
	returns (uint)
	{
		return 937195157;
	}
	function f1() internal view
	
	returns (uint)
	{
		return 456915845;
	}
	function f2() public view
	
	returns (uint)
	{
		return 1127699305;
	}
}
library L6 {
	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}
interface C7BBBB {
	function f0() external payable returns (uint);
}
interface C7BBB is C7BBBB {
}
contract C7BB is C7BBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 819997621;
	}
}
abstract contract C7B is C7BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 125672055;
	}
}
contract C7 is C7B {
	function f1() public view
	
	returns (uint)
	{
		return 1343347976;
	}
}
interface I8BB {
	function f0() external view returns (uint);
}
interface I8B is I8BB {
	function f1() external payable returns (uint);
}
interface I8 is I8B {
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I9B {
	function f0() external view returns (uint);
}
interface I9BB is I9B {
	function f1() external view returns (uint);
}
interface I9 is I9B, I9BB {
	function f1() override
	external view returns (uint);
}
contract C10 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 505913561;
	}
}
contract C11 {
	function f0() public pure
	
	returns (uint)
	{
		return 1916952994;
	}
}
interface I13BB {
	function f0() external view returns (uint);
}
interface I13B is I13BB {
	function f1() external payable returns (uint);
}
interface I13 is I13B {
	function f1() override
	external payable returns (uint);
}
interface C14BBBBBB {
	function f0() external payable returns (uint);
}
interface C14BBBBB is C14BBBBBB {
	function f0() override
	external payable returns (uint);
}
contract C14BBBB is C14BBBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 2181487;
	}
}
contract C14BBB is C14BBBB {
}
contract C14BB is C14BBB {
}
contract C14B is C14BB {
}
contract C14 is C14B {
	function f1() public view
	
	returns (uint)
	{
		return 1675944413;
	}
}
library L15 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
contract C {
	using L6 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}
