
pragma solidity >=0.0;







interface C0BBBB {

	function f0() external payable returns (uint);
}
interface C0BBB is C0BBBB {

}
interface C0BB is C0BBB {

	function f0() override
	external payable returns (uint);
}
interface C0B is C0BB {

}
contract C0 is C0B {

	function f0() external payable
	override
	returns (uint)
	{
		return 854716505;
	}
}




interface I1BBB {

}
interface I1BB is I1BBB {

	function f0() external view returns (uint);
}
interface I1B is I1BB {

}



interface I1BBBBBB {

	function f0() external view returns (uint);
}
interface I1BBBBB is I1BBBBBB {

	function f1() external payable returns (uint);
}
interface I1BBBB is I1BB, I1BBBBB {

	function f0() override(I1BB, I1BBBBBB)
	external view returns (uint);
}
interface I1 is I1B, I1BBBB {

	function f0() override(I1BB, I1BBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}





interface I2BBBB {

	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface I2BBB is I2BBBB {

	function f1() override
	external payable returns (uint);
}
interface I2BB is I2BBB {

	function f1() override
	external payable returns (uint);
}
interface I2B is I2BB {

	function f0() override
	external view returns (uint);
}
interface I2 is I2B {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}




interface I3BBB {

	function f0() external view returns (uint);
}
interface I3BB is I3BBB {

	function f0() override
	external view returns (uint);
}
interface I3B is I3BB {

}
interface I3 is I3B {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}




interface I4BBB {

	function f0() external view returns (uint);
}
interface I4BB is I4BBB {

}
interface I4B is I4BB {

	function f0() override
	external view returns (uint);
}
interface I4 is I4B {

	function f0() override
	external view returns (uint);
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

