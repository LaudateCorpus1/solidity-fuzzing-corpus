
pragma solidity >=0.0;





contract C0BB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 530981;
	}
}
contract C0B is C0BB {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1734574184;
	}
}

interface C0BBB {

}


contract C0BBBBB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 185945219;
	}
}
contract C0BBBB is C0BB, C0BBBBB {

	function f0() virtual public pure
	override(C0BBBBB, C0BB)
	returns (uint)
	{
		return 811946967;
	}
}
abstract contract C0 is C0B, C0BBB, C0BBBB {

	function f0() public pure
	override(C0BBBB, C0B)
	returns (uint)
	{
		return 352808395;
	}
}



contract C1BB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 868714335;
	}
}
contract C1B is C1BB {

}

interface C1BBB {

}


contract C1BBBBB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1350419494;
	}
}
contract C1BBBB is C1BB, C1BBBBB {

	function f0() virtual public pure
	override(C1BBBBB, C1BB)
	returns (uint)
	{
		return 2031369264;
	}
}
abstract contract C1 is C1B, C1BBB, C1BBBB {

	function f0() public pure
	override(C1BBBB, C1BB)
	returns (uint)
	{
		return 1474374447;
	}
}
library L4 {

	function f0(uint) external pure returns (uint)
	{
		return 424238335;
	}
}
library L5 {

	function f0(uint) external pure returns (uint)
	{
		return 719885386;
	}
}



contract C6BB {

	function f0() public view
	
	returns (uint)
	{
		return 641409473;
	}
}
contract C6B is C6BB {

}

interface C6BBB {

}
abstract contract C6 is C6B, C6BBB {

}

contract C7 {

	function f0() external pure
	
	returns (uint)
	{
		return 844012716;
	}
}
library L8 {

	function f0(uint) external pure returns (uint)
	{
		return 596516649;
	}
}


contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 719885386)
			return 1;
		return 0;
	}
}

