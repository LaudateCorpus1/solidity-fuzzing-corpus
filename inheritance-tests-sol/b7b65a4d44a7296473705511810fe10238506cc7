
pragma solidity >=0.0;


library L0 {

	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) external pure returns (uint)
	{
		return 846930886;
	}
}

interface I1 {

	function f0() external view returns (uint);
}
library L2 {

	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}


















interface C3BBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}

interface C3BBBBBBBBBBBBBBBBBB is C3BBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface C3BBBBBBBBBBBBBBBB is C3BBBBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBB {

	function f0() override(C3BBBBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() external view returns (uint);
}
interface C3BBBBBBBBBBBBBBB is C3BBBBBBBBBBBBBBBB {

}
interface C3BBBBBBBBBBBBBB is C3BBBBBBBBBBBBBBB {

	function f3() external view returns (uint);
}
interface C3BBBBBBBBBBBBB is C3BBBBBBBBBBBBBB {

	function f4() external view returns (uint);
}
interface C3BBBBBBBBBBBB is C3BBBBBBBBBBBBB {

	function f2() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
}

interface C3BBBBBBBBBBBBBBBBBBB is C3BBBBBBBBBBBBB {

	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f5() external payable returns (uint);
}
interface C3BBBBBBBBBBB is C3BBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBB {

	function f1() override(C3BBBBBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(C3BBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f3() override(C3BBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(C3BBBBBBBBBBBB, C3BBBBBBBBBBBBB)
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() external payable returns (uint);
	function f7() external pure returns (uint);
	function f8() external payable returns (uint);
	function f9() external payable returns (uint);
}
interface C3BBBBBBBBBB is C3BBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f7() override
	external pure returns (uint);
	function f8() override
	external payable returns (uint);
}
interface C3BBBBBBBBB is C3BBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f7() override
	external pure returns (uint);
	function f10() external payable returns (uint);
}
interface C3BBBBBBBB is C3BBBBBBBBB {

	function f1() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
}

interface C3BBBBBBBBBBBBBBBBBBBB is C3BBBBBBBBB {

	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() external payable returns (uint);
}
interface C3BBBBBBB is C3BBBBBBBB, C3BBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override(C3BBBBBBBB, C3BBBBBBBBBB)
	external view returns (uint);
	function f2() override(C3BBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f3() override(C3BBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(C3BBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f5() override(C3BBBBBBBB, C3BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f7() override
	external pure returns (uint);
	function f8() override(C3BBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f9() override(C3BBBBBBBB, C3BBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(C3BBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f12() external view returns (uint);
}
interface C3BBBBBB is C3BBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f7() override
	external pure returns (uint);
	function f8() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
}

interface C3BBBBBBBBBBBBBBBBBBBBB is C3BBBBBB {

	function f0() override
	external view returns (uint);
	function f7() override
	external pure returns (uint);
	function f8() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f13() external payable returns (uint);
}
interface C3BBBBB is C3BBBBBB, C3BBBBBBBBBBBBBBBBBBBBB {

	function f0() override(C3BBBBBB, C3BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f7() override(C3BBBBBB, C3BBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f8() override(C3BBBBBB, C3BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override(C3BBBBBB, C3BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f12() override
	external view returns (uint);
	function f13() override
	external payable returns (uint);
	function f14() external payable returns (uint);
	function f15() external pure returns (uint);
	function f16() external payable returns (uint);
	function f17() external payable returns (uint);
}
interface C3BBBB is C3BBBBB {

	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external payable returns (uint);
	function f7() override
	external pure returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f12() override
	external view returns (uint);
	function f13() override
	external payable returns (uint);
	function f14() override
	external payable returns (uint);
	function f15() override
	external pure returns (uint);
	function f16() override
	external payable returns (uint);
}
interface C3BBB is C3BBBB {

	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f7() override
	external pure returns (uint);
	function f8() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f13() override
	external payable returns (uint);
	function f18() external payable returns (uint);
}
interface C3BB is C3BBB {

	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f13() override
	external payable returns (uint);
}

interface C3BBBBBBBBBBBBBBBBBBBBBB is C3BB {

	function f2() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f16() override
	external payable returns (uint);
	function f17() override
	external payable returns (uint);
	function f19() external payable returns (uint);
}
interface C3B is C3BB, C3BBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f2() override(C3BB, C3BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override(C3BBBB, C3BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override(C3BB, C3BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f9() override(C3BBB, C3BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(C3BBB, C3BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f12() override
	external view returns (uint);
	function f13() override
	external payable returns (uint);
	function f14() override
	external payable returns (uint);
	function f16() override(C3BBBB, C3BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f17() override(C3BBBBB, C3BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f18() override
	external payable returns (uint);
	function f20() external view returns (uint);
}
contract C3 is C3B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 374559665;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1428751935;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 540194818;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 835716556;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 1173473289;
	}
	function f5() virtual external payable
	override
	returns (uint)
	{
		return 1649555837;
	}
	function f6() external payable
	override
	returns (uint)
	{
		return 1758889094;
	}
	function f7() virtual external pure
	override
	returns (uint)
	{
		return 933277027;
	}
	function f8() external payable
	override
	returns (uint)
	{
		return 719757781;
	}
	function f9() external payable
	override
	returns (uint)
	{
		return 1951015512;
	}
	function f10() virtual external payable
	override
	returns (uint)
	{
		return 649176859;
	}
	function f11() external payable
	override
	returns (uint)
	{
		return 532676640;
	}
	function f12() external view
	override
	returns (uint)
	{
		return 645800207;
	}
	function f13() external payable
	override
	returns (uint)
	{
		return 555299827;
	}
	function f14() virtual external payable
	override
	returns (uint)
	{
		return 641593550;
	}
	function f15() external pure
	override
	returns (uint)
	{
		return 1956712010;
	}
	function f16() virtual external payable
	override
	returns (uint)
	{
		return 1028166882;
	}
	function f17() external payable
	override
	returns (uint)
	{
		return 224806752;
	}
	function f18() external payable
	override
	returns (uint)
	{
		return 1517310492;
	}
	function f19() virtual external payable
	override
	returns (uint)
	{
		return 528003979;
	}
	function f20() external view
	override
	returns (uint)
	{
		return 1056297589;
	}
}


contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 846930886)
			return 1;
		return 0;
	}
}

