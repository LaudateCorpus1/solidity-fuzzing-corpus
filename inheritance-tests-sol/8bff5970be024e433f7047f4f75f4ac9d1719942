
pragma solidity >=0.0;




interface C0B {

}
contract C0 is C0B {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1575004944;
	}
}


abstract contract C1B {

}








interface C1BBBBBBBBB {

	function f0() external view returns (uint);
}
interface C1BBBBBBBB is C1BBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C1BBBBBB is C1BBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C1BBBBB is C1BBBBBB {

}
interface C1BBBB is C1BBBBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface C1BBB is C1BBBB {

}
contract C1BB is C1B, C1BBB {

	function f0() external view
	override
	returns (uint)
	{
		return 399257814;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1640882073;
	}
}

contract C1BBBBBBBBBB is C1BB {

}
contract C1 is C1B, C1BB, C1BBBBBBBBBB {

}



interface C2BB {

	function f0() external view returns (uint);
}
interface C2B is C2BB {

}
contract C2 is C2B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 170423502;
	}
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

