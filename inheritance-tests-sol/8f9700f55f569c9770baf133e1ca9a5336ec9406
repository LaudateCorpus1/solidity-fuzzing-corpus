pragma solidity >=0.0;
library L0 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
}
library L1 {
	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
}
interface I2BBBB {
	function f0() external payable returns (uint);
}
interface I2BBB is I2BBBB {
	function f0() override
	external payable returns (uint);
}
interface I2BB is I2BBB {
}
interface I2BBBBBBBB {
	function f0() external payable returns (uint);
}
interface I2BBBBBBB is I2BBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I2BBBBBB is I2BBBBBBB {
}
interface I2BBBBB is I2BBB, I2BBBBBB {
	function f0() override(I2BBB, I2BBBBBBB)
	external payable returns (uint);
}
interface I2B is I2BB, I2BBBBB {
	function f0() override(I2BBB, I2BBBBB)
	external payable returns (uint);
}
interface I2 is I2B {
	function f0() override
	external payable returns (uint);
}
interface I3BB {
	function f0() external payable returns (uint);
}
interface I3B is I3BB {
	function f0() override
	external payable returns (uint);
}
interface I3 is I3B {
	function f0() override
	external payable returns (uint);
}
library L4 {
	function f0(uint) public view returns (uint)
	{
		return 1714636915;
	}
}
library L5 {
	function f0(uint) public pure returns (uint)
	{
		return 1957747793;
	}
}
library L6 {
	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
}
interface I7 {
	function f0() external payable returns (uint);
}
contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1957747793)
			return 1;
		return 0;
	}
}
