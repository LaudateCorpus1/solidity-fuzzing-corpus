pragma solidity >=0.0;
interface C0BB {
	function f0() external pure returns (uint);
}
contract C0B is C0BB {
	function f0() external pure
	override
	returns (uint)
	{
		return 182605794;
	}
}
abstract contract C0 is C0B {
}
contract C1 {
	function f0() public pure
	
	returns (uint)
	{
		return 1914720637;
	}
}
contract C2B {
	function f0() public payable
	
	returns (uint)
	{
		return 2078669041;
	}
}
contract C2 is C2B {
}
interface C3BBBBBB {
	function f0() external view returns (uint);
}
interface C3BBBBB is C3BBBBBB {
}
contract C3BBBB is C3BBBBB {
	function f0() external view
	override
	returns (uint)
	{
		return 564586691;
	}
}
contract C3BBB is C3BBBB {
}
contract C3BB is C3BBB {
}
contract C3B is C3BB {
}
contract C3 is C3B {
}
interface I4BB {
	function f0() external view returns (uint);
}
interface I4B is I4BB {
	function f1() external payable returns (uint);
}
interface I4 is I4B {
}
library L5 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
library L6 {
	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
contract C7B {
	function f0() public view
	
	returns (uint)
	{
		return 2075782095;
	}
}
contract C7 is C7B {
}
interface C8BBBBBBBBB {
	function f0() external payable returns (uint);
}
interface C8BBBBBBBB is C8BBBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface C8BBBBBBB is C8BBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f3() external payable returns (uint);
	function f4() external view returns (uint);
	function f5() external view returns (uint);
}
interface C8BBBBBB is C8BBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f5() override
	external view returns (uint);
}
interface C8BBBBBBBBBB is C8BBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f3() override
	external payable returns (uint);
	function f6() external view returns (uint);
}
interface C8BBBBB is C8BBBBBB, C8BBBBBBBBBB {
	function f0() override(C8BBBBBB, C8BBBBBBBBBB)
	external payable returns (uint);
	function f1() override(C8BBBBBB, C8BBBBBBBBBB)
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override(C8BBBBBBB, C8BBBBBBBBBB)
	external payable returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override(C8BBBBBB, C8BBBBBBB)
	external view returns (uint);
}
contract C8BBBB is C8BBBBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1659675143;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 412013968;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1675824860;
	}
	function f3() external payable
	override
	returns (uint)
	{
		return 389431516;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 1243696899;
	}
	function f5() virtual external view
	override
	returns (uint)
	{
		return 674592135;
	}
	function f6() virtual external view
	override
	returns (uint)
	{
		return 884730203;
	}
}
contract C8BBB is C8BBBB {
	function f5() external view
	override
	returns (uint)
	{
		return 1500063655;
	}
}
contract C8BB is C8BBB {
	function f6() external view
	override
	returns (uint)
	{
		return 948709761;
	}
}
contract C8B is C8BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1243427070;
	}
}
contract C8 is C8B {
}
library L9 {
	function f0(uint) public view returns (uint)
	{
		return 1714636915;
	}
}
library L10 {
	function f0(uint) private view returns (uint)
	{
		return 1957747793;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0B tc0 = new C0B();
			if (tc0.f0() != 182605794)
				return 1;
			C1 tc1 = new C1();
			if (tc1.f0() != 1914720637)
				return 2;
			C2 tc2 = new C2();
			if (tc2.f0() != 2078669041)
				return 3;
			C2B tc3 = new C2B();
			if (tc3.f0() != 2078669041)
				return 4;
			C3 tc4 = new C3();
			if (tc4.f0() != 564586691)
				return 5;
			C3B tc5 = new C3B();
			if (tc5.f0() != 564586691)
				return 6;
			C3BB tc6 = new C3BB();
			if (tc6.f0() != 564586691)
				return 7;
			C3BBB tc7 = new C3BBB();
			if (tc7.f0() != 564586691)
				return 8;
			C3BBBB tc8 = new C3BBBB();
			if (tc8.f0() != 564586691)
				return 9;
			C7 tc9 = new C7();
			if (tc9.f0() != 2075782095)
				return 10;
			C7B tc10 = new C7B();
			if (tc10.f0() != 2075782095)
				return 11;
			C8 tc11 = new C8();
			if (tc11.f0() != 1243427070)
				return 12;
			if (tc11.f1() != 412013968)
				return 13;
			if (tc11.f2() != 1675824860)
				return 14;
			if (tc11.f3() != 389431516)
				return 15;
			if (tc11.f4() != 1243696899)
				return 16;
			if (tc11.f5() != 1500063655)
				return 17;
			if (tc11.f6() != 948709761)
				return 18;
			C8B tc12 = new C8B();
			if (tc12.f0() != 1243427070)
				return 19;
			if (tc12.f1() != 412013968)
				return 20;
			if (tc12.f2() != 1675824860)
				return 21;
			if (tc12.f3() != 389431516)
				return 22;
			if (tc12.f4() != 1243696899)
				return 23;
			if (tc12.f5() != 1500063655)
				return 24;
			if (tc12.f6() != 948709761)
				return 25;
			C8BB tc13 = new C8BB();
			if (tc13.f0() != 1659675143)
				return 26;
			if (tc13.f1() != 412013968)
				return 27;
			if (tc13.f2() != 1675824860)
				return 28;
			if (tc13.f3() != 389431516)
				return 29;
			if (tc13.f4() != 1243696899)
				return 30;
			if (tc13.f5() != 1500063655)
				return 31;
			if (tc13.f6() != 948709761)
				return 32;
			C8BBB tc14 = new C8BBB();
			if (tc14.f0() != 1659675143)
				return 33;
			if (tc14.f1() != 412013968)
				return 34;
			if (tc14.f2() != 1675824860)
				return 35;
			if (tc14.f3() != 389431516)
				return 36;
			if (tc14.f4() != 1243696899)
				return 37;
			if (tc14.f5() != 1500063655)
				return 38;
			if (tc14.f6() != 884730203)
				return 39;
			return 0;
	}
}
