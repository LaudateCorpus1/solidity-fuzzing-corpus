pragma solidity >=0.0;
abstract contract C0BB {
}
interface C0BBBBBBB {
	function f0() external view returns (uint);
}
interface C0BBBBBB is C0BBBBBBB {
}
interface C0BBBBB is C0BBBBBB {
	function f0() override
	external view returns (uint);
}
abstract contract C0BBBB is C0BBBBB {
	function f0() virtual external view
	override
	returns (uint);
}
contract C0BBB is C0BB, C0BBBB {
	function f0() external view
	override
	returns (uint)
	{
		return 1596680831;
	}
}
contract C0B is C0BB, C0BBB {
}
contract C0 is C0B {
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1596680831)
				return 1;
			C0B tc1 = new C0B();
			if (tc1.f0() != 1596680831)
				return 2;
			C0BBB tc2 = new C0BBB();
			if (tc2.f0() != 1596680831)
				return 3;
			return 0;
	}
}
