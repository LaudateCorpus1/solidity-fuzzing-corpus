pragma solidity >=0.0;
interface C0BB {
	function f0() external view returns (uint);
}
interface C0B is C0BB {
}
interface C0BBBB {
	function f0() external view returns (uint);
}
interface C0BBB is C0BB, C0BBBB {
	function f0() override(C0BB, C0BBBB)
	external view returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
contract C0 is C0B, C0BBB {
	function f0() external view
	override(C0BBB, C0BB)
	returns (uint)
	{
		return 2078669041;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1105902161;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 564586691;
	}
}
interface C1BB {
	function f0() external view returns (uint);
}
interface C1B is C1BB {
}
interface C1BBBB {
	function f0() external view returns (uint);
}
interface C1BBB is C1B, C1BBBB {
	function f0() override(C1BB, C1BBBB)
	external view returns (uint);
}
contract C1 is C1B, C1BBB {
	function f0() external view
	override(C1BBB, C1BB)
	returns (uint)
	{
		return 1738531149;
	}
}
library L2 {
	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public view returns (uint)
	{
		return 1714636915;
	}
}
interface C3BBB {
	function f0() external view returns (uint);
}
interface C3BB is C3BBB {
	function f1() external view returns (uint);
}
interface C3B is C3BB {
	function f0() override
	external view returns (uint);
}
contract C3 is C3B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 914937185;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1402304087;
	}
}
interface C4BBB {
	function f0() external payable returns (uint);
}
interface C4BB is C4BBB {
}
interface C4B is C4BB {
	function f0() override
	external payable returns (uint);
}
interface C4BBBBBB {
	function f0() external payable returns (uint);
}
interface C4BBBBB is C4BBBBBB {
}
interface C4BBBB is C4BB, C4BBBBB {
	function f0() override(C4BBB, C4BBBBBB)
	external payable returns (uint);
}
contract C4 is C4B, C4BBBB {
	function f0() virtual external payable
	override(C4BBBB, C4B)
	returns (uint)
	{
		return 662405787;
	}
}
library L5 {
	function f0(uint) private view returns (uint)
	{
		return 424238335;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 719885386;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
	function f3(uint) public view returns (uint)
	{
		return 596516649;
	}
}
interface I6BB {
	function f0() external payable returns (uint);
}
interface I6B is I6BB {
	function f0() override
	external payable returns (uint);
}
interface I6 is I6B {
	function f0() override
	external payable returns (uint);
}
interface I7 {
	function f0() external view returns (uint);
}
contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f3() != 596516649)
			return 1;
		return 0;
	}
}
