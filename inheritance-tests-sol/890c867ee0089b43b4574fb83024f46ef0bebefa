pragma solidity >=0.0;
library L0 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
library L2 {
	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
library L3 {
	function f0(uint) internal view returns (uint)
	{
		return 424238335;
	}
}
library L4 {
	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1649760492;
	}
}
interface C5BB {
	function f0() external view returns (uint);
}
interface C5B is C5BB {
}
contract C5 is C5B {
	function f0() external view
	override
	returns (uint)
	{
		return 375855352;
	}
}
library L6 {
	function f0(uint) internal view returns (uint)
	{
		return 596516649;
	}
}
interface I7B {
}
interface I7 is I7B {
}
library L8 {
	function f0(uint) private pure returns (uint)
	{
		return 1189641421;
	}
	function f1(uint) public view returns (uint)
	{
		return 1025202362;
	}
}
interface C9BBBBBBB {
	function f0() external payable returns (uint);
}
interface C9BBBBBB is C9BBBBBBB {
}
interface C9BBBBB is C9BBBBBB {
	function f0() override
	external payable returns (uint);
}
interface C9BBBBBBBB is C9BBBBBB {
	function f1() external view returns (uint);
}
interface C9BBBB is C9BBBBB, C9BBBBBBBB {
	function f0() override(C9BBBBB, C9BBBBBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface C9BBB is C9BBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
contract C9BB is C9BBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 908028975;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1369023381;
	}
}
contract C9B is C9BB {
}
abstract contract C9 is C9B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1646411619;
	}
}
interface I10B {
}
interface I10 is I10B {
}
interface C11BB {
	function f0() external view returns (uint);
}
interface C11B is C11BB {
	function f0() override
	external view returns (uint);
}
contract C11 is C11B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 447122901;
	}
}
library L12 {
	function f0(uint) internal pure returns (uint)
	{
		return 783368690;
	}
}
library L13 {
	function f0(uint) private pure returns (uint)
	{
		return 1102520059;
	}
}
library L14 {
	function f0(uint) internal pure returns (uint)
	{
		return 2044897763;
	}
}
library L15 {
	function f0(uint) public view returns (uint)
	{
		return 1967513926;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1365180540;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1540383426;
	}
}
interface I16B {
	function f0() external view returns (uint);
}
interface I16 is I16B {
}
contract C {
	function test() public returns (uint)
	{
			C11 tc0 = new C11();
			if (tc0.f0() != 447122901)
				return 1;
			C5 tc1 = new C5();
			if (tc1.f0() != 375855352)
				return 2;
			C9B tc2 = new C9B();
			if (tc2.f0() != 908028975)
				return 3;
			if (tc2.f1() != 1369023381)
				return 4;
			C9BB tc3 = new C9BB();
			if (tc3.f0() != 908028975)
				return 5;
			if (tc3.f1() != 1369023381)
				return 6;
			return 0;
	}
}
