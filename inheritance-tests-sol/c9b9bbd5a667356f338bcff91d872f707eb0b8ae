
pragma solidity >=0.0;



contract C0 {

	function f0() public view
	
	returns (uint)
	{
		return 1407254738;
	}
}
library L1 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) public view returns (uint)
	{
		return 1681692777;
	}
}









interface C2BBBBBBBB {

	function f0() external view returns (uint);
}
interface C2BBBBBBB is C2BBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C2BBBBBB is C2BBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C2BBBBB is C2BBBBBB {

	function f0() override
	external view returns (uint);
}
interface C2BBBB is C2BBBBB {

	function f0() override
	external view returns (uint);
}
interface C2BBB is C2BBBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface C2BB is C2BBB {

}
contract C2B is C2BB {

	function f0() external view
	override
	returns (uint)
	{
		return 761551824;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1598609704;
	}
}
contract C2 is C2B {

	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1564254415;
	}
}










interface I3BBBBBBBBB {

	function f0() external view returns (uint);
}

interface I3BBBBBBBBBB is I3BBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I3BBBBBBBB is I3BBBBBBBBB, I3BBBBBBBBBB {

	function f0() override(I3BBBBBBBBB, I3BBBBBBBBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I3BBBBBBB is I3BBBBBBBB {

	function f1() override
	external view returns (uint);
}
interface I3BBBBBB is I3BBBBBBB {

	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
interface I3BBBBB is I3BBBBBB {

	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() external payable returns (uint);
}
interface I3BBBB is I3BBBBB {

	function f1() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
}

interface I3BBBBBBBBBBB is I3BBBBB {

	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() external payable returns (uint);
}
interface I3BBB is I3BBBB, I3BBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override(I3BBBB, I3BBBBBBBBBBB)
	external view returns (uint);
	function f3() override(I3BBBBBB, I3BBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I3BBBB, I3BBBBBBBBBBB)
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() external view returns (uint);
	function f7() external payable returns (uint);
	function f8() external view returns (uint);
	function f9() external payable returns (uint);
}
interface I3BB is I3BBB {

	function f4() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
}
interface I3B is I3BB {

	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
}

interface I3BBBBBBBBBBBB is I3BB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() external payable returns (uint);
}
interface I3 is I3B, I3BBBBBBBBBBBB {

	function f0() override(I3BBB, I3BBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I3BBB, I3BBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(I3B, I3BBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I3B, I3BBB)
	external view returns (uint);
	function f4() override(I3B, I3BBBBBBBBBBBB)
	external payable returns (uint);
	function f7() override(I3B, I3BBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override(I3B, I3BBBBBBBBBBBB)
	external view returns (uint);
	function f9() override(I3B, I3BBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
}
library L4 {

	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
}


interface I5B {

	function f0() external pure returns (uint);
}
interface I5 is I5B {

	function f0() override
	external pure returns (uint);
}



abstract contract C6BB {

}
contract C6B is C6BB {

}



interface C6BBBBB {

	function f0() external payable returns (uint);
}
interface C6BBBB is C6BBBBB {

	function f0() override
	external payable returns (uint);
}
contract C6BBB is C6B, C6BBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 480174910;
	}
}
contract C6 is C6B, C6BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1556107162;
	}
}

interface I8 {

	function f0() external payable returns (uint);
}


interface I9B {

	function f0() external view returns (uint);
}
interface I9 is I9B {

	function f0() override
	external view returns (uint);
}
library L10 {

	function f0(uint) public pure returns (uint)
	{
		return 596516649;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1407254738)
				return 1;
			C2 tc1 = new C2();
			if (tc1.f0() != 761551824)
				return 2;
			if (tc1.f1() != 1564254415)
				return 3;
			C2B tc2 = new C2B();
			if (tc2.f0() != 761551824)
				return 4;
			if (tc2.f1() != 1598609704)
				return 5;
			C6 tc3 = new C6();
			if (tc3.f0() != 1556107162)
				return 6;
			C6BBB tc4 = new C6BBB();
			if (tc4.f0() != 480174910)
				return 7;
			return 0;
	}
}

