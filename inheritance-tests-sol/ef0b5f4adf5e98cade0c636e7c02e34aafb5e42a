
pragma solidity >=0.0;



interface I0 {

	function f0() external payable returns (uint);
}





interface I1BBBB {

	function f0() external view returns (uint);
}

interface I1BBBBB is I1BBBB {

	function f1() external view returns (uint);
}

interface I1BBBBBB is I1BBBBB {

	function f1() override
	external view returns (uint);
	function f2() external view returns (uint);
}
interface I1BBB is I1BBBB, I1BBBBB, I1BBBBBB {

	function f1() override(I1BBBBB, I1BBBBBB)
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
interface I1BB is I1BBB {

}
interface I1B is I1BB {

	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
interface I1 is I1B {

	function f0() override
	external view returns (uint);
}

interface I2 {

	function f0() external payable returns (uint);
}

interface I3 {

	function f0() external payable returns (uint);
}

interface I4 {

	function f0() external payable returns (uint);
}
library L5 {

	function f0(uint) public view returns (uint)
	{
		return 1681692777;
	}
}


contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}

