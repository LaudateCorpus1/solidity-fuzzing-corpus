
pragma solidity >=0.0;





interface C0BB {

	function f0() external view returns (uint);
}
interface C0B is C0BB {

}


interface C0BBBB {

	function f0() external view returns (uint);
}
interface C0BBB is C0BB, C0BBBB {

	function f0() override(C0BB, C0BBBB)
	external view returns (uint);
}
contract C0 is C0B, C0BBB {

	function f0() external view
	override(C0BBB, C0BB)
	returns (uint)
	{
		return 2078669041;
	}
}
library L1 {

	function f0(uint) private view returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public view returns (uint)
	{
		return 1681692777;
	}
}


contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1681692777)
			return 1;
		return 0;
	}
}

