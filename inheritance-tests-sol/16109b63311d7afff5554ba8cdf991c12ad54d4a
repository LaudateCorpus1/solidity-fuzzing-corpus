
pragma solidity >=0.0;





interface I0BB {

	function f0() external view returns (uint);
}
interface I0B is I0BB {

	function f1() external payable returns (uint);
}
interface I0 is I0B {

	function f0() override
	external view returns (uint);
}

contract C1 {

	function f0() public view
	
	returns (uint)
	{
		return 2078669041;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 407355683;
	}
}





interface C2BBBB {

	function f0() external payable returns (uint);
}
contract C2BBB is C2BBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 854716505;
	}
}
contract C2BB is C2BBB {

}

contract C2BBBBB is C2BBB {

	function f1() virtual public pure
	
	returns (uint)
	{
		return 192302371;
	}
}
contract C2B is C2BB, C2BBBBB {

}
contract C2 is C2B {

}

interface I3 {

	function f0() external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 2078669041)
				return 1;
			if (tc0.f1() != 407355683)
				return 2;
			C2 tc1 = new C2();
			if (tc1.f0() != 854716505)
				return 3;
			if (tc1.f1() != 192302371)
				return 4;
			C2B tc2 = new C2B();
			if (tc2.f0() != 854716505)
				return 5;
			if (tc2.f1() != 192302371)
				return 6;
			C2BB tc3 = new C2BB();
			if (tc3.f0() != 854716505)
				return 7;
			C2BBB tc4 = new C2BBB();
			if (tc4.f0() != 854716505)
				return 8;
			C2BBBBB tc5 = new C2BBBBB();
			if (tc5.f0() != 854716505)
				return 9;
			if (tc5.f1() != 192302371)
				return 10;
			return 0;
	}
}

