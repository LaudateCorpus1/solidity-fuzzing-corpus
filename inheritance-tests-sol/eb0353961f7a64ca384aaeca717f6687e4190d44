pragma solidity >=0.0;
contract C0 {
	function f0() public view
	
	returns (uint)
	{
		return 5889062;
	}
}
interface C1BB {
	function f0() external view returns (uint);
}
interface C1B is C1BB {
	function f0() override
	external view returns (uint);
}
contract C1 is C1B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 194552656;
	}
}
interface I2B {
	function f0() external view returns (uint);
}
interface I2BBB {
	function f0() external view returns (uint);
}
interface I2BB is I2B, I2BBB {
	function f0() override(I2B, I2BBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I2 is I2B, I2BB {
	function f0() override(I2B, I2BB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
contract C3 {
	function f0() public view
	
	returns (uint)
	{
		return 1196198554;
	}
}
interface I4B {
	function f0() external payable returns (uint);
}
interface I4BB is I4B {
	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface I4 is I4B, I4BB {
	function f0() override(I4B, I4BB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
library L5 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
contract C6B {
}
contract C6 is C6B {
	function f0() public view
	
	returns (uint)
	{
		return 68768197;
	}
}
contract C7 {
	function f0() public view
	
	returns (uint)
	{
		return 1647402772;
	}
}
contract C8BBB {
	function f0() external pure
	
	returns (uint)
	{
		return 459758802;
	}
}
contract C8BB is C8BBB {
}
contract C8B is C8BB {
}
contract C8 is C8B {
}
abstract contract C9B {
}
contract C9 is C9B {
	function f0() public view
	
	returns (uint)
	{
		return 859669581;
	}
}
contract C10BBB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1283833470;
	}
}
contract C10BB is C10BBB {
}
contract C10B is C10BB {
}
contract C10 is C10B {
	function f1() virtual public pure
	
	returns (uint)
	{
		return 2119959191;
	}
}
contract C11BBB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 659361917;
	}
}
contract C11BB is C11BBB {
	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1363731580;
	}
}
contract C11B is C11BB {
	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1356611075;
	}
}
contract C11 is C11B {
	function f0() virtual public pure
	override
	returns (uint)
	{
		return 161598524;
	}
}
interface C12BB {
	function f0() external view returns (uint);
}
interface C12B is C12BB {
	function f0() override
	external view returns (uint);
}
contract C12 is C12B {
	function f0() external view
	override
	returns (uint)
	{
		return 766918086;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 5889062)
				return 1;
			C1 tc1 = new C1();
			if (tc1.f0() != 194552656)
				return 2;
			C10 tc2 = new C10();
			if (tc2.f0() != 1283833470)
				return 3;
			if (tc2.f1() != 2119959191)
				return 4;
			C10B tc3 = new C10B();
			if (tc3.f0() != 1283833470)
				return 5;
			C10BB tc4 = new C10BB();
			if (tc4.f0() != 1283833470)
				return 6;
			C10BBB tc5 = new C10BBB();
			if (tc5.f0() != 1283833470)
				return 7;
			C11 tc6 = new C11();
			if (tc6.f0() != 161598524)
				return 8;
			C11B tc7 = new C11B();
			if (tc7.f0() != 1356611075)
				return 9;
			C11BB tc8 = new C11BB();
			if (tc8.f0() != 1363731580)
				return 10;
			C11BBB tc9 = new C11BBB();
			if (tc9.f0() != 659361917)
				return 11;
			C12 tc10 = new C12();
			if (tc10.f0() != 766918086)
				return 12;
			C3 tc11 = new C3();
			if (tc11.f0() != 1196198554)
				return 13;
			C6 tc12 = new C6();
			if (tc12.f0() != 68768197)
				return 14;
			C7 tc13 = new C7();
			if (tc13.f0() != 1647402772)
				return 15;
			C8 tc14 = new C8();
			if (tc14.f0() != 459758802)
				return 16;
			return 0;
	}
}
