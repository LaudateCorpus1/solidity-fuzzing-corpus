pragma solidity >=0.0;
abstract contract C0B {
	function f0() private pure
	
	returns (uint)
	{
		return 265263626;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1691062339;
	}
}
contract C0 is C0B {
	function f1() virtual public pure
	override
	returns (uint)
	{
		return 669620633;
	}
}
library L1 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
}
abstract contract C2B {
	function f0() private pure
	
	returns (uint)
	{
		return 491448374;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1865744430;
	}
}
contract C2 is C2B {
	function f1() virtual public pure
	override
	returns (uint)
	{
		return 1797359349;
	}
}
library L4 {
	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}
library L5 {
	function f0(uint) public view returns (uint)
	{
		return 1681692777;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f1() != 669620633)
				return 1;
			C2 tc1 = new C2();
			if (tc1.f1() != 1797359349)
				return 2;
			return 0;
	}
}
