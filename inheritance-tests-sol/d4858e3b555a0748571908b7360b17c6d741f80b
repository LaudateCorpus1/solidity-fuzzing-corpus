
pragma solidity >=0.0;





interface C0BB {

	function f0() external view returns (uint);
}
contract C0B is C0BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1847580730;
	}
}
contract C0 is C0B {

	function f0() external view
	override
	returns (uint)
	{
		return 375855352;
	}
}




interface C2BBB {

	function f0() external payable returns (uint);
}
interface C2BB is C2BBB {

}
abstract contract C2B is C2BB {

	function f0() virtual external payable
	override
	returns (uint);
}
contract C2 is C2B {

	function f0() external payable
	override
	returns (uint)
	{
		return 2007936220;
	}
}



interface I4BB {

	function f0() external view returns (uint);
}
interface I4B is I4BB {

	function f0() override
	external view returns (uint);
}
interface I4 is I4B {

	function f1() external payable returns (uint);
}


interface I5B {

	function f0() external view returns (uint);
}
interface I5 is I5B {

}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 375855352)
				return 1;
			C0B tc1 = new C0B();
			if (tc1.f0() != 1847580730)
				return 2;
			C2 tc2 = new C2();
			if (tc2.f0() != 2007936220)
				return 3;
			return 0;
	}
}

