pragma solidity >=0.0;
interface I0BB {
	function f0() external payable returns (uint);
}
interface I0B is I0BB {
	function f0() override
	external payable returns (uint);
}
interface I0 is I0B {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBB {
	function f1() external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBB {
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBB {
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface I1BBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() external payable returns (uint);
}
interface I1BBBBBBBBBBBBB is I1BBBBBBBBBBBBBB {
	function f4() override
	external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBB {
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() external view returns (uint);
}
interface I1BBBBBBBBBBBB is I1BBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f3() override(I1BBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I1BBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f5() override(I1BBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f7() external view returns (uint);
	function f8() external pure returns (uint);
	function f9() external payable returns (uint);
	function f10() external payable returns (uint);
}
interface I1BBBBBBBBBBB is I1BBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
}
interface I1BBBBBBBBBB is I1BBBBBBBBBBB {
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f7() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() external payable returns (uint);
}
interface I1BBBBBBBBB is I1BBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() override
	external view returns (uint);
	function f7() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f12() external payable returns (uint);
}
interface I1BBBBBBBB is I1BBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I1BBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I1BBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(I1BBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override(I1BBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f5() override(I1BBBBBBBBB, I1BBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(I1BBBBBBBBB, I1BBBBBBBBBBB)
	external view returns (uint);
	function f7() override(I1BBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f8() override(I1BBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f9() override(I1BBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(I1BBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(I1BBBBBBBBB, I1BBBBBBBBBB)
	external payable returns (uint);
	function f12() override
	external payable returns (uint);
	function f13() external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f12() external payable returns (uint);
}
interface I1BBBBBBB is I1BBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I1BBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I1BBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(I1BBBBBBBB, I1BBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I1BBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I1BBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f5() override(I1BBBBBBBB, I1BBBBBBBBB)
	external payable returns (uint);
	function f6() override(I1BBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f7() override(I1BBBBBBBB, I1BBBBBBBBBB)
	external view returns (uint);
	function f8() override(I1BBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f9() override(I1BBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(I1BBBBBBBB, I1BBBBBBBBB)
	external payable returns (uint);
	function f11() override(I1BBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f12() override(I1BBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f13() override
	external view returns (uint);
	function f14() external view returns (uint);
	function f15() external pure returns (uint);
	function f16() external payable returns (uint);
	function f17() external payable returns (uint);
}
interface I1BBBBBB is I1BBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f12() override
	external payable returns (uint);
	function f13() override
	external view returns (uint);
	function f14() override
	external view returns (uint);
	function f15() override
	external pure returns (uint);
}
interface I1BBBBB is I1BBBBBB {
	function f1() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f12() override
	external payable returns (uint);
	function f14() override
	external view returns (uint);
	function f18() external payable returns (uint);
}
interface I1BBBB is I1BBBBB {
	function f2() override
	external payable returns (uint);
	function f7() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f16() override
	external payable returns (uint);
	function f18() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBB is I1BBBBB {
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f7() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f12() override
	external payable returns (uint);
	function f14() override
	external view returns (uint);
	function f16() override
	external payable returns (uint);
	function f18() override
	external payable returns (uint);
	function f19() external payable returns (uint);
}
interface I1BBB is I1BBBB, I1BBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override(I1BBBBB, I1BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(I1BBBB, I1BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override(I1BBBBB, I1BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f7() override(I1BBBB, I1BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f8() override(I1BBBB, I1BBBBBB)
	external pure returns (uint);
	function f9() override(I1BBBB, I1BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(I1BBBBB, I1BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(I1BBBB, I1BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f12() override(I1BBBBB, I1BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f13() override
	external view returns (uint);
	function f14() override(I1BBBBB, I1BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f15() override
	external pure returns (uint);
	function f16() override(I1BBBB, I1BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f17() override
	external payable returns (uint);
	function f18() override(I1BBBB, I1BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f20() external view returns (uint);
}
interface I1BB is I1BBB {
	function f4() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f13() override
	external view returns (uint);
	function f14() override
	external view returns (uint);
	function f16() override
	external payable returns (uint);
	function f19() override
	external payable returns (uint);
	function f20() override
	external view returns (uint);
}
interface I1B is I1BB {
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f12() override
	external payable returns (uint);
	function f14() override
	external view returns (uint);
	function f15() override
	external pure returns (uint);
	function f16() override
	external payable returns (uint);
	function f17() override
	external payable returns (uint);
	function f18() override
	external payable returns (uint);
	function f20() override
	external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBB is I1BB {
	function f0() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
	function f12() override
	external payable returns (uint);
	function f16() override
	external payable returns (uint);
	function f19() override
	external payable returns (uint);
	function f20() override
	external view returns (uint);
	function f21() external payable returns (uint);
}
interface I1 is I1B, I1BBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I1BBB, I1BBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override(I1B, I1BBB)
	external payable returns (uint);
	function f3() override(I1B, I1BBB)
	external view returns (uint);
	function f5() override(I1B, I1BB)
	external payable returns (uint);
	function f6() override(I1B, I1BBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f7() override
	external view returns (uint);
	function f8() override(I1B, I1BB)
	external pure returns (uint);
	function f9() override(I1B, I1BB)
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override(I1B, I1BB)
	external payable returns (uint);
	function f12() override(I1B, I1BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f14() override(I1B, I1BB)
	external view returns (uint);
	function f15() override(I1B, I1BBB)
	external pure returns (uint);
	function f16() override(I1B, I1BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f17() override(I1B, I1BBB)
	external payable returns (uint);
	function f18() override(I1B, I1BBB)
	external payable returns (uint);
	function f19() override(I1BB, I1BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f20() override(I1B, I1BBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
