pragma solidity >=0.0;
library L0 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public view returns (uint)
	{
		return 846930886;
	}
}
interface I1B {
	function f0() external view returns (uint);
}
interface I1 is I1B {
	function f0() override
	external view returns (uint);
}
interface I2 {
	function f0() external view returns (uint);
}
interface C3BB {
	function f0() external view returns (uint);
}
interface C3B is C3BB {
	function f0() override
	external view returns (uint);
}
contract C3 is C3B {
	function f0() external view
	override
	returns (uint)
	{
		return 407355683;
	}
}
library L4 {
	function f0(uint) public view returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1714636915;
	}
}
interface C5BBBBB {
	function f0() external view returns (uint);
}
interface C5BBBB is C5BBBBB {
}
interface C5BBB is C5BBBB {
}
contract C5BB is C5BBB {
	function f0() external view
	override
	returns (uint)
	{
		return 1250328747;
	}
}
contract C5B is C5BB {
}
abstract contract C5 is C5B {
}
interface C6B {
	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
contract C6 is C6B {
	function f0() external view
	override
	returns (uint)
	{
		return 1882556969;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1559527823;
	}
}
library L7 {
	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) private view returns (uint)
	{
		return 424238335;
	}
}
library L8 {
	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
}
contract C9 {
	function f0() public payable
	
	returns (uint)
	{
		return 638022372;
	}
}
interface C11BB {
	function f0() external view returns (uint);
}
interface C11B is C11BB {
	function f0() override
	external view returns (uint);
}
interface C11BBBB {
	function f0() external view returns (uint);
}
interface C11BBB is C11BB, C11BBBB {
	function f0() override(C11BB, C11BBBB)
	external view returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
contract C11 is C11B, C11BBB {
	function f0() external view
	override(C11BBB, C11B)
	returns (uint)
	{
		return 631416347;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 890442452;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 1105724094;
	}
}
interface C12B {
	function f0() external view returns (uint);
}
contract C12 is C12B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1696049367;
	}
}
interface C13B {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
contract C13 is C13B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1168816941;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 201068705;
	}
}
contract C {
	function test() public returns (uint)
	{
			C11 tc0 = new C11();
			if (tc0.f0() != 631416347)
				return 1;
			if (tc0.f1() != 890442452)
				return 2;
			if (tc0.f2() != 1105724094)
				return 3;
			C12 tc1 = new C12();
			if (tc1.f0() != 1696049367)
				return 4;
			C13 tc2 = new C13();
			if (tc2.f0() != 1168816941)
				return 5;
			if (tc2.f1() != 201068705)
				return 6;
			C3 tc3 = new C3();
			if (tc3.f0() != 407355683)
				return 7;
			C5B tc4 = new C5B();
			if (tc4.f0() != 1250328747)
				return 8;
			C5BB tc5 = new C5BB();
			if (tc5.f0() != 1250328747)
				return 9;
			C6 tc6 = new C6();
			if (tc6.f0() != 1882556969)
				return 10;
			if (tc6.f1() != 1559527823)
				return 11;
			C9 tc7 = new C9();
			if (tc7.f0() != 638022372)
				return 12;
			return 0;
	}
}
