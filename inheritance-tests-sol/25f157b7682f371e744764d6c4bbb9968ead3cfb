pragma solidity >=0.0;
contract C0BB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 48271;
	}
}
contract C0B is C0BB {
	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1914720637;
	}
}
contract C0 is C0B {
}
abstract contract C1BB {
}
interface C1BBBBBBB {
	function f0() external view returns (uint);
}
interface C1BBBBBB is C1BBBBBBB {
}
interface C1BBBBB is C1BBBBBB {
}
abstract contract C1BBBB is C1BBBBB {
	function f0() virtual external view
	override
	returns (uint);
}
contract C1BBB is C1BB, C1BBBB {
	function f0() external view
	override
	returns (uint)
	{
		return 1098894339;
	}
}
contract C1B is C1BB, C1BBB {
}
contract C1 is C1B {
}
interface I2B {
	function f0() external pure returns (uint);
}
interface I2BB is I2B {
	function f1() external payable returns (uint);
}
interface I2 is I2B, I2BB {
	function f0() override
	external pure returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1914720637)
				return 1;
			C0B tc1 = new C0B();
			if (tc1.f0() != 1914720637)
				return 2;
			C0BB tc2 = new C0BB();
			if (tc2.f0() != 48271)
				return 3;
			C1 tc3 = new C1();
			if (tc3.f0() != 1098894339)
				return 4;
			C1B tc4 = new C1B();
			if (tc4.f0() != 1098894339)
				return 5;
			C1BBB tc5 = new C1BBB();
			if (tc5.f0() != 1098894339)
				return 6;
			return 0;
	}
}
