
pragma solidity >=0.0;






interface I0BBB {

	function f0() external view returns (uint);
}
interface I0BB is I0BBB {

	function f1() external payable returns (uint);
}
interface I0B is I0BB {

	function f0() override
	external view returns (uint);
}
interface I0 is I0B {

}

interface I1 {

	function f0() external view returns (uint);
}






interface I2BBBBB {

	function f0() external view returns (uint);
}
interface I2BBBB is I2BBBBB {

	function f1() external payable returns (uint);
}
interface I2BBB is I2BBBB {

}
interface I2BB is I2BBB {

	function f2() external payable returns (uint);
}
interface I2B is I2BB {

	function f2() override
	external payable returns (uint);
}
interface I2 is I2B {

	function f1() override
	external payable returns (uint);
}



interface I3BB {

	function f0() external view returns (uint);
}
interface I3B is I3BB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I3 is I3B {

	function f1() override
	external payable returns (uint);
}




interface I4BBB {

	function f0() external view returns (uint);
}
interface I4BB is I4BBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I4B is I4BB {

}
interface I4 is I4B {

	function f0() override
	external view returns (uint);
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

