
pragma solidity >=0.0;



interface I1 {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
library L2 {

	function f0(uint) external pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1681692777;
	}
}







interface I3BBBBBB {

}
interface I3BBBBB is I3BBBBBB {

}
interface I3BBBB is I3BBBBB {

}




interface I3BBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I3BBBBBBBBB is I3BBBBBBBBBB {

	function f1() external view returns (uint);
}
interface I3BBBBBBBB is I3BBBBBBBBB {

	function f1() override
	external view returns (uint);
}
interface I3BBBBBBB is I3BBBBB, I3BBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I3BBB is I3BBBB, I3BBBBBBB {

	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I3BB is I3BBB {

	function f1() override
	external view returns (uint);
	function f3() external view returns (uint);
}
interface I3B is I3BB {

	function f2() override
	external payable returns (uint);
}




interface I3BBBBBBBBBBBBBB {

}
interface I3BBBBBBBBBBBBB is I3BBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I3BBBBBBBBBBBB is I3BBBBBBBBBBBBB {

}
interface I3BBBBBBBBBBB is I3BB, I3BBBBBBBBBBBB {

	function f0() override(I3BBBBBBB, I3BBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}

interface I3BBBBBBBBBBBBBBB is I3BBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I3 is I3B, I3BBBBBBBBBBB, I3BBBBBBBBBBBBBBB {

	function f0() override(I3BBBBBBB, I3BBBBBBBBBBB, I3BBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I3BB, I3BBBBBBBBBBB, I3BBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(I3B, I3BBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I3BB, I3BBBBBBBBBBB)
	external view returns (uint);
}

interface I5 {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}


contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}

