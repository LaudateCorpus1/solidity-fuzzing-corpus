pragma solidity >=0.0;
interface I0BBB {
	function f0() external payable returns (uint);
}
interface I0BB is I0BBB {
	function f1() external payable returns (uint);
}
interface I0B is I0BB {
	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I0BBBBB {
	function f0() external payable returns (uint);
}
interface I0BBBB is I0BB, I0BBBBB {
	function f0() override(I0BBB, I0BBBBB)
	external payable returns (uint);
}
interface I0BBBBBB is I0BBBB {
	function f2() external view returns (uint);
}
interface I0 is I0B, I0BBBB, I0BBBBBB {
	function f0() override(I0B, I0BBBB)
	external payable returns (uint);
	function f2() override(I0B, I0BBBBBB)
	external view returns (uint);
}
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}
library L2 {
	function f0(uint) public view returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
interface C3BB {
	function f0() external payable returns (uint);
}
interface C3B is C3BB {
}
contract C3 is C3B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1098894339;
	}
	function f1() private pure
	
	returns (uint)
	{
		return 1882556969;
	}
}
interface C4BBB {
	function f0() external payable returns (uint);
}
interface C4BB is C4BBB {
	function f0() override
	external payable returns (uint);
}
contract C4B is C4BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 638022372;
	}
	function f1() public payable
	
	returns (uint)
	{
		return 914937185;
	}
}
contract C4 is C4B {
}
interface I5BBB {
	function f0() external payable returns (uint);
}
interface I5BB is I5BBB {
	function f1() external payable returns (uint);
}
interface I5B is I5BB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I5BBBBB {
	function f0() external payable returns (uint);
}
interface I5BBBB is I5BB, I5BBBBB {
	function f0() override(I5BBB, I5BBBBB)
	external payable returns (uint);
}
interface I5 is I5B, I5BBBB {
	function f0() override(I5B, I5BBBB)
	external payable returns (uint);
	function f1() override(I5B, I5BB)
	external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C3 tc0 = new C3();
			if (tc0.f0() != 1098894339)
				return 1;
			C4 tc1 = new C4();
			if (tc1.f0() != 638022372)
				return 2;
			if (tc1.f1() != 914937185)
				return 3;
			C4B tc2 = new C4B();
			if (tc2.f0() != 638022372)
				return 4;
			if (tc2.f1() != 914937185)
				return 5;
			return 0;
	}
}
