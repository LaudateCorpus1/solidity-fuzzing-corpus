
pragma solidity >=0.0;



interface I0 {

	function f0() external view returns (uint);
}










interface C1BBBBBBBBB {

	function f0() external payable returns (uint);
}
interface C1BBBBBBBB is C1BBBBBBBBB {

	function f1() external view returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C1BBBBBB is C1BBBBBBB {

}

interface C1BBBBBBBBBB is C1BBBBBBB {

	function f4() external view returns (uint);
}
interface C1BBBBB is C1BBBBBB, C1BBBBBBBBBB {

	function f2() override
	external view returns (uint);
}
contract C1BBBB is C1BBBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1931656580;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1936030137;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 353718330;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1947433875;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 2010567813;
	}
}
contract C1BBB is C1BBBB {

	function f3() virtual external view
	override
	returns (uint)
	{
		return 1696049367;
	}
}
abstract contract C1BB is C1BBB {

}
contract C1B is C1BB {

	function f2() virtual external view
	override
	returns (uint)
	{
		return 1287522347;
	}
}
contract C1 is C1B {

}
library L2 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
	function f1(uint) external view returns (uint)
	{
		return 1681692777;
	}
}


interface I3B {

	function f0() external view returns (uint);
}


interface I3BBB {

	function f0() external view returns (uint);
}
interface I3BB is I3B, I3BBB {

	function f0() override(I3B, I3BBB)
	external view returns (uint);
}
interface I3 is I3B, I3BB {

	function f0() override(I3B, I3BB)
	external view returns (uint);
}
library L4 {

	function f0(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}
library L5 {

	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
}


contract C6B {

}

abstract contract C6BB is C6B {

}









interface C6BBBBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C6BBBBBBBBBB is C6BBBBBBBBBBB {

}

interface C6BBBBBBBBBBBB is C6BBBBBBBBBBB {

	function f1() override
	external pure returns (uint);
	function f2() external payable returns (uint);
}
interface C6BBBBBBBBB is C6BBBBBBBBBB, C6BBBBBBBBBBBB {

	function f1() override(C6BBBBBBBBBBB, C6BBBBBBBBBBBB)
	external pure returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C6BBBBBBBB is C6BBBBBBBBB {

	function f3() override
	external view returns (uint);
}

interface C6BBBBBBBBBBBBB is C6BBBBBBBBB {

	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() external payable returns (uint);
}
interface C6BBBBBBB is C6BBBBBBBB, C6BBBBBBBBBBBBB {

	function f2() override(C6BBBBBBBBBBBB, C6BBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(C6BBBBBBBB, C6BBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(C6BBBBBBBBB, C6BBBBBBBBBBBBB)
	external view returns (uint);
	function f5() override
	external payable returns (uint);
}
contract C6BBBBBB is C6BBBBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 409875951;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 2058462609;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 243877847;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1336273608;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1318652553;
	}
	function f5() external payable
	override
	returns (uint)
	{
		return 324062450;
	}
}
contract C6BBBBB is C6BBBBBB {

	function f1() virtual external pure
	override
	returns (uint)
	{
		return 583514338;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 851194519;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1358404307;
	}
}
contract C6BBBB is C6BBBBB {

	function f4() virtual external view
	override
	returns (uint)
	{
		return 1578591759;
	}
}
contract C6BBB is C6B, C6BBBB {

}
abstract contract C6 is C6B, C6BB, C6BBB {

	function f1() external pure
	override
	returns (uint)
	{
		return 1498947413;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 88805914;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1613822255;
	}
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1931656580)
				return 1;
			if (tc0.f1() != 1936030137)
				return 2;
			if (tc0.f2() != 1287522347)
				return 3;
			if (tc0.f3() != 1696049367)
				return 4;
			if (tc0.f4() != 2010567813)
				return 5;
			C1B tc1 = new C1B();
			if (tc1.f0() != 1931656580)
				return 6;
			if (tc1.f1() != 1936030137)
				return 7;
			if (tc1.f2() != 1287522347)
				return 8;
			if (tc1.f3() != 1696049367)
				return 9;
			if (tc1.f4() != 2010567813)
				return 10;
			C1BBB tc2 = new C1BBB();
			if (tc2.f0() != 1931656580)
				return 11;
			if (tc2.f1() != 1936030137)
				return 12;
			if (tc2.f2() != 353718330)
				return 13;
			if (tc2.f3() != 1696049367)
				return 14;
			if (tc2.f4() != 2010567813)
				return 15;
			C1BBBB tc3 = new C1BBBB();
			if (tc3.f0() != 1931656580)
				return 16;
			if (tc3.f1() != 1936030137)
				return 17;
			if (tc3.f2() != 353718330)
				return 18;
			if (tc3.f3() != 1947433875)
				return 19;
			if (tc3.f4() != 2010567813)
				return 20;
			C6BBB tc4 = new C6BBB();
			if (tc4.f0() != 409875951)
				return 21;
			if (tc4.f1() != 583514338)
				return 22;
			if (tc4.f2() != 851194519)
				return 23;
			if (tc4.f3() != 1358404307)
				return 24;
			if (tc4.f4() != 1578591759)
				return 25;
			if (tc4.f5() != 324062450)
				return 26;
			C6BBBB tc5 = new C6BBBB();
			if (tc5.f0() != 409875951)
				return 27;
			if (tc5.f1() != 583514338)
				return 28;
			if (tc5.f2() != 851194519)
				return 29;
			if (tc5.f3() != 1358404307)
				return 30;
			if (tc5.f4() != 1578591759)
				return 31;
			if (tc5.f5() != 324062450)
				return 32;
			C6BBBBB tc6 = new C6BBBBB();
			if (tc6.f0() != 409875951)
				return 33;
			if (tc6.f1() != 583514338)
				return 34;
			if (tc6.f2() != 851194519)
				return 35;
			if (tc6.f3() != 1358404307)
				return 36;
			if (tc6.f4() != 1318652553)
				return 37;
			if (tc6.f5() != 324062450)
				return 38;
			C6BBBBBB tc7 = new C6BBBBBB();
			if (tc7.f0() != 409875951)
				return 39;
			if (tc7.f1() != 2058462609)
				return 40;
			if (tc7.f2() != 243877847)
				return 41;
			if (tc7.f3() != 1336273608)
				return 42;
			if (tc7.f4() != 1318652553)
				return 43;
			if (tc7.f5() != 324062450)
				return 44;
			return 0;
	}
}

