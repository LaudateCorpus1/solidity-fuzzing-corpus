
pragma solidity >=0.0;





interface I0BB {

	function f0() external view returns (uint);
}
interface I0B is I0BB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
interface I0 is I0B {

	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}


contract C1B {

}


interface C1BBB {

	function f0() external view returns (uint);
}

interface C1BBBB is C1BBB {

	function f1() external view returns (uint);
}
interface C1BB is C1BBB, C1BBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}


interface C1BBBBBB {

	function f0() external view returns (uint);
}
interface C1BBBBB is C1BBBBBB {

	function f0() override
	external view returns (uint);
}
contract C1 is C1B, C1BB, C1BBBBB {

	function f0() external view
	override(C1BBBBB, C1BB)
	returns (uint)
	{
		return 1647402772;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 921123244;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 859669581;
	}
	function f3() public view
	
	returns (uint)
	{
		return 1283833470;
	}
}

interface I3 {

	function f0() external view returns (uint);
}
library L4 {

	function f0(uint) public view returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) external pure returns (uint)
	{
		return 424238335;
	}
}


abstract contract C5B {

}







interface C5BBBBBBBB {

}
interface C5BBBBBBB is C5BBBBBBBB {

}
interface C5BBBBBB is C5BBBBBBB {

}
interface C5BBBBB is C5BBBBBB {

}
interface C5BBBB is C5BBBBB {

}








interface C5BBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBB is C5BBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBB is C5BBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBB is C5BBBBBBBBBBBB {

}
interface C5BBBBBBBBBB is C5BBBBBBBBBBB {

}
interface C5BBBBBBBBB is C5BBBB, C5BBBBBBBBBB {

}
interface C5BBB is C5BBBB, C5BBBBBBBBB {

}
contract C5BB is C5B, C5BBB {

}



interface C5BBBBBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBB {

}
contract C5BBBBBBBBBBBBBBBBB is C5B, C5BBBBBBBBBBBBBBBBBB {

}



interface C5BBBBBBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface C5BBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
}

contract C5BBBBBBBBBBBBBBBBBBBBBBB is C5B {

}







interface C5BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBBBBBBB {

}
contract C5BBBBBBBBBBBBBBBBBBBBBBBB is C5B, C5BBBBBBBBBBBBBBBBBBBBBBBBB {

}
contract C5 is C5B, C5BB, C5BBBBBBBBBBBBBBBBB, C5BBBBBBBBBBBBBBBBBBBB, C5BBBBBBBBBBBBBBBBBBBBBBB, C5BBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 266004718;
	}
}

contract C6 {

	function f0() external pure
	
	returns (uint)
	{
		return 509017165;
	}
}


contract C {
	using L4 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 424238335)
			return 1;
		return 0;
	}
}

