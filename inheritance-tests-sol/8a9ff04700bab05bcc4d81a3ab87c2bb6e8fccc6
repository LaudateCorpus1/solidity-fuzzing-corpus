
pragma solidity >=0.0;






interface I0BBB {

	function f0() external view returns (uint);
}
interface I0BB is I0BBB {

}
interface I0B is I0BB {

}
interface I0 is I0B {

	function f0() override
	external view returns (uint);
}

contract C2 {

	function f0() public view
	
	returns (uint)
	{
		return 1709309780;
	}
}

contract C3 {

	function f0() public view
	
	returns (uint)
	{
		return 1623188993;
	}
}


interface I4B {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}




interface I4BBBBB {

	function f0() external payable returns (uint);
}
interface I4BBBB is I4BBBBB {

	function f0() override
	external payable returns (uint);
}
interface I4BBB is I4BBBB {

}
interface I4BB is I4B, I4BBB {

	function f0() override(I4B, I4BBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface I4 is I4B, I4BB {

	function f0() override(I4B, I4BB)
	external payable returns (uint);
	function f1() override(I4B, I4BB)
	external view returns (uint);
}

contract C7 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1903579395;
	}
}


interface C8B {

}
contract C8 is C8B {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1150688209;
	}
}

interface I10 {

	function f0() external view returns (uint);
	function f1() external view returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 1709309780)
				return 1;
			C3 tc1 = new C3();
			if (tc1.f0() != 1623188993)
				return 2;
			C7 tc2 = new C7();
			if (tc2.f0() != 1903579395)
				return 3;
			C8 tc3 = new C8();
			if (tc3.f0() != 1150688209)
				return 4;
			return 0;
	}
}

