pragma solidity >=0.0;
interface C0BBB {
	function f0() external payable returns (uint);
}
interface C0BB is C0BBB {
	function f0() override
	external payable returns (uint);
}
interface C0B is C0BB {
}
contract C0 is C0B {
	function f0() external payable
	override
	returns (uint)
	{
		return 375855352;
	}
}
interface C4BBB {
	function f0() external view returns (uint);
}
interface C4BB is C4BBB {
	function f0() override
	external view returns (uint);
}
contract C4B is C4BB {
	function f0() external view
	override
	returns (uint)
	{
		return 1425835579;
	}
}
contract C4 is C4B {
}
interface C8BBB {
	function f0() external view returns (uint);
}
interface C8BB is C8BBB {
	function f0() override
	external view returns (uint);
}
contract C8B is C8BB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 908028975;
	}
}
contract C8 is C8B {
}
interface C9BBB {
	function f0() external payable returns (uint);
}
interface C9BB is C9BBB {
}
contract C9B is C9BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 170423502;
	}
}
contract C9 is C9B {
}
library L10 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
contract C {
	using L10 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}
