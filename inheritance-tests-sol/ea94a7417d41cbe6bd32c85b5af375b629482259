
pragma solidity >=0.0;






interface C0BBB {

	function f0() external view returns (uint);
}
interface C0BB is C0BBB {

}
contract C0B is C0BB {

	function f0() external view
	override
	returns (uint)
	{
		return 2031102142;
	}
}
contract C0 is C0B {

}


interface I1B {

	function f0() external view returns (uint);
}




interface I1BBBBB {

	function f0() external view returns (uint);
}
interface I1BBBB is I1BBBBB {

}
interface I1BBB is I1BBBB {

	function f0() override
	external view returns (uint);
}
interface I1BB is I1B, I1BBB {

	function f0() override(I1B, I1BBB)
	external view returns (uint);
}
interface I1 is I1B, I1BB {

	function f0() override(I1B, I1BB)
	external view returns (uint);
}
library L3 {

	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public view returns (uint)
	{
		return 1714636915;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1957747793;
	}
}


interface I4B {

	function f0() external view returns (uint);
}




interface I4BBBBB {

	function f0() external view returns (uint);
}
interface I4BBBB is I4BBBBB {

}
interface I4BBB is I4BBBB {

}
interface I4BB is I4B, I4BBB {

	function f0() override(I4B, I4BBBBB)
	external view returns (uint);
}
interface I4 is I4B, I4BB {

	function f0() override(I4B, I4BB)
	external view returns (uint);
}

contract C5 {

	function f0() public payable
	
	returns (uint)
	{
		return 319011186;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 2031102142)
				return 1;
			C0B tc1 = new C0B();
			if (tc1.f0() != 2031102142)
				return 2;
			C5 tc2 = new C5();
			if (tc2.f0() != 319011186)
				return 3;
			return 0;
	}
}

