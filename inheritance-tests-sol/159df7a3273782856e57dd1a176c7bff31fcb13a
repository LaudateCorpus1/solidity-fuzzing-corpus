pragma solidity >=0.0;
library L0 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) internal view returns (uint)
	{
		return 846930886;
	}
}
contract C1B {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 182605794;
	}
	function f1() public view
	
	returns (uint)
	{
		return 1291394886;
	}
}
contract C1 is C1B {
}
interface C2BBB {
	function f0() external payable returns (uint);
}
interface C2BB is C2BBB {
}
abstract contract C2B is C2BB {
	function f0() virtual external payable
	override
	returns (uint);
}
abstract contract C2BBBBB {
}
abstract contract C2BBBB is C2BB, C2BBBBB {
	function f0() virtual external payable
	override
	returns (uint);
}
contract C2 is C2B, C2BBBB {
	function f0() external payable
	override(C2BBBB, C2B)
	returns (uint)
	{
		return 1098894339;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1882556969;
	}
	function f2() virtual public pure
	
	returns (uint)
	{
		return 2136927794;
	}
}
library L3 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
interface I4B {
	function f0() external view returns (uint);
}
interface I4 is I4B {
	function f1() external view returns (uint);
}
interface I5BBB {
	function f0() external payable returns (uint);
}
interface I5BB is I5BBB {
	function f0() override
	external payable returns (uint);
}
interface I5B is I5BB {
	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface I5 is I5B {
	function f1() override
	external view returns (uint);
}
interface I6B {
	function f0() external payable returns (uint);
}
interface I6 is I6B {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
library L7 {
	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) public view returns (uint)
	{
		return 424238335;
	}
}
interface C8BBB {
	function f0() external payable returns (uint);
}
interface C8BB is C8BBB {
}
abstract contract C8B is C8BB {
	function f0() virtual external payable
	override
	returns (uint);
}
abstract contract C8BBBBB {
}
abstract contract C8BBBB is C8B, C8BBBBB {
	function f0() virtual external payable
	override
	returns (uint);
}
contract C8 is C8B, C8BBBB {
	function f0() virtual external payable
	override(C8BBBB, C8B)
	returns (uint)
	{
		return 1168816941;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1272185027;
	}
	function f2() virtual public pure
	
	returns (uint)
	{
		return 201068705;
	}
}
interface C9BBB {
	function f0() external payable returns (uint);
}
interface C9BB is C9BBB {
	function f0() override
	external payable returns (uint);
}
contract C9B is C9BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1814467857;
	}
}
contract C9 is C9B {
}
interface C10BBBB {
	function f0() external payable returns (uint);
}
interface C10BBB is C10BBBB {
}
contract C10BB is C10BBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 480194461;
	}
}
contract C10B is C10BB {
}
contract C10 is C10B {
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1243696899;
	}
	function f2() public view
	
	returns (uint)
	{
		return 1587659744;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 182605794)
				return 1;
			if (tc0.f1() != 1291394886)
				return 2;
			C10 tc1 = new C10();
			if (tc1.f0() != 480194461)
				return 3;
			if (tc1.f1() != 1243696899)
				return 4;
			if (tc1.f2() != 1587659744)
				return 5;
			C10B tc2 = new C10B();
			if (tc2.f0() != 480194461)
				return 6;
			C10BB tc3 = new C10BB();
			if (tc3.f0() != 480194461)
				return 7;
			C1B tc4 = new C1B();
			if (tc4.f0() != 182605794)
				return 8;
			if (tc4.f1() != 1291394886)
				return 9;
			C2 tc5 = new C2();
			if (tc5.f0() != 1098894339)
				return 10;
			if (tc5.f1() != 1882556969)
				return 11;
			if (tc5.f2() != 2136927794)
				return 12;
			C8 tc6 = new C8();
			if (tc6.f0() != 1168816941)
				return 13;
			if (tc6.f1() != 1272185027)
				return 14;
			if (tc6.f2() != 201068705)
				return 15;
			C9 tc7 = new C9();
			if (tc7.f0() != 1814467857)
				return 16;
			C9B tc8 = new C9B();
			if (tc8.f0() != 1814467857)
				return 17;
			return 0;
	}
}
