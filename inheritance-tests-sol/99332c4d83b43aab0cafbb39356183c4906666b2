
pragma solidity >=0.0;






interface I0BBB {

	function f0() external payable returns (uint);
}
interface I0BB is I0BBB {

}
interface I0B is I0BB {

	function f0() override
	external payable returns (uint);
}
interface I0 is I0B {

}

contract C1 {

	function f0() public view
	
	returns (uint)
	{
		return 407355683;
	}
}






interface C2BBBBB {

	function f0() external payable returns (uint);
}
interface C2BBBB is C2BBBBB {

}
interface C2BBB is C2BBBB {

}
contract C2BB is C2BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1203428207;
	}
}
contract C2B is C2BB {

}
abstract contract C2 is C2B {

}





interface C3BBBB {

	function f0() external payable returns (uint);
}
interface C3BBB is C3BBBB {

}
interface C3BB is C3BBB {

}
contract C3B is C3BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 2075782095;
	}
}
contract C3 is C3B {

}






interface C4BBBBB {

	function f0() external payable returns (uint);
}
interface C4BBBB is C4BBBBB {

}
interface C4BBB is C4BBBB {

}
contract C4BB is C4BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 353718330;
	}
}
contract C4B is C4BB {

}
abstract contract C4 is C4B {

}

interface I5 {

	function f0() external payable returns (uint);
}
library L7 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}

contract C8 {

	function f0() public view
	
	returns (uint)
	{
		return 662405787;
	}
}






interface C9BBBBB {

	function f0() external payable returns (uint);
}
interface C9BBBB is C9BBBBB {

	function f0() override
	external payable returns (uint);
}
interface C9BBB is C9BBBB {

}
contract C9BB is C9BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1272185027;
	}
}
contract C9B is C9BB {

}
contract C9 is C9B {

}

contract C10 {

	function f0() public view
	
	returns (uint)
	{
		return 928270262;
	}
}









interface C11BBBBBBBB {

	function f0() external view returns (uint);
}
interface C11BBBBBBB is C11BBBBBBBB {

}
interface C11BBBBBB is C11BBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C11BBBBB is C11BBBBBB {

}
interface C11BBBB is C11BBBBB {

}
interface C11BBB is C11BBBB {

	function f1() external payable returns (uint);
}
interface C11BB is C11BBB {

}
contract C11B is C11BB {

	function f0() external view
	override
	returns (uint)
	{
		return 942409124;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1951824771;
	}
}
contract C11 is C11B {

}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 407355683)
				return 1;
			C10 tc1 = new C10();
			if (tc1.f0() != 928270262)
				return 2;
			C11 tc2 = new C11();
			if (tc2.f0() != 942409124)
				return 3;
			if (tc2.f1() != 1951824771)
				return 4;
			C11B tc3 = new C11B();
			if (tc3.f0() != 942409124)
				return 5;
			if (tc3.f1() != 1951824771)
				return 6;
			C2B tc4 = new C2B();
			if (tc4.f0() != 1203428207)
				return 7;
			C2BB tc5 = new C2BB();
			if (tc5.f0() != 1203428207)
				return 8;
			C3 tc6 = new C3();
			if (tc6.f0() != 2075782095)
				return 9;
			C3B tc7 = new C3B();
			if (tc7.f0() != 2075782095)
				return 10;
			C4B tc8 = new C4B();
			if (tc8.f0() != 353718330)
				return 11;
			C4BB tc9 = new C4BB();
			if (tc9.f0() != 353718330)
				return 12;
			C8 tc10 = new C8();
			if (tc10.f0() != 662405787)
				return 13;
			C9 tc11 = new C9();
			if (tc11.f0() != 1272185027)
				return 14;
			C9B tc12 = new C9B();
			if (tc12.f0() != 1272185027)
				return 15;
			C9BB tc13 = new C9BB();
			if (tc13.f0() != 1272185027)
				return 16;
			return 0;
	}
}

