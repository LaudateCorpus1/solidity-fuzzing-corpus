pragma solidity >=0.0;
interface C0BBB {
	function f0() external view returns (uint);
}
interface C0BB is C0BBB {
	function f0() override
	external view returns (uint);
}
interface C0B is C0BB {
}
contract C0 is C0B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 305269445;
	}
}
interface C1BB {
	function f0() external view returns (uint);
}
interface C1BBB is C1BB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface C1B is C1BB, C1BBB {
	function f0() override(C1BB, C1BBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface C1BBBBB {
	function f0() external view returns (uint);
}
interface C1BBBB is C1B, C1BBBBB {
	function f0() override(C1B, C1BBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
contract C1 is C1B, C1BBBB {
	function f0() virtual external view
	override(C1BBBB, C1B)
	returns (uint)
	{
		return 459758802;
	}
	function f1() virtual external view
	override(C1BBBB, C1B)
	returns (uint)
	{
		return 2038683636;
	}
	function f2() external payable
	override(C1BBBB, C1B)
	returns (uint)
	{
		return 1283833470;
	}
}
library L2 {
	function f0(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}
interface I3 {
	function f0() external view returns (uint);
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
