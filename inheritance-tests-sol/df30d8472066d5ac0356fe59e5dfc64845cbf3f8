pragma solidity >=0.0;
interface C1BBBBBBBBBB {
	function f0() external view returns (uint);
}
interface C1BBBBBBBBB is C1BBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C1BBBBBBBBBBB is C1BBBBBBBBBB {
	function f1() external view returns (uint);
}
interface C1BBBBBBBB is C1BBBBBBBBB, C1BBBBBBBBBBB {
	function f0() override(C1BBBBBBBBB, C1BBBBBBBBBB)
	external view returns (uint);
}
contract C1BBBBBBB is C1BBBBBBBB {
	function f0() external view
	override
	returns (uint)
	{
		return 564586691;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 192302371;
	}
}
contract C1BBBBBB is C1BBBBBBB {
}
contract C1BBBBB is C1BBBBBB {
}
contract C1BBBB is C1BBBBB {
}
contract C1BBB is C1BBBB {
}
contract C1BB is C1BBB {
}
contract C1B is C1BB {
}
contract C1 is C1B {
}
interface C2BBBBBBBBBB {
	function f0() external view returns (uint);
}
interface C2BBBBBBBBB is C2BBBBBBBBBB {
}
interface C2BBBBBBBBBBB is C2BBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface C2BBBBBBBB is C2BBBBBBBBB, C2BBBBBBBBBBB {
	function f0() override(C2BBBBBBBBBB, C2BBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
contract C2BBBBBBB is C2BBBBBBBB {
	function f0() external view
	override
	returns (uint)
	{
		return 2064876628;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1842513780;
	}
}
contract C2BBBBBB is C2BBBBBBB {
}
contract C2BBBBB is C2BBBBBB {
	function f1() external view
	override
	returns (uint)
	{
		return 1105724094;
	}
}
contract C2BBBB is C2BBBBB {
}
contract C2BBB is C2BBBB {
}
contract C2BB is C2BBB {
}
contract C2B is C2BB {
}
contract C2 is C2B {
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
