pragma solidity >=0.0;
library L0 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
interface C1BB {
	function f0() external payable returns (uint);
}
interface C1B is C1BB {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
contract C1 is C1B {
	function f0() external payable
	override
	returns (uint)
	{
		return 213625770;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 908951446;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 213625770)
				return 1;
			if (tc0.f1() != 908951446)
				return 2;
			return 0;
	}
}
