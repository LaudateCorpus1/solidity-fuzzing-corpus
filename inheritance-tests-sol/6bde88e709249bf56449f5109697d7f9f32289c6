pragma solidity >=0.0;
contract C0BB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 815322660;
	}
}
contract C0B is C0BB {
	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1643527725;
	}
}
abstract contract C0 is C0B {
}
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
interface I2BBB {
	function f0() external payable returns (uint);
}
interface I2BB is I2BBB {
	function f1() external payable returns (uint);
}
interface I2B is I2BB {
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I2BBBBB {
	function f0() external payable returns (uint);
}
interface I2BBBB is I2B, I2BBBBB {
	function f0() override(I2BBB, I2BBBBB)
	external payable returns (uint);
	function f2() override
	external view returns (uint);
}
interface I2 is I2B, I2BBBB {
	function f0() override(I2BBB, I2BBBB)
	external payable returns (uint);
	function f2() override(I2B, I2BBBB)
	external view returns (uint);
}
library L3 {
	function f0(uint) public view returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public view returns (uint)
	{
		return 1714636915;
	}
}
interface I5 {
	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface C6BB {
	function f0() external view returns (uint);
}
interface C6B is C6BB {
	function f0() override
	external view returns (uint);
}
contract C6 is C6B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1394976591;
	}
}
library L8 {
	function f0(uint) public view returns (uint)
	{
		return 1649760492;
	}
	function f1(uint) public view returns (uint)
	{
		return 596516649;
	}
}
interface I9BBB {
	function f0() external payable returns (uint);
}
interface I9BB is I9BBB {
	function f1() external payable returns (uint);
}
interface I9B is I9BB {
	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I9BBBBB {
	function f0() external payable returns (uint);
}
interface I9BBBB is I9BB, I9BBBBB {
	function f0() override(I9BBB, I9BBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I9 is I9B, I9BBBB {
	function f0() override(I9B, I9BBBB)
	external payable returns (uint);
	function f1() override(I9BB, I9BBBB)
	external payable returns (uint);
}
interface I10B {
	function f0() external payable returns (uint);
}
interface I10 is I10B {
}
library L11 {
	function f0(uint) public view returns (uint)
	{
		return 1025202362;
	}
	function f1(uint) public view returns (uint)
	{
		return 1350490027;
	}
}
library L12 {
	function f0(uint) internal view returns (uint)
	{
		return 783368690;
	}
}
interface I13 {
	function f0() external view returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C0B tc0 = new C0B();
			if (tc0.f0() != 1643527725)
				return 1;
			C0BB tc1 = new C0BB();
			if (tc1.f0() != 815322660)
				return 2;
			C6 tc2 = new C6();
			if (tc2.f0() != 1394976591)
				return 3;
			return 0;
	}
}
