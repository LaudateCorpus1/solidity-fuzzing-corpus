
pragma solidity >=0.0;



contract C0 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 48271;
	}
}




interface I3BBB {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I3BB is I3BBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I3B is I3BB {

}


interface I3BBBBB {

	function f0() external payable returns (uint);
}
interface I3BBBB is I3BB, I3BBBBB {

	function f0() override(I3BB, I3BBBBB)
	external payable returns (uint);
}
interface I3 is I3B, I3BBBB {

	function f0() override(I3BB, I3BBBB)
	external payable returns (uint);
}
library L4 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}




contract C5BBB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1203428207;
	}
}
contract C5BB is C5BBB {

}
contract C5B is C5BB {

}
contract C5 is C5B {

	function f1() virtual public payable
	
	returns (uint)
	{
		return 2136927794;
	}
}



interface I6BB {

	function f0() external view returns (uint);
}
interface I6B is I6BB {

}
interface I6 is I6B {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
library L7 {

	function f0(uint) public view returns (uint)
	{
		return 1681692777;
	}
}



interface I8BB {

	function f0() external view returns (uint);
}
interface I8B is I8BB {

	function f0() override
	external view returns (uint);
}
interface I8 is I8B {

	function f1() external pure returns (uint);
}



interface I9BB {

	function f0() external view returns (uint);
}
interface I9B is I9BB {

	function f0() override
	external view returns (uint);
}
interface I9 is I9B {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}



interface C10BB {

	function f0() external payable returns (uint);
}
interface C10B is C10BB {

}
contract C10 is C10B {

	function f0() external payable
	override
	returns (uint)
	{
		return 890442452;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 662405787;
	}
}



interface I12BB {

	function f0() external view returns (uint);
}
interface I12B is I12BB {

	function f0() override
	external view returns (uint);
}
interface I12 is I12B {

	function f1() external pure returns (uint);
}



interface I13BB {

	function f0() external view returns (uint);
}
interface I13B is I13BB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I13 is I13B {

}


contract C {
	using L4 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}

