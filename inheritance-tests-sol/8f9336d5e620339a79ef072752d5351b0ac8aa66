pragma solidity >=0.0;
abstract contract C0BB {
}
contract C0B is C0BB {
	function f0() external pure
	
	returns (uint)
	{
		return 1013832414;
	}
}
abstract contract C0 is C0B {
	function f1() virtual public payable
	
	returns (uint);
}
interface C1BBB {
	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface C1BB is C1BBB {
}
contract C1B is C1BB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 2121029882;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1230473153;
	}
}
contract C1 is C1B {
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1217177185;
	}
}
contract C2B {
	function f0() public view
	
	returns (uint)
	{
		return 1354798862;
	}
}
contract C2 is C2B {
}
interface C4BB {
	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface C4B is C4BB {
}
contract C4 is C4B {
	function f0() external view
	override
	returns (uint)
	{
		return 1642509111;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 963841050;
	}
	function f2() virtual public pure
	
	returns (uint)
	{
		return 338112295;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
