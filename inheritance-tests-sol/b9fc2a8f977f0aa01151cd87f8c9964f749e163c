
pragma solidity >=0.0;


library L2 {

	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
library L4 {

	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
library L5 {

	function f0(uint) internal view returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
library L6 {

	function f0(uint) internal view returns (uint)
	{
		return 424238335;
	}
	function f1(uint) public view returns (uint)
	{
		return 719885386;
	}
}




interface C7BBB {

	function f0() external payable returns (uint);
}
interface C7BB is C7BBB {

}
abstract contract C7B is C7BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 2075782095;
	}
}


abstract contract C7BBBBB {

}
contract C7BBBB is C7B, C7BBBBB {

}
contract C7 is C7B, C7BBBB {

	function f1() virtual public pure
	
	returns (uint)
	{
		return 1931656580;
	}
}
library L8 {

	function f0(uint) public pure returns (uint)
	{
		return 596516649;
	}
}

contract C9 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1936030137;
	}
}
library L11 {

	function f0(uint) public pure returns (uint)
	{
		return 1025202362;
	}
}




interface C12BBB {

	function f0() external payable returns (uint);
}
interface C12BB is C12BBB {

}
abstract contract C12B is C12BB {

	function f0() virtual external payable
	override
	returns (uint);
}


abstract contract C12BBBBB {

}
contract C12BBBB is C12BB, C12BBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1287522347;
	}
}
contract C12 is C12B, C12BBBB {

	function f0() virtual external payable
	override(C12BBBB, C12B)
	returns (uint)
	{
		return 1659675143;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 153892771;
	}
}

contract C14 {

	function f0() public view
	
	returns (uint)
	{
		return 480194461;
	}
}


contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1957747793)
			return 1;
		return 0;
	}
}

