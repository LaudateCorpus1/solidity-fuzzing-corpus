
pragma solidity >=0.0;




interface I0B {

	function f0() external view returns (uint);
}
interface I0 is I0B {

	function f0() override
	external view returns (uint);
}


interface I1B {

	function f0() external view returns (uint);
}
interface I1 is I1B {

	function f0() override
	external view returns (uint);
}
library L2 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}



abstract contract C3BB {

}

abstract contract C3BBB is C3BB {

}

abstract contract C3BBBB is C3BB {

}



abstract contract C3BBBBBBB {

}

abstract contract C3BBBBBBBB is C3BBBBBBB {

}

abstract contract C3BBBBBBBBB is C3BBBBBBBB {

}


contract C3BBBBBBBBBBB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 223870541;
	}
}
contract C3BBBBBBBBBB is C3BBBBBBBB, C3BBBBBBBBBBB {

}

abstract contract C3BBBBBBBBBBBB is C3BBBBBBB {

}

abstract contract C3BBBBBBBBBBBBB is C3BBBBBBBB {

}
abstract contract C3BBBBBB is C3BBBBBBB, C3BBBBBBBB, C3BBBBBBBBB, C3BBBBBBBBBB, C3BBBBBBBBBBBB, C3BBBBBBBBBBBBB {

}

abstract contract C3BBBBBBBBBBBBBB is C3BBBBBBBBBBBB {

}

abstract contract C3BBBBBBBBBBBBBBB is C3BBBBBBBBBBBBBB {

}

abstract contract C3BBBBBBBBBBBBBBBB is C3BBBBBBBBBBBB {

}

abstract contract C3BBBBBBBBBBBBBBBBB is C3BBBBBBBBBBBBBB {

}
abstract contract C3BBBBB is C3BB, C3BBBBBB, C3BBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBB {

	function f0() public pure
	override
	returns (uint)
	{
		return 1325416955;
	}
}
abstract contract C3B is C3BB, C3BBB, C3BBBB, C3BBBBB {

}

abstract contract C3BBBBBBBBBBBBBBBBBB is C3BBBBB {

}

abstract contract C3BBBBBBBBBBBBBBBBBBB is C3BBBBB {

}

abstract contract C3BBBBBBBBBBBBBBBBBBBB is C3BBBBBBBBBBBBBBBBBBB {

}

abstract contract C3BBBBBBBBBBBBBBBBBBBBB is C3BBBBBBBBBBBBBBBBBBB {

}
abstract contract C3 is C3B, C3BBBBBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBBB {

}


contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

