pragma solidity >=0.0;
interface I0B {
	function f0() external payable returns (uint);
}
interface I0 is I0B {
}
interface C1BBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C1BBB is C1BBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface C1BB is C1BBB {
}
interface C1B is C1BB {
}
contract C1 is C1B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1203428207;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1738531149;
	}
}
interface C2BBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C2BBB is C2BBBB {
}
interface C2BB is C2BBB {
	function f0() override
	external payable returns (uint);
}
interface C2B is C2BB {
	function f0() override
	external payable returns (uint);
}
contract C2 is C2B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1936030137;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 353718330;
	}
}
contract C3 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1842513780;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
