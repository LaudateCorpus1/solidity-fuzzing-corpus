pragma solidity >=0.0;
interface I0BBB {
	function f0() external view returns (uint);
}
interface I0BB is I0BBB {
}
interface I0B is I0BB {
	function f0() override
	external view returns (uint);
}
interface I0 is I0B {
	function f1() external view returns (uint);
}
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
contract C2 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 407355683;
	}
}
library L3 {
	function f0(uint) internal view returns (uint)
	{
		return 846930886;
	}
}
library L4 {
	function f0(uint) private pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1714636915;
	}
}
interface C5B {
	function f0() external payable returns (uint);
}
contract C5 is C5B {
	function f0() external payable
	override
	returns (uint)
	{
		return 854716505;
	}
}
library L6 {
	function f0(uint) private pure returns (uint)
	{
		return 1957747793;
	}
}
library L7 {
	function f0(uint) external pure returns (uint)
	{
		return 424238335;
	}
}
library L8 {
	function f0(uint) private pure returns (uint)
	{
		return 719885386;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1649760492;
	}
}
interface I9BBBB {
	function f0() external view returns (uint);
}
interface I9BBB is I9BBBB {
}
interface I9BB is I9BBB {
}
interface I9B is I9BB {
}
interface I9BBBBB is I9BB {
	function f1() external payable returns (uint);
}
interface I9BBBBBBBBB {
	function f0() external view returns (uint);
}
interface I9BBBBBBBB is I9BBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I9BBBBBBB is I9BBBBBBBB {
}
interface I9BBBBBB is I9BB, I9BBBBBBB {
	function f0() override(I9BBBB, I9BBBBBBBB)
	external view returns (uint);
}
interface I9BBBBBBBBBB is I9BBBBB {
	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I9 is I9B, I9BBBBB, I9BBBBBB, I9BBBBBBBBBB {
	function f0() override(I9BBBB, I9BBBBBB, I9BBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
interface I11BBB {
	function f0() external view returns (uint);
}
interface I11BB is I11BBB {
}
interface I11B is I11BB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I11 is I11B {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
library L12 {
	function f0(uint) private pure returns (uint)
	{
		return 1350490027;
	}
}
library L13 {
	function f0(uint) internal pure returns (uint)
	{
		return 783368690;
	}
}
interface I14B {
}
interface I14BB is I14B {
}
interface I14 is I14B, I14BB {
	function f0() external view returns (uint);
}
library L15 {
	function f0(uint) private pure returns (uint)
	{
		return 2044897763;
	}
}
library L16 {
	function f0(uint) internal pure returns (uint)
	{
		return 1967513926;
	}
}
contract C {
	using L7 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 424238335)
			return 1;
		return 0;
	}
}
