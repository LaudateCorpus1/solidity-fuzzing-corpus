
pragma solidity >=0.0;








interface I0BBBBB {

	function f0() external view returns (uint);
}
interface I0BBBB is I0BBBBB {

}
interface I0BBB is I0BBBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I0BB is I0BBB {

}
interface I0B is I0BB {

}
interface I0 is I0B {

}




interface I1BBB {

	function f0() external view returns (uint);
}
interface I1BB is I1BBB {

}

interface I1BBBB is I1BBB {

	function f1() external payable returns (uint);
}
interface I1B is I1BB, I1BBBB {

	function f1() override
	external payable returns (uint);
}
interface I1 is I1B {

	function f1() override
	external payable returns (uint);
}


interface I2B {

}
interface I2 is I2B {

}

interface I3 {

	function f0() external payable returns (uint);
}


interface I4B {

	function f0() external payable returns (uint);
}
interface I4 is I4B {

	function f1() external payable returns (uint);
}





interface C5BBBB {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C5BBB is C5BBBB {

	function f0() override
	external payable returns (uint);
}
interface C5BB is C5BBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface C5B is C5BB {

}
contract C5 is C5B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 662405787;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 849178936;
	}
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

