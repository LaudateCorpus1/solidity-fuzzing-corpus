
pragma solidity >=0.0;


library L0 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) external pure returns (uint)
	{
		return 1681692777;
	}
}




interface I2BBB {

	function f0() external payable returns (uint);
}
interface I2BB is I2BBB {

	function f0() override
	external payable returns (uint);
}
interface I2B is I2BB {

}
interface I2 is I2B {

}
library L3 {

	function f0(uint) private pure returns (uint)
	{
		return 1714636915;
	}
}



interface C4BB {

	function f0() external view returns (uint);
}
interface C4B is C4BB {

}
contract C4 is C4B {

	function f0() external view
	override
	returns (uint)
	{
		return 1596680831;
	}
}


contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f2() != 1681692777)
			return 1;
		return 0;
	}
}

