pragma solidity >=0.0;
interface I0 {
	function f0() external view returns (uint);
}
interface I1BBB {
	function f0() external view returns (uint);
}
interface I1BB is I1BBB {
}
interface I1B is I1BB {
	function f0() override
	external view returns (uint);
}
interface I1 is I1B {
}
interface I2BBB {
	function f0() external view returns (uint);
}
interface I2BB is I2BBB {
}
interface I2B is I2BB {
}
interface I2 is I2B {
}
contract C3B {
}
interface C3BBBB {
	function f0() external payable returns (uint);
}
interface C3BBB is C3BBBB {
}
contract C3BB is C3B, C3BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1738531149;
	}
}
contract C3 is C3B, C3BB {
}
interface C4B {
}
contract C4BBB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1098894339;
	}
}
contract C4BB is C4B, C4BBB {
}
contract C4BBBBB {
}
contract C4BBBB is C4B, C4BBBBB {
}
contract C4BBBBBBB {
}
contract C4BBBBBB is C4B, C4BBBBBBB {
}
contract C4 is C4B, C4BB, C4BBBB, C4BBBBBB {
	function f0() public pure
	override
	returns (uint)
	{
		return 1931656580;
	}
}
contract C5BB {
}
contract C5BBBB {
}
abstract contract C5BBBBB is C5BBBB {
}
contract C5BBB is C5BB, C5BBBB, C5BBBBB {
}
contract C5B is C5BB, C5BBB {
}
interface C5BBBBBBB {
	function f0() external view returns (uint);
}
interface C5BBBBBB is C5BBBBBBB {
	function f0() override
	external view returns (uint);
}
contract C5BBBBBBBBBB {
}
contract C5BBBBBBBBBBBB {
}
abstract contract C5BBBBBBBBBBBBB is C5BBBBBBBBBBBB {
}
contract C5BBBBBBBBBBB is C5BBBBBBBBBB, C5BBBBBBBBBBBB, C5BBBBBBBBBBBBB {
}
contract C5BBBBBBBBB is C5BBBBBBBBBB, C5BBBBBBBBBBB {
}
contract C5BBBBBBBBBBBBBB is C5BBBBBBBBB {
}
contract C5BBBBBBBB is C5B, C5BBBBBBBBB, C5BBBBBBBBBBBBBB {
}
contract C5BBBBBBBBBBBBBBB is C5BB {
}
contract C5 is C5B, C5BBBBBB, C5BBBBBBBB, C5BBBBBBBBBBBBBBB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1696049367;
	}
}
interface I6B {
	function f0() external payable returns (uint);
}
interface I6BB is I6B {
	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface I6 is I6B, I6BB {
	function f0() override(I6B, I6BB)
	external payable returns (uint);
}
library L8 {
	function f0(uint) external pure returns (uint)
	{
		return 1102520059;
	}
}
library L9 {
	function f0(uint) external pure returns (uint)
	{
		return 2044897763;
	}
}
library L10 {
	function f0(uint) external pure returns (uint)
	{
		return 1967513926;
	}
}
library L11 {
	function f0(uint) external pure returns (uint)
	{
		return 1365180540;
	}
}
contract C {
	using L9 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 2044897763)
			return 1;
		return 0;
	}
}
