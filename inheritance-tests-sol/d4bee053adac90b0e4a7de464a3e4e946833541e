
pragma solidity >=0.0;








interface C1BBBBB {

	function f0() external view returns (uint);
}
interface C1BBBB is C1BBBBB {

}
interface C1BBB is C1BBBB {

	function f0() override
	external view returns (uint);
}
interface C1BB is C1BBB {

}
contract C1B is C1BB {

	function f0() external view
	override
	returns (uint)
	{
		return 1931656580;
	}
}

abstract contract C1BBBBBB is C1B {

	function f1() virtual external pure
	
	returns (uint);
}
contract C1 is C1B, C1BBBBBB {

	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1947433875;
	}
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1931656580)
				return 1;
			if (tc0.f1() != 1947433875)
				return 2;
			C1B tc1 = new C1B();
			if (tc1.f0() != 1931656580)
				return 3;
			return 0;
	}
}

