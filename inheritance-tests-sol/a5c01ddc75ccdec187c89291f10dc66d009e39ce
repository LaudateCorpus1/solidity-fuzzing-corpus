pragma solidity >=0.0;
interface I0BB {
	function f0() external payable returns (uint);
}
interface I0B is I0BB {
}
interface I0 is I0B {
	function f0() override
	external payable returns (uint);
}
interface I2B {
	function f0() external view returns (uint);
}
interface I2 is I2B {
}
library L5 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public view returns (uint)
	{
		return 846930886;
	}
}
library L6 {
	function f0(uint) internal view returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) private view returns (uint)
	{
		return 1714636915;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1957747793;
	}
	function f3(uint) private pure returns (uint)
	{
		return 424238335;
	}
}
library L7 {
	function f0(uint) internal pure returns (uint)
	{
		return 719885386;
	}
	function f1(uint) public view returns (uint)
	{
		return 1649760492;
	}
}
interface I8B {
	function f0() external payable returns (uint);
}
interface I8BB is I8B {
	function f1() external view returns (uint);
}
interface I8 is I8B, I8BB {
}
interface I9BB {
	function f0() external payable returns (uint);
}
interface I9B is I9BB {
}
interface I9 is I9B {
}
library L10 {
	function f0(uint) internal pure returns (uint)
	{
		return 1189641421;
	}
	function f1(uint) public view returns (uint)
	{
		return 1025202362;
	}
}
interface I11 {
	function f0() external payable returns (uint);
}
contract C13 {
	function f0() public pure
	
	returns (uint)
	{
		return 849178936;
	}
}
interface I14B {
}
interface I14 is I14B {
}
interface I15B {
	function f0() external view returns (uint);
}
interface I15 is I15B {
}
interface I17B {
	function f0() external payable returns (uint);
}
interface I17 is I17B {
}
interface I20B {
	function f0() external view returns (uint);
}
interface I20 is I20B {
}
contract C {
	using L7 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1649760492)
			return 1;
		return 0;
	}
}
