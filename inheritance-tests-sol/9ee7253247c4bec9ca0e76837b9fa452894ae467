pragma solidity >=0.0;
library L0 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) external pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}
interface I2B {
	function f0() external view returns (uint);
}
interface I2 is I2B {
	function f0() override
	external view returns (uint);
}
library L3 {
	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
}
library L4 {
	function f0(uint) public view returns (uint)
	{
		return 1649760492;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 596516649;
	}
}
interface C5BBBB {
	function f0() external payable returns (uint);
}
interface C5BBB is C5BBBB {
	function f0() override
	external payable returns (uint);
}
interface C5BB is C5BBB {
	function f0() override
	external payable returns (uint);
}
interface C5B is C5BB {
	function f0() override
	external payable returns (uint);
}
contract C5 is C5B {
	function f0() external payable
	override
	returns (uint)
	{
		return 189733958;
	}
}
library L6 {
	function f0(uint) external pure returns (uint)
	{
		return 1189641421;
	}
}
abstract contract C7B {
}
interface C7BBBBBB {
	function f0() external view returns (uint);
}
interface C7BBBBB is C7BBBBBB {
}
interface C7BBBB is C7BBBBB {
	function f0() override
	external view returns (uint);
}
interface C7BBB is C7BBBB {
}
contract C7BB is C7B, C7BBB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 759111109;
	}
}
contract C7 is C7B, C7BB {
	function f0() external view
	override
	returns (uint)
	{
		return 724861258;
	}
}
interface C8BBBBBB {
	function f0() external view returns (uint);
}
interface C8BBBBB is C8BBBBBB {
}
interface C8BBBB is C8BBBBB {
}
interface C8BBB is C8BBBB {
}
interface C8BB is C8BBB {
	function f1() external view returns (uint);
}
contract C8B is C8BB {
	function f0() external view
	override
	returns (uint)
	{
		return 2049075008;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 878219050;
	}
}
contract C8 is C8B {
	function f1() external view
	override
	returns (uint)
	{
		return 1551255674;
	}
}
contract C9 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 55352411;
	}
}
library L10 {
	function f0(uint) public pure returns (uint)
	{
		return 1350490027;
	}
	function f1(uint) internal view returns (uint)
	{
		return 783368690;
	}
}
interface C12B {
	function f0() external view returns (uint);
}
contract C12 is C12B {
	function f0() external view
	override
	returns (uint)
	{
		return 1214295694;
	}
}
interface C13BBBBB {
	function f0() external view returns (uint);
}
interface C13BBBB is C13BBBBB {
	function f0() override
	external view returns (uint);
}
interface C13BBB is C13BBBB {
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface C13BB is C13BBB {
	function f0() override
	external view returns (uint);
}
interface C13B is C13BB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
contract C13 is C13B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 88703659;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 800493463;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1465104029;
	}
}
interface I14BBB {
	function f0() external payable returns (uint);
}
interface I14BB is I14BBB {
	function f1() external payable returns (uint);
}
interface I14B is I14BB {
	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I14BBBBBBB {
	function f0() external payable returns (uint);
}
interface I14BBBBBB is I14BBBBBBB {
	function f1() external payable returns (uint);
}
interface I14BBBBB is I14BBBBBB {
	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I14BBBBBBBBB {
	function f0() external payable returns (uint);
}
interface I14BBBBBBBB is I14BBBBBB, I14BBBBBBBBB {
	function f0() override(I14BBBBBBB, I14BBBBBBBBB)
	external payable returns (uint);
}
interface I14BBBB is I14BB, I14BBBBB, I14BBBBBBBB {
	function f0() override(I14BBB, I14BBBBB, I14BBBBBBBB)
	external payable returns (uint);
	function f1() override(I14BB, I14BBBBBB)
	external payable returns (uint);
}
interface I14BBBBBBBBBB is I14BBBB {
	function f2() override
	external view returns (uint);
	function f3() external payable returns (uint);
}
interface I14 is I14B, I14BBBB, I14BBBBBBBBBB {
	function f0() override(I14B, I14BBBB)
	external payable returns (uint);
	function f1() override(I14BB, I14BBBB)
	external payable returns (uint);
	function f2() override(I14B, I14BBBBB, I14BBBBBBBBBB)
	external view returns (uint);
	function f3() override
	external payable returns (uint);
}
contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 719885386)
			return 1;
		return 0;
	}
}
