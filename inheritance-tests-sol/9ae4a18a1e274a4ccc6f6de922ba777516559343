pragma solidity >=0.0;
contract C0B {
	function f0() public view
	
	returns (uint)
	{
		return 48271;
	}
}
contract C0 is C0B {
}
interface I1BB {
	function f0() external payable returns (uint);
}
interface I1B is I1BB {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I1 is I1B {
}
interface I2B {
}
interface I2 is I2B {
}
library L3 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public view returns (uint)
	{
		return 846930886;
	}
}
interface I4B {
}
interface I4BB is I4B {
	function f0() external view returns (uint);
}
interface I4 is I4B, I4BB {
}
contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 846930886)
			return 1;
		return 0;
	}
}
