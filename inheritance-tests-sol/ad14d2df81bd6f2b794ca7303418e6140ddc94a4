pragma solidity >=0.0;
interface I3BBBBBBBBB {
	function f0() external payable returns (uint);
}
interface I3BBBBBBBB is I3BBBBBBBBB {
}
interface I3BBBBBBB is I3BBBBBBBB {
}
interface I3BBBBBB is I3BBBBBBB {
}
interface I3BBBBB is I3BBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I3BBBB is I3BBBBB {
}
interface I3BBB is I3BBBB {
}
interface I3BB is I3BBB {
}
interface I3B is I3BB {
	function f0() override
	external payable returns (uint);
}
interface I3BBBBBBBBBB is I3BB {
	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface I3BBBBBBBBBBB is I3BB {
}
interface I3 is I3B, I3BBBBBBBBBB, I3BBBBBBBBBBB {
	function f0() override(I3B, I3BBBBBBBBBB, I3BBBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface I4B {
	function f0() external view returns (uint);
}
interface I4BB is I4B {
}
interface I4 is I4B, I4BB {
	function f0() override
	external view returns (uint);
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
