pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private view returns (uint)
	{
		return 846930886;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}
library L1 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) private view returns (uint)
	{
		return 1957747793;
	}
	function f2(uint) internal view returns (uint)
	{
		return 424238335;
	}
}
interface I2 {
	function f0() external payable returns (uint);
}
interface C4BBBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C4BBBBBBBB is C4BBBBBBBBB {
}
interface C4BBBBBBBBBB is C4BBBBBBBB {
	function f2() external payable returns (uint);
}
interface C4BBBBBBB is C4BBBBBBBB, C4BBBBBBBBBB {
	function f2() override
	external payable returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C4BBBBBB is C4BBBBBBB {
	function f0() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
}
interface C4BBBBBBBBBBB is C4BBBBBBB {
	function f3() override
	external view returns (uint);
	function f5() external view returns (uint);
}
interface C4BBBBB is C4BBBBBB, C4BBBBBBBBBBB {
	function f0() override(C4BBBBBB, C4BBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
	function f3() override(C4BBBBBB, C4BBBBBBBBBBB)
	external view returns (uint);
	function f4() override(C4BBBBBB, C4BBBBBBB)
	external view returns (uint);
	function f5() override
	external view returns (uint);
}
contract C4BBBB is C4BBBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 201068705;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 928270262;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 1814467857;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1659675143;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 412013968;
	}
	function f5() external view
	override
	returns (uint)
	{
		return 1675824860;
	}
}
contract C4BBB is C4BBBB {
	function f1() external pure
	override
	returns (uint)
	{
		return 1243696899;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 942409124;
	}
}
contract C4BB is C4BBB {
}
contract C4B is C4BB {
}
contract C4BBBBBBBBBBBB is C4BB {
}
contract C4 is C4B, C4BBBBBBBBBBBB {
}
interface I6BBB {
	function f0() external view returns (uint);
}
interface I6BB is I6BBB {
}
interface I6B is I6BB {
}
interface I6BBBB is I6B {
}
interface I6 is I6B, I6BBBB {
	function f0() override
	external view returns (uint);
}
contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}
