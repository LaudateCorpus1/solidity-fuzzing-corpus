
pragma solidity >=0.0;









interface I0BBBBBB {

}
interface I0BBBBB is I0BBBBBB {

}
interface I0BBBB is I0BBBBB {

}




interface I0BBBBBBBBBB {

}
interface I0BBBBBBBBB is I0BBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I0BBBBBBBB is I0BBBBBBBBB {

}
interface I0BBBBBBB is I0BBBBB, I0BBBBBBBB {

}
interface I0BBB is I0BBBB, I0BBBBBBB {

	function f1() external view returns (uint);
}
interface I0BB is I0BBB {

	function f2() external view returns (uint);
}
interface I0B is I0BB {

}




interface I0BBBBBBBBBBBBBB {

}
interface I0BBBBBBBBBBBBB is I0BBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I0BBBBBBBBBBBB is I0BBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I0BBBBBBBBBBB is I0B, I0BBBBBBBBBBBB {

	function f0() override(I0BBBBBBBBB, I0BBBBBBBBBBBB)
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
interface I0 is I0B, I0BBBBBBBBBBB {

	function f0() override(I0BBBBBBBBB, I0BBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override(I0BB, I0BBBBBBBBBBB)
	external view returns (uint);
	function f3() external payable returns (uint);
}







interface I1BBBBBB {

}
interface I1BBBBB is I1BBBBBB {

}
interface I1BBBB is I1BBBBB {

}




interface I1BBBBBBBBBB {

}
interface I1BBBBBBBBB is I1BBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I1BBBBBBBB is I1BBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I1BBBBBBB is I1BBBBB, I1BBBBBBBB {

}
interface I1BBB is I1BBBB, I1BBBBBBB {

	function f1() external payable returns (uint);
}
interface I1BB is I1BBB {

	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I1B is I1BB {

	function f1() override
	external payable returns (uint);
}




interface I1BBBBBBBBBBBBBB {

}
interface I1BBBBBBBBBBBBB is I1BBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I1BBBBBBBBBBBB is I1BBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I1BBBBBBBBBBB is I1BB, I1BBBBBBBBBBBB {

	function f0() override(I1BBBBBBBB, I1BBBBBBBBBBBB)
	external view returns (uint);
}
interface I1 is I1B, I1BBBBBBBBBBB {

	function f0() override(I1BBBBBBBB, I1BBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I1B, I1BB)
	external payable returns (uint);
	function f3() external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

