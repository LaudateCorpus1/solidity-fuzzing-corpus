pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
interface I1 {
	function f0() external payable returns (uint);
}
library L2 {
	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
abstract contract C3B {
}
interface C3BBBBBB {
	function f0() external view returns (uint);
}
interface C3BBBBB is C3BBBBBB {
}
interface C3BBBB is C3BBBBB {
	function f0() override
	external view returns (uint);
}
interface C3BBB is C3BBBB {
}
contract C3BB is C3B, C3BBB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1356035169;
	}
}
contract C3 is C3B, C3BB {
}
interface C4BBBBBBBB {
	function f0() external pure returns (uint);
}
interface C4BBBBBBB is C4BBBBBBBB {
}
interface C4BBBBBB is C4BBBBBBB {
	function f0() override
	external pure returns (uint);
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface C4BBBBB is C4BBBBBB {
	function f1() override
	external view returns (uint);
}
interface C4BBBBBBBBB is C4BBBBBB {
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() external view returns (uint);
}
interface C4BBBB is C4BBBBB, C4BBBBBBBBB {
	function f1() override(C4BBBBB, C4BBBBBBBBB)
	external view returns (uint);
	function f2() override(C4BBBBBB, C4BBBBBBBBB)
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
contract C4BBB is C4BBBB {
	function f0() external pure
	override
	returns (uint)
	{
		return 921256890;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1389449997;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 445221226;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 552862047;
	}
}
contract C4BB is C4BBB {
}
contract C4B is C4BB {
	function f2() external view
	override
	returns (uint)
	{
		return 1174276176;
	}
}
contract C4 is C4B {
}
interface C5BBBBBB {
	function f0() external view returns (uint);
}
interface C5BBBBB is C5BBBBBB {
}
interface C5BBBB is C5BBBBB {
	function f0() override
	external view returns (uint);
}
interface C5BBB is C5BBBB {
}
contract C5BB is C5BBB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1313839054;
	}
}
contract C5B is C5BB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1735915146;
	}
}
contract C5 is C5B {
	function f0() external view
	override
	returns (uint)
	{
		return 471204562;
	}
}
interface I6BBB {
	function f0() external payable returns (uint);
}
interface I6BB is I6BBB {
	function f1() external payable returns (uint);
}
interface I6B is I6BB {
	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I6BBBBB {
	function f0() external payable returns (uint);
}
interface I6BBBB is I6BB, I6BBBBB {
	function f0() override(I6BBB, I6BBBBB)
	external payable returns (uint);
}
interface I6BBBBBB is I6BBBBB {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I6 is I6B, I6BBBB, I6BBBBBB {
	function f0() override(I6B, I6BBBB, I6BBBBBB)
	external payable returns (uint);
	function f1() override(I6BB, I6BBBBBB)
	external payable returns (uint);
}
library L7 {
	function f0(uint) internal pure returns (uint)
	{
		return 719885386;
	}
}
interface I8BB {
	function f0() external view returns (uint);
}
interface I8B is I8BB {
	function f1() external payable returns (uint);
}
interface I8 is I8B {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I9BBB {
	function f0() external payable returns (uint);
}
interface I9BB is I9BBB {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I9B is I9BB {
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I9BBBBB {
	function f0() external payable returns (uint);
}
interface I9BBBB is I9B, I9BBBBB {
	function f0() override(I9BB, I9BBBBB)
	external payable returns (uint);
	function f2() override
	external view returns (uint);
}
interface I9 is I9B, I9BBBB {
	function f0() override(I9BB, I9BBBB)
	external payable returns (uint);
	function f2() override(I9B, I9BBBB)
	external view returns (uint);
}
contract C10 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 2102973128;
	}
}
interface I11BBB {
	function f0() external payable returns (uint);
}
interface I11BB is I11BBB {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I11B is I11BB {
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I11BBBBB {
	function f0() external payable returns (uint);
}
interface I11BBBB is I11BB, I11BBBBB {
	function f0() override(I11BB, I11BBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I11 is I11B, I11BBBB {
	function f0() override(I11BB, I11BBBB)
	external payable returns (uint);
	function f1() override(I11B, I11BBBB)
	external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C10 tc0 = new C10();
			if (tc0.f0() != 2102973128)
				return 1;
			C3 tc1 = new C3();
			if (tc1.f0() != 1356035169)
				return 2;
			C3BB tc2 = new C3BB();
			if (tc2.f0() != 1356035169)
				return 3;
			C4 tc3 = new C4();
			if (tc3.f0() != 921256890)
				return 4;
			if (tc3.f1() != 1389449997)
				return 5;
			if (tc3.f2() != 1174276176)
				return 6;
			if (tc3.f3() != 552862047)
				return 7;
			C4B tc4 = new C4B();
			if (tc4.f0() != 921256890)
				return 8;
			if (tc4.f1() != 1389449997)
				return 9;
			if (tc4.f2() != 1174276176)
				return 10;
			if (tc4.f3() != 552862047)
				return 11;
			C4BB tc5 = new C4BB();
			if (tc5.f0() != 921256890)
				return 12;
			if (tc5.f1() != 1389449997)
				return 13;
			if (tc5.f2() != 445221226)
				return 14;
			if (tc5.f3() != 552862047)
				return 15;
			C4BBB tc6 = new C4BBB();
			if (tc6.f0() != 921256890)
				return 16;
			if (tc6.f1() != 1389449997)
				return 17;
			if (tc6.f2() != 445221226)
				return 18;
			if (tc6.f3() != 552862047)
				return 19;
			C5 tc7 = new C5();
			if (tc7.f0() != 471204562)
				return 20;
			C5B tc8 = new C5B();
			if (tc8.f0() != 1735915146)
				return 21;
			C5BB tc9 = new C5BB();
			if (tc9.f0() != 1313839054)
				return 22;
			return 0;
	}
}
