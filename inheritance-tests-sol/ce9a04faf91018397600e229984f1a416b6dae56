pragma solidity >=0.0;
library L0 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) external view returns (uint)
	{
		return 846930886;
	}
}
contract C1BBB {
	function f0() external pure
	
	returns (uint)
	{
		return 182605794;
	}
}
contract C1BB is C1BBB {
}
abstract contract C1B is C1BB {
}
contract C1 is C1B {
}
interface I2BBBB {
	function f0() external view returns (uint);
}
interface I2BBB is I2BBBB {
	function f1() external payable returns (uint);
}
interface I2BBBBB is I2BBBB {
	function f1() external payable returns (uint);
}
interface I2BB is I2BBB, I2BBBBB {
	function f1() override(I2BBB, I2BBBBB)
	external payable returns (uint);
}
interface I2B is I2BB {
	function f2() external payable returns (uint);
}
interface I2BBBBBBB {
	function f0() external view returns (uint);
}
interface I2BBBBBB is I2BB, I2BBBBBBB {
	function f0() override(I2BBBB, I2BBBBBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I2 is I2B, I2BBBBBB {
	function f0() override(I2BBBB, I2BBBBBB)
	external view returns (uint);
	function f2() override(I2B, I2BBBBBB)
	external payable returns (uint);
}
contract C3BBB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1882556969;
	}
}
contract C3BB is C3BBB {
	function f0() public pure
	override
	returns (uint)
	{
		return 2075782095;
	}
}
contract C3B is C3BB {
}
contract C3 is C3B {
}
library L4 {
	function f0(uint) public pure returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) private pure returns (uint)
	{
		return 424238335;
	}
	function f2(uint) internal view returns (uint)
	{
		return 719885386;
	}
}
library L5 {
	function f0(uint) external pure returns (uint)
	{
		return 1649760492;
	}
}
library L6 {
	function f0(uint) public pure returns (uint)
	{
		return 596516649;
	}
}
interface I7BBBB {
	function f0() external view returns (uint);
}
interface I7BBB is I7BBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I7BBBBB is I7BBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I7BB is I7BBB, I7BBBBB {
	function f0() override(I7BBB, I7BBBBB)
	external view returns (uint);
	function f1() override(I7BBB, I7BBBBB)
	external payable returns (uint);
}
interface I7B is I7BB {
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface I7BBBBBBB {
	function f0() external view returns (uint);
}
interface I7BBBBBB is I7B, I7BBBBBBB {
	function f0() override(I7BB, I7BBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() external payable returns (uint);
}
interface I7 is I7B, I7BBBBBB {
	function f0() override(I7BB, I7BBBBBB)
	external view returns (uint);
	function f1() override(I7B, I7BBBBBB)
	external payable returns (uint);
	function f2() override(I7B, I7BBBBBB)
	external payable returns (uint);
	function f3() override
	external payable returns (uint);
}
interface C8BB {
	function f0() external payable returns (uint);
}
interface C8B is C8BB {
}
contract C8 is C8B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1308858262;
	}
	function f1() public view
	
	returns (uint)
	{
		return 928270262;
	}
	function f2() public pure
	
	returns (uint)
	{
		return 1287522347;
	}
}
library L9 {
	function f0(uint) public pure returns (uint)
	{
		return 1350490027;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 182605794)
				return 1;
			C1BB tc1 = new C1BB();
			if (tc1.f0() != 182605794)
				return 2;
			C1BBB tc2 = new C1BBB();
			if (tc2.f0() != 182605794)
				return 3;
			C3 tc3 = new C3();
			if (tc3.f0() != 2075782095)
				return 4;
			C3B tc4 = new C3B();
			if (tc4.f0() != 2075782095)
				return 5;
			C3BB tc5 = new C3BB();
			if (tc5.f0() != 2075782095)
				return 6;
			C3BBB tc6 = new C3BBB();
			if (tc6.f0() != 1882556969)
				return 7;
			C8 tc7 = new C8();
			if (tc7.f0() != 1308858262)
				return 8;
			if (tc7.f1() != 928270262)
				return 9;
			if (tc7.f2() != 1287522347)
				return 10;
			return 0;
	}
}
