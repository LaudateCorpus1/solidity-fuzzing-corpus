pragma solidity >=0.0;
interface C0BBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB {
}
interface C0BBBBBB is C0BBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C0BBBBB is C0BBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
}
interface C0BBBBBBBBB is C0BBBBBB {
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface C0BBBB is C0BBBBB, C0BBBBBBBBB {
	function f0() override(C0BBBBB, C0BBBBBB)
	external payable returns (uint);
	function f1() override(C0BBBBB, C0BBBBBB)
	external pure returns (uint);
	function f2() override(C0BBBBBB, C0BBBBBBBBB)
	external view returns (uint);
	function f3() override(C0BBBBBB, C0BBBBBBBBB)
	external view returns (uint);
	function f4() override
	external view returns (uint);
}
contract C0BBB is C0BBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 2111632871;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1531210416;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1774893867;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1032438314;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 921256890;
	}
}
contract C0BB is C0BBB {
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1404944717;
	}
}
contract C0B is C0BB {
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1709834337;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 464135131;
	}
}
contract C0 is C0B {
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1903579395;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
