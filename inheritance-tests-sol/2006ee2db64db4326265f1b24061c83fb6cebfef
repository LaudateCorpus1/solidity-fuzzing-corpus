pragma solidity >=0.0;
abstract contract C0BB {
}
contract C0B is C0BB {
}
interface C0BBBBB {
	function f0() external payable returns (uint);
}
interface C0BBBB is C0BBBBB {
	function f0() override
	external payable returns (uint);
}
interface C0BBB is C0BBBB {
}
contract C0 is C0B, C0BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1105902161;
	}
}
interface I1BB {
	function f0() external view returns (uint);
}
interface I1B is I1BB {
	function f1() external payable returns (uint);
}
interface I1 is I1B {
}
interface C2B {
	function f0() external view returns (uint);
}
interface C2BB is C2B {
	function f1() external view returns (uint);
}
contract C2 is C2B, C2BB {
	function f0() external view
	override
	returns (uint)
	{
		return 1271135913;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1882556969;
	}
	function f2() public pure
	
	returns (uint)
	{
		return 2136927794;
	}
}
contract C3 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1559527823;
	}
}
interface C4BBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C4BBBBBBB is C4BBBBBBBB {
	function f1() override
	external pure returns (uint);
}
interface C4BBBBBB is C4BBBBBBB {
	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C4BBBBB is C4BBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
	function f2() override
	external view returns (uint);
}
interface C4BBBBBBBBB is C4BBBBBB {
	function f1() override
	external pure returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface C4BBBB is C4BBBBB, C4BBBBBBBBB {
	function f0() override(C4BBBBB, C4BBBBBB)
	external payable returns (uint);
	function f1() override(C4BBBBB, C4BBBBBBBBB)
	external pure returns (uint);
	function f2() override(C4BBBBB, C4BBBBBB)
	external view returns (uint);
	function f3() override(C4BBBBBB, C4BBBBBBBBB)
	external view returns (uint);
}
contract C4BBB is C4BBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1272185027;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 1308858262;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1287522347;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1057382352;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 153892771;
	}
}
contract C4BB is C4BBB {
}
contract C4B is C4BB {
}
contract C4 is C4B {
}
interface C5BBBB {
	function f0() external view returns (uint);
}
interface C5BBB is C5BBBB {
}
interface C5BB is C5BBB {
}
interface C5B is C5BB {
}
contract C5 is C5B {
	function f0() external view
	override
	returns (uint)
	{
		return 1239222494;
	}
}
library L6 {
	function f0(uint) public view returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
library L9 {
	function f0(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
}
interface C10B {
	function f0() external view returns (uint);
}
interface C10BBB {
	function f0() external view returns (uint);
}
interface C10BB is C10B, C10BBB {
	function f0() override(C10B, C10BBB)
	external view returns (uint);
}
contract C10 is C10B, C10BB {
	function f0() external view
	override(C10BB, C10B)
	returns (uint)
	{
		return 200599677;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 143244144;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1105902161)
				return 1;
			C10 tc1 = new C10();
			if (tc1.f0() != 200599677)
				return 2;
			if (tc1.f1() != 143244144)
				return 3;
			C2 tc2 = new C2();
			if (tc2.f0() != 1271135913)
				return 4;
			if (tc2.f1() != 1882556969)
				return 5;
			if (tc2.f2() != 2136927794)
				return 6;
			C3 tc3 = new C3();
			if (tc3.f0() != 1559527823)
				return 7;
			C4 tc4 = new C4();
			if (tc4.f0() != 1272185027)
				return 8;
			if (tc4.f1() != 1308858262)
				return 9;
			if (tc4.f2() != 1287522347)
				return 10;
			if (tc4.f3() != 1057382352)
				return 11;
			if (tc4.f4() != 153892771)
				return 12;
			C4B tc5 = new C4B();
			if (tc5.f0() != 1272185027)
				return 13;
			if (tc5.f1() != 1308858262)
				return 14;
			if (tc5.f2() != 1287522347)
				return 15;
			if (tc5.f3() != 1057382352)
				return 16;
			if (tc5.f4() != 153892771)
				return 17;
			C4BB tc6 = new C4BB();
			if (tc6.f0() != 1272185027)
				return 18;
			if (tc6.f1() != 1308858262)
				return 19;
			if (tc6.f2() != 1287522347)
				return 20;
			if (tc6.f3() != 1057382352)
				return 21;
			if (tc6.f4() != 153892771)
				return 22;
			C4BBB tc7 = new C4BBB();
			if (tc7.f0() != 1272185027)
				return 23;
			if (tc7.f1() != 1308858262)
				return 24;
			if (tc7.f2() != 1287522347)
				return 25;
			if (tc7.f3() != 1057382352)
				return 26;
			if (tc7.f4() != 153892771)
				return 27;
			C5 tc8 = new C5();
			if (tc8.f0() != 1239222494)
				return 28;
			return 0;
	}
}
