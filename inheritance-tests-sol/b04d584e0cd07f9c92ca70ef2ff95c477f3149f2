
pragma solidity >=0.0;


library L1 {

	function f0(uint) internal view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) external view returns (uint)
	{
		return 846930886;
	}
}




interface I2BBB {

	function f0() external view returns (uint);
}
interface I2BB is I2BBB {

	function f0() override
	external view returns (uint);
}
interface I2B is I2BB {

}





interface I2BBBBBBBB {

	function f0() external view returns (uint);
}
interface I2BBBBBBB is I2BBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I2BBBBBB is I2BBBBBBB {

	function f1() external view returns (uint);
}
interface I2BBBBB is I2BBBBBB {

	function f0() override
	external view returns (uint);
}

interface I2BBBBBBBBB is I2BBBBBB {

	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I2BBBB is I2BB, I2BBBBB, I2BBBBBBBBB {

	function f0() override(I2BB, I2BBBBB, I2BBBBBBBBB)
	external view returns (uint);
}
interface I2 is I2B, I2BBBB {

	function f0() override(I2BB, I2BBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}






interface I3BBBBB {

	function f0() external view returns (uint);
}
interface I3BBBB is I3BBBBB {

}

interface I3BBBBBB is I3BBBBB {

	function f1() external payable returns (uint);
	function f2() external view returns (uint);
}
interface I3BBB is I3BBBB, I3BBBBBB {

}




interface I3BBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I3BBBBBBBBB is I3BBBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I3BBBBBBBB is I3BBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I3BBBBBBB is I3BBBBBB, I3BBBBBBBB {

	function f0() override(I3BBBBB, I3BBBBBBBB)
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
interface I3BB is I3BBB, I3BBBBBBB {

	function f0() override(I3BBBBB, I3BBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override(I3BBBBBB, I3BBBBBBB)
	external view returns (uint);
}
interface I3B is I3BB {

	function f0() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() external payable returns (uint);
}
interface I3 is I3B {

	function f0() override
	external view returns (uint);
	function f3() override
	external payable returns (uint);
}


interface I4B {

	function f0() external view returns (uint);
}
interface I4 is I4B {

	function f0() override
	external view returns (uint);
}
library L6 {

	function f0(uint) public view returns (uint)
	{
		return 719885386;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1649760492;
	}
}


contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 846930886)
			return 1;
		return 0;
	}
}

