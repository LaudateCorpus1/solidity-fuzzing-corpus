pragma solidity >=0.0;
interface I0B {
}
interface I0 is I0B {
}
interface I1 {
	function f0() external payable returns (uint);
}
interface I2BB {
	function f0() external payable returns (uint);
}
interface I2B is I2BB {
}
interface I2 is I2B {
	function f0() override
	external payable returns (uint);
}
interface C4BBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C4BBB is C4BBBB {
}
interface C4BB is C4BBB {
}
interface C4B is C4BB {
}
contract C4 is C4B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1738531149;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1098894339;
	}
	function f2() public payable
	
	returns (uint)
	{
		return 1882556969;
	}
}
interface C5B {
	function f0() external payable returns (uint);
}
contract C5 is C5B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1559527823;
	}
}
library L6 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
interface I7BB {
	function f0() external view returns (uint);
}
interface I7B is I7BB {
}
interface I7 is I7B {
}
contract C {
	function test() public returns (uint)
	{
			C4 tc0 = new C4();
			if (tc0.f0() != 1738531149)
				return 1;
			if (tc0.f1() != 1098894339)
				return 2;
			if (tc0.f2() != 1882556969)
				return 3;
			C5 tc1 = new C5();
			if (tc1.f0() != 1559527823)
				return 4;
			return 0;
	}
}
