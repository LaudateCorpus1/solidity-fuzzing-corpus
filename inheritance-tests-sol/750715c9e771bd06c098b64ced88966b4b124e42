pragma solidity >=0.0;
abstract contract C0B {
}
interface C0BBBBBBBB {
}
interface C0BBBBBBB is C0BBBBBBBB {
}
interface C0BBBBBB is C0BBBBBBB {
}
interface C0BBBBB is C0BBBBBB {
}
interface C0BBBB is C0BBBBB {
}
interface C0BBBBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBB is C0BBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBB is C0BBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBB is C0BBBBBBBBBBBB {
}
interface C0BBBBBBBBBB is C0BBBBBBBBBBB {
}
interface C0BBBBBBBBB is C0BBBB, C0BBBBBBBBBB {
}
interface C0BBB is C0BBBB, C0BBBBBBBBB {
}
contract C0BB is C0B, C0BBB {
}
interface C0BBBBBBBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBB {
}
contract C0BBBBBBBBBBBBBBBBB is C0B, C0BBBBBBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface C0BBBBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C0BBBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBBB {
}
contract C0BBBBBBBBBBBBBBBBBBBBBBB is C0BB {
}
interface C0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface C0BBBBBBBBBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface C0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBBBBBBBB, C0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C0BBBBBBBBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBBBBBBBB, C0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(C0BBBBBBBBBBBBBBBBBBBBBBBBBBB, C0BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
contract C0BBBBBBBBBBBBBBBBBBBBBBBB is C0BBBBBBBBBBBBBBBBBBBBBBB, C0BBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1356611075;
	}
}
contract C0 is C0B, C0BB, C0BBBBBBBBBBBBBBBBB, C0BBBBBBBBBBBBBBBBBBBB, C0BBBBBBBBBBBBBBBBBBBBBBB, C0BBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() virtual external view
	override(C0BBBBBBBBBBBBBBBBBBBBBBBB, C0BBBBBBBBBBBBBBBBBBBBB)
	returns (uint)
	{
		return 759592662;
	}
}
interface I1 {
	function f0() external view returns (uint);
}
contract C2B {
}
contract C2 is C2B {
	function f0() public view
	
	returns (uint)
	{
		return 161598524;
	}
}
interface C3BB {
	function f0() external view returns (uint);
}
interface C3BBB is C3BB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface C3B is C3BB, C3BBB {
	function f0() override(C3BB, C3BBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface C3BBBBB {
	function f0() external view returns (uint);
}
interface C3BBBB is C3BB, C3BBBBB {
	function f0() override(C3BB, C3BBBBB)
	external view returns (uint);
}
contract C3 is C3B, C3BBBB {
	function f0() external view
	override(C3BBBB, C3B)
	returns (uint)
	{
		return 174262913;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 616904628;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 873580215;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
