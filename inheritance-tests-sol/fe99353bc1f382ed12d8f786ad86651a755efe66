
pragma solidity >=0.0;






interface C0BBB {

	function f0() external pure returns (uint);
	function f1() external payable returns (uint);
	function f2() external payable returns (uint);
}
interface C0BB is C0BBB {

}
interface C0B is C0BB {

	function f1() override
	external payable returns (uint);
	function f3() external view returns (uint);
}

interface C0BBBB is C0BB {

	function f0() override
	external pure returns (uint);
	function f3() external view returns (uint);
}
contract C0 is C0B, C0BBBB {

	function f0() external pure
	override(C0BBBB, C0BBB)
	returns (uint)
	{
		return 1378269979;
	}
	function f1() external payable
	override(C0BBB, C0B)
	returns (uint)
	{
		return 1922672189;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1785544758;
	}
	function f3() virtual external view
	override(C0BBBB, C0B)
	returns (uint)
	{
		return 280765391;
	}
}


interface C1B {

	function f0() external view returns (uint);
}

interface C1BB is C1B {

	function f1() external view returns (uint);
}
contract C1 is C1B, C1BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 2051906719;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1568842395;
	}
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

