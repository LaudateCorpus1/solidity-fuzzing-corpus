
pragma solidity >=0.0;


library L0 {

	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
}













interface C1BBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface C1BBBBBBBBBBB is C1BBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}

interface C1BBBBBBBBBBBBB is C1BBBBBBBBBBB {

	function f1() external payable returns (uint);
}
interface C1BBBBBBBBBB is C1BBBBBBBBBBB, C1BBBBBBBBBBBBB {

	function f2() external payable returns (uint);
}
interface C1BBBBBBBBB is C1BBBBBBBBBB {

	function f3() external payable returns (uint);
	function f4() external payable returns (uint);
	function f5() external view returns (uint);
	function f6() external payable returns (uint);
}
interface C1BBBBBBBB is C1BBBBBBBBB {

	function f5() override
	external view returns (uint);
}


interface C1BBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}


interface C1BBBBBBBBBBBBBBBBB {

}
interface C1BBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBB, C1BBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface C1BBBBBBBBBBBBBB is C1BBBBBBBBB, C1BBBBBBBBBBBBBBB, C1BBBBBBBBBBBBBBBB {

	function f0() override(C1BBBBBBBBBBB, C1BBBBBBBBBBBBBBB, C1BBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
	function f7() external view returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB, C1BBBBBBBBBBBBBB {

	function f0() override(C1BBBBBBBBBBB, C1BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(C1BBBBBBBBBBBBB, C1BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f4() override(C1BBBBBBBBB, C1BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override(C1BBBBBBBB, C1BBBBBBBBBBBBBB)
	external view returns (uint);
	function f6() override(C1BBBBBBBBB, C1BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f7() override
	external view returns (uint);
	function f8() external view returns (uint);
	function f9() external view returns (uint);
	function f10() external payable returns (uint);
	function f11() external payable returns (uint);
}
contract C1BBBBBB is C1BBBBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 849178936;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1479919876;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 1272185027;
	}
	function f3() external payable
	override
	returns (uint)
	{
		return 1308858262;
	}
	function f4() virtual external payable
	override
	returns (uint)
	{
		return 1287522347;
	}
	function f5() external view
	override
	returns (uint)
	{
		return 1057382352;
	}
	function f6() external payable
	override
	returns (uint)
	{
		return 153892771;
	}
	function f7() virtual external view
	override
	returns (uint)
	{
		return 480194461;
	}
	function f8() virtual external view
	override
	returns (uint)
	{
		return 180318217;
	}
	function f9() virtual external view
	override
	returns (uint)
	{
		return 1324346645;
	}
	function f10() external payable
	override
	returns (uint)
	{
		return 1587659744;
	}
	function f11() external payable
	override
	returns (uint)
	{
		return 942409124;
	}
}
contract C1BBBBB is C1BBBBBB {

	function f7() external view
	override
	returns (uint)
	{
		return 1500063655;
	}
	function f9() external view
	override
	returns (uint)
	{
		return 276590098;
	}
	function f12() public view
	
	returns (uint)
	{
		return 374787159;
	}
}
contract C1BBBB is C1BBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1003765604;
	}
	function f4() external payable
	override
	returns (uint)
	{
		return 200599677;
	}
	function f8() external view
	override
	returns (uint)
	{
		return 837051536;
	}
}
contract C1BBB is C1BBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 2127735996;
	}
}
contract C1BB is C1BBB {

}

contract C1BBBBBBBBBBBBBBBBBB is C1BBB {

	function f13() public view
	
	returns (uint)
	{
		return 1336273608;
	}
}
contract C1B is C1BB, C1BBBBBBBBBBBBBBBBBB {

}
contract C1 is C1B {

	function f14() public view
	
	returns (uint)
	{
		return 1262088783;
	}
}


contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

