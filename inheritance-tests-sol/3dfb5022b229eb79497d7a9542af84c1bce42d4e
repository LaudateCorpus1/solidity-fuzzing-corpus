
pragma solidity >=0.0;


library L0 {

	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private view returns (uint)
	{
		return 846930886;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1681692777;
	}
	function f3(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}





interface C2BBBB {

	function f0() external payable returns (uint);
}
interface C2BBB is C2BBBB {

}
interface C2BB is C2BBB {

	function f1() external payable returns (uint);
}
interface C2B is C2BB {

	function f0() override
	external payable returns (uint);
}
contract C2 is C2B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1356035169;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1169893009;
	}
}





interface C3BBBB {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C3BBB is C3BBBB {

}
interface C3BB is C3BBB {

	function f0() override
	external payable returns (uint);
}
contract C3B is C3BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1853505735;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 319011186;
	}
}
abstract contract C3 is C3B {

}


interface I4B {

}
interface I4 is I4B {

	function f0() external payable returns (uint);
}


interface I6B {

}
interface I6 is I6B {

}

interface I7 {

	function f0() external payable returns (uint);
}





interface C9BBBB {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C9BBB is C9BBBB {

	function f0() override
	external payable returns (uint);
}
interface C9BB is C9BBB {

	function f0() override
	external payable returns (uint);
}
contract C9B is C9BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1389449997;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 445221226;
	}
}
abstract contract C9 is C9B {

}










interface C10BBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C10BBBBBBBB is C10BBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface C10BBBBBBB is C10BBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C10BBBBBB is C10BBBBBBB {

	function f3() override
	external view returns (uint);
}

interface C10BBBBBBBBBB is C10BBBBBBB {

	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface C10BBBBB is C10BBBBBB, C10BBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
	function f2() override(C10BBBBBBB, C10BBBBBBBBBB)
	external view returns (uint);
	function f3() override(C10BBBBBB, C10BBBBBBBBBB)
	external view returns (uint);
	function f4() override
	external view returns (uint);
}
contract C10BBBB is C10BBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1411037891;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1516106925;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 2139221702;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1249752168;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 1433282303;
	}
}
contract C10BBB is C10BBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1261135403;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 541341238;
	}
}
contract C10BB is C10BBB {

}
contract C10B is C10BB {

	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1967849489;
	}
}

contract C10BBBBBBBBBBB is C10BB {

}
contract C10 is C10B, C10BBBBBBBBBBB {

	function f1() virtual external pure
	override(C10BBB, C10B)
	returns (uint)
	{
		return 1063867998;
	}
}
library L12 {

	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
}


contract C {
	function test() public returns (uint)
	{
			C10 tc0 = new C10();
			if (tc0.f0() != 1261135403)
				return 1;
			if (tc0.f1() != 1063867998)
				return 2;
			if (tc0.f2() != 2139221702)
				return 3;
			if (tc0.f3() != 1249752168)
				return 4;
			if (tc0.f4() != 1433282303)
				return 5;
			C10B tc1 = new C10B();
			if (tc1.f0() != 1261135403)
				return 6;
			if (tc1.f1() != 1967849489)
				return 7;
			if (tc1.f2() != 2139221702)
				return 8;
			if (tc1.f3() != 1249752168)
				return 9;
			if (tc1.f4() != 1433282303)
				return 10;
			C10BB tc2 = new C10BB();
			if (tc2.f0() != 1261135403)
				return 11;
			if (tc2.f1() != 541341238)
				return 12;
			if (tc2.f2() != 2139221702)
				return 13;
			if (tc2.f3() != 1249752168)
				return 14;
			if (tc2.f4() != 1433282303)
				return 15;
			C10BBB tc3 = new C10BBB();
			if (tc3.f0() != 1261135403)
				return 16;
			if (tc3.f1() != 541341238)
				return 17;
			if (tc3.f2() != 2139221702)
				return 18;
			if (tc3.f3() != 1249752168)
				return 19;
			if (tc3.f4() != 1433282303)
				return 20;
			C10BBBB tc4 = new C10BBBB();
			if (tc4.f0() != 1411037891)
				return 21;
			if (tc4.f1() != 1516106925)
				return 22;
			if (tc4.f2() != 2139221702)
				return 23;
			if (tc4.f3() != 1249752168)
				return 24;
			if (tc4.f4() != 1433282303)
				return 25;
			C10BBBBBBBBBBB tc5 = new C10BBBBBBBBBBB();
			if (tc5.f0() != 1261135403)
				return 26;
			if (tc5.f1() != 541341238)
				return 27;
			if (tc5.f2() != 2139221702)
				return 28;
			if (tc5.f3() != 1249752168)
				return 29;
			if (tc5.f4() != 1433282303)
				return 30;
			C2 tc6 = new C2();
			if (tc6.f0() != 1356035169)
				return 31;
			if (tc6.f1() != 1169893009)
				return 32;
			C3B tc7 = new C3B();
			if (tc7.f0() != 1853505735)
				return 33;
			if (tc7.f1() != 319011186)
				return 34;
			C9B tc8 = new C9B();
			if (tc8.f0() != 1389449997)
				return 35;
			if (tc8.f1() != 445221226)
				return 36;
			return 0;
	}
}

