
pragma solidity >=0.0;






interface C0BBB {

	function f0() external payable returns (uint);
}
interface C0BB is C0BBB {

	function f0() override
	external payable returns (uint);
}
contract C0B is C0BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 992596462;
	}
}
contract C0 is C0B {

}





interface C1BBBB {

	function f0() external payable returns (uint);
}
interface C1BBB is C1BBBB {

	function f0() override
	external payable returns (uint);
}
abstract contract C1BB is C1BBB {

	function f0() virtual external payable
	override
	returns (uint);
}
contract C1B is C1BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1425835579;
	}
}
contract C1 is C1B {

}




interface C7BBB {

	function f0() external payable returns (uint);
}
interface C7BB is C7BBB {

	function f0() override
	external payable returns (uint);
}
contract C7B is C7BB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 562351922;
	}
}
contract C7 is C7B {

}
library L8 {

	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}



abstract contract C10BB {

}
contract C10B is C10BB {

}
contract C10 is C10B {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1654044397;
	}
}




interface C11BBB {

	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface C11BB is C11BBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface C11B is C11BB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
contract C11 is C11B {

	function f0() external view
	override
	returns (uint)
	{
		return 943587517;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1184837119;
	}
}
library L13 {

	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
library L14 {

	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}




interface C16BBB {

	function f0() external payable returns (uint);
}
interface C16BB is C16BBB {

	function f0() override
	external payable returns (uint);
}
contract C16B is C16BB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 2141239278;
	}
}
contract C16 is C16B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 389511797;
	}
}


contract C {
	using L13 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}

