pragma solidity >=0.0;
library L1 {
	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
interface I2BBBB {
	function f0() external payable returns (uint);
}
interface I2BBB is I2BBBB {
}
interface I2BB is I2BBB {
}
interface I2B is I2BB {
}
interface I2BBBBB is I2BB {
	function f1() external view returns (uint);
}
interface I2BBBBBB is I2BB {
	function f1() external view returns (uint);
}
interface I2 is I2B, I2BBBBB, I2BBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override(I2BBBBB, I2BBBBBB)
	external view returns (uint);
}
library L3 {
	function f0(uint) public pure returns (uint)
	{
		return 1957747793;
	}
}
interface C4BBB {
	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface C4BB is C4BBB {
	function f0() override
	external view returns (uint);
}
interface C4B is C4BB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
contract C4 is C4B {
	function f0() external view
	override
	returns (uint)
	{
		return 631416347;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 890442452;
	}
}
interface I5BBBB {
	function f0() external payable returns (uint);
}
interface I5BBB is I5BBBB {
}
interface I5BB is I5BBB {
	function f0() override
	external payable returns (uint);
}
interface I5B is I5BB {
	function f0() override
	external payable returns (uint);
}
interface I5BBBBB is I5BB {
	function f1() external view returns (uint);
}
interface I5BBBBBB is I5BBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external view returns (uint);
}
interface I5 is I5B, I5BBBBB, I5BBBBBB {
	function f0() override(I5B, I5BB, I5BBBBBB)
	external payable returns (uint);
	function f1() override(I5BBBBB, I5BBBBBB)
	external view returns (uint);
}
interface C6BBB {
	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface C6BB is C6BBB {
	function f0() override
	external view returns (uint);
}
interface C6B is C6BB {
	function f0() override
	external view returns (uint);
}
contract C6 is C6B {
	function f0() external view
	override
	returns (uint)
	{
		return 389431516;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1243696899;
	}
}
contract C {
	function test() public returns (uint)
	{
			C4 tc0 = new C4();
			if (tc0.f0() != 631416347)
				return 1;
			if (tc0.f1() != 890442452)
				return 2;
			C6 tc1 = new C6();
			if (tc1.f0() != 389431516)
				return 3;
			if (tc1.f1() != 1243696899)
				return 4;
			return 0;
	}
}
