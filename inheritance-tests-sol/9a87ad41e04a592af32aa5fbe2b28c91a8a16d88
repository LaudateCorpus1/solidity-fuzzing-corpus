pragma solidity >=0.0;
library L0 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
interface C1BBB {
	function f0() external payable returns (uint);
}
interface C1BB is C1BBB {
}
interface C1B is C1BB {
	function f1() external view returns (uint);
}
interface C1BBBBBB {
	function f0() external payable returns (uint);
}
interface C1BBBBB is C1BBBBBB {
	function f0() override
	external payable returns (uint);
}
interface C1BBBB is C1B, C1BBBBB {
	function f0() override(C1BBB, C1BBBBB)
	external payable returns (uint);
	function f2() external view returns (uint);
}
contract C1 is C1B, C1BBBB {
	function f0() virtual external payable
	override(C1BBBB, C1BBB)
	returns (uint)
	{
		return 1877434511;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1238748196;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 2100148200;
	}
}
library L2 {
	function f0(uint) external pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1714636915;
	}
}
interface C3BBBBB {
	function f0() external view returns (uint);
}
interface C3BBBB is C3BBBBB {
}
interface C3BBBBBB is C3BBBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
	function f2() external payable returns (uint);
}
interface C3BBB is C3BBBB, C3BBBBBB {
	function f0() override(C3BBBBB, C3BBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
interface C3BB is C3BBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface C3B is C3BB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
contract C3 is C3B {
	function f0() external view
	override
	returns (uint)
	{
		return 262655566;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 124874242;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1357631934;
	}
}
contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}
