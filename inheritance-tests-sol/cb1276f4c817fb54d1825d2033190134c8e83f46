
pragma solidity >=0.0;


library L0 {

	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
library L1 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}


interface I2B {

	function f0() external view returns (uint);
}
interface I2 is I2B {

	function f0() override
	external view returns (uint);
}
library L3 {

	function f0(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}



interface I4BB {

	function f0() external view returns (uint);
}
interface I4B is I4BB {

	function f1() external payable returns (uint);
}


interface I4BBBB {

	function f0() external view returns (uint);
}
interface I4BBB is I4BB, I4BBBB {

	function f0() override(I4BB, I4BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I4 is I4B, I4BBB {

	function f0() override(I4BB, I4BBB)
	external view returns (uint);
	function f1() override(I4B, I4BBB)
	external payable returns (uint);
}
library L5 {

	function f0(uint) public view returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) external pure returns (uint)
	{
		return 424238335;
	}
}
library L6 {

	function f0(uint) public view returns (uint)
	{
		return 719885386;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1649760492;
	}
	function f2(uint) public view returns (uint)
	{
		return 596516649;
	}
	function f3(uint) public view returns (uint)
	{
		return 1189641421;
	}
	function f4(uint) public view returns (uint)
	{
		return 1025202362;
	}
}


contract C {
	using L6 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1649760492)
			return 1;
		return 0;
	}
}

