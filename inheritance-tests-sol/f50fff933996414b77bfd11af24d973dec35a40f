pragma solidity >=0.0;
interface I1B {
	function f0() external view returns (uint);
}
interface I1 is I1B {
	function f0() override
	external view returns (uint);
}
interface C2BBBBBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C2BBBBBBBBBB is C2BBBBBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface C2BBBBBBBBB is C2BBBBBBBBBB {
	function f3() external view returns (uint);
	function f4() external pure returns (uint);
}
interface C2BBBBBBBB is C2BBBBBBBBB {
}
interface C2BBBBBBBBBBBB is C2BBBBBBBBB {
	function f2() override
	external payable returns (uint);
	function f5() external view returns (uint);
}
interface C2BBBBBBB is C2BBBBBBBB, C2BBBBBBBBBBBB {
	function f1() override
	external payable returns (uint);
	function f2() override(C2BBBBBBBBBB, C2BBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override
	external view returns (uint);
}
contract C2BBBBBB is C2BBBBBBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1947433875;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 2010567813;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 662405787;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 849178936;
	}
	function f4() external pure
	override
	returns (uint)
	{
		return 1479919876;
	}
	function f5() external view
	override
	returns (uint)
	{
		return 1272185027;
	}
}
contract C2BBBBB is C2BBBBBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1287522347;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 153892771;
	}
	function f6() external pure
	
	returns (uint)
	{
		return 412013968;
	}
}
contract C2BBBB is C2BBBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 389431516;
	}
}
contract C2BBB is C2BBBB {
	function f2() external payable
	override
	returns (uint)
	{
		return 942409124;
	}
}
contract C2BB is C2BBB {
}
contract C2BBBBBBBBBBBBB is C2BB {
	function f7() external pure
	
	returns (uint)
	{
		return 2130959757;
	}
}
contract C2B is C2BB, C2BBBBBBBBBBBBB {
}
contract C2BBBBBBBBBBBBBB is C2BBBBBBBBBBBBB {
}
contract C2 is C2B, C2BBBBBBBBBBBBBB {
	function f8() public view
	
	returns (uint)
	{
		return 719080959;
	}
}
interface C3B {
	function f0() external view returns (uint);
}
interface C3BBB {
	function f0() external view returns (uint);
}
interface C3BB is C3B, C3BBB {
	function f0() override(C3B, C3BBB)
	external view returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
contract C3 is C3B, C3BB {
	function f0() external view
	override(C3BB, C3B)
	returns (uint)
	{
		return 276590098;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 948709761;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1082682476;
	}
}
library L4 {
	function f0(uint) private pure returns (uint)
	{
		return 1957747793;
	}
}
library L5 {
	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
}
contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 424238335)
			return 1;
		return 0;
	}
}
