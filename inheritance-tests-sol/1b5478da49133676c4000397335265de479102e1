
pragma solidity >=0.0;


library L1 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}


contract C3B {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1826818061;
	}
}
abstract contract C3 is C3B {

	function f0() public pure
	override
	returns (uint)
	{
		return 908951446;
	}
}
library L5 {

	function f0(uint) external pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) internal view returns (uint)
	{
		return 1714636915;
	}
	function f2(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}
library L6 {

	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
}



abstract contract C8BB {

	function f0() public view
	
	returns (uint)
	{
		return 843673194;
	}
}
contract C8B is C8BB {

}
contract C8 is C8B {

}


interface C9B {

	function f0() external payable returns (uint);
}
contract C9 is C9B {

	function f0() external payable
	override
	returns (uint)
	{
		return 533364653;
	}
}



abstract contract C11BB {

}

interface C11BBB {

	function f0() external payable returns (uint);
}
contract C11B is C11BB, C11BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1429731277;
	}
}
contract C11 is C11B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1633106186;
	}
}
library L12 {

	function f0(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
	function f1(uint) external pure returns (uint)
	{
		return 596516649;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1189641421;
	}
}




interface C14BBB {

	function f0() external view returns (uint);
}
interface C14BB is C14BBB {

	function f0() override
	external view returns (uint);
}
interface C14B is C14BB {

	function f0() override
	external view returns (uint);
}
contract C14 is C14B {

	function f0() external view
	override
	returns (uint)
	{
		return 189733958;
	}
}




interface C15BBB {

	function f0() external payable returns (uint);
}
interface C15BB is C15BBB {

	function f0() override
	external payable returns (uint);
}
contract C15B is C15BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1281901654;
	}
}
contract C15 is C15B {

}


contract C16B {

	function f0() virtual public payable
	
	returns (uint)
	{
		return 431017937;
	}
}
abstract contract C16 is C16B {

}




interface C17BBB {

	function f0() external payable returns (uint);
}
interface C17BB is C17BBB {

	function f0() override
	external payable returns (uint);
}
contract C17B is C17BB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1654205374;
	}
}
contract C17 is C17B {

	function f0() external payable
	override
	returns (uint)
	{
		return 122341836;
	}
}
library L18 {

	function f0(uint) public pure returns (uint)
	{
		return 1025202362;
	}
}


contract C {
	function test() public returns (uint)
	{
			C11 tc0 = new C11();
			if (tc0.f0() != 1633106186)
				return 1;
			C11B tc1 = new C11B();
			if (tc1.f0() != 1429731277)
				return 2;
			C14 tc2 = new C14();
			if (tc2.f0() != 189733958)
				return 3;
			C15 tc3 = new C15();
			if (tc3.f0() != 1281901654)
				return 4;
			C15B tc4 = new C15B();
			if (tc4.f0() != 1281901654)
				return 5;
			C16B tc5 = new C16B();
			if (tc5.f0() != 431017937)
				return 6;
			C17 tc6 = new C17();
			if (tc6.f0() != 122341836)
				return 7;
			C17B tc7 = new C17B();
			if (tc7.f0() != 1654205374)
				return 8;
			C3B tc8 = new C3B();
			if (tc8.f0() != 1826818061)
				return 9;
			C8 tc9 = new C8();
			if (tc9.f0() != 843673194)
				return 10;
			C8B tc10 = new C8B();
			if (tc10.f0() != 843673194)
				return 11;
			C9 tc11 = new C9();
			if (tc11.f0() != 533364653)
				return 12;
			return 0;
	}
}

