pragma solidity >=0.0;
library L0 {
	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}
interface C1BB {
	function f0() external view returns (uint);
}
contract C1B is C1BB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1721041567;
	}
}
contract C1 is C1B {
}
interface C2BBBB {
	function f0() external payable returns (uint);
}
interface C2BBB is C2BBBB {
	function f0() override
	external payable returns (uint);
}
interface C2BB is C2BBB {
	function f1() external payable returns (uint);
}
interface C2B is C2BB {
	function f0() override
	external payable returns (uint);
}
contract C2 is C2B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1805831206;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 399257814;
	}
}
abstract contract C3BBB {
}
abstract contract C3BBBBBB {
}
interface C3BBBBBBBBBBBBB {
	function f0() external pure returns (uint);
	function f1() external pure returns (uint);
}
interface C3BBBBBBBBBBBB is C3BBBBBBBBBBBBB {
	function f0() override
	external pure returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C3BBBBBBBBBBB is C3BBBBBBBBBBBB {
}
interface C3BBBBBBBBBBBBBB is C3BBBBBBBBBBBB {
	function f0() override
	external pure returns (uint);
	function f1() override
	external pure returns (uint);
	function f2() override
	external view returns (uint);
	function f4() external pure returns (uint);
}
interface C3BBBBBBBBBB is C3BBBBBBBBBBB, C3BBBBBBBBBBBBBB {
	function f0() override(C3BBBBBBBBBBBB, C3BBBBBBBBBBBBBB)
	external pure returns (uint);
	function f1() override(C3BBBBBBBBBBBBB, C3BBBBBBBBBBBBBB)
	external pure returns (uint);
	function f2() override(C3BBBBBBBBBBBB, C3BBBBBBBBBBBBBB)
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external pure returns (uint);
}
contract C3BBBBBBBBB is C3BBBBBBBBBB {
	function f0() external pure
	override
	returns (uint)
	{
		return 730512509;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 1654044397;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 148120656;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 318729750;
	}
	function f4() virtual external pure
	override
	returns (uint)
	{
		return 552744463;
	}
}
contract C3BBBBBBBB is C3BBBBBBBBB {
	function f4() external pure
	override
	returns (uint)
	{
		return 1488084345;
	}
}
contract C3BBBBBBB is C3BBBBBB, C3BBBBBBBB {
	function f2() external view
	override
	returns (uint)
	{
		return 518008164;
	}
}
abstract contract C3BBBBB is C3BBBBBB, C3BBBBBBB {
}
abstract contract C3BBBBBBBBBBBBBBB is C3BBBBBB {
}
contract C3BBBBBBBBBBBBBBBB is C3BBBBBB {
}
abstract contract C3BBBBBBBBBBBBBBBBB is C3BBBBBBBBBBBBBBBB {
}
abstract contract C3BBBB is C3BBB, C3BBBBB, C3BBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBB {
}
abstract contract C3BB is C3BBB, C3BBBB {
}
abstract contract C3BBBBBBBBBBBBBBBBBB is C3BB {
}
contract C3BBBBBBBBBBBBBBBBBBB is C3BBBB {
}
abstract contract C3BBBBBBBBBBBBBBBBBBBB is C3BBBB {
}
abstract contract C3B is C3BB, C3BBBBBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBB {
}
abstract contract C3BBBBBBBBBBBBBBBBBBBBB is C3B {
}
contract C3BBBBBBBBBBBBBBBBBBBBBB is C3B {
}
abstract contract C3BBBBBBBBBBBBBBBBBBBBBBB is C3BBBBBBBBBBBBBBBBBBBBB {
}
abstract contract C3 is C3B, C3BBBBBBBBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBBBBB {
}
library L4 {
	function f0(uint) external pure returns (uint)
	{
		return 1102520059;
	}
}
contract C {
	using L4 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1102520059)
			return 1;
		return 0;
	}
}
