pragma solidity >=0.0;
interface I0BB {
	function f0() external view returns (uint);
}
interface I0B is I0BB {
}
interface I0BBB is I0BB {
	function f1() external view returns (uint);
}
interface I0 is I0B, I0BBB {
	function f0() override
	external view returns (uint);
}
interface I1BBBB {
	function f0() external view returns (uint);
}
interface I1BBB is I1BBBB {
	function f0() override
	external view returns (uint);
}
interface I1BB is I1BBB {
}
interface I1B is I1BB {
}
interface I1BBBBB is I1B {
	function f1() external view returns (uint);
}
interface I1 is I1B, I1BBBBB {
	function f0() override
	external view returns (uint);
}
interface I2BBBBBBBBB {
}
interface I2BBBBBBBB is I2BBBBBBBBB {
	function f0() external view returns (uint);
}
interface I2BBBBBBB is I2BBBBBBBB {
}
interface I2BBBBBB is I2BBBBBBB {
}
interface I2BBBBB is I2BBBBBB {
	function f0() override
	external view returns (uint);
}
interface I2BBBB is I2BBBBB {
}
interface I2BBBBBBBBBBBBB {
}
interface I2BBBBBBBBBBBB is I2BBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I2BBBBBBBBBBB is I2BBBBBBBBBBBB {
}
interface I2BBBBBBBBBB is I2BBBBB, I2BBBBBBBBBBB {
	function f0() override(I2BBBBB, I2BBBBBBBBBBBB)
	external view returns (uint);
}
interface I2BBB is I2BBBB, I2BBBBBBBBBB {
	function f0() override(I2BBBBB, I2BBBBBBBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I2BB is I2BBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I2B is I2BB {
	function f1() override
	external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBB {
}
interface I2BBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I2BBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBB {
}
interface I2BBBBBBBBBBBBBB is I2BB, I2BBBBBBBBBBBBBBB {
	function f0() override(I2BB, I2BBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I2 is I2B, I2BBBBBBBBBBBBBB {
	function f0() override(I2BB, I2BBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I2B, I2BB)
	external payable returns (uint);
	function f2() override
	external view returns (uint);
	function f3() external payable returns (uint);
}
interface I3 {
	function f0() external payable returns (uint);
}
interface I5B {
	function f0() external view returns (uint);
}
interface I5 is I5B {
}
library L7 {
	function f0(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}
contract C {
	using L7 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1957747793)
			return 1;
		return 0;
	}
}
