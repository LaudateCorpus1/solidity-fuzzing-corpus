
pragma solidity >=0.0;








interface C0BBBBB {

}
interface C0BBBB is C0BBBBB {

}
interface C0BBB is C0BBBB {

	function f0() external view returns (uint);
}
interface C0BB is C0BBB {

	function f0() override
	external view returns (uint);
}
interface C0B is C0BB {

}
contract C0 is C0B {

	function f0() external view
	override
	returns (uint)
	{
		return 854716505;
	}
}


interface I1B {

	function f0() external view returns (uint);
}
interface I1 is I1B {

}
library L3 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public view returns (uint)
	{
		return 1681692777;
	}
	function f2(uint) public pure returns (uint)
	{
		return 1714636915;
	}
	function f3(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
library L4 {

	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
}





interface I5BBBB {

	function f0() external payable returns (uint);
}
interface I5BBB is I5BBBB {

}
interface I5BB is I5BBB {

}
interface I5B is I5BB {

	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}

interface I5BBBBB is I5B {

	function f0() override
	external payable returns (uint);
	function f3() external view returns (uint);
}
interface I5 is I5B, I5BBBBB {

	function f0() override(I5B, I5BBBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
}



interface I6BB {

	function f0() external view returns (uint);
}
interface I6B is I6BB {

	function f1() external payable returns (uint);
}


interface I6BBBB {

	function f0() external view returns (uint);
}
interface I6BBB is I6B, I6BBBB {

	function f0() override(I6BB, I6BBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface I6 is I6B, I6BBB {

	function f0() override(I6BB, I6BBB)
	external view returns (uint);
	function f1() override(I6B, I6BBB)
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
library L7 {

	function f0(uint) internal pure returns (uint)
	{
		return 596516649;
	}
}






interface C9BBBBB {

}
interface C9BBBB is C9BBBBB {

}
interface C9BBB is C9BBBB {

	function f0() external view returns (uint);
}
interface C9BB is C9BBB {

}
interface C9B is C9BB {

}
contract C9 is C9B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1287522347;
	}
}
library L10 {

	function f0(uint) public view returns (uint)
	{
		return 1189641421;
	}
	function f1(uint) internal view returns (uint)
	{
		return 1025202362;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1350490027;
	}
}
library L11 {

	function f0(uint) internal view returns (uint)
	{
		return 783368690;
	}
}

interface I12 {

	function f0() external view returns (uint);
}

interface I13 {

	function f0() external view returns (uint);
}


contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}

