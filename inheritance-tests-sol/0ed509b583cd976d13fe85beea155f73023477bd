pragma solidity >=0.0;
interface I0 {
	function f0() external payable returns (uint);
}
interface I1 {
	function f0() external view returns (uint);
}
contract C2 {
	function f0() public view
	
	returns (uint)
	{
		return 48271;
	}
	function f1() public pure
	
	returns (uint)
	{
		return 182605794;
	}
}
interface C3BBBBB {
}
interface C3BBBB is C3BBBBB {
}
interface C3BBB is C3BBBB {
	function f0() external view returns (uint);
}
interface C3BB is C3BBB {
}
interface C3B is C3BB {
}
contract C3 is C3B {
	function f0() external view
	override
	returns (uint)
	{
		return 1596680831;
	}
}
interface C4BBBBB {
	function f0() external payable returns (uint);
}
interface C4BBBB is C4BBBBB {
}
interface C4BBB is C4BBBB {
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface C4BB is C4BBB {
}
interface C4B is C4BB {
	function f2() override
	external view returns (uint);
}
contract C4 is C4B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1402304087;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 2064876628;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1842513780;
	}
}
interface C5BBBBB {
	function f0() external payable returns (uint);
}
interface C5BBBB is C5BBBBB {
}
interface C5BBB is C5BBBB {
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface C5BB is C5BBB {
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
interface C5B is C5BB {
	function f0() override
	external payable returns (uint);
}
contract C5 is C5B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 928270262;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1814467857;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1659675143;
	}
}
interface I6 {
	function f0() external payable returns (uint);
}
interface I7B {
	function f0() external payable returns (uint);
}
interface I7BB is I7B {
}
interface I7 is I7B, I7BB {
	function f1() external payable returns (uint);
}
interface C8BBBBB {
	function f0() external payable returns (uint);
}
interface C8BBBB is C8BBBBB {
	function f0() override
	external payable returns (uint);
}
interface C8BBB is C8BBBB {
	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface C8BB is C8BBB {
	function f1() override
	external view returns (uint);
}
interface C8B is C8BB {
}
contract C8 is C8B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1500063655;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 978785428;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 276590098;
	}
}
contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 48271)
				return 1;
			if (tc0.f1() != 182605794)
				return 2;
			C3 tc1 = new C3();
			if (tc1.f0() != 1596680831)
				return 3;
			C4 tc2 = new C4();
			if (tc2.f0() != 1402304087)
				return 4;
			if (tc2.f1() != 2064876628)
				return 5;
			if (tc2.f2() != 1842513780)
				return 6;
			C5 tc3 = new C5();
			if (tc3.f0() != 928270262)
				return 7;
			if (tc3.f1() != 1814467857)
				return 8;
			if (tc3.f2() != 1659675143)
				return 9;
			C8 tc4 = new C8();
			if (tc4.f0() != 1500063655)
				return 10;
			if (tc4.f1() != 978785428)
				return 11;
			if (tc4.f2() != 276590098)
				return 12;
			return 0;
	}
}
