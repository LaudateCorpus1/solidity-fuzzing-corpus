
pragma solidity >=0.0;


library L0 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
library L1 {

	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}


interface C2B {

	function f0() external view returns (uint);
}
contract C2 is C2B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1291394886;
	}
}












interface C3BBBBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C3BBBBBBBBBB is C3BBBBBBBBBBB {

	function f2() external payable returns (uint);
}
interface C3BBBBBBBBB is C3BBBBBBBBBB {

	function f3() external view returns (uint);
	function f4() external pure returns (uint);
}
interface C3BBBBBBBB is C3BBBBBBBBB {

}

interface C3BBBBBBBBBBBB is C3BBBBBBBBB {

	function f1() override
	external pure returns (uint);
	function f4() override
	external pure returns (uint);
	function f5() external view returns (uint);
}
interface C3BBBBBBB is C3BBBBBBBB, C3BBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override(C3BBBBBBBBBBB, C3BBBBBBBBBBBB)
	external pure returns (uint);
	function f4() override(C3BBBBBBBBB, C3BBBBBBBBBBBB)
	external pure returns (uint);
	function f5() override
	external view returns (uint);
}
contract C3BBBBBB is C3BBBBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1947433875;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 2010567813;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 662405787;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 849178936;
	}
	function f4() external pure
	override
	returns (uint)
	{
		return 1479919876;
	}
	function f5() external view
	override
	returns (uint)
	{
		return 1272185027;
	}
}
contract C3BBBBB is C3BBBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1287522347;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 153892771;
	}
	function f6() external pure
	
	returns (uint)
	{
		return 412013968;
	}
}
contract C3BBBB is C3BBBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 389431516;
	}
}
contract C3BBB is C3BBBB {

	function f2() external payable
	override
	returns (uint)
	{
		return 942409124;
	}
}
contract C3BB is C3BBB {

}

contract C3BBBBBBBBBBBBB is C3BBB {

	function f7() external pure
	
	returns (uint)
	{
		return 2130959757;
	}
}
contract C3B is C3BB, C3BBBBBBBBBBBBB {

}

contract C3BBBBBBBBBBBBBB is C3BBBBBBBBBBBBB {

}
contract C3 is C3B, C3BBBBBBBBBBBBBB {

	function f8() public view
	
	returns (uint)
	{
		return 719080959;
	}
}





interface C4BBBB {

	function f0() external view returns (uint);
}
interface C4BBB is C4BBBB {

	function f0() override
	external view returns (uint);
}
interface C4BB is C4BBB {

	function f0() override
	external view returns (uint);
}

abstract contract C4BBBBB is C4BBB {

	function f0() virtual external view
	override
	returns (uint);
}
contract C4B is C4BB, C4BBBBB {

	function f0() virtual external view
	override(C4BBBBB, C4BB)
	returns (uint)
	{
		return 1447645967;
	}
}
contract C4 is C4B {

	function f0() external view
	override
	returns (uint)
	{
		return 837051536;
	}
}


interface I5B {

	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface I5 is I5B {

	function f1() override
	external view returns (uint);
}


contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

