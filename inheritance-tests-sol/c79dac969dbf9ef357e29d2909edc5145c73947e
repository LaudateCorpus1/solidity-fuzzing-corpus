
pragma solidity >=0.0;



interface I1 {

	function f0() external view returns (uint);
}




interface C2BBB {

	function f0() external payable returns (uint);
}
interface C2BB is C2BBB {

}
abstract contract C2B is C2BB {

	function f0() virtual external payable
	override
	returns (uint);
}


interface C2BBBBB {

	function f0() external payable returns (uint);
}
interface C2BBBB is C2BBBBB {

}
contract C2 is C2B, C2BBBB {

	function f0() external payable
	override(C2B, C2BBBBB)
	returns (uint)
	{
		return 1882556969;
	}
}




interface C3BBB {

	function f0() external payable returns (uint);
}
interface C3BB is C3BBB {

	function f0() override
	external payable returns (uint);
}
abstract contract C3B is C3BB {

	function f0() virtual external payable
	override
	returns (uint);
}


interface C3BBBBB {

	function f0() external payable returns (uint);
}
interface C3BBBB is C3BB, C3BBBBB {

	function f0() override(C3BB, C3BBBBB)
	external payable returns (uint);
}
contract C3 is C3B, C3BBBB {

	function f0() external payable
	override(C3B, C3BBBB)
	returns (uint)
	{
		return 2064876628;
	}
}




interface C4BBB {

	function f0() external payable returns (uint);
}
interface C4BB is C4BBB {

	function f0() override
	external payable returns (uint);
}
abstract contract C4B is C4BB {

	function f0() virtual external payable
	override
	returns (uint);
}


interface C4BBBBB {

	function f0() external payable returns (uint);
}
interface C4BBBB is C4BB, C4BBBBB {

	function f0() override(C4BB, C4BBBBB)
	external payable returns (uint);
}
contract C4 is C4B, C4BBBB {

	function f0() virtual external payable
	override(C4B, C4BBBB)
	returns (uint)
	{
		return 849178936;
	}
}

interface I6 {

	function f0() external view returns (uint);
}

interface I7 {

	function f0() external view returns (uint);
}

interface I8 {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}

contract C9 {

	function f0() public view
	
	returns (uint)
	{
		return 1057382352;
	}
}
library L10 {

	function f0(uint) public view returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) public view returns (uint)
	{
		return 424238335;
	}
}




interface C11BBB {

	function f0() external payable returns (uint);
}
interface C11BB is C11BBB {

}
contract C11B is C11BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1675824860;
	}
}
abstract contract C11 is C11B {

}


contract C {
	using L10 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 424238335)
			return 1;
		return 0;
	}
}

