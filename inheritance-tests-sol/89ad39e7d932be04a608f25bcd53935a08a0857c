pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
contract C1 {
	function f0() public view
	
	returns (uint)
	{
		return 182605794;
	}
	function f1() public pure
	
	returns (uint)
	{
		return 1291394886;
	}
}
interface C2BB {
	function f0() external payable returns (uint);
}
interface C2B is C2BB {
}
contract C2 is C2B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1105902161;
	}
	function f1() public view
	
	returns (uint)
	{
		return 854716505;
	}
	function f2() public pure
	
	returns (uint)
	{
		return 564586691;
	}
}
library L4 {
	function f0(uint) public pure returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) private pure returns (uint)
	{
		return 424238335;
	}
	function f2(uint) internal view returns (uint)
	{
		return 719885386;
	}
}
interface I5BB {
	function f0() external view returns (uint);
}
interface I5B is I5BB {
	function f1() external view returns (uint);
}
interface I5BBB is I5B {
	function f0() override
	external view returns (uint);
	function f2() external view returns (uint);
}
interface I5 is I5B, I5BBB {
	function f0() override(I5BB, I5BBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
contract C6BBB {
	function f0() external pure
	
	returns (uint)
	{
		return 1931656580;
	}
}
contract C6BB is C6BBB {
}
abstract contract C6B is C6BB {
}
contract C6 is C6B {
}
interface I7B {
	function f0() external payable returns (uint);
}
interface I7 is I7B {
	function f0() override
	external payable returns (uint);
}
interface I8B {
	function f0() external pure returns (uint);
}
interface I8 is I8B {
	function f0() override
	external pure returns (uint);
	function f1() external pure returns (uint);
}
interface I9B {
	function f0() external payable returns (uint);
}
interface I9 is I9B {
	function f0() override
	external payable returns (uint);
}
interface C10BB {
	function f0() external view returns (uint);
}
interface C10BBBBB {
	function f0() external view returns (uint);
}
interface C10BBBB is C10BBBBB {
}
interface C10BBB is C10BB, C10BBBB {
	function f0() override(C10BB, C10BBBBB)
	external view returns (uint);
}
interface C10B is C10BB, C10BBB {
	function f0() override(C10BB, C10BBB)
	external view returns (uint);
}
interface C10BBBBBB is C10BB {
	function f1() external view returns (uint);
}
contract C10 is C10B, C10BBBBBB {
	function f0() virtual external view
	override(C10BB, C10B)
	returns (uint)
	{
		return 1696049367;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1168816941;
	}
}
library L11 {
	function f0(uint) public pure returns (uint)
	{
		return 1025202362;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1350490027;
	}
	function f2(uint) internal view returns (uint)
	{
		return 783368690;
	}
}
library L12 {
	function f0(uint) external pure returns (uint)
	{
		return 1102520059;
	}
}
library L13 {
	function f0(uint) external pure returns (uint)
	{
		return 2044897763;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1967513926;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 182605794)
				return 1;
			if (tc0.f1() != 1291394886)
				return 2;
			C10 tc1 = new C10();
			if (tc1.f0() != 1696049367)
				return 3;
			if (tc1.f1() != 1168816941)
				return 4;
			C2 tc2 = new C2();
			if (tc2.f0() != 1105902161)
				return 5;
			if (tc2.f1() != 854716505)
				return 6;
			if (tc2.f2() != 564586691)
				return 7;
			C6 tc3 = new C6();
			if (tc3.f0() != 1931656580)
				return 8;
			C6BB tc4 = new C6BB();
			if (tc4.f0() != 1931656580)
				return 9;
			C6BBB tc5 = new C6BBB();
			if (tc5.f0() != 1931656580)
				return 10;
			return 0;
	}
}
