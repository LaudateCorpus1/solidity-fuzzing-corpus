
pragma solidity >=0.0;


library L0 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) internal view returns (uint)
	{
		return 846930886;
	}
	function f2(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
library L1 {

	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}



interface C2BB {

	function f0() external payable returns (uint);
}
interface C2B is C2BB {

	function f0() override
	external payable returns (uint);
}
contract C2 is C2B {

	function f0() external payable
	override
	returns (uint)
	{
		return 407355683;
	}
}
library L3 {

	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 719885386;
	}
}


contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 424238335)
			return 1;
		return 0;
	}
}

