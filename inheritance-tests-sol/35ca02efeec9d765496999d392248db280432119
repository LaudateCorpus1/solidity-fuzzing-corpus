
pragma solidity >=0.0;


library L0 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) external pure returns (uint)
	{
		return 846930886;
	}
}





interface I1BBBB {

}

interface I1BBBBB is I1BBBB {

	function f0() external pure returns (uint);
}
interface I1BBB is I1BBBB, I1BBBBB {

	function f0() override
	external pure returns (uint);
}
interface I1BB is I1BBB {

	function f0() override
	external pure returns (uint);
}

interface I1BBBBBB is I1BBB {

	function f0() override
	external pure returns (uint);
	function f1() external payable returns (uint);
}
interface I1B is I1BB, I1BBBBBB {

	function f0() override(I1BB, I1BBBBBB)
	external pure returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I1 is I1B {

	function f0() override
	external pure returns (uint);
}












interface C2BBBBBBBBBBB {

	function f0() external view returns (uint);
}

interface C2BBBBBBBBBBBB is C2BBBBBBBBBBB {

	function f1() external view returns (uint);
}
interface C2BBBBBBBBBB is C2BBBBBBBBBBB, C2BBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C2BBBBBBBBB is C2BBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
interface C2BBBBBBBB is C2BBBBBBBBB {

	function f1() override
	external view returns (uint);
}
interface C2BBBBBBB is C2BBBBBBBB {

	function f1() override
	external view returns (uint);
	function f4() external payable returns (uint);
}
interface C2BBBBBB is C2BBBBBBB {

	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
}

interface C2BBBBBBBBBBBBB is C2BBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f5() external payable returns (uint);
}
interface C2BBBBB is C2BBBBBB, C2BBBBBBBBBBBBB {

	function f0() override(C2BBBBBBBBB, C2BBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(C2BBBBBBB, C2BBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(C2BBBBBB, C2BBBBBBBBBB)
	external view returns (uint);
	function f3() override(C2BBBBBB, C2BBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(C2BBBBBB, C2BBBBBBB)
	external payable returns (uint);
	function f6() external pure returns (uint);
	function f7() external pure returns (uint);
	function f8() external payable returns (uint);
	function f9() external payable returns (uint);
}
interface C2BBBB is C2BBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external pure returns (uint);
	function f7() override
	external pure returns (uint);
	function f8() override
	external payable returns (uint);
}
interface C2BBB is C2BBBB {

	function f0() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f7() override
	external pure returns (uint);
	function f8() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() external payable returns (uint);
}
interface C2BB is C2BBB {

	function f0() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f8() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
}

interface C2BBBBBBBBBBBBBB is C2BB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f7() override
	external pure returns (uint);
	function f8() override
	external payable returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() external payable returns (uint);
}
interface C2B is C2BB, C2BBBBBBBBBBBBBB {

	function f0() override(C2BB, C2BBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(C2BBBB, C2BBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(C2BBBBB, C2BBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(C2BB, C2BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external pure returns (uint);
	function f7() override(C2BBB, C2BBBBBBBBBBBBBB)
	external pure returns (uint);
	function f8() override(C2BB, C2BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f9() override(C2BB, C2BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(C2BB, C2BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f12() external view returns (uint);
}











interface C2BBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}

interface C2BBBBBBBBBBBBBBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface C2BBBBBBBBBBBBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(C2BBBBBBBBBBBBBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C2BBBBBBBBBBBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBBBBBBBBBBB {

	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
interface C2BBBBBBBBBBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBBBBBBBBBB {

	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
interface C2BBBBBBBBBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external payable returns (uint);
}
interface C2BBBBBBBBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
}

interface C2BBBBBBBBBBBBBBBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBBBBBBBB {

	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() external payable returns (uint);
}
interface C2BBBBBBBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(C2BBBBBBBBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(C2BBBBBBBBBBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(C2BBBBBBBBBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f3() override(C2BBBBBBBBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(C2BBBBBBBBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() external pure returns (uint);
	function f7() external pure returns (uint);
	function f8() external payable returns (uint);
	function f9() external payable returns (uint);
}
interface C2BBBBBBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBBBBBB {

	function f1() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f6() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
}
interface C2BBBBBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f7() override
	external pure returns (uint);
	function f10() external payable returns (uint);
}
interface C2BBBBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBBBB {

	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external pure returns (uint);
	function f8() override
	external payable returns (uint);
}

interface C2BBBBBBBBBBBBBBBBBBBBBBBBBBBB is C2BBBBBBBBBBBBBBBB {

	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f6() override
	external pure returns (uint);
	function f7() override
	external pure returns (uint);
	function f11() external payable returns (uint);
}
interface C2BBBBBBBBBBBBBBB is C2B, C2BBBBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(C2B, C2BBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(C2B, C2BBBBBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(C2B, C2BBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f3() override(C2BB, C2BBBBBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(C2B, C2BBBBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override(C2B, C2BBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(C2B, C2BBBBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f7() override(C2B, C2BBBBBBBBBBBBBBBBB, C2BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f8() override(C2B, C2BBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f9() override(C2B, C2BBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(C2B, C2BBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(C2B, C2BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f12() override
	external view returns (uint);
	function f13() external view returns (uint);
}
contract C2 is C2B, C2BBBBBBBBBBBBBBB {

	function f0() virtual external view
	override(C2BBBBBBBBBBBBBBB, C2B)
	returns (uint)
	{
		return 394030104;
	}
	function f1() virtual external view
	override(C2BBBBBBBBBBBBBBB, C2B)
	returns (uint)
	{
		return 1673713008;
	}
	function f2() external view
	override(C2BBBBBBBBBBBBBBB, C2B)
	returns (uint)
	{
		return 501554700;
	}
	function f3() external view
	override(C2BBBBBBBBBBBBBBB, C2BB)
	returns (uint)
	{
		return 1117609472;
	}
	function f4() external payable
	override(C2BBBBBBBBBBBBBBB, C2B)
	returns (uint)
	{
		return 1267274478;
	}
	function f5() external payable
	override(C2BBBBBBBBBBBBBBB, C2B)
	returns (uint)
	{
		return 1291444088;
	}
	function f6() virtual external pure
	override(C2BBBBBBBBBBBBBBB, C2B)
	returns (uint)
	{
		return 1577366381;
	}
	function f7() virtual external pure
	override(C2BBBBBBBBBBBBBBB, C2B)
	returns (uint)
	{
		return 1230573592;
	}
	function f8() virtual external payable
	override(C2BBBBBBBBBBBBBBB, C2B)
	returns (uint)
	{
		return 814024206;
	}
	function f9() external payable
	override(C2BBBBBBBBBBBBBBB, C2B)
	returns (uint)
	{
		return 1929005827;
	}
	function f10() external payable
	override(C2BBBBBBBBBBBBBBB, C2B)
	returns (uint)
	{
		return 1893801055;
	}
	function f11() external payable
	override(C2BBBBBBBBBBBBBBB, C2B)
	returns (uint)
	{
		return 1926661643;
	}
	function f12() virtual external view
	override(C2BBBBBBBBBBBBBBB, C2B)
	returns (uint)
	{
		return 376039116;
	}
	function f13() virtual external view
	override
	returns (uint)
	{
		return 15531135;
	}
}

interface I3 {

	function f0() external view returns (uint);
}
library L4 {

	function f0(uint) external pure returns (uint)
	{
		return 1350490027;
	}
	function f1(uint) external pure returns (uint)
	{
		return 783368690;
	}
}


contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

