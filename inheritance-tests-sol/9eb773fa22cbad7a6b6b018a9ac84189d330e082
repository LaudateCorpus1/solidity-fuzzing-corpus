
pragma solidity >=0.0;





contract C0BB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1013832414;
	}
}
contract C0B is C0BB {

	function f0() public pure
	override
	returns (uint)
	{
		return 1104122143;
	}
}
contract C0 is C0B {

	function f1() public pure
	
	returns (uint)
	{
		return 2089172319;
	}
}



interface C1BB {

	function f0() external view returns (uint);
}
interface C1B is C1BB {

}
contract C1 is C1B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 803079650;
	}
}
library L2 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
library L3 {

	function f0(uint) private view returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public view returns (uint)
	{
		return 1714636915;
	}
}
library L5 {

	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
}



interface I6BB {

	function f0() external view returns (uint);
}
interface I6B is I6BB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I6 is I6B {

}



interface I7BB {

	function f0() external view returns (uint);
}
interface I7B is I7BB {

	function f1() external payable returns (uint);
}


interface I7BBBB {

	function f0() external view returns (uint);
}
interface I7BBB is I7B, I7BBBB {

	function f0() override(I7BB, I7BBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I7 is I7B, I7BBB {

	function f0() override(I7BB, I7BBB)
	external view returns (uint);
}



interface C8BB {

	function f0() external view returns (uint);
}

interface C8BBB is C8BB {

}
interface C8B is C8BB, C8BBB {

}


interface C8BBBBB {

	function f0() external view returns (uint);
}
interface C8BBBB is C8BBB, C8BBBBB {

	function f0() override(C8BB, C8BBBBB)
	external view returns (uint);
}
contract C8 is C8B, C8BBBB {

	function f0() external view
	override(C8BBBB, C8BB)
	returns (uint)
	{
		return 300243370;
	}
}



contract C9BB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1828063314;
	}
}
contract C9B is C9BB {

}
contract C9 is C9B {

	function f0() public pure
	override
	returns (uint)
	{
		return 746550598;
	}
	function f1() public pure
	
	returns (uint)
	{
		return 1968319398;
	}
}


contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1714636915)
			return 1;
		return 0;
	}
}

