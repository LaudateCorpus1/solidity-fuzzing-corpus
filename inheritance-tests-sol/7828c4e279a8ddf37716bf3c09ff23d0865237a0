pragma solidity >=0.0;
interface C0BBBB {
	function f0() external payable returns (uint);
}
interface C0BBB is C0BBBB {
}
interface C0BB is C0BBB {
}
interface C0B is C0BB {
	function f0() override
	external payable returns (uint);
}
abstract contract C0BBBBBB {
}
contract C0BBBBB is C0BB, C0BBBBBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1501100076;
	}
}
contract C0 is C0B, C0BBBBB {
	function f0() external payable
	override(C0BBBBB, C0B)
	returns (uint)
	{
		return 1169893009;
	}
}
interface C1BBBBBBB {
	function f0() external pure returns (uint);
}
interface C1BBBBBB is C1BBBBBBB {
}
interface C1BBBBB is C1BBBBBB {
	function f0() override
	external pure returns (uint);
}
interface C1BBBBBBBB is C1BBBBB {
	function f1() external payable returns (uint);
}
interface C1BBBB is C1BBBBB, C1BBBBBBBB {
	function f2() external payable returns (uint);
}
interface C1BBB is C1BBBB {
	function f0() override
	external pure returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
interface C1BB is C1BBB {
	function f0() override
	external pure returns (uint);
	function f1() override
	external payable returns (uint);
}
abstract contract C1B is C1BB {
	function f0() virtual external pure
	override
	returns (uint);
	function f1() external payable
	override
	returns (uint)
	{
		return 552862047;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 739959938;
	}
}
contract C1 is C1B {
	function f0() external pure
	override
	returns (uint)
	{
		return 1174276176;
	}
}
abstract contract C2B {
	function f0() virtual public payable
	
	returns (uint);
}
contract C2 is C2B {
	function f0() public payable
	override
	returns (uint)
	{
		return 1980975752;
	}
}
library L3 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
library L4 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
contract C5 {
	function f0() public view
	
	returns (uint)
	{
		return 1150688209;
	}
}
abstract contract C6BB {
	function f0() virtual public view
	
	returns (uint)
	{
		return 1313839054;
	}
}
abstract contract C6B is C6BB {
	function f0() virtual public view
	override
	returns (uint)
	{
		return 194715758;
	}
	function f1() public payable
	
	returns (uint)
	{
		return 1695590273;
	}
}
contract C6 is C6B {
}
library L7 {
	function f0(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}
contract C8B {
	function f0() public view
	
	returns (uint)
	{
		return 1516106925;
	}
}
contract C8 is C8B {
}
library L9 {
	function f0(uint) public view returns (uint)
	{
		return 424238335;
	}
}
library L10 {
	function f0(uint) public view returns (uint)
	{
		return 719885386;
	}
}
abstract contract C11BB {
}
abstract contract C11B is C11BB {
	function f0() virtual public pure
	
	returns (uint);
}
contract C11 is C11B {
	function f0() public pure
	override
	returns (uint)
	{
		return 489392714;
	}
}
abstract contract C12BB {
	function f0() virtual public view
	
	returns (uint)
	{
		return 138295049;
	}
}
abstract contract C12B is C12BB {
	function f1() public payable
	
	returns (uint)
	{
		return 40050478;
	}
}
contract C12 is C12B {
	function f0() public view
	override
	returns (uint)
	{
		return 1797564807;
	}
}
interface C13BBB {
	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface C13BB is C13BBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface C13B is C13BB {
	function f0() override
	external view returns (uint);
}
contract C13 is C13B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1195680747;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 668136804;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1733068100;
	}
}
library L14 {
	function f0(uint) public view returns (uint)
	{
		return 1649760492;
	}
}
abstract contract C15B {
	function f0() virtual public view
	
	returns (uint);
}
contract C15 is C15B {
	function f0() public view
	override
	returns (uint)
	{
		return 636777697;
	}
}
library L16 {
	function f0(uint) public pure returns (uint)
	{
		return 596516649;
	}
}
contract C {
	using L10 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 719885386)
			return 1;
		return 0;
	}
}
