
pragma solidity >=0.0;





interface I0BB {

}
interface I0B is I0BB {

}



interface I0BBBBB {

	function f0() external payable returns (uint);
}
interface I0BBBB is I0BBBBB {

	function f0() override
	external payable returns (uint);
}
interface I0BBB is I0BB, I0BBBB {

	function f1() external payable returns (uint);
}


interface I0BBBBBBB {

}
interface I0BBBBBB is I0BBB, I0BBBBBBB {

}
interface I0 is I0B, I0BBB, I0BBBBBB {

}


interface I1B {

	function f0() external payable returns (uint);
}




interface I1BBBBB {

	function f0() external payable returns (uint);
}




interface I1BBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I1BBBBBBBB is I1BBBBBBBBB {

	function f1() external view returns (uint);
}
interface I1BBBBBBB is I1BBBBBBBB {

}


interface I1BBBBBBBBBBB {

}
interface I1BBBBBBBBBB is I1BBBBBBBB, I1BBBBBBBBBBB {

}
interface I1BBBBBB is I1BBBBB, I1BBBBBBB, I1BBBBBBBBBB {

	function f0() override(I1BBBBB, I1BBBBBBBBB)
	external payable returns (uint);
}
interface I1BBBB is I1BBBBB, I1BBBBBB {

	function f0() override(I1BBBBB, I1BBBBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface I1BBB is I1BBBB {

	function f0() override
	external payable returns (uint);
}






interface I1BBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBB {

}
interface I1BBBBBBBBBBBBB is I1BBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBB is I1BBBB, I1BBBBBBBBBBBBB {

	function f0() override(I1BBBB, I1BBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface I1BB is I1B, I1BBB, I1BBBBBBBBBBBB {

	function f0() override(I1B, I1BBB, I1BBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I1BBBB, I1BBBBBBBBBBBB)
	external view returns (uint);
}










interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I1BBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBB {

}


interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1BBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1BBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
}


interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1BBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBB {

}
interface I1BBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBB {

	function f1() override
	external view returns (uint);
}






interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1BBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBB is I1BB, I1BBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1BB, I1BBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I1BB, I1BBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I1 is I1B, I1BB, I1BBBBBBBBBBBBBBBBBB {

	function f0() override(I1B, I1BB, I1BBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I1BB, I1BBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}


interface I2B {

	function f0() external payable returns (uint);
}







interface I2BBBBBBBB {

	function f0() external payable returns (uint);
}
interface I2BBBBBBB is I2BBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface I2BBBBBB is I2BBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}


interface I2BBBBBBBBBB {

}
interface I2BBBBBBBBB is I2BBBBBBB, I2BBBBBBBBBB {

	function f1() override
	external view returns (uint);
}
interface I2BBBBB is I2BBBBBB, I2BBBBBBBBB {

	function f0() override(I2BBBBBB, I2BBBBBBB)
	external payable returns (uint);
	function f1() override(I2BBBBBB, I2BBBBBBBBB)
	external view returns (uint);
}
interface I2BBBB is I2BBBBB {

	function f1() override
	external view returns (uint);
}
interface I2BBB is I2BBBB {

	function f0() override
	external payable returns (uint);
}





interface I2BBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBB is I2BBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBB is I2BBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBB is I2BBB, I2BBBBBBBBBBBB {

	function f1() override
	external view returns (uint);
}
interface I2BB is I2B, I2BBB, I2BBBBBBBBBBB {

	function f0() override(I2B, I2BBB)
	external payable returns (uint);
	function f1() override(I2BBBB, I2BBBBBBBBBBB)
	external view returns (uint);
}










interface I2BBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}


interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I2BBBBBBBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I2BBBBBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
}

interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBB {

}






interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I2BBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I2BBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface I2BBBBBBBBBBBBBBBB is I2BB, I2BBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I2BB, I2BBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I2BB, I2BBBBBBBBBBBBBBBBBBB, I2BBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I2 is I2B, I2BB, I2BBBBBBBBBBBBBBBB {

	function f0() override(I2B, I2BB, I2BBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I2BB, I2BBBBBBBBBBBBBBBB)
	external view returns (uint);
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

