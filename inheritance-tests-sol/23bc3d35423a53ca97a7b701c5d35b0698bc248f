pragma solidity >=0.0;
interface C0BBB {
	function f0() external payable returns (uint);
}
interface C0BB is C0BBB {
	function f0() override
	external payable returns (uint);
}
contract C0B is C0BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1216431607;
	}
}
contract C0 is C0B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1271382373;
	}
}
interface I1BBBB {
	function f0() external view returns (uint);
}
interface I1BBB is I1BBBB {
}
interface I1BB is I1BBB {
	function f0() override
	external view returns (uint);
}
interface I1B is I1BB {
	function f0() override
	external view returns (uint);
}
interface I1BBBBB is I1BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I1BBBBBBBBB {
	function f0() external view returns (uint);
}
interface I1BBBBBBBB is I1BBBBBBBBB {
}
interface I1BBBBBBB is I1BBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I1BBBBBB is I1BBBBB, I1BBBBBBB {
	function f0() override(I1BBBBB, I1BBBBBBB)
	external view returns (uint);
}
interface I1 is I1B, I1BBBBB, I1BBBBBB {
	function f0() override(I1B, I1BBBBB, I1BBBBBB)
	external view returns (uint);
}
interface I2BBB {
	function f0() external view returns (uint);
}
interface I2BB is I2BBB {
	function f0() override
	external view returns (uint);
}
interface I2B is I2BB {
}
interface I2BBBBB {
	function f0() external view returns (uint);
}
interface I2BBBB is I2BB, I2BBBBB {
	function f0() override(I2BB, I2BBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I2 is I2B, I2BBBB {
	function f0() override(I2BB, I2BBBB)
	external view returns (uint);
	function f2() external view returns (uint);
}
library L3 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1957747793;
	}
}
interface I4 {
	function f0() external view returns (uint);
}
interface C5BBB {
	function f0() external payable returns (uint);
}
interface C5BB is C5BBB {
}
contract C5B is C5BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 127929082;
	}
}
contract C5 is C5B {
}
library L6 {
	function f0(uint) internal pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) private pure returns (uint)
	{
		return 719885386;
	}
}
interface I7BBB {
}
interface I7BB is I7BBB {
	function f0() external view returns (uint);
}
interface I7B is I7BB {
	function f0() override
	external view returns (uint);
}
interface I7BBBBBB {
	function f0() external view returns (uint);
}
interface I7BBBBB is I7BBBBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I7BBBB is I7B, I7BBBBB {
	function f0() override(I7B, I7BBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I7 is I7B, I7BBBB {
	function f0() override(I7B, I7BBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1271382373)
				return 1;
			C0B tc1 = new C0B();
			if (tc1.f0() != 1216431607)
				return 2;
			C5 tc2 = new C5();
			if (tc2.f0() != 127929082)
				return 3;
			C5B tc3 = new C5B();
			if (tc3.f0() != 127929082)
				return 4;
			return 0;
	}
}
