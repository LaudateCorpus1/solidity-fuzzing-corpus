pragma solidity >=0.0;
interface I0 {
	function f0() external payable returns (uint);
}
interface C1BBBBBB {
	function f0() external view returns (uint);
}
interface C1BBBBB is C1BBBBBB {
}
interface C1BBBB is C1BBBBB {
	function f0() override
	external view returns (uint);
}
contract C1BBB is C1BBBB {
	function f0() external view
	override
	returns (uint)
	{
		return 407355683;
	}
}
contract C1BB is C1BBB {
}
contract C1B is C1BB {
}
contract C1 is C1B {
}
interface C2BB {
	function f0() external view returns (uint);
}
interface C2B is C2BB {
}
contract C2 is C2B {
	function f0() external view
	override
	returns (uint)
	{
		return 1250328747;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 407355683)
				return 1;
			C1B tc1 = new C1B();
			if (tc1.f0() != 407355683)
				return 2;
			C1BB tc2 = new C1BB();
			if (tc2.f0() != 407355683)
				return 3;
			C1BBB tc3 = new C1BBB();
			if (tc3.f0() != 407355683)
				return 4;
			C2 tc4 = new C2();
			if (tc4.f0() != 1250328747)
				return 5;
			return 0;
	}
}
