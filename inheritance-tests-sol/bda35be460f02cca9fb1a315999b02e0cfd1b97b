
pragma solidity >=0.0;






interface I0BBB {

	function f0() external payable returns (uint);
}
interface I0BB is I0BBB {

}
interface I0B is I0BB {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
	function f2() external view returns (uint);
}
interface I0 is I0B {

}


contract C1B {

}
contract C1 is C1B {

	function f0() public view
	
	returns (uint)
	{
		return 854716505;
	}
}


interface I3B {

}
interface I3 is I3B {

	function f0() external payable returns (uint);
}
library L4 {

	function f0(uint) external pure returns (uint)
	{
		return 719885386;
	}
}


contract C {
	using L4 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 719885386)
			return 1;
		return 0;
	}
}

