
pragma solidity >=0.0;


library L0 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}

contract C2 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 182605794;
	}
}
library L3 {

	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}





interface C4BBBB {

	function f0() external view returns (uint);
}
interface C4BBB is C4BBBB {

}
interface C4BB is C4BBB {

}
interface C4B is C4BB {

}
contract C4 is C4B {

	function f0() external view
	override
	returns (uint)
	{
		return 192302371;
	}
}

contract C5 {

	function f0() public view
	
	returns (uint)
	{
		return 1203428207;
	}
}
library L6 {

	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
library L7 {

	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}




interface C8BBB {

	function f0() external payable returns (uint);
}
interface C8BB is C8BBB {

}
abstract contract C8B is C8BB {

	function f0() virtual external payable
	override
	returns (uint);
}
contract C8 is C8B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 914937185;
	}
}



abstract contract C9BB {

}
contract C9B is C9BB {

}



interface C9BBBBB {

	function f0() external payable returns (uint);
}
interface C9BBBB is C9BBBBB {

}
interface C9BBB is C9BBBB {

	function f0() override
	external payable returns (uint);
}
contract C9 is C9B, C9BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1947433875;
	}
}


contract C {
	using L7 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1714636915)
			return 1;
		return 0;
	}
}

