pragma solidity >=0.0;
contract C0B {
}
contract C0 is C0B {
	function f0() public view
	
	returns (uint)
	{
		return 5889062;
	}
}
abstract contract C1B {
}
interface C1BBBBBBBB {
}
interface C1BBBBBBB is C1BBBBBBBB {
}
interface C1BBBBBB is C1BBBBBBB {
}
interface C1BBBBB is C1BBBBBB {
}
interface C1BBBB is C1BBBBB {
}
interface C1BBBBBBBBBBBBBBBB {
}
interface C1BBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBB {
}
interface C1BBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBB {
}
interface C1BBBBBBBBBBBBB is C1BBBBBBBBBBBBBB {
}
interface C1BBBBBBBBBBBB is C1BBBBBBBBBBBBB {
}
interface C1BBBBBBBBBBB is C1BBBBBBBBBBBB {
}
interface C1BBBBBBBBBB is C1BBBBBBBBBBB {
}
interface C1BBBBBBBBB is C1BBBB, C1BBBBBBBBBB {
}
interface C1BBB is C1BBBB, C1BBBBBBBBB {
}
contract C1BB is C1B, C1BBB {
}
interface C1BBBBBBBBBBBBBBBBBBB {
}
interface C1BBBBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBBBBB {
}
contract C1BBBBBBBBBBBBBBBBB is C1B, C1BBBBBBBBBBBBBBBBBB {
}
interface C1BBBBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface C1BBBBBBBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C1BBBBBBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
contract C1BBBBBBBBBBBBBBBBBBBBBBB is C1BB {
}
interface C1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface C1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface C1BBBBBBBBBBBBBBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface C1BBBBBBBBBBBBBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface C1BBBBBBBBBBBBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface C1BBBBBBBBBBBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBBBBBBBBBBBB {
}
contract C1BBBBBBBBBBBBBBBBBBBBBBBB is C1BBBBBBBBBBBBBBBBBBBBBBB, C1BBBBBBBBBBBBBBBBBBBBBBBBB {
}
contract C1 is C1B, C1BB, C1BBBBBBBBBBBBBBBBB, C1BBBBBBBBBBBBBBBBBBBB, C1BBBBBBBBBBBBBBBBBBBBBBB, C1BBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1363731580;
	}
}
interface I2 {
	function f0() external view returns (uint);
}
interface C3BB {
	function f0() external view returns (uint);
}
interface C3BBB is C3BB {
	function f1() external view returns (uint);
}
interface C3B is C3BB, C3BBB {
	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface C3BBBBB {
	function f0() external view returns (uint);
}
interface C3BBBB is C3B, C3BBBBB {
	function f0() override(C3B, C3BBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
contract C3 is C3B, C3BBBB {
	function f0() virtual external view
	override(C3BBBB, C3B)
	returns (uint)
	{
		return 587750710;
	}
	function f1() external view
	override(C3BBBB, C3BBB)
	returns (uint)
	{
		return 766918086;
	}
	function f2() virtual external payable
	override(C3BBBB, C3B)
	returns (uint)
	{
		return 311420103;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
