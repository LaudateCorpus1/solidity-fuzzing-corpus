
pragma solidity >=0.0;






interface C1BBB {

	function f0() external payable returns (uint);
}
interface C1BB is C1BBB {

	function f0() override
	external payable returns (uint);
}
contract C1B is C1BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 407355683;
	}
}
contract C1 is C1B {

}

interface I2 {

	function f0() external view returns (uint);
}



interface I3BB {

	function f0() external view returns (uint);
}
interface I3B is I3BB {

	function f1() external payable returns (uint);
}
interface I3 is I3B {

}
library L4 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
library L6 {

	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 407355683)
				return 1;
			C1B tc1 = new C1B();
			if (tc1.f0() != 407355683)
				return 2;
			return 0;
	}
}

