
pragma solidity >=0.0;





interface I1BB {

	function f0() external payable returns (uint);
}
interface I1B is I1BB {

}
interface I1 is I1B {

	function f1() external payable returns (uint);
}




interface I3BBB {

	function f0() external payable returns (uint);
}
interface I3BB is I3BBB {

}
interface I3B is I3BB {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I3 is I3B {

	function f2() external payable returns (uint);
}
library L5 {

	function f0(uint) public pure returns (uint)
	{
		return 1726956429;
	}
	function f1(uint) external pure returns (uint)
	{
		return 336465782;
	}
}



interface I6BB {

	function f0() external payable returns (uint);
}
interface I6B is I6BB {

	function f0() override
	external payable returns (uint);
}
interface I6 is I6B {

	function f1() external payable returns (uint);
}


contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1726956429)
			return 1;
		return 0;
	}
}

