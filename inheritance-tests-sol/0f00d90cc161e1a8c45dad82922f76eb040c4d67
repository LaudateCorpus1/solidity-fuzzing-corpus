
pragma solidity >=0.0;




interface I0B {

	function f0() external payable returns (uint);
}
interface I0 is I0B {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}


interface I1B {

	function f0() external payable returns (uint);
}
interface I1 is I1B {

	function f1() external payable returns (uint);
}





interface I2BBBB {

	function f0() external view returns (uint);
}
interface I2BBB is I2BBBB {

	function f0() override
	external view returns (uint);
}
interface I2BB is I2BBB {

}
interface I2B is I2BB {

	function f0() override
	external view returns (uint);
}
interface I2 is I2B {

}





interface I4BBBB {

	function f0() external view returns (uint);
}
interface I4BBB is I4BBBB {

	function f0() override
	external view returns (uint);
}
interface I4BB is I4BBB {

}
interface I4B is I4BB {

}
interface I4 is I4B {

	function f0() override
	external view returns (uint);
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

