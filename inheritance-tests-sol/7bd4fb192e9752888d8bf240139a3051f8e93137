pragma solidity >=0.0;
interface C0BBB {
	function f0() external payable returns (uint);
}
interface C0BB is C0BBB {
	function f0() override
	external payable returns (uint);
}
interface C0B is C0BB {
}
contract C0 is C0B {
	function f0() external payable
	override
	returns (uint)
	{
		return 375855352;
	}
}
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
interface C2BBBB {
	function f0() external payable returns (uint);
}
interface C2BBB is C2BBBB {
	function f0() override
	external payable returns (uint);
}
interface C2BB is C2BBB {
}
interface C2B is C2BB {
}
contract C2 is C2B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1805831206;
	}
}
interface C3BBBB {
	function f0() external payable returns (uint);
}
interface C3BBB is C3BBBB {
}
interface C3BB is C3BBB {
	function f0() override
	external payable returns (uint);
}
interface C3B is C3BB {
	function f0() override
	external payable returns (uint);
}
contract C3 is C3B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1369023381;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
