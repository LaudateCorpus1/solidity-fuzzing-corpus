pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
interface I2BBB {
	function f0() external payable returns (uint);
}
interface I2BB is I2BBB {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I2B is I2BB {
	function f2() external view returns (uint);
}
interface I2BBBBB {
	function f0() external payable returns (uint);
}
interface I2BBBBBB is I2BBBBB {
	function f1() external payable returns (uint);
}
interface I2BBBB is I2B, I2BBBBB, I2BBBBBB {
	function f0() override(I2BB, I2BBBBB)
	external payable returns (uint);
	function f1() override(I2BB, I2BBBBBB)
	external payable returns (uint);
}
interface I2 is I2B, I2BBBB {
	function f0() override(I2BB, I2BBBB)
	external payable returns (uint);
	function f1() override(I2BB, I2BBBB)
	external payable returns (uint);
}
interface I3 {
	function f0() external view returns (uint);
}
contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}
