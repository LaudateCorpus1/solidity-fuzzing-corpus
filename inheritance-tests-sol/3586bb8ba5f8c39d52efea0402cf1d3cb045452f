
pragma solidity >=0.0;





interface I0BB {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I0B is I0BB {

	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I0 is I0B {

}




interface C1BBB {

	function f0() external payable returns (uint);
}


interface C1BBBBB {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C1BBBB is C1BBB, C1BBBBB {

	function f0() override(C1BBB, C1BBBBB)
	external payable returns (uint);
}
interface C1BB is C1BBB, C1BBBB {

	function f0() override(C1BBB, C1BBBB)
	external payable returns (uint);
}
interface C1B is C1BB {

}
contract C1 is C1B {

	function f0() external payable
	override
	returns (uint)
	{
		return 1271135913;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1882556969;
	}
}







interface I2BBBBBB {

	function f0() external payable returns (uint);
}
interface I2BBBBB is I2BBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I2BBBB is I2BBBBB {

}
interface I2BBB is I2BBBB {

}
interface I2BB is I2BBB {

}
interface I2B is I2BB {

	function f0() override
	external payable returns (uint);
}
interface I2 is I2B {

	function f0() override
	external payable returns (uint);
}




interface C3BBB {

}


interface C3BBBBB {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
interface C3BBBB is C3BBB, C3BBBBB {

}
interface C3BB is C3BBB, C3BBBB {

	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
interface C3B is C3BB {

	function f0() override
	external payable returns (uint);
}
contract C3 is C3B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 928270262;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1814467857;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1659675143;
	}
}




interface C4BBB {

}


interface C4BBBBB {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
interface C4BBBB is C4BBB, C4BBBBB {

	function f1() override
	external view returns (uint);
}
interface C4BB is C4BBB, C4BBBB {

	function f1() override
	external view returns (uint);
}
interface C4B is C4BB {

	function f0() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
contract C4 is C4B {

	function f0() external payable
	override
	returns (uint)
	{
		return 2130959757;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 352020689;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 719080959;
	}
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

