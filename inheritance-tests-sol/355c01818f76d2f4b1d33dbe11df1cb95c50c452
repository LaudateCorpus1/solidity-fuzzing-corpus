pragma solidity >=0.0;
interface C0BBBBB {
	function f0() external payable returns (uint);
}
interface C0BBBB is C0BBBBB {
}
interface C0BBBBBB is C0BBBBB {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
	function f2() external payable returns (uint);
}
interface C0BBB is C0BBBB, C0BBBBBB {
	function f0() override(C0BBBBB, C0BBBBBB)
	external payable returns (uint);
}
interface C0BB is C0BBB {
}
interface C0B is C0BB {
}
interface C0BBBBBBBBB {
	function f0() external payable returns (uint);
}
interface C0BBBBBBBB is C0BBBBBBBBB {
}
interface C0BBBBBBB is C0B, C0BBBBBBBB {
	function f0() override(C0BBB, C0BBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() external view returns (uint);
}
contract C0 is C0B, C0BBBBBBB {
	function f0() virtual external payable
	override(C0BBBBBBB, C0BBB)
	returns (uint)
	{
		return 914937185;
	}
	function f1() virtual external payable
	override(C0BBBBBBB, C0BBBBBB)
	returns (uint)
	{
		return 1402304087;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 2064876628;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1842513780;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
