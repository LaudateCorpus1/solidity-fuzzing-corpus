
pragma solidity >=0.0;







interface I0BBBB {

	function f0() external payable returns (uint);
}
interface I0BBB is I0BBBB {

	function f0() override
	external payable returns (uint);
}
interface I0BB is I0BBB {

}






interface I0BBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I0BBBBBBBBB is I0BBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I0BBBBBBBB is I0BBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I0BBBBBBB is I0BBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I0BBBBBB is I0BBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I0BBBBB is I0BBB, I0BBBBBB {

	function f0() override(I0BBB, I0BBBBBB)
	external payable returns (uint);
}
interface I0B is I0BB, I0BBBBB {

	function f0() override(I0BBB, I0BBBBB)
	external payable returns (uint);
}
interface I0 is I0B {

	function f0() override
	external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

