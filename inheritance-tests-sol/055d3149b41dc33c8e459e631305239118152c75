pragma solidity >=0.0;
library L0 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) external pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}
library L1 {
	function f0(uint) public view returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1957747793;
	}
}
contract C2 {
	function f0() public payable
	
	returns (uint)
	{
		return 645697443;
	}
}
contract C3B {
	function f0() public view
	
	returns (uint)
	{
		return 2031102142;
	}
}
contract C3 is C3B {
}
contract C4B {
	function f0() public view
	
	returns (uint)
	{
		return 2113076344;
	}
}
contract C4 is C4B {
}
interface C5BBBBB {
	function f0() external payable returns (uint);
}
interface C5BBBB is C5BBBBB {
}
contract C5BBB is C5BBBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1356035169;
	}
}
contract C5BB is C5BBB {
}
contract C5B is C5BB {
	function f1() public view
	
	returns (uint)
	{
		return 1943007398;
	}
}
contract C5 is C5B {
	function f2() public view
	
	returns (uint)
	{
		return 2015020308;
	}
}
library L7 {
	function f0(uint) internal pure returns (uint)
	{
		return 424238335;
	}
}
contract C8 {
	function f0() public view
	
	returns (uint)
	{
		return 2111632871;
	}
}
interface C9BBBB {
	function f0() external payable returns (uint);
}
interface C9BBB is C9BBBB {
	function f0() override
	external payable returns (uint);
}
contract C9BB is C9BBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1774893867;
	}
}
contract C9B is C9BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 921256890;
	}
}
contract C9 is C9B {
	function f1() public view
	
	returns (uint)
	{
		return 1389449997;
	}
}
contract C10B {
	function f0() public view
	
	returns (uint)
	{
		return 2079025730;
	}
}
contract C10BB is C10B {
	function f1() public view
	
	returns (uint)
	{
		return 445221226;
	}
}
contract C10 is C10B, C10BB {
	function f2() public pure
	
	returns (uint)
	{
		return 552862047;
	}
}
contract C11 {
	function f0() public payable
	
	returns (uint)
	{
		return 424589468;
	}
}
contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1714636915)
			return 1;
		return 0;
	}
}
