
pragma solidity >=0.0;







interface C0BBBB {

	function f0() external payable returns (uint);
}
interface C0BBB is C0BBBB {

}
interface C0BB is C0BBB {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
	function f2() external payable returns (uint);
}
interface C0B is C0BB {

}
contract C0 is C0B {

	function f0() external payable
	override
	returns (uint)
	{
		return 1596680831;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1203428207;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 1738531149;
	}
}
library L1 {

	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) external view returns (uint)
	{
		return 846930886;
	}
}
library L2 {

	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}





interface C3BBBB {

	function f0() external payable returns (uint);
}
interface C3BBB is C3BBBB {

}
interface C3BB is C3BBB {

	function f1() external payable returns (uint);
}
interface C3B is C3BB {

	function f0() override
	external payable returns (uint);
}



interface C3BBBBBBB {

}


interface C3BBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C3BBBBBBBB is C3BBBBBBB, C3BBBBBBBBB {

}
interface C3BBBBBB is C3BBBBBBB, C3BBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface C3BBBBB is C3BB, C3BBBBBB {

	function f0() override(C3BBBB, C3BBBBBB)
	external payable returns (uint);
	function f1() override(C3BB, C3BBBBBB)
	external payable returns (uint);
}
contract C3 is C3B, C3BBBBB {

	function f0() external payable
	override(C3BBBBB, C3B)
	returns (uint)
	{
		return 890442452;
	}
	function f1() external payable
	override(C3BBBBB, C3BB)
	returns (uint)
	{
		return 1105724094;
	}
}


contract C4B {

}

abstract contract C4BB is C4B {

}









interface C4BBBBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C4BBBBBBBBBB is C4BBBBBBBBBBB {

	function f1() override
	external pure returns (uint);
}

interface C4BBBBBBBBBBBB is C4BBBBBBBBBB {

	function f2() external payable returns (uint);
}
interface C4BBBBBBBBB is C4BBBBBBBBBB, C4BBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C4BBBBBBBB is C4BBBBBBBBB {

	function f2() override
	external payable returns (uint);
	function f4() override
	external view returns (uint);
}

interface C4BBBBBBBBBBBBB is C4BBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() external payable returns (uint);
}
interface C4BBBBBBB is C4BBBBBBBB, C4BBBBBBBBBBBBB {

	function f0() override(C4BBBBBBBBB, C4BBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(C4BBBBBBBB, C4BBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(C4BBBBBBBBB, C4BBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(C4BBBBBBBB, C4BBBBBBBBB)
	external view returns (uint);
}
contract C4BBBBBB is C4BBBBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 352020689;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 719080959;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 163677341;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 374787159;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 80100956;
	}
	function f5() virtual external payable
	override
	returns (uint)
	{
		return 1003765604;
	}
}
contract C4BBBBB is C4BBBBBB {

	function f3() external view
	override
	returns (uint)
	{
		return 837051536;
	}
}
contract C4BBBB is C4BBBBB {

	function f2() external payable
	override
	returns (uint)
	{
		return 1869683330;
	}
	function f5() virtual external payable
	override
	returns (uint)
	{
		return 1318652553;
	}
}
contract C4BBB is C4BB, C4BBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1715708819;
	}
	function f5() virtual external payable
	override
	returns (uint)
	{
		return 583514338;
	}
}
abstract contract C4 is C4B, C4BB, C4BBB {

}
library L5 {

	function f0(uint) public view returns (uint)
	{
		return 1189641421;
	}
}
library L6 {

	function f0(uint) public view returns (uint)
	{
		return 1025202362;
	}
	function f1(uint) external view returns (uint)
	{
		return 1350490027;
	}
}
library L8 {

	function f0(uint) public view returns (uint)
	{
		return 783368690;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1102520059;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1596680831)
				return 1;
			if (tc0.f1() != 1203428207)
				return 2;
			if (tc0.f2() != 1738531149)
				return 3;
			C3 tc1 = new C3();
			if (tc1.f0() != 890442452)
				return 4;
			if (tc1.f1() != 1105724094)
				return 5;
			C4BBB tc2 = new C4BBB();
			if (tc2.f0() != 1715708819)
				return 6;
			if (tc2.f1() != 719080959)
				return 7;
			if (tc2.f2() != 1869683330)
				return 8;
			if (tc2.f3() != 837051536)
				return 9;
			if (tc2.f4() != 80100956)
				return 10;
			if (tc2.f5() != 583514338)
				return 11;
			C4BBBB tc3 = new C4BBBB();
			if (tc3.f0() != 352020689)
				return 12;
			if (tc3.f1() != 719080959)
				return 13;
			if (tc3.f2() != 1869683330)
				return 14;
			if (tc3.f3() != 837051536)
				return 15;
			if (tc3.f4() != 80100956)
				return 16;
			if (tc3.f5() != 1318652553)
				return 17;
			C4BBBBB tc4 = new C4BBBBB();
			if (tc4.f0() != 352020689)
				return 18;
			if (tc4.f1() != 719080959)
				return 19;
			if (tc4.f2() != 163677341)
				return 20;
			if (tc4.f3() != 837051536)
				return 21;
			if (tc4.f4() != 80100956)
				return 22;
			if (tc4.f5() != 1003765604)
				return 23;
			C4BBBBBB tc5 = new C4BBBBBB();
			if (tc5.f0() != 352020689)
				return 24;
			if (tc5.f1() != 719080959)
				return 25;
			if (tc5.f2() != 163677341)
				return 26;
			if (tc5.f3() != 374787159)
				return 27;
			if (tc5.f4() != 80100956)
				return 28;
			if (tc5.f5() != 1003765604)
				return 29;
			return 0;
	}
}

