
pragma solidity >=0.0;




contract C0B {

	function f0() public view
	
	returns (uint)
	{
		return 1013832414;
	}
}
contract C0 is C0B {

}




interface I1BBB {

	function f0() external view returns (uint);
}
interface I1BB is I1BBB {

	function f0() override
	external view returns (uint);
}
interface I1B is I1BB {

}
interface I1 is I1B {

}


interface I2B {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}




interface I2BBBBB {

	function f0() external payable returns (uint);
}
interface I2BBBB is I2BBBBB {

}
interface I2BBB is I2BBBB {

	function f0() override
	external payable returns (uint);
}
interface I2BB is I2B, I2BBB {

	function f0() override(I2B, I2BBB)
	external payable returns (uint);
}
interface I2 is I2B, I2BB {

	function f0() override(I2B, I2BB)
	external payable returns (uint);
}

contract C3 {

	function f0() public view
	
	returns (uint)
	{
		return 707998866;
	}
}


contract C4B {

}

contract C4BB is C4B {

}
contract C4 is C4B, C4BB {

	function f0() public view
	
	returns (uint)
	{
		return 1217177185;
	}
}



contract C6BB {

	function f0() private pure
	
	returns (uint)
	{
		return 1354798862;
	}
	function f1() virtual internal pure
	
	returns (uint)
	{
		return 176365511;
	}
}
contract C6B is C6BB {

}
contract C6 is C6B {

	function f2() virtual public pure
	
	returns (uint)
	{
		return 1062464241;
	}
}


interface I8B {

	function f0() external view returns (uint);
}
interface I8 is I8B {

}

contract C9 {

	function f0() external pure
	
	returns (uint)
	{
		return 1642509111;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1013832414)
				return 1;
			C0B tc1 = new C0B();
			if (tc1.f0() != 1013832414)
				return 2;
			C3 tc2 = new C3();
			if (tc2.f0() != 707998866)
				return 3;
			C4 tc3 = new C4();
			if (tc3.f0() != 1217177185)
				return 4;
			C6 tc4 = new C6();
			if (tc4.f2() != 1062464241)
				return 5;
			C9 tc5 = new C9();
			if (tc5.f0() != 1642509111)
				return 6;
			return 0;
	}
}

