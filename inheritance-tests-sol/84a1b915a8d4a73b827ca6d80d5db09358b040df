
pragma solidity >=0.0;














interface C0BBBBBBBBBBB {

	function f0() external pure returns (uint);
}
interface C0BBBBBBBBBB is C0BBBBBBBBBBB {

	function f1() external payable returns (uint);
}
interface C0BBBBBBBBB is C0BBBBBBBBBB {

	function f0() override
	external pure returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C0BBBBBBBB is C0BBBBBBBBB {

}

interface C0BBBBBBBBBBBB is C0BBBBBBBBB {

	function f4() external view returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB, C0BBBBBBBBBBBB {

	function f2() override
	external view returns (uint);
}
contract C0BBBBBB is C0BBBBBBB {

	function f0() external pure
	override
	returns (uint)
	{
		return 1931656580;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1936030137;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 353718330;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1947433875;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 2010567813;
	}
}
contract C0BBBBB is C0BBBBBB {

	function f3() virtual external view
	override
	returns (uint)
	{
		return 1696049367;
	}
	function f5() internal view
	
	returns (uint)
	{
		return 1479919876;
	}
}
contract C0BBBB is C0BBBBB {

}
contract C0BBB is C0BBBB {

	function f2() external view
	override
	returns (uint)
	{
		return 1814467857;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 153892771;
	}
}
contract C0BB is C0BBB {

}
contract C0B is C0BB {

}

contract C0BBBBBBBBBBBBB is C0B {

}
contract C0 is C0B, C0BBBBBBBBBBBBB {

	function f6() virtual public view
	
	returns (uint)
	{
		return 389431516;
	}
}



interface I1BB {

}
interface I1B is I1BB {

	function f0() external payable returns (uint);
}
interface I1 is I1B {

}


contract C2B {

	function f0() public view
	
	returns (uint)
	{
		return 1587659744;
	}
}
contract C2 is C2B {

}


interface C3B {

	function f0() external view returns (uint);
}


interface C3BBB {

	function f0() external view returns (uint);
}
interface C3BB is C3B, C3BBB {

	function f0() override(C3B, C3BBB)
	external view returns (uint);
}
contract C3 is C3B, C3BB {

	function f0() virtual external view
	override(C3BB, C3B)
	returns (uint)
	{
		return 884730203;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1951824771;
	}
}





interface C4BBBB {

	function f0() external view returns (uint);
}
interface C4BBB is C4BBBB {

}
interface C4BB is C4BBB {

}
interface C4B is C4BB {

}
contract C4 is C4B {

	function f0() external view
	override
	returns (uint)
	{
		return 276590098;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1931656580)
				return 1;
			if (tc0.f1() != 1936030137)
				return 2;
			if (tc0.f2() != 1814467857)
				return 3;
			if (tc0.f3() != 153892771)
				return 4;
			if (tc0.f4() != 2010567813)
				return 5;
			if (tc0.f6() != 389431516)
				return 6;
			C0B tc1 = new C0B();
			if (tc1.f0() != 1931656580)
				return 7;
			if (tc1.f1() != 1936030137)
				return 8;
			if (tc1.f2() != 1814467857)
				return 9;
			if (tc1.f3() != 153892771)
				return 10;
			if (tc1.f4() != 2010567813)
				return 11;
			C0BB tc2 = new C0BB();
			if (tc2.f0() != 1931656580)
				return 12;
			if (tc2.f1() != 1936030137)
				return 13;
			if (tc2.f2() != 1814467857)
				return 14;
			if (tc2.f3() != 153892771)
				return 15;
			if (tc2.f4() != 2010567813)
				return 16;
			C0BBB tc3 = new C0BBB();
			if (tc3.f0() != 1931656580)
				return 17;
			if (tc3.f1() != 1936030137)
				return 18;
			if (tc3.f2() != 1814467857)
				return 19;
			if (tc3.f3() != 153892771)
				return 20;
			if (tc3.f4() != 2010567813)
				return 21;
			C0BBBB tc4 = new C0BBBB();
			if (tc4.f0() != 1931656580)
				return 22;
			if (tc4.f1() != 1936030137)
				return 23;
			if (tc4.f2() != 353718330)
				return 24;
			if (tc4.f3() != 1696049367)
				return 25;
			if (tc4.f4() != 2010567813)
				return 26;
			C0BBBBB tc5 = new C0BBBBB();
			if (tc5.f0() != 1931656580)
				return 27;
			if (tc5.f1() != 1936030137)
				return 28;
			if (tc5.f2() != 353718330)
				return 29;
			if (tc5.f3() != 1696049367)
				return 30;
			if (tc5.f4() != 2010567813)
				return 31;
			C0BBBBBB tc6 = new C0BBBBBB();
			if (tc6.f0() != 1931656580)
				return 32;
			if (tc6.f1() != 1936030137)
				return 33;
			if (tc6.f2() != 353718330)
				return 34;
			if (tc6.f3() != 1947433875)
				return 35;
			if (tc6.f4() != 2010567813)
				return 36;
			C0BBBBBBBBBBBBB tc7 = new C0BBBBBBBBBBBBB();
			if (tc7.f0() != 1931656580)
				return 37;
			if (tc7.f1() != 1936030137)
				return 38;
			if (tc7.f2() != 1814467857)
				return 39;
			if (tc7.f3() != 153892771)
				return 40;
			if (tc7.f4() != 2010567813)
				return 41;
			C2 tc8 = new C2();
			if (tc8.f0() != 1587659744)
				return 42;
			C2B tc9 = new C2B();
			if (tc9.f0() != 1587659744)
				return 43;
			C3 tc10 = new C3();
			if (tc10.f0() != 884730203)
				return 44;
			if (tc10.f1() != 1951824771)
				return 45;
			C4 tc11 = new C4();
			if (tc11.f0() != 276590098)
				return 46;
			return 0;
	}
}

