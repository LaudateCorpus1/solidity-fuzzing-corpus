pragma solidity >=0.0;
interface I0BBBBBB {
	function f0() external view returns (uint);
}
interface I0BBBBBBB is I0BBBBBB {
	function f1() external view returns (uint);
}
interface I0BBBBB is I0BBBBBB, I0BBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() external view returns (uint);
}
interface I0BBBB is I0BBBBB {
}
interface I0BBB is I0BBBB {
	function f3() external payable returns (uint);
}
interface I0BB is I0BBB {
}
interface I0B is I0BB {
	function f2() override
	external view returns (uint);
}
interface I0 is I0B {
	function f2() override
	external view returns (uint);
	function f3() override
	external payable returns (uint);
}
interface C1BBB {
	function f0() external payable returns (uint);
}
interface C1BB is C1BBB {
	function f0() override
	external payable returns (uint);
}
abstract contract C1B is C1BB {
	function f0() virtual external payable
	override
	returns (uint);
}
contract C1 is C1B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 849178936;
	}
}
contract C2B {
}
interface C2BBB {
	function f0() external view returns (uint);
}
interface C2BB is C2BBB {
}
contract C2 is C2B, C2BB {
	function f0() external view
	override
	returns (uint)
	{
		return 1272185027;
	}
}
interface C3BBBBB {
}
interface C3BBBB is C3BBBBB {
}
interface C3BBB is C3BBBB {
	function f0() external view returns (uint);
}
interface C3BB is C3BBB {
	function f0() override
	external view returns (uint);
}
interface C3B is C3BB {
}
contract C3 is C3B {
	function f0() external view
	override
	returns (uint)
	{
		return 153892771;
	}
}
contract C4B {
}
contract C4 is C4B {
	function f0() public view
	
	returns (uint)
	{
		return 412013968;
	}
}
library L5 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
contract C6 {
	function f0() public view
	
	returns (uint)
	{
		return 1675824860;
	}
}
interface I7BB {
	function f0() external pure returns (uint);
}
interface I7B is I7BB {
	function f1() external payable returns (uint);
}
interface I7 is I7B {
}
abstract contract C8B {
}
interface C8BBBB {
	function f0() external view returns (uint);
}
interface C8BBB is C8BBBB {
	function f0() override
	external view returns (uint);
}
contract C8BB is C8B, C8BBB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 884730203;
	}
	function f1() public view
	
	returns (uint)
	{
		return 1951824771;
	}
}
contract C8 is C8B, C8BB {
	function f0() external view
	override
	returns (uint)
	{
		return 1500063655;
	}
}
library L9 {
	function f0(uint) public pure returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) private view returns (uint)
	{
		return 424238335;
	}
	function f2(uint) public pure returns (uint)
	{
		return 719885386;
	}
}
interface C10BBBBB {
	function f0() external payable returns (uint);
}
interface C10BBBB is C10BBBBB {
	function f0() override
	external payable returns (uint);
}
interface C10BBB is C10BBBB {
	function f0() override
	external payable returns (uint);
}
interface C10BB is C10BBB {
}
interface C10B is C10BB {
	function f0() override
	external payable returns (uint);
}
contract C10 is C10B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1447645967;
	}
	function f1() public view
	
	returns (uint)
	{
		return 200599677;
	}
}
interface C11BBBB {
	function f0() external view returns (uint);
}
interface C11BBB is C11BBBB {
	function f0() override
	external view returns (uint);
}
interface C11BB is C11BBB {
	function f0() override
	external view returns (uint);
}
interface C11B is C11BB {
	function f0() override
	external view returns (uint);
}
contract C11 is C11B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 243877847;
	}
}
library L12 {
	function f0(uint) public pure returns (uint)
	{
		return 1649760492;
	}
}
contract C13 {
	function f0() public view
	
	returns (uint)
	{
		return 1336273608;
	}
}
interface C14BBB {
	function f0() external payable returns (uint);
}
interface C14BB is C14BBB {
	function f0() override
	external payable returns (uint);
}
abstract contract C14B is C14BB {
	function f0() virtual external payable
	override
	returns (uint);
}
contract C14 is C14B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1925544752;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 849178936)
				return 1;
			C10 tc1 = new C10();
			if (tc1.f0() != 1447645967)
				return 2;
			if (tc1.f1() != 200599677)
				return 3;
			C11 tc2 = new C11();
			if (tc2.f0() != 243877847)
				return 4;
			C13 tc3 = new C13();
			if (tc3.f0() != 1336273608)
				return 5;
			C14 tc4 = new C14();
			if (tc4.f0() != 1925544752)
				return 6;
			C2 tc5 = new C2();
			if (tc5.f0() != 1272185027)
				return 7;
			C3 tc6 = new C3();
			if (tc6.f0() != 153892771)
				return 8;
			C4 tc7 = new C4();
			if (tc7.f0() != 412013968)
				return 9;
			C6 tc8 = new C6();
			if (tc8.f0() != 1675824860)
				return 10;
			C8 tc9 = new C8();
			if (tc9.f0() != 1500063655)
				return 11;
			if (tc9.f1() != 1951824771)
				return 12;
			C8BB tc10 = new C8BB();
			if (tc10.f0() != 884730203)
				return 13;
			if (tc10.f1() != 1951824771)
				return 14;
			return 0;
	}
}
