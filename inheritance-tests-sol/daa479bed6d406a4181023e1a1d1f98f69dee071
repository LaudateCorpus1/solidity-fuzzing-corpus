
pragma solidity >=0.0;




interface I0B {

	function f0() external view returns (uint);
}

interface I0BB is I0B {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I0 is I0B, I0BB {

	function f0() override(I0B, I0BB)
	external view returns (uint);
}

interface I1 {

	function f0() external view returns (uint);
}


contract C2B {

}
contract C2 is C2B {

	function f0() public view
	
	returns (uint)
	{
		return 1667683838;
	}
}



interface I4BB {

	function f0() external view returns (uint);
}
interface I4B is I4BB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I4 is I4B {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 1667683838)
				return 1;
			return 0;
	}
}

