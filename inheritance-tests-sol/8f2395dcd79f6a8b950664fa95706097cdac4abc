pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1681692777;
	}
}
interface I1B {
	function f0() external payable returns (uint);
}
interface I1BB is I1B {
	function f0() override
	external payable returns (uint);
}
interface I1 is I1B, I1BB {
	function f0() override(I1B, I1BB)
	external payable returns (uint);
	function f1() external payable returns (uint);
}
library L2 {
	function f0(uint) private pure returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) external pure returns (uint)
	{
		return 424238335;
	}
}
interface C3BBB {
	function f0() external payable returns (uint);
}
interface C3BBBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C3BBBB is C3BBB, C3BBBBB {
	function f0() override(C3BBB, C3BBBBB)
	external payable returns (uint);
}
interface C3BB is C3BBB, C3BBBB {
	function f0() override(C3BBB, C3BBBB)
	external payable returns (uint);
}
interface C3B is C3BB {
}
contract C3 is C3B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1250328747;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1271135913;
	}
	function f2() public pure
	
	returns (uint)
	{
		return 1098894339;
	}
	function f3() public view
	
	returns (uint)
	{
		return 1882556969;
	}
}
interface C4BBB {
}
interface C4BBBBB {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
interface C4BBBB is C4BBB, C4BBBBB {
	function f0() override
	external payable returns (uint);
}
interface C4BB is C4BBB, C4BBBB {
	function f1() override
	external view returns (uint);
}
interface C4B is C4BB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
contract C4 is C4B {
	function f0() external payable
	override
	returns (uint)
	{
		return 2010567813;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 662405787;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 849178936;
	}
}
interface C5BBBBB {
	function f0() external payable returns (uint);
}
interface C5BBBB is C5BBBBB {
}
interface C5BBB is C5BBBB {
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface C5BB is C5BBB {
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
interface C5B is C5BB {
	function f1() override
	external view returns (uint);
}
contract C5 is C5B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 480194461;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 180318217;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1324346645;
	}
}
interface I6 {
	function f0() external view returns (uint);
}
library L7 {
	function f0(uint) external pure returns (uint)
	{
		return 596516649;
	}
	function f1(uint) external view returns (uint)
	{
		return 1189641421;
	}
}
interface C8BBBBB {
	function f0() external payable returns (uint);
}
interface C8BBBB is C8BBBBB {
	function f0() override
	external payable returns (uint);
}
interface C8BBB is C8BBBB {
	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface C8BB is C8BBB {
	function f2() override
	external view returns (uint);
}
interface C8B is C8BB {
	function f2() override
	external view returns (uint);
}
contract C8 is C8B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 374787159;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 80100956;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1003765604;
	}
}
library L9 {
	function f0(uint) public pure returns (uint)
	{
		return 1025202362;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1350490027;
	}
	function f2(uint) internal view returns (uint)
	{
		return 783368690;
	}
}
contract C {
	function test() public returns (uint)
	{
			C3 tc0 = new C3();
			if (tc0.f0() != 1250328747)
				return 1;
			if (tc0.f1() != 1271135913)
				return 2;
			if (tc0.f2() != 1098894339)
				return 3;
			if (tc0.f3() != 1882556969)
				return 4;
			C4 tc1 = new C4();
			if (tc1.f0() != 2010567813)
				return 5;
			if (tc1.f1() != 662405787)
				return 6;
			if (tc1.f2() != 849178936)
				return 7;
			C5 tc2 = new C5();
			if (tc2.f0() != 480194461)
				return 8;
			if (tc2.f1() != 180318217)
				return 9;
			if (tc2.f2() != 1324346645)
				return 10;
			C8 tc3 = new C8();
			if (tc3.f0() != 374787159)
				return 11;
			if (tc3.f1() != 80100956)
				return 12;
			if (tc3.f2() != 1003765604)
				return 13;
			return 0;
	}
}
