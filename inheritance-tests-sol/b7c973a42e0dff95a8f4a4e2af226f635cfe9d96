
pragma solidity >=0.0;




interface C0B {

	function f0() external view returns (uint);
}

interface C0BB is C0B {

	function f1() external payable returns (uint);
}
contract C0 is C0B, C0BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1914720637;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 407355683;
	}
}
library L4 {

	function f0(uint) external pure returns (uint)
	{
		return 1714636915;
	}
}


contract C {
	using L4 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1714636915)
			return 1;
		return 0;
	}
}

