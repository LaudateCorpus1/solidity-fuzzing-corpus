
pragma solidity >=0.0;


library L0 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
library L1 {

	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
library L2 {

	function f0(uint) public view returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
library L3 {

	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
library L4 {

	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) public view returns (uint)
	{
		return 719885386;
	}
}




interface C5BBB {

	function f0() external payable returns (uint);
}
interface C5BB is C5BBB {

}
abstract contract C5B is C5BB {

	function f0() virtual external payable
	override
	returns (uint);
}
contract C5 is C5B {

	function f0() external payable
	override
	returns (uint)
	{
		return 842474334;
	}
}
library L6 {

	function f0(uint) external pure returns (uint)
	{
		return 1649760492;
	}
	function f1(uint) external pure returns (uint)
	{
		return 596516649;
	}
}
library L7 {

	function f0(uint) internal pure returns (uint)
	{
		return 1189641421;
	}
}
library L8 {

	function f0(uint) public view returns (uint)
	{
		return 1025202362;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1350490027;
	}
}
library L9 {

	function f0(uint) public pure returns (uint)
	{
		return 783368690;
	}
}




interface I10BBB {

	function f0() external payable returns (uint);
}
interface I10BB is I10BBB {

	function f0() override
	external payable returns (uint);
}
interface I10B is I10BB {

	function f0() override
	external payable returns (uint);
}
interface I10 is I10B {

}
library L11 {

	function f0(uint) public pure returns (uint)
	{
		return 1102520059;
	}
}
library L12 {

	function f0(uint) internal pure returns (uint)
	{
		return 2044897763;
	}
	function f1(uint) internal view returns (uint)
	{
		return 1967513926;
	}
}
library L13 {

	function f0(uint) external pure returns (uint)
	{
		return 1365180540;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1540383426;
	}
}



interface I14BB {

	function f0() external view returns (uint);
}
interface I14B is I14BB {

	function f1() external payable returns (uint);
}
interface I14 is I14B {

}




abstract contract C15BBB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 170423502;
	}
	function f1() public view
	
	returns (uint)
	{
		return 1646411619;
	}
}
contract C15BB is C15BBB {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1096328782;
	}
}
contract C15B is C15BB {

}
contract C15 is C15B {

}


contract C {
	using L11 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1102520059)
			return 1;
		return 0;
	}
}

