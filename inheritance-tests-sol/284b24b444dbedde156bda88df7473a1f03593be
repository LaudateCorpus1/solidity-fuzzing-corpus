pragma solidity >=0.0;
contract C0 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 48271;
	}
}
interface C3BBBBBBBBB {
	function f0() external view returns (uint);
}
interface C3BBBBBBBBBB is C3BBBBBBBBB {
	function f1() external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external pure returns (uint);
}
interface C3BBBBBBBB is C3BBBBBBBBB, C3BBBBBBBBBB {
	function f3() override
	external pure returns (uint);
	function f4() external view returns (uint);
}
interface C3BBBBBBB is C3BBBBBBBB {
	function f1() override
	external payable returns (uint);
	function f3() override
	external pure returns (uint);
	function f5() external view returns (uint);
	function f6() external view returns (uint);
	function f7() external view returns (uint);
}
interface C3BBBBBB is C3BBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
}
interface C3BBBBBBBBBBB is C3BBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
	function f7() override
	external view returns (uint);
	function f8() external view returns (uint);
}
interface C3BBBBB is C3BBBBBB, C3BBBBBBBBBBB {
	function f0() override(C3BBBBBB, C3BBBBBBBBBBB)
	external view returns (uint);
	function f1() override(C3BBBBBB, C3BBBBBBB)
	external payable returns (uint);
	function f2() override(C3BBBBBB, C3BBBBBBBBBBB)
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f6() override(C3BBBBBB, C3BBBBBBBBBBB)
	external view returns (uint);
	function f7() override(C3BBBBBBB, C3BBBBBBBBBBB)
	external view returns (uint);
}
interface C3BBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface C3BBBBBBBBBBBB is C3BBBBBB, C3BBBBBBBBBBBBB {
	function f0() override(C3BBBBBB, C3BBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f7() override
	external view returns (uint);
}
contract C3BBBB is C3BBBBB, C3BBBBBBBBBBBB {
	function f0() virtual external view
	override(C3BBBBBBBBBBBB, C3BBBBB)
	returns (uint)
	{
		return 884730203;
	}
	function f1() external payable
	override(C3BBBBBB, C3BBBBB)
	returns (uint)
	{
		return 2130959757;
	}
	function f2() virtual external view
	override(C3BBBBBBBBBBBB, C3BBBBB)
	returns (uint)
	{
		return 352020689;
	}
	function f3() external pure
	override
	returns (uint)
	{
		return 80100956;
	}
	function f4() external view
	override(C3BBBBBBBBBBBB, C3BBBBB)
	returns (uint)
	{
		return 719080959;
	}
	function f5() virtual external view
	override
	returns (uint)
	{
		return 1003765604;
	}
	function f6() virtual external view
	override(C3BBBBBB, C3BBBBB)
	returns (uint)
	{
		return 163677341;
	}
	function f7() virtual external view
	override(C3BBBBBBBBBBBB, C3BBBBB)
	returns (uint)
	{
		return 374787159;
	}
	function f8() virtual external view
	override
	returns (uint)
	{
		return 1447645967;
	}
}
contract C3BBB is C3BBBB {
	function f0() external view
	override
	returns (uint)
	{
		return 837051536;
	}
	function f5() external view
	override
	returns (uint)
	{
		return 2127735996;
	}
	function f7() virtual external view
	override
	returns (uint)
	{
		return 1444510476;
	}
}
contract C3BB is C3BBB {
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1715708819;
	}
	function f6() virtual external view
	override
	returns (uint)
	{
		return 583514338;
	}
	function f7() external view
	override
	returns (uint)
	{
		return 851194519;
	}
	function f8() virtual external view
	override
	returns (uint)
	{
		return 1358404307;
	}
}
contract C3B is C3BB {
}
contract C3 is C3B {
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1578591759;
	}
	function f6() external view
	override
	returns (uint)
	{
		return 15580725;
	}
}
library L4 {
	function f0(uint) internal pure returns (uint)
	{
		return 719885386;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
