
pragma solidity >=0.0;







interface C0BBBB {

	function f0() external payable returns (uint);
}
interface C0BBB is C0BBBB {

	function f0() override
	external payable returns (uint);
}
contract C0BB is C0BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1691062339;
	}
}
abstract contract C0B is C0BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1481204546;
	}
}
contract C0 is C0B {

	function f1() public view
	
	returns (uint)
	{
		return 491448374;
	}
}
library L1 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}





interface C2BBBB {

	function f0() external payable returns (uint);
}
interface C2BBB is C2BBBB {

	function f0() override
	external payable returns (uint);
}
contract C2BB is C2BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 770348174;
	}
}
abstract contract C2B is C2BB {

}
contract C2 is C2B {

	function f1() public view
	
	returns (uint)
	{
		return 1127699305;
	}
}





interface C3BBBB {

	function f0() external payable returns (uint);
}
interface C3BBB is C3BBBB {

}


interface C3BBBBBB {

	function f0() external payable returns (uint);
}
interface C3BBBBB is C3BBB, C3BBBBBB {

	function f0() override(C3BBBB, C3BBBBBB)
	external payable returns (uint);
}
contract C3BB is C3BBB, C3BBBBB {

	function f0() virtual external payable
	override(C3BBBBB, C3BBBB)
	returns (uint)
	{
		return 819997621;
	}
}
contract C3B is C3BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 125672055;
	}
}
contract C3 is C3B {

	function f1() public view
	
	returns (uint)
	{
		return 1343347976;
	}
	function f2() external view
	
	returns (uint)
	{
		return 1481428331;
	}
}



interface I4BB {

	function f0() external view returns (uint);
}
interface I4B is I4BB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I4 is I4B {

	function f0() override
	external view returns (uint);
	function f2() external view returns (uint);
}


interface I5B {

	function f0() external view returns (uint);
}

interface I5BB is I5B {

	function f1() external view returns (uint);
}
interface I5 is I5B, I5BB {

	function f0() override
	external view returns (uint);
}
library L7 {

	function f0(uint) public view returns (uint)
	{
		return 1714636915;
	}
}


interface I8B {

	function f0() external view returns (uint);
}

interface I8BB is I8B {

	function f1() external view returns (uint);
}
interface I8 is I8B, I8BB {

	function f1() override
	external view returns (uint);
}

contract C9 {

	function f0() public view
	
	returns (uint)
	{
		return 71891630;
	}
}
library L10 {

	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
}

contract C11 {

	function f0() external pure
	
	returns (uint)
	{
		return 798471933;
	}
	function f1() internal view
	
	returns (uint)
	{
		return 2181487;
	}
	function f2() public view
	
	returns (uint)
	{
		return 75860274;
	}
}

interface I12 {

	function f0() external view returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1481204546)
				return 1;
			if (tc0.f1() != 491448374)
				return 2;
			C0BB tc1 = new C0BB();
			if (tc1.f0() != 1691062339)
				return 3;
			C11 tc2 = new C11();
			if (tc2.f0() != 798471933)
				return 4;
			if (tc2.f2() != 75860274)
				return 5;
			C2 tc3 = new C2();
			if (tc3.f0() != 770348174)
				return 6;
			if (tc3.f1() != 1127699305)
				return 7;
			C2BB tc4 = new C2BB();
			if (tc4.f0() != 770348174)
				return 8;
			C3 tc5 = new C3();
			if (tc5.f0() != 125672055)
				return 9;
			if (tc5.f1() != 1343347976)
				return 10;
			if (tc5.f2() != 1481428331)
				return 11;
			C3B tc6 = new C3B();
			if (tc6.f0() != 125672055)
				return 12;
			C3BB tc7 = new C3BB();
			if (tc7.f0() != 819997621)
				return 13;
			C9 tc8 = new C9();
			if (tc8.f0() != 71891630)
				return 14;
			return 0;
	}
}

