pragma solidity >=0.0;
contract C0 {
	function f0() public view
	
	returns (uint)
	{
		return 48271;
	}
}
library L1 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
interface C2BBBBBBBB {
	function f0() external view returns (uint);
}
interface C2BBBBBBB is C2BBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C2BBBBBB is C2BBBBBBB {
}
interface C2BBBBB is C2BBBBBB {
}
interface C2BBBB is C2BBBBB {
}
interface C2BBB is C2BBBB {
	function f1() external payable returns (uint);
}
interface C2BB is C2BBB {
}
contract C2B is C2BB {
	function f0() external view
	override
	returns (uint)
	{
		return 1098894339;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 2136927794;
	}
}
abstract contract C2 is C2B {
}
interface C3BBB {
	function f0() external payable returns (uint);
}
interface C3BB is C3BBB {
}
interface C3B is C3BB {
}
interface C3BBBBBB {
	function f0() external payable returns (uint);
}
interface C3BBBBB is C3BBBBBB {
}
interface C3BBBB is C3B, C3BBBBB {
	function f0() override(C3BBB, C3BBBBBB)
	external payable returns (uint);
}
contract C3 is C3B, C3BBBB {
	function f0() virtual external payable
	override(C3BBBB, C3BBB)
	returns (uint)
	{
		return 1842513780;
	}
}
interface C4BBB {
	function f0() external payable returns (uint);
}
interface C4BB is C4BBB {
}
contract C4B is C4BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 890442452;
	}
}
contract C4 is C4B {
}
interface C5BBB {
	function f0() external view returns (uint);
}
interface C5BB is C5BBB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface C5B is C5BB {
	function f1() override
	external view returns (uint);
}
contract C5 is C5B {
	function f0() external view
	override
	returns (uint)
	{
		return 201068705;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 928270262;
	}
}
library L6 {
	function f0(uint) private view returns (uint)
	{
		return 1681692777;
	}
}
interface I8BB {
	function f0() external payable returns (uint);
}
interface I8B is I8BB {
}
interface I8 is I8B {
}
library L9 {
	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
