pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private view returns (uint)
	{
		return 846930886;
	}
	function f2(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
interface I1 {
	function f0() external view returns (uint);
}
interface I2B {
	function f0() external view returns (uint);
}
interface I2 is I2B {
	function f0() override
	external view returns (uint);
}
contract C3B {
}
contract C3 is C3B {
	function f0() public view
	
	returns (uint)
	{
		return 1291394886;
	}
}
interface I4BB {
	function f0() external pure returns (uint);
}
interface I4B is I4BB {
	function f1() external payable returns (uint);
}
interface I4 is I4B {
}
library L5 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
interface C6B {
	function f0() external view returns (uint);
}
abstract contract C6BB is C6B {
	function f0() virtual external view
	override
	returns (uint);
}
contract C6 is C6B, C6BB {
	function f0() external view
	override(C6BB, C6B)
	returns (uint)
	{
		return 1738531149;
	}
}
contract C8B {
}
contract C8 is C8B {
	function f0() public view
	
	returns (uint)
	{
		return 2136927794;
	}
}
interface C9BBBB {
	function f0() external view returns (uint);
}
interface C9BBB is C9BBBB {
	function f1() external payable returns (uint);
}
interface C9BB is C9BBB {
	function f0() override
	external view returns (uint);
}
abstract contract C9B is C9BB {
	function f0() virtual external view
	override
	returns (uint);
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1947433875;
	}
}
contract C9 is C9B {
	function f0() external view
	override
	returns (uint)
	{
		return 890442452;
	}
}
interface C10BBBBBBB {
	function f0() external view returns (uint);
}
interface C10BBBBBB is C10BBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface C10BBBBB is C10BBBBBB {
	function f1() override
	external view returns (uint);
}
interface C10BBBBBBBB is C10BBBBB {
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() external view returns (uint);
}
interface C10BBBB is C10BBBBB, C10BBBBBBBB {
	function f1() override(C10BBBBB, C10BBBBBBBB)
	external view returns (uint);
	function f2() override(C10BBBBBB, C10BBBBBBBB)
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
contract C10BBB is C10BBBB {
	function f0() external view
	override
	returns (uint)
	{
		return 412013968;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1675824860;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 389431516;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1243696899;
	}
}
contract C10BB is C10BBB {
}
contract C10B is C10BB {
}
contract C10 is C10B {
}
contract C11 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 884730203;
	}
	function f1() public view
	
	returns (uint)
	{
		return 1951824771;
	}
}
contract C12B {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 2130959757;
	}
}
contract C12 is C12B {
	function f0() public pure
	override
	returns (uint)
	{
		return 1500063655;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 719080959;
	}
}
library L13 {
	function f0(uint) private pure returns (uint)
	{
		return 1649760492;
	}
}
interface I14BBBB {
	function f0() external payable returns (uint);
}
interface I14BBB is I14BBBB {
	function f0() override
	external payable returns (uint);
}
interface I14BB is I14BBB {
	function f0() override
	external payable returns (uint);
}
interface I14B is I14BB {
}
interface I14 is I14B {
	function f0() override
	external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C10 tc0 = new C10();
			if (tc0.f0() != 412013968)
				return 1;
			if (tc0.f1() != 1675824860)
				return 2;
			if (tc0.f2() != 389431516)
				return 3;
			if (tc0.f3() != 1243696899)
				return 4;
			C10B tc1 = new C10B();
			if (tc1.f0() != 412013968)
				return 5;
			if (tc1.f1() != 1675824860)
				return 6;
			if (tc1.f2() != 389431516)
				return 7;
			if (tc1.f3() != 1243696899)
				return 8;
			C10BB tc2 = new C10BB();
			if (tc2.f0() != 412013968)
				return 9;
			if (tc2.f1() != 1675824860)
				return 10;
			if (tc2.f2() != 389431516)
				return 11;
			if (tc2.f3() != 1243696899)
				return 12;
			C10BBB tc3 = new C10BBB();
			if (tc3.f0() != 412013968)
				return 13;
			if (tc3.f1() != 1675824860)
				return 14;
			if (tc3.f2() != 389431516)
				return 15;
			if (tc3.f3() != 1243696899)
				return 16;
			C11 tc4 = new C11();
			if (tc4.f0() != 884730203)
				return 17;
			if (tc4.f1() != 1951824771)
				return 18;
			C12 tc5 = new C12();
			if (tc5.f0() != 1500063655)
				return 19;
			if (tc5.f1() != 719080959)
				return 20;
			C12B tc6 = new C12B();
			if (tc6.f0() != 2130959757)
				return 21;
			C3 tc7 = new C3();
			if (tc7.f0() != 1291394886)
				return 22;
			C6 tc8 = new C6();
			if (tc8.f0() != 1738531149)
				return 23;
			C8 tc9 = new C8();
			if (tc9.f0() != 2136927794)
				return 24;
			C9 tc10 = new C9();
			if (tc10.f0() != 890442452)
				return 25;
			if (tc10.f1() != 1947433875)
				return 26;
			return 0;
	}
}
