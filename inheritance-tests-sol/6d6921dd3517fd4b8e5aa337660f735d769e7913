pragma solidity >=0.0;
interface C0BBBBBBB {
	function f0() external payable returns (uint);
}
interface C0BBBBBB is C0BBBBBBB {
}
interface C0BBBBB is C0BBBBBB {
	function f0() override
	external payable returns (uint);
}
interface C0BBBBBBBB is C0BBBBBB {
	function f1() external view returns (uint);
}
interface C0BBBB is C0BBBBB, C0BBBBBBBB {
	function f0() override(C0BBBBB, C0BBBBBBB)
	external payable returns (uint);
}
interface C0BBB is C0BBBB {
}
contract C0BB is C0BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1250328747;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1271135913;
	}
}
contract C0B is C0BB {
}
abstract contract C0 is C0B {
}
interface C1BB {
	function f0() external view returns (uint);
}
interface C1B is C1BB {
	function f0() override
	external view returns (uint);
}
contract C1 is C1B {
	function f0() external view
	override
	returns (uint)
	{
		return 638022372;
	}
}
library L2 {
	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
library L3 {
	function f0(uint) internal view returns (uint)
	{
		return 1681692777;
	}
}
library L4 {
	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
library L5 {
	function f0(uint) internal view returns (uint)
	{
		return 424238335;
	}
}
library L6 {
	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1649760492;
	}
}
library L7 {
	function f0(uint) internal view returns (uint)
	{
		return 596516649;
	}
}
library L8 {
	function f0(uint) internal pure returns (uint)
	{
		return 1189641421;
	}
}
interface I9B {
	function f0() external view returns (uint);
}
interface I9 is I9B {
}
contract C {
	using L6 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 719885386)
			return 1;
		return 0;
	}
}
