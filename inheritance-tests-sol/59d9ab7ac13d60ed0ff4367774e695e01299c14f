pragma solidity >=0.0;
interface I0BBB {
	function f0() external view returns (uint);
}
interface I0BB is I0BBB {
	function f1() external payable returns (uint);
}
interface I0B is I0BB {
	function f0() override
	external view returns (uint);
}
interface I0 is I0B {
}
interface I1BBBBB {
	function f0() external view returns (uint);
}
interface I1BBBB is I1BBBBB {
}
interface I1BBBBBB is I1BBBBB {
	function f1() external payable returns (uint);
}
interface I1BBB is I1BBBB, I1BBBBBB {
	function f2() external view returns (uint);
}
interface I1BB is I1BBB {
}
interface I1B is I1BB {
	function f2() override
	external view returns (uint);
}
interface I1 is I1B {
	function f0() override
	external view returns (uint);
}
interface I2BBB {
	function f0() external view returns (uint);
}
interface I2BB is I2BBB {
	function f0() override
	external view returns (uint);
}
interface I2B is I2BB {
	function f0() override
	external view returns (uint);
}
interface I2 is I2B {
	function f1() external view returns (uint);
}
library L3 {
	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
}
interface I4BBB {
}
interface I4BB is I4BBB {
	function f0() external view returns (uint);
}
interface I4B is I4BB {
	function f0() override
	external view returns (uint);
}
interface I4BBBBBB {
	function f0() external view returns (uint);
}
interface I4BBBBB is I4BBBBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I4BBBB is I4BB, I4BBBBB {
	function f0() override(I4BB, I4BBBBB)
	external view returns (uint);
}
interface I4 is I4B, I4BBBB {
	function f0() override(I4B, I4BBBB)
	external view returns (uint);
	function f2() external view returns (uint);
	function f3() external payable returns (uint);
}
library L5 {
	function f0(uint) external pure returns (uint)
	{
		return 1714636915;
	}
}
interface I6BBBBB {
	function f0() external view returns (uint);
}
interface I6BBBB is I6BBBBB {
}
interface I6BBB is I6BBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I6BB is I6BBB {
	function f1() override
	external payable returns (uint);
}
interface I6B is I6BB {
	function f1() override
	external payable returns (uint);
}
interface I6 is I6B {
	function f0() override
	external view returns (uint);
}
library L7 {
	function f0(uint) private pure returns (uint)
	{
		return 1957747793;
	}
}
interface I8BB {
	function f0() external view returns (uint);
}
interface I8B is I8BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I8 is I8B {
	function f1() override
	external payable returns (uint);
}
interface I9 {
	function f0() external payable returns (uint);
}
contract C10 {
	function f0() external pure
	
	returns (uint)
	{
		return 674592135;
	}
	function f1() private pure
	
	returns (uint)
	{
		return 942409124;
	}
}
interface C11BBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C11BBB is C11BBBB {
}
interface C11BB is C11BBB {
	function f0() override
	external payable returns (uint);
}
contract C11B is C11BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 978785428;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 276590098;
	}
}
abstract contract C11 is C11B {
}
contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1714636915)
			return 1;
		return 0;
	}
}
