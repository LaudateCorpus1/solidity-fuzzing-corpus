
pragma solidity >=0.0;




interface I0B {

}
interface I0 is I0B {

}






interface C1BBBBB {

	function f0() external view returns (uint);
}
interface C1BBBB is C1BBBBB {

	function f0() override
	external view returns (uint);
}
interface C1BBB is C1BBBB {

	function f0() override
	external view returns (uint);
}
interface C1BB is C1BBB {

}
contract C1B is C1BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1669200614;
	}
}
contract C1 is C1B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 307993241;
	}
}




interface I2BBB {

	function f0() external view returns (uint);
}
interface I2BB is I2BBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}


interface I2BBBBB {

}
interface I2BBBB is I2BBB, I2BBBBB {

}
interface I2B is I2BB, I2BBBB {

	function f0() override(I2BB, I2BBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I2 is I2B {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external payable returns (uint);
}











contract C3BBBBBBBBBB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 2095773844;
	}
}
contract C3BBBBBBBBB is C3BBBBBBBBBB {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 527206317;
	}
}
contract C3BBBBBBBB is C3BBBBBBBBB {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1250989170;
	}
}
contract C3BBBBBBB is C3BBBBBBBB {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1011623293;
	}
}
contract C3BBBBBB is C3BBBBBBB {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 409855449;
	}
}
contract C3BBBBB is C3BBBBBB {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 642445233;
	}
}
abstract contract C3BBBB is C3BBBBB {

}
contract C3BBB is C3BBBB {

}
contract C3BB is C3BBB {

	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1470229288;
	}
}
contract C3B is C3BB {

}
contract C3 is C3B {

}



abstract contract C4BB {

	function f0() virtual public view
	
	returns (uint)
	{
		return 371444378;
	}
}
abstract contract C4B is C4BB {

	function f1() virtual public payable
	
	returns (uint);
}
contract C4 is C4B {

	function f1() public payable
	override
	returns (uint)
	{
		return 1488045380;
	}
}

interface I5 {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 307993241)
				return 1;
			C1B tc1 = new C1B();
			if (tc1.f0() != 1669200614)
				return 2;
			C3 tc2 = new C3();
			if (tc2.f0() != 1470229288)
				return 3;
			C3B tc3 = new C3B();
			if (tc3.f0() != 1470229288)
				return 4;
			C3BB tc4 = new C3BB();
			if (tc4.f0() != 1470229288)
				return 5;
			C3BBB tc5 = new C3BBB();
			if (tc5.f0() != 642445233)
				return 6;
			C3BBBBB tc6 = new C3BBBBB();
			if (tc6.f0() != 642445233)
				return 7;
			C3BBBBBB tc7 = new C3BBBBBB();
			if (tc7.f0() != 409855449)
				return 8;
			C3BBBBBBB tc8 = new C3BBBBBBB();
			if (tc8.f0() != 1011623293)
				return 9;
			C3BBBBBBBB tc9 = new C3BBBBBBBB();
			if (tc9.f0() != 1250989170)
				return 10;
			C3BBBBBBBBB tc10 = new C3BBBBBBBBB();
			if (tc10.f0() != 527206317)
				return 11;
			C3BBBBBBBBBB tc11 = new C3BBBBBBBBBB();
			if (tc11.f0() != 2095773844)
				return 12;
			C4 tc12 = new C4();
			if (tc12.f0() != 371444378)
				return 13;
			if (tc12.f1() != 1488045380)
				return 14;
			return 0;
	}
}

