
pragma solidity >=0.0;





interface C0BB {

	function f0() external payable returns (uint);
}
contract C0B is C0BB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 803070398;
	}
}
contract C0 is C0B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 305269445;
	}
}






interface I1BBBBB {

	function f0() external view returns (uint);
}

interface I1BBBBBB is I1BBBBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I1BBBB is I1BBBBB, I1BBBBBB {

	function f0() override(I1BBBBB, I1BBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I1BBB is I1BBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I1BB is I1BBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}


interface I1BBBBBBBB {

	function f0() external view returns (uint);
}
interface I1BBBBBBB is I1BB, I1BBBBBBBB {

	function f0() override(I1BB, I1BBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I1B is I1BB, I1BBBBBBB {

	function f0() override(I1BB, I1BBBBBBB)
	external view returns (uint);
	function f1() override(I1BB, I1BBBBBBB)
	external view returns (uint);
}

interface I1BBBBBBBBB is I1BB {

	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I1 is I1B, I1BBBBBBBBB {

	function f0() override(I1B, I1BB)
	external view returns (uint);
	function f1() override(I1B, I1BBBBBBBBB)
	external view returns (uint);
}



interface I2BB {

	function f0() external view returns (uint);
}
interface I2B is I2BB {

}
interface I2 is I2B {

	function f1() external view returns (uint);
}
library L3 {

	function f0(uint) external pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}

contract C4 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1448381872;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 305269445)
				return 1;
			C0B tc1 = new C0B();
			if (tc1.f0() != 803070398)
				return 2;
			C4 tc2 = new C4();
			if (tc2.f0() != 1448381872)
				return 3;
			return 0;
	}
}

