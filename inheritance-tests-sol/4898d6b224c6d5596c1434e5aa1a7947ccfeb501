
pragma solidity >=0.0;








interface C0BBBBB {

}
interface C0BBBB is C0BBBBB {

}
interface C0BBB is C0BBBB {

	function f0() external view returns (uint);
}
interface C0BB is C0BBB {

	function f0() override
	external view returns (uint);
}
interface C0B is C0BB {

}
contract C0 is C0B {

	function f0() external view
	override
	returns (uint)
	{
		return 854716505;
	}
}
library L1 {

	function f0(uint) internal view returns (uint)
	{
		return 1804289383;
	}
}
library L2 {

	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}



interface C3BB {

	function f0() external view returns (uint);
}
interface C3B is C3BB {

}
contract C3 is C3B {

	function f0() external view
	override
	returns (uint)
	{
		return 1203428207;
	}
}






interface C4BBBBB {

}
interface C4BBBB is C4BBBBB {

}
interface C4BBB is C4BBBB {

	function f0() external view returns (uint);
}
interface C4BB is C4BBB {

}
interface C4B is C4BB {

}
contract C4 is C4B {

	function f0() external view
	override
	returns (uint)
	{
		return 2075782095;
	}
}






interface C5BBBBB {

}
interface C5BBBB is C5BBBBB {

}
interface C5BBB is C5BBBB {

	function f0() external view returns (uint);
}
interface C5BB is C5BBB {

	function f0() override
	external view returns (uint);
}
interface C5B is C5BB {

}
contract C5 is C5B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1842513780;
	}
}
library L6 {

	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public view returns (uint)
	{
		return 1714636915;
	}
}






interface C7BBBBB {

}
interface C7BBBB is C7BBBBB {

}
interface C7BBB is C7BBBB {

	function f0() external view returns (uint);
}
interface C7BB is C7BBB {

	function f0() override
	external view returns (uint);
}
interface C7B is C7BB {

	function f0() override
	external view returns (uint);
}
contract C7 is C7B {

	function f0() external view
	override
	returns (uint)
	{
		return 1479919876;
	}
}
library L8 {

	function f0(uint) internal view returns (uint)
	{
		return 1957747793;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 854716505)
				return 1;
			C3 tc1 = new C3();
			if (tc1.f0() != 1203428207)
				return 2;
			C4 tc2 = new C4();
			if (tc2.f0() != 2075782095)
				return 3;
			C5 tc3 = new C5();
			if (tc3.f0() != 1842513780)
				return 4;
			C7 tc4 = new C7();
			if (tc4.f0() != 1479919876)
				return 5;
			return 0;
	}
}

