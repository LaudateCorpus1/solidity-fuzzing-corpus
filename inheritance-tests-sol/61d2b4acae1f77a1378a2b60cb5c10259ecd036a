
pragma solidity >=0.0;



contract C1 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 223870541;
	}
}


abstract contract C2B {

	function f0() virtual public pure
	
	returns (uint);
}
contract C2 is C2B {

	function f0() public pure
	override
	returns (uint)
	{
		return 2062763411;
	}
}




interface C4BBB {

	function f0() external payable returns (uint);
}
interface C4BB is C4BBB {

}
interface C4B is C4BB {

	function f0() override
	external payable returns (uint);
}
contract C4 is C4B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 908028975;
	}
}
library L5 {

	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

