
pragma solidity >=0.0;







interface C0BBBB {

	function f0() external payable returns (uint);
}
interface C0BBB is C0BBBB {

}
contract C0BB is C0BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 2031102142;
	}
}
contract C0B is C0BB {

}
contract C0 is C0B {

	function f1() public view
	
	returns (uint)
	{
		return 1626692904;
	}
}
library L1 {

	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
}


contract C2B {

	function f0() public view
	
	returns (uint)
	{
		return 1356035169;
	}
}
contract C2 is C2B {

}

contract C3 {

	function f0() public payable
	
	returns (uint)
	{
		return 1872082239;
	}
}
library L4 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}
library L5 {

	function f0(uint) public view returns (uint)
	{
		return 1681692777;
	}
}


contract C6B {

	function f0() public view
	
	returns (uint)
	{
		return 1698906197;
	}
}
contract C6 is C6B {

}


interface I7B {

	function f0() external payable returns (uint);
}

interface I7BB is I7B {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
	function f2() external payable returns (uint);
}
interface I7 is I7B, I7BB {

	function f0() override(I7B, I7BB)
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
library L8 {

	function f0(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}

interface I9 {

	function f0() external payable returns (uint);
}


contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}

