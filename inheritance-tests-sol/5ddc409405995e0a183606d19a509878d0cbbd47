
pragma solidity >=0.0;


library L0 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}


interface C1B {

	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
contract C1 is C1B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1741224500;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1596966799;
	}
}









interface C2BBBBBBBB {

	function f0() external view returns (uint);
	function f1() external view returns (uint);
	function f2() external pure returns (uint);
}
interface C2BBBBBBB is C2BBBBBBBB {

	function f1() override
	external view returns (uint);
}
interface C2BBBBBB is C2BBBBBBB {

	function f1() override
	external view returns (uint);
	function f2() override
	external pure returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C2BBBBB is C2BBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external pure returns (uint);
}

interface C2BBBBBBBBB is C2BBBBB {

	function f1() override
	external view returns (uint);
	function f5() external view returns (uint);
}
interface C2BBBB is C2BBBBB, C2BBBBBBBBB {

	function f1() override(C2BBBBB, C2BBBBBBBBB)
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external view returns (uint);
}
contract C2BBB is C2BBBB {

	function f0() external view
	override
	returns (uint)
	{
		return 1004279002;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 350980547;
	}
	function f2() virtual external pure
	override
	returns (uint)
	{
		return 1101940773;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1587545628;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1880931508;
	}
	function f5() external view
	override
	returns (uint)
	{
		return 1710244188;
	}
}
contract C2BB is C2BBB {

	function f2() virtual external pure
	override
	returns (uint)
	{
		return 1148628097;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 967968481;
	}
}
contract C2B is C2BB {

	function f1() external view
	override
	returns (uint)
	{
		return 1101769786;
	}
}
contract C2 is C2B {

	function f2() external pure
	override
	returns (uint)
	{
		return 1263091005;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1309418728;
	}
}

interface I3 {

	function f0() external view returns (uint);
}



interface C4BB {

	function f0() external payable returns (uint);
}
interface C4B is C4BB {

}



interface C4BBBBB {

	function f0() external payable returns (uint);
}
interface C4BBBB is C4BBBBB {

	function f0() override
	external payable returns (uint);
}
interface C4BBB is C4BB, C4BBBB {

	function f0() override(C4BB, C4BBBB)
	external payable returns (uint);
}
contract C4 is C4B, C4BBB {

	function f0() virtual external payable
	override(C4BBB, C4BB)
	returns (uint)
	{
		return 843749501;
	}
}


interface C5B {

}



interface C5BBBB {

	function f0() external payable returns (uint);
}
interface C5BBB is C5BBBB {

	function f0() override
	external payable returns (uint);
}
contract C5BB is C5B, C5BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 253961347;
	}
}
contract C5 is C5B, C5BB {

}


interface C6B {

	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
contract C6 is C6B {

	function f0() external view
	override
	returns (uint)
	{
		return 1989502439;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 2072564758;
	}
}

interface I7 {

	function f0() external view returns (uint);
}
library L8 {

	function f0(uint) public view returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) public view returns (uint)
	{
		return 424238335;
	}
}



interface C9BB {

	function f0() external view returns (uint);
}
interface C9B is C9BB {

}


interface C9BBBB {

	function f0() external view returns (uint);
}
interface C9BBB is C9B, C9BBBB {

	function f0() override(C9BB, C9BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
contract C9 is C9B, C9BBB {

	function f0() external view
	override(C9BBB, C9BB)
	returns (uint)
	{
		return 86146322;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1598508564;
	}
}

interface I10 {

	function f0() external view returns (uint);
}
library L11 {

	function f0(uint) public view returns (uint)
	{
		return 1649760492;
	}
	function f1(uint) public view returns (uint)
	{
		return 596516649;
	}
}


contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

