pragma solidity >=0.0;
interface I0BBBBB {
	function f0() external view returns (uint);
}
interface I0BBBB is I0BBBBB {
	function f0() override
	external view returns (uint);
}
interface I0BBB is I0BBBB {
}
interface I0BB is I0BBB {
}
interface I0BBBBBBB {
	function f0() external view returns (uint);
}
interface I0BBBBBB is I0BBB, I0BBBBBBB {
	function f0() override(I0BBBB, I0BBBBBBB)
	external view returns (uint);
}
interface I0B is I0BB, I0BBBBBB {
	function f0() override(I0BBBB, I0BBBBBB)
	external view returns (uint);
}
interface I0BBBBBBBB is I0B {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I0 is I0B, I0BBBBBBBB {
	function f0() override(I0B, I0BBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1714636915;
	}
}
interface C3BB {
	function f0() external view returns (uint);
}
contract C3B is C3BB {
	function f0() external view
	override
	returns (uint)
	{
		return 533364653;
	}
}
contract C3 is C3B {
}
interface I4BBB {
	function f0() external view returns (uint);
}
interface I4BB is I4BBB {
	function f0() override
	external view returns (uint);
}
interface I4B is I4BB {
	function f0() override
	external view returns (uint);
}
interface I4 is I4B {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
library L5 {
	function f0(uint) private pure returns (uint)
	{
		return 1957747793;
	}
}
library L6 {
	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) external pure returns (uint)
	{
		return 719885386;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1649760492;
	}
}
interface I7B {
	function f0() external payable returns (uint);
}
interface I7 is I7B {
	function f0() override
	external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C3 tc0 = new C3();
			if (tc0.f0() != 533364653)
				return 1;
			C3B tc1 = new C3B();
			if (tc1.f0() != 533364653)
				return 2;
			return 0;
	}
}
