
pragma solidity >=0.0;






interface I1BBB {

	function f0() external pure returns (uint);
}
interface I1BB is I1BBB {

	function f1() external payable returns (uint);
}
interface I1B is I1BB {

	function f0() override
	external pure returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface I1 is I1B {

	function f5() external payable returns (uint);
}












interface C2BBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface C2BBBBBBBBBB is C2BBBBBBBBBBB {

}
interface C2BBBBBBBBB is C2BBBBBBBBBB {

}
interface C2BBBBBBBB is C2BBBBBBBBB {

}
interface C2BBBBBBB is C2BBBBBBBB {

	function f1() external payable returns (uint);
}
interface C2BBBBBB is C2BBBBBBB {

	function f2() external payable returns (uint);
}
interface C2BBBBB is C2BBBBBB {

	function f1() override
	external payable returns (uint);
}
interface C2BBBB is C2BBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
interface C2BBB is C2BBBB {

	function f2() override
	external payable returns (uint);
	function f3() external payable returns (uint);
}
interface C2BB is C2BBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() override
	external payable returns (uint);
}
contract C2B is C2BB {

	function f0() external view
	override
	returns (uint)
	{
		return 201068705;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 928270262;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 1814467857;
	}
	function f3() virtual external payable
	override
	returns (uint)
	{
		return 1659675143;
	}
}
abstract contract C2 is C2B {

	function f1() external payable
	override
	returns (uint)
	{
		return 1675824860;
	}
}











interface C3BBBBBBBBBB {

	function f0() external pure returns (uint);
}
interface C3BBBBBBBBB is C3BBBBBBBBBB {

	function f0() override
	external pure returns (uint);
	function f1() external payable returns (uint);
}
interface C3BBBBBBBB is C3BBBBBBBBB {

	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C3BBBBBBB is C3BBBBBBBB {

	function f0() override
	external pure returns (uint);
	function f4() override
	external view returns (uint);
	function f5() external payable returns (uint);
}
interface C3BBBBBB is C3BBBBBBB {

	function f2() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f6() external view returns (uint);
	function f7() external view returns (uint);
	function f8() external view returns (uint);
}
interface C3BBBBB is C3BBBBBB {

	function f0() override
	external pure returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
	function f8() override
	external view returns (uint);
}

interface C3BBBBBBBBBBB is C3BBBBBB {

	function f0() override
	external pure returns (uint);
	function f2() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f9() external view returns (uint);
	function f10() external view returns (uint);
}
interface C3BBBB is C3BBBBB, C3BBBBBBBBBBB {

	function f0() override(C3BBBBB, C3BBBBBBBBBBB)
	external pure returns (uint);
	function f1() override(C3BBBBB, C3BBBBBBBB)
	external payable returns (uint);
	function f2() override(C3BBBBB, C3BBBBBBBBBBB)
	external view returns (uint);
	function f3() override(C3BBBBB, C3BBBBBBBB)
	external view returns (uint);
	function f4() override(C3BBBBBB, C3BBBBBBBBBBB)
	external view returns (uint);
	function f5() override(C3BBBBBBB, C3BBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(C3BBBBB, C3BBBBBBBBBBB)
	external view returns (uint);
	function f7() override
	external view returns (uint);
	function f8() override(C3BBBBB, C3BBBBBB)
	external view returns (uint);
	function f10() override
	external view returns (uint);
}
abstract contract C3BBB is C3BBBB {

	function f0() virtual external pure
	override
	returns (uint)
	{
		return 580853881;
	}
	function f1() virtual external payable
	override
	returns (uint);
	function f2() virtual external view
	override
	returns (uint);
	function f3() virtual external view
	override
	returns (uint);
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1578591759;
	}
	function f5() external payable
	override
	returns (uint)
	{
		return 15580725;
	}
	function f6() virtual external view
	override
	returns (uint);
	function f7() virtual external view
	override
	returns (uint);
	function f8() virtual external view
	override
	returns (uint);
	function f9() virtual external view
	override
	returns (uint)
	{
		return 785648268;
	}
	function f10() virtual external view
	override
	returns (uint);
}
contract C3BB is C3BBB {

	function f0() virtual external pure
	override
	returns (uint)
	{
		return 685153140;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1143645057;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 316870078;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1702155946;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1682841092;
	}
	function f6() virtual external view
	override
	returns (uint)
	{
		return 1228493995;
	}
	function f7() external view
	override
	returns (uint)
	{
		return 328389139;
	}
	function f8() virtual external view
	override
	returns (uint)
	{
		return 1634860762;
	}
	function f9() virtual external view
	override
	returns (uint)
	{
		return 1202416766;
	}
	function f10() external view
	override
	returns (uint)
	{
		return 1082702230;
	}
}
contract C3B is C3BB {

	function f0() virtual external pure
	override
	returns (uint)
	{
		return 2110072011;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 963283007;
	}
}
contract C3 is C3B {

	function f0() external pure
	override
	returns (uint)
	{
		return 2112721283;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1807338529;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 224840443;
	}
	function f6() external view
	override
	returns (uint)
	{
		return 383910756;
	}
}
library L4 {

	function f0(uint) private view returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public view returns (uint)
	{
		return 1681692777;
	}
	function f2(uint) public view returns (uint)
	{
		return 1714636915;
	}
}
library L5 {

	function f0(uint) private view returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) public view returns (uint)
	{
		return 424238335;
	}
	function f2(uint) public view returns (uint)
	{
		return 719885386;
	}
}


contract C {
	function test() public returns (uint)
	{
			C2B tc0 = new C2B();
			if (tc0.f0() != 201068705)
				return 1;
			if (tc0.f1() != 928270262)
				return 2;
			if (tc0.f2() != 1814467857)
				return 3;
			if (tc0.f3() != 1659675143)
				return 4;
			C3 tc1 = new C3();
			if (tc1.f0() != 2112721283)
				return 5;
			if (tc1.f1() != 1807338529)
				return 6;
			if (tc1.f10() != 1082702230)
				return 7;
			if (tc1.f2() != 316870078)
				return 8;
			if (tc1.f3() != 963283007)
				return 9;
			if (tc1.f4() != 224840443)
				return 10;
			if (tc1.f5() != 15580725)
				return 11;
			if (tc1.f6() != 383910756)
				return 12;
			if (tc1.f7() != 328389139)
				return 13;
			if (tc1.f8() != 1634860762)
				return 14;
			if (tc1.f9() != 1202416766)
				return 15;
			C3B tc2 = new C3B();
			if (tc2.f0() != 2110072011)
				return 16;
			if (tc2.f1() != 1143645057)
				return 17;
			if (tc2.f10() != 1082702230)
				return 18;
			if (tc2.f2() != 316870078)
				return 19;
			if (tc2.f3() != 963283007)
				return 20;
			if (tc2.f4() != 1682841092)
				return 21;
			if (tc2.f5() != 15580725)
				return 22;
			if (tc2.f6() != 1228493995)
				return 23;
			if (tc2.f7() != 328389139)
				return 24;
			if (tc2.f8() != 1634860762)
				return 25;
			if (tc2.f9() != 1202416766)
				return 26;
			C3BB tc3 = new C3BB();
			if (tc3.f0() != 685153140)
				return 27;
			if (tc3.f1() != 1143645057)
				return 28;
			if (tc3.f10() != 1082702230)
				return 29;
			if (tc3.f2() != 316870078)
				return 30;
			if (tc3.f3() != 1702155946)
				return 31;
			if (tc3.f4() != 1682841092)
				return 32;
			if (tc3.f5() != 15580725)
				return 33;
			if (tc3.f6() != 1228493995)
				return 34;
			if (tc3.f7() != 328389139)
				return 35;
			if (tc3.f8() != 1634860762)
				return 36;
			if (tc3.f9() != 1202416766)
				return 37;
			return 0;
	}
}

