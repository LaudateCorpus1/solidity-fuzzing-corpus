
pragma solidity >=0.0;


library L0 {

	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}

contract C1 {

	function f0() public view
	
	returns (uint)
	{
		return 48271;
	}
	function f1() public payable
	
	returns (uint)
	{
		return 182605794;
	}
	function f2() public pure
	
	returns (uint)
	{
		return 1291394886;
	}
}
library L2 {

	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}
library L3 {

	function f0(uint) private view returns (uint)
	{
		return 1714636915;
	}
}


interface I5B {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I5 is I5B {

	function f2() external payable returns (uint);
}
library L6 {

	function f0(uint) private view returns (uint)
	{
		return 1957747793;
	}
}

contract C7 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 407355683;
	}
}
library L8 {

	function f0(uint) public view returns (uint)
	{
		return 424238335;
	}
}

interface I9 {

	function f0() external view returns (uint);
}
library L10 {

	function f0(uint) public view returns (uint)
	{
		return 719885386;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
}
library L11 {

	function f0(uint) public view returns (uint)
	{
		return 596516649;
	}
	function f1(uint) internal view returns (uint)
	{
		return 1189641421;
	}
}




interface C12BBB {

	function f0() external pure returns (uint);
}
interface C12BB is C12BBB {

}
interface C12B is C12BB {

}
contract C12 is C12B {

	function f0() external pure
	override
	returns (uint)
	{
		return 1271135913;
	}
}








interface C13BBBBBBB {

	function f0() external view returns (uint);
}
interface C13BBBBBB is C13BBBBBBB {

}
interface C13BBBBB is C13BBBBBB {

	function f0() override
	external view returns (uint);
}
interface C13BBBB is C13BBBBB {

}
interface C13BBB is C13BBBB {

}
interface C13BB is C13BBB {

}
contract C13B is C13BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 353718330;
	}
}
contract C13 is C13B {

}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 48271)
				return 1;
			if (tc0.f1() != 182605794)
				return 2;
			if (tc0.f2() != 1291394886)
				return 3;
			C12 tc1 = new C12();
			if (tc1.f0() != 1271135913)
				return 4;
			C13 tc2 = new C13();
			if (tc2.f0() != 353718330)
				return 5;
			C13B tc3 = new C13B();
			if (tc3.f0() != 353718330)
				return 6;
			C7 tc4 = new C7();
			if (tc4.f0() != 407355683)
				return 7;
			return 0;
	}
}

