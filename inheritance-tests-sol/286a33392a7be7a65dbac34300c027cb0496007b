pragma solidity >=0.0;
interface C1BB {
	function f0() external view returns (uint);
}
interface C1B is C1BB {
	function f0() override
	external view returns (uint);
}
contract C1 is C1B {
	function f0() external view
	override
	returns (uint)
	{
		return 1104122143;
	}
}
library L2 {
	function f0(uint) internal view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) public view returns (uint)
	{
		return 1681692777;
	}
	function f3(uint) public view returns (uint)
	{
		return 1714636915;
	}
	function f4(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
interface I3BBBBBB {
	function f0() external payable returns (uint);
}
interface I3BBBBB is I3BBBBBB {
}
interface I3BBBB is I3BBBBB {
	function f0() override
	external payable returns (uint);
}
interface I3BBBBBBB is I3BBBBB {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I3BBBBBBBB is I3BBBBBBB {
	function f2() external view returns (uint);
}
interface I3BBB is I3BBBB, I3BBBBBBB, I3BBBBBBBB {
	function f0() override(I3BBBB, I3BBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() external view returns (uint);
}
interface I3BB is I3BBB {
}
interface I3B is I3BB {
	function f1() override
	external payable returns (uint);
}
interface I3 is I3B {
	function f0() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
interface C5BB {
	function f0() external view returns (uint);
}
interface C5BBB is C5BB {
}
interface C5B is C5BB, C5BBB {
	function f0() override
	external view returns (uint);
}
interface C5BBBBB {
	function f0() external view returns (uint);
}
interface C5BBBB is C5BBB, C5BBBBB {
	function f0() override(C5BB, C5BBBBB)
	external view returns (uint);
}
contract C5 is C5B, C5BBBB {
	function f0() virtual external view
	override(C5BBBB, C5B)
	returns (uint)
	{
		return 2083169363;
	}
}
interface C6BB {
	function f0() external payable returns (uint);
}
interface C6B is C6BB {
	function f0() override
	external payable returns (uint);
}
contract C6 is C6B {
	function f0() external payable
	override
	returns (uint)
	{
		return 233165719;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 180627922;
	}
}
contract C7 {
	function f0() public pure
	
	returns (uint)
	{
		return 306816042;
	}
}
interface C8BB {
	function f0() external view returns (uint);
}
interface C8B is C8BB {
	function f0() override
	external view returns (uint);
}
contract C8 is C8B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 74753733;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 664918683;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1104122143)
				return 1;
			C5 tc1 = new C5();
			if (tc1.f0() != 2083169363)
				return 2;
			C6 tc2 = new C6();
			if (tc2.f0() != 233165719)
				return 3;
			if (tc2.f1() != 180627922)
				return 4;
			C7 tc3 = new C7();
			if (tc3.f0() != 306816042)
				return 5;
			C8 tc4 = new C8();
			if (tc4.f0() != 74753733)
				return 6;
			if (tc4.f1() != 664918683)
				return 7;
			return 0;
	}
}
