
pragma solidity >=0.0;



interface I0 {

	function f0() external payable returns (uint);
}





interface I1BBBB {

	function f0() external payable returns (uint);
}
interface I1BBB is I1BBBB {

	function f0() override
	external payable returns (uint);
}
interface I1BB is I1BBB {

	function f0() override
	external payable returns (uint);
}




interface I1BBBBBBBB {

	function f0() external payable returns (uint);
}
interface I1BBBBBBB is I1BBBBBBBB {

}
interface I1BBBBBB is I1BBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I1BBBBB is I1BBB, I1BBBBBB {

	function f0() override(I1BBB, I1BBBBBB)
	external payable returns (uint);
}
interface I1B is I1BB, I1BBBBB {

	function f0() override(I1BB, I1BBBBB)
	external payable returns (uint);
}
interface I1 is I1B {

	function f0() override
	external payable returns (uint);
}
library L2 {

	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public view returns (uint)
	{
		return 1681692777;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1714636915;
	}
}






interface I3BBBBB {

	function f0() external payable returns (uint);
}
interface I3BBBB is I3BBBBB {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I3BBB is I3BBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I3BB is I3BBB {

	function f1() override
	external payable returns (uint);
}




interface I3BBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I3BBBBBBBB is I3BBBBBBBBB {

}
interface I3BBBBBBB is I3BBBBBBBB {

}
interface I3BBBBBB is I3BBB, I3BBBBBBB {

	function f0() override(I3BBB, I3BBBBBBBBB)
	external payable returns (uint);
}
interface I3B is I3BB, I3BBBBBB {

	function f0() override(I3BBB, I3BBBBBB)
	external payable returns (uint);
	function f1() override(I3BB, I3BBB)
	external payable returns (uint);
}
interface I3 is I3B {

}


contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1681692777)
			return 1;
		return 0;
	}
}

