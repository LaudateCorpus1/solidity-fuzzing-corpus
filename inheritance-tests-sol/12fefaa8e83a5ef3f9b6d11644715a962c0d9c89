pragma solidity >=0.0;
library L0 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
interface I1BB {
	function f0() external payable returns (uint);
}
interface I1B is I1BB {
	function f0() override
	external payable returns (uint);
}
interface I1 is I1B {
	function f0() override
	external payable returns (uint);
}
interface I2 {
	function f0() external payable returns (uint);
}
library L3 {
	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}
interface I4BBBB {
	function f0() external payable returns (uint);
}
interface I4BBB is I4BBBB {
	function f1() external view returns (uint);
}
interface I4BB is I4BBB {
	function f0() override
	external payable returns (uint);
}
interface I4BBBBBBBB {
	function f0() external payable returns (uint);
}
interface I4BBBBBBB is I4BBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I4BBBBBB is I4BBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I4BBBBB is I4BBB, I4BBBBBB {
	function f0() override(I4BBBB, I4BBBBBB)
	external payable returns (uint);
}
interface I4B is I4BB, I4BBBBB {
	function f0() override(I4BB, I4BBBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface I4 is I4B {
	function f1() override
	external view returns (uint);
}
contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}
