pragma solidity >=0.0;
library L0 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
interface I2BB {
	function f0() external payable returns (uint);
}
interface I2BBB is I2BB {
	function f1() external view returns (uint);
}
interface I2B is I2BB, I2BBB {
	function f0() override
	external payable returns (uint);
}
interface I2 is I2B {
}
library L3 {
	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}
interface I4BBBB {
	function f0() external payable returns (uint);
}
interface I4BBB is I4BBBB {
}
interface I4BB is I4BBB {
}
interface I4B is I4BB {
}
interface I4 is I4B {
}
interface I5BB {
	function f0() external view returns (uint);
}
interface I5B is I5BB {
	function f1() external payable returns (uint);
}
interface I5 is I5B {
	function f1() override
	external payable returns (uint);
}
interface I6BB {
	function f0() external view returns (uint);
}
interface I6B is I6BB {
	function f1() external payable returns (uint);
}
interface I6 is I6B {
	function f0() override
	external view returns (uint);
}
interface I7B {
	function f0() external view returns (uint);
}
interface I7 is I7B {
	function f0() override
	external view returns (uint);
}
interface I8BB {
	function f0() external view returns (uint);
}
interface I8B is I8BB {
	function f1() external payable returns (uint);
}
interface I8BBBB {
	function f0() external view returns (uint);
}
interface I8BBB is I8BB, I8BBBB {
	function f0() override(I8BB, I8BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I8 is I8B, I8BBB {
	function f0() override(I8BB, I8BBB)
	external view returns (uint);
	function f1() override(I8B, I8BBB)
	external payable returns (uint);
}
interface I10BB {
	function f0() external view returns (uint);
}
interface I10B is I10BB {
	function f1() external payable returns (uint);
}
interface I10BBBB {
	function f0() external view returns (uint);
}
interface I10BBB is I10B, I10BBBB {
	function f0() override(I10BB, I10BBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface I10 is I10B, I10BBB {
	function f0() override(I10BB, I10BBB)
	external view returns (uint);
	function f1() override(I10B, I10BBB)
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
