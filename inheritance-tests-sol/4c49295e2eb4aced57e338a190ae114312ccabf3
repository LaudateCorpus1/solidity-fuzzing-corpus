
pragma solidity >=0.0;











interface I0BBBBBBBB {

	function f0() external payable returns (uint);
}
interface I0BBBBBBB is I0BBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I0BBBBBB is I0BBBBBBB {

}
interface I0BBBBB is I0BBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I0BBBB is I0BBBBB {

	function f0() override
	external payable returns (uint);
}
interface I0BBB is I0BBBB {

	function f0() override
	external payable returns (uint);
}
interface I0BB is I0BBB {

	function f0() override
	external payable returns (uint);
}
interface I0B is I0BB {

}

interface I0BBBBBBBBB is I0BB {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I0 is I0B, I0BBBBBBBBB {

	function f0() override(I0BB, I0BBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

