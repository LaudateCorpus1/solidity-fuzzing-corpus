pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
contract C2 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 128641350;
	}
}
interface C3BBB {
	function f0() external payable returns (uint);
}
interface C3BB is C3BBB {
}
contract C3B is C3BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 769209484;
	}
}
contract C3 is C3B {
	function f0() external payable
	override
	returns (uint)
	{
		return 789576358;
	}
}
interface C4BBBBBBBB {
	function f0() external view returns (uint);
}
interface C4BBBBBBB is C4BBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C4BBBBBB is C4BBBBBBB {
}
interface C4BBBBB is C4BBBBBB {
}
interface C4BBBB is C4BBBBB {
}
interface C4BBB is C4BBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface C4BB is C4BBB {
	function f1() override
	external payable returns (uint);
}
contract C4B is C4BB {
	function f0() external view
	override
	returns (uint)
	{
		return 378181741;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1414286161;
	}
}
contract C4 is C4B {
}
library L5 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
library L6 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}
interface I7 {
	function f0() external payable returns (uint);
}
interface I8BB {
	function f0() external view returns (uint);
}
interface I8B is I8BB {
	function f1() external view returns (uint);
}
interface I8 is I8B {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface C9BBBBBBBB {
	function f0() external pure returns (uint);
}
interface C9BBBBBBB is C9BBBBBBBB {
	function f0() override
	external pure returns (uint);
	function f1() external payable returns (uint);
}
interface C9BBBBBB is C9BBBBBBB {
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C9BBBBB is C9BBBBBB {
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
interface C9BBBBBBBBB is C9BBBBBB {
	function f1() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface C9BBBB is C9BBBBB, C9BBBBBBBBB {
	function f0() override
	external pure returns (uint);
	function f1() override(C9BBBBBB, C9BBBBBBBBB)
	external payable returns (uint);
	function f2() override(C9BBBBB, C9BBBBBBBBB)
	external view returns (uint);
	function f3() override(C9BBBBB, C9BBBBBBBBB)
	external view returns (uint);
}
contract C9BBB is C9BBBB {
	function f0() external pure
	override
	returns (uint)
	{
		return 1364848143;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 661922682;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1705287326;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1767658065;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1106360392;
	}
}
contract C9BB is C9BBB {
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1867578769;
	}
}
contract C9B is C9BB {
	function f2() virtual external view
	override
	returns (uint)
	{
		return 572976576;
	}
}
contract C9 is C9B {
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1791399495;
	}
}
interface I10BBB {
	function f0() external payable returns (uint);
}
interface I10BB is I10BBB {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I10B is I10BB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I10BBBBB {
	function f0() external payable returns (uint);
}
interface I10BBBB is I10B, I10BBBBB {
	function f0() override(I10B, I10BBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
}
interface I10 is I10B, I10BBBB {
	function f0() override(I10B, I10BBBB)
	external payable returns (uint);
	function f1() override(I10B, I10BBBB)
	external payable returns (uint);
	function f2() override(I10B, I10BBBB)
	external view returns (uint);
	function f3() external payable returns (uint);
	function f4() external view returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 128641350)
				return 1;
			C3 tc1 = new C3();
			if (tc1.f0() != 789576358)
				return 2;
			C3B tc2 = new C3B();
			if (tc2.f0() != 769209484)
				return 3;
			C4 tc3 = new C4();
			if (tc3.f0() != 378181741)
				return 4;
			if (tc3.f1() != 1414286161)
				return 5;
			C4B tc4 = new C4B();
			if (tc4.f0() != 378181741)
				return 6;
			if (tc4.f1() != 1414286161)
				return 7;
			C9 tc5 = new C9();
			if (tc5.f0() != 1364848143)
				return 8;
			if (tc5.f1() != 661922682)
				return 9;
			if (tc5.f2() != 1791399495)
				return 10;
			if (tc5.f3() != 1767658065)
				return 11;
			if (tc5.f4() != 1867578769)
				return 12;
			C9B tc6 = new C9B();
			if (tc6.f0() != 1364848143)
				return 13;
			if (tc6.f1() != 661922682)
				return 14;
			if (tc6.f2() != 572976576)
				return 15;
			if (tc6.f3() != 1767658065)
				return 16;
			if (tc6.f4() != 1867578769)
				return 17;
			C9BB tc7 = new C9BB();
			if (tc7.f0() != 1364848143)
				return 18;
			if (tc7.f1() != 661922682)
				return 19;
			if (tc7.f2() != 1705287326)
				return 20;
			if (tc7.f3() != 1767658065)
				return 21;
			if (tc7.f4() != 1867578769)
				return 22;
			C9BBB tc8 = new C9BBB();
			if (tc8.f0() != 1364848143)
				return 23;
			if (tc8.f1() != 661922682)
				return 24;
			if (tc8.f2() != 1705287326)
				return 25;
			if (tc8.f3() != 1767658065)
				return 26;
			if (tc8.f4() != 1106360392)
				return 27;
			return 0;
	}
}
