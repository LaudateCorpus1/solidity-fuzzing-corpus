pragma solidity >=0.0;
interface C0BBBB {
	function f0() external payable returns (uint);
}
interface C0BBBBB is C0BBBB {
	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface C0BBB is C0BBBB, C0BBBBB {
	function f0() override(C0BBBB, C0BBBBB)
	external payable returns (uint);
}
interface C0BB is C0BBB {
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface C0B is C0BB {
	function f2() override
	external payable returns (uint);
	function f3() external payable returns (uint);
}
contract C0 is C0B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1425835579;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 769429449;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1055691416;
	}
	function f3() external payable
	override
	returns (uint)
	{
		return 1379193482;
	}
}
interface C3BBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C3BBBBBBB is C3BBBBBBBB {
}
interface C3BBBBBB is C3BBBBBBB {
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C3BBBBB is C3BBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
	function f3() override
	external view returns (uint);
}
interface C3BBBBBBBBB is C3BBBBB {
	function f0() override
	external payable returns (uint);
	function f4() external view returns (uint);
}
interface C3BBBB is C3BBBBB, C3BBBBBBBBB {
	function f0() override(C3BBBBB, C3BBBBBBBBB)
	external payable returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
contract C3BBB is C3BBBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 552744463;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 943587517;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1184837119;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 138908992;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1713290811;
	}
}
contract C3BB is C3BBB {
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1373258228;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 389511797;
	}
}
contract C3B is C3BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1630082519;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 1081725071;
	}
}
contract C3 is C3B {
	function f2() external view
	override
	returns (uint)
	{
		return 2144655890;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1425835579)
				return 1;
			if (tc0.f1() != 769429449)
				return 2;
			if (tc0.f2() != 1055691416)
				return 3;
			if (tc0.f3() != 1379193482)
				return 4;
			C3 tc1 = new C3();
			if (tc1.f0() != 1630082519)
				return 5;
			if (tc1.f1() != 943587517)
				return 6;
			if (tc1.f2() != 2144655890)
				return 7;
			if (tc1.f3() != 138908992)
				return 8;
			if (tc1.f4() != 1081725071)
				return 9;
			C3B tc2 = new C3B();
			if (tc2.f0() != 1630082519)
				return 10;
			if (tc2.f1() != 943587517)
				return 11;
			if (tc2.f2() != 1373258228)
				return 12;
			if (tc2.f3() != 138908992)
				return 13;
			if (tc2.f4() != 1081725071)
				return 14;
			C3BB tc3 = new C3BB();
			if (tc3.f0() != 552744463)
				return 15;
			if (tc3.f1() != 943587517)
				return 16;
			if (tc3.f2() != 1373258228)
				return 17;
			if (tc3.f3() != 138908992)
				return 18;
			if (tc3.f4() != 389511797)
				return 19;
			C3BBB tc4 = new C3BBB();
			if (tc4.f0() != 552744463)
				return 20;
			if (tc4.f1() != 943587517)
				return 21;
			if (tc4.f2() != 1184837119)
				return 22;
			if (tc4.f3() != 138908992)
				return 23;
			if (tc4.f4() != 1713290811)
				return 24;
			return 0;
	}
}
