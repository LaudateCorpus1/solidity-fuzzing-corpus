
pragma solidity >=0.0;









interface I1BBBBBB {

}

interface I1BBBBBBB is I1BBBBBB {

	function f0() external payable returns (uint);
}
interface I1BBBBB is I1BBBBBB, I1BBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface I1BBBB is I1BBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface I1BBB is I1BBBB {

	function f0() override
	external payable returns (uint);
}

interface I1BBBBBBBB is I1BBBB {

	function f2() external payable returns (uint);
}
interface I1BB is I1BBB, I1BBBBBBBB {

	function f0() override(I1BBB, I1BBBB)
	external payable returns (uint);
}
interface I1B is I1BB {

	function f2() override
	external payable returns (uint);
}

interface I1BBBBBBBBB is I1B {

	function f0() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() external payable returns (uint);
}
interface I1 is I1B, I1BBBBBBBBB {

	function f0() override(I1BB, I1BBBBBBBBB)
	external payable returns (uint);
	function f2() override(I1B, I1BBBBBBBBB)
	external payable returns (uint);
	function f3() override
	external payable returns (uint);
}



interface I3BB {

}
interface I3B is I3BB {

}

interface I3BBB is I3BB {

}
interface I3 is I3B, I3BBB {

}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

