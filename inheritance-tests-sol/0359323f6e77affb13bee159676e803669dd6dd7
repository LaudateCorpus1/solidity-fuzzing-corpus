pragma solidity >=0.0;
interface I0BBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I0BBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBB {
	function f0() override(I0BBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
interface I0BBBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f4() external view returns (uint);
}
interface I0BBBBBBBBBBBBBB is I0BBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() external view returns (uint);
}
interface I0BBBBBBBBBBBBB is I0BBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBBBBB {
	function f1() override
	external payable returns (uint);
	function f6() external payable returns (uint);
}
interface I0BBBBBBBBBBBB is I0BBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override(I0BBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
	function f7() external view returns (uint);
	function f8() external pure returns (uint);
	function f9() external payable returns (uint);
	function f10() external payable returns (uint);
}
interface I0BBBBBBBBBBB is I0BBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f5() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
	function f8() override
	external pure returns (uint);
	function f10() override
	external payable returns (uint);
}
interface I0BBBBBBBBBB is I0BBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f11() external payable returns (uint);
	function f12() external view returns (uint);
}
interface I0BBBBBBBBB is I0BBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
	function f7() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f11() override
	external payable returns (uint);
	function f12() override
	external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBBB {
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f13() external payable returns (uint);
}
interface I0BBBBBBBB is I0BBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I0BBBBBBBBB, I0BBBBBBBBBB)
	external view returns (uint);
	function f1() override(I0BBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I0BBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I0BBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override(I0BBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f6() override(I0BBBBBBBBB, I0BBBBBBBBBBB)
	external payable returns (uint);
	function f7() override(I0BBBBBBBBB, I0BBBBBBBBBBBB)
	external view returns (uint);
	function f8() override(I0BBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f9() override(I0BBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(I0BBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(I0BBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f12() override(I0BBBBBBBBB, I0BBBBBBBBBB)
	external view returns (uint);
	function f13() override
	external payable returns (uint);
	function f14() external payable returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBB is I0BBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f13() external payable returns (uint);
}
interface I0BBBBBBB is I0BBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I0BBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I0BBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I0BBBBBBBB, I0BBBBBBBBB)
	external payable returns (uint);
	function f3() override(I0BBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I0BBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f5() override(I0BBBBBBBB, I0BBBBBBBBBBB)
	external view returns (uint);
	function f6() override(I0BBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f7() override(I0BBBBBBBB, I0BBBBBBBBB)
	external view returns (uint);
	function f8() override(I0BBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f9() override(I0BBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(I0BBBBBBBB, I0BBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(I0BBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f12() override(I0BBBBBBBB, I0BBBBBBBBB)
	external view returns (uint);
	function f13() override(I0BBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f14() override
	external payable returns (uint);
	function f15() external view returns (uint);
	function f16() external pure returns (uint);
	function f17() external payable returns (uint);
	function f18() external payable returns (uint);
}
interface I0BBBBBB is I0BBBBBBB {
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() override
	external view returns (uint);
	function f7() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f11() override
	external payable returns (uint);
	function f12() override
	external view returns (uint);
	function f13() override
	external payable returns (uint);
	function f14() override
	external payable returns (uint);
	function f19() external payable returns (uint);
}
interface I0BBBBB is I0BBBBBB {
	function f2() override
	external payable returns (uint);
	function f4() override
	external view returns (uint);
	function f7() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f12() override
	external view returns (uint);
	function f16() override
	external pure returns (uint);
	function f19() override
	external payable returns (uint);
	function f20() external view returns (uint);
}
interface I0BBBB is I0BBBBB {
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override
	external view returns (uint);
	function f7() override
	external view returns (uint);
	function f12() override
	external view returns (uint);
	function f14() override
	external payable returns (uint);
	function f15() override
	external view returns (uint);
	function f17() override
	external payable returns (uint);
	function f18() override
	external payable returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBBB is I0BBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I0BBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
	function f7() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f13() override
	external payable returns (uint);
	function f15() override
	external view returns (uint);
	function f16() override
	external pure returns (uint);
	function f18() override
	external payable returns (uint);
	function f19() override
	external payable returns (uint);
	function f20() override
	external view returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBBBBB is I0BBBBB {
	function f6() override
	external payable returns (uint);
	function f7() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f12() override
	external view returns (uint);
	function f13() override
	external payable returns (uint);
	function f15() override
	external view returns (uint);
	function f16() override
	external pure returns (uint);
	function f18() override
	external payable returns (uint);
	function f21() external view returns (uint);
}
interface I0BBB is I0BBBB, I0BBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I0BBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I0BBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I0BBBBB, I0BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I0BBBB, I0BBBBBBB)
	external view returns (uint);
	function f4() override(I0BBBB, I0BBBBBBBBBBBBBBBBBBBBBBB, I0BBBBB)
	external view returns (uint);
	function f5() override(I0BBBB, I0BBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBB)
	external view returns (uint);
	function f6() override(I0BBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f7() override(I0BBBB, I0BBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f8() override(I0BBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f9() override(I0BBBBB, I0BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(I0BBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(I0BBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f12() override(I0BBBB, I0BBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f13() override(I0BBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f14() override(I0BBBB, I0BBBBBB)
	external payable returns (uint);
	function f15() override(I0BBBB, I0BBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f16() override(I0BBBBB, I0BBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f17() override(I0BBBB, I0BBBBBBB)
	external payable returns (uint);
	function f18() override(I0BBBB, I0BBBBBBBBBBBBBBBBBBBBBBB, I0BBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f19() override(I0BBBBB, I0BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f20() override(I0BBBBB, I0BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f21() override
	external view returns (uint);
	function f22() external payable returns (uint);
}
interface I0BB is I0BBB {
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f12() override
	external view returns (uint);
	function f14() override
	external payable returns (uint);
	function f15() override
	external view returns (uint);
	function f16() override
	external pure returns (uint);
	function f17() override
	external payable returns (uint);
	function f18() override
	external payable returns (uint);
	function f20() override
	external view returns (uint);
	function f22() override
	external payable returns (uint);
}
interface I0B is I0BB {
	function f4() override
	external view returns (uint);
	function f10() override
	external payable returns (uint);
	function f14() override
	external payable returns (uint);
	function f17() override
	external payable returns (uint);
	function f18() override
	external payable returns (uint);
	function f20() override
	external view returns (uint);
	function f22() override
	external payable returns (uint);
}
interface I0BBBBBBBBBBBBBBBBBBBBBBBBBB is I0B {
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override
	external view returns (uint);
	function f7() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f14() override
	external payable returns (uint);
	function f15() override
	external view returns (uint);
	function f17() override
	external payable returns (uint);
	function f20() override
	external view returns (uint);
	function f21() override
	external view returns (uint);
	function f22() override
	external payable returns (uint);
	function f23() external payable returns (uint);
}
interface I0 is I0B, I0BBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override(I0BB, I0BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I0B, I0BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f5() override(I0BB, I0BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f6() override
	external payable returns (uint);
	function f7() override(I0BBB, I0BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f8() override(I0BB, I0BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f9() override(I0BB, I0BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(I0BB, I0BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f12() override
	external view returns (uint);
	function f14() override(I0B, I0BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f15() override(I0BB, I0BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f16() override
	external pure returns (uint);
	function f17() override(I0B, I0BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f18() override
	external payable returns (uint);
	function f19() override
	external payable returns (uint);
	function f20() override(I0B, I0BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f21() override(I0BBB, I0BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f22() override(I0B, I0BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
}
library L1 {
	function f0(uint) public pure returns (uint)
	{
		return 1649760492;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
