
pragma solidity >=0.0;





interface I0BB {

	function f0() external view returns (uint);
}
interface I0B is I0BB {

	function f1() external payable returns (uint);
}
interface I0 is I0B {

	function f0() override
	external view returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}




interface C1BBB {

	function f0() external view returns (uint);
}
interface C1BB is C1BBB {

}
interface C1B is C1BB {

}
contract C1 is C1B {

	function f0() external view
	override
	returns (uint)
	{
		return 1596680831;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 192302371;
	}
}
library L2 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}


abstract contract C3B {

}
contract C3 is C3B {

	function f0() public pure
	
	returns (uint)
	{
		return 1203428207;
	}
}


interface I4B {

	function f0() external view returns (uint);
}

interface I4BB is I4B {

	function f1() external view returns (uint);
}
interface I4 is I4B, I4BB {

}
library L5 {

	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}
library L6 {

	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}




interface C7BBB {

	function f0() external view returns (uint);
}
interface C7BB is C7BBB {

}
interface C7B is C7BB {

}
contract C7 is C7B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 914937185;
	}
}





interface C8BBBB {

	function f0() external payable returns (uint);
}
interface C8BBB is C8BBBB {

	function f0() override
	external payable returns (uint);
}
contract C8BB is C8BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 2064876628;
	}
}
contract C8B is C8BB {

}
contract C8 is C8B {

	function f1() public view
	
	returns (uint)
	{
		return 1947433875;
	}
}
library L9 {

	function f0(uint) external view returns (uint)
	{
		return 424238335;
	}
}

contract C10 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 2010567813;
	}
}
library L11 {

	function f0(uint) internal pure returns (uint)
	{
		return 719885386;
	}
}


contract C12B {

	function f0() virtual public payable
	
	returns (uint)
	{
		return 890442452;
	}
}
abstract contract C12 is C12B {

}

contract C13 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1105724094;
	}
}





interface C14BBBB {

	function f0() external payable returns (uint);
}
interface C14BBB is C14BBBB {

	function f0() override
	external payable returns (uint);
}
contract C14BB is C14BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1168816941;
	}
}
abstract contract C14B is C14BB {

}
contract C14 is C14B {

	function f0() external payable
	override
	returns (uint)
	{
		return 1814467857;
	}
	function f1() public view
	
	returns (uint)
	{
		return 1057382352;
	}
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1596680831)
				return 1;
			if (tc0.f1() != 192302371)
				return 2;
			C10 tc1 = new C10();
			if (tc1.f0() != 2010567813)
				return 3;
			C12B tc2 = new C12B();
			if (tc2.f0() != 890442452)
				return 4;
			C13 tc3 = new C13();
			if (tc3.f0() != 1105724094)
				return 5;
			C14 tc4 = new C14();
			if (tc4.f0() != 1814467857)
				return 6;
			if (tc4.f1() != 1057382352)
				return 7;
			C14BB tc5 = new C14BB();
			if (tc5.f0() != 1168816941)
				return 8;
			C3 tc6 = new C3();
			if (tc6.f0() != 1203428207)
				return 9;
			C7 tc7 = new C7();
			if (tc7.f0() != 914937185)
				return 10;
			C8 tc8 = new C8();
			if (tc8.f0() != 2064876628)
				return 11;
			if (tc8.f1() != 1947433875)
				return 12;
			C8B tc9 = new C8B();
			if (tc9.f0() != 2064876628)
				return 13;
			C8BB tc10 = new C8BB();
			if (tc10.f0() != 2064876628)
				return 14;
			return 0;
	}
}

