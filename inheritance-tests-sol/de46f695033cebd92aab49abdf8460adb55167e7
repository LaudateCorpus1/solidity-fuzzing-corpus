pragma solidity >=0.0;
interface I0BBB {
	function f0() external payable returns (uint);
}
interface I0BB is I0BBB {
	function f1() external payable returns (uint);
}
interface I0B is I0BB {
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I0BBBBB {
	function f0() external payable returns (uint);
}
interface I0BBBB is I0BB, I0BBBBB {
	function f0() override(I0BBB, I0BBBBB)
	external payable returns (uint);
}
interface I0 is I0B, I0BBBB {
	function f0() override(I0BBB, I0BBBB)
	external payable returns (uint);
	function f1() override(I0B, I0BB)
	external payable returns (uint);
	function f2() override
	external view returns (uint);
	function f3() external payable returns (uint);
}
interface C1BBBBBBBB {
	function f0() external pure returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB {
}
interface C1BBBBBB is C1BBBBBBB {
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface C1BBBBB is C1BBBBBB {
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
interface C1BBBBBBBBB is C1BBBBB {
	function f0() override
	external pure returns (uint);
	function f3() external view returns (uint);
}
interface C1BBBB is C1BBBBB, C1BBBBBBBBB {
	function f0() override(C1BBBBBBBB, C1BBBBBBBBB)
	external pure returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
contract C1BBB is C1BBBB {
	function f0() virtual external pure
	override
	returns (uint)
	{
		return 1032438314;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 921256890;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1389449997;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 445221226;
	}
}
contract C1BB is C1BBB {
	function f3() external view
	override
	returns (uint)
	{
		return 739959938;
	}
}
contract C1B is C1BB {
}
contract C1 is C1B {
}
contract C2 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 464135131;
	}
}
contract C3 {
	function f0() public view
	
	returns (uint)
	{
		return 1717502997;
	}
}
library L4 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
interface I5B {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I5 is I5B {
	function f0() override
	external payable returns (uint);
}
interface C6BBBBBBBB {
	function f0() external pure returns (uint);
}
interface C6BBBBBBB is C6BBBBBBBB {
}
interface C6BBBBBB is C6BBBBBBB {
	function f0() override
	external pure returns (uint);
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface C6BBBBB is C6BBBBBB {
	function f0() override
	external pure returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
interface C6BBBBBBBBB is C6BBBBBB {
	function f0() override
	external pure returns (uint);
	function f2() override
	external view returns (uint);
	function f3() external view returns (uint);
}
interface C6BBBB is C6BBBBB, C6BBBBBBBBB {
	function f0() override(C6BBBBB, C6BBBBBBBBB)
	external pure returns (uint);
	function f1() override(C6BBBBB, C6BBBBBB)
	external view returns (uint);
	function f2() override(C6BBBBB, C6BBBBBBBBB)
	external view returns (uint);
}
contract C6BBB is C6BBBB {
	function f0() external pure
	override
	returns (uint)
	{
		return 1249752168;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1433282303;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1155580494;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1261135403;
	}
}
contract C6BB is C6BBB {
	function f2() virtual external view
	override
	returns (uint)
	{
		return 501882802;
	}
}
contract C6B is C6BB {
}
contract C6 is C6B {
	function f2() external view
	override
	returns (uint)
	{
		return 418525768;
	}
}
interface C7B {
	function f0() external view returns (uint);
}
contract C7 is C7B {
	function f0() external view
	override
	returns (uint)
	{
		return 177595455;
	}
}
contract C {
	using L4 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}
