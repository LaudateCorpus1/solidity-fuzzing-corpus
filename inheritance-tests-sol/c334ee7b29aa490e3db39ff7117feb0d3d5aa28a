
pragma solidity >=0.0;







interface I0BBBB {

}
interface I0BBB is I0BBBB {

	function f0() external view returns (uint);
}
interface I0BB is I0BBB {

	function f0() override
	external view returns (uint);
}
interface I0B is I0BB {

	function f0() override
	external view returns (uint);
}

interface I0BBBBB is I0BB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I0 is I0B, I0BBBBB {

	function f0() override(I0B, I0BBBBB)
	external view returns (uint);
}

interface I1 {

	function f0() external view returns (uint);
}

interface I2 {

	function f0() external payable returns (uint);
}



interface I3BB {

	function f0() external view returns (uint);
}
interface I3B is I3BB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I3 is I3B {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
library L4 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public view returns (uint)
	{
		return 1681692777;
	}
}




interface I5BBB {

	function f0() external view returns (uint);
}
interface I5BB is I5BBB {

}
interface I5B is I5BB {

}
interface I5 is I5B {

}






interface C6BBBBB {

	function f0() external payable returns (uint);
}
interface C6BBBB is C6BBBBB {

	function f0() override
	external payable returns (uint);
}
interface C6BBB is C6BBBB {

	function f0() override
	external payable returns (uint);
}
contract C6BB is C6BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1518187038;
	}
}
contract C6B is C6BB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1697268305;
	}
}
abstract contract C6 is C6B {

	function f0() external payable
	override
	returns (uint)
	{
		return 2062626965;
	}
}
library L7 {

	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}




interface I8BBB {

}
interface I8BB is I8BBB {

	function f0() external view returns (uint);
}
interface I8B is I8BB {

	function f0() override
	external view returns (uint);
}



interface I8BBBBBB {

	function f0() external view returns (uint);
}
interface I8BBBBB is I8BBBBBB {

}
interface I8BBBB is I8BB, I8BBBBB {

	function f0() override(I8BB, I8BBBBBB)
	external view returns (uint);
}
interface I8 is I8B, I8BBBB {

	function f0() override(I8B, I8BBBB)
	external view returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
library L9 {

	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
}


interface I10B {

}
interface I10 is I10B {

}




interface I11BBB {

	function f0() external view returns (uint);
}
interface I11BB is I11BBB {

	function f0() override
	external view returns (uint);
}
interface I11B is I11BB {

}
interface I11 is I11B {

}

interface I12 {

	function f0() external payable returns (uint);
}





interface I13BBBB {

	function f0() external view returns (uint);
}
interface I13BBB is I13BBBB {

	function f0() override
	external view returns (uint);
}
interface I13BB is I13BBB {

}
interface I13B is I13BB {

	function f0() override
	external view returns (uint);
}

interface I13BBBBB is I13B {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I13 is I13B, I13BBBBB {

	function f0() override(I13B, I13BBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
}

contract C14 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 2097897642;
	}
}
library L15 {

	function f0(uint) public view returns (uint)
	{
		return 1649760492;
	}
}







interface C16BBBBBB {

	function f0() external payable returns (uint);
}
interface C16BBBBB is C16BBBBBB {

	function f0() override
	external payable returns (uint);
}
interface C16BBBB is C16BBBBB {

}
interface C16BBB is C16BBBB {

	function f1() external view returns (uint);
}
interface C16BB is C16BBB {

	function f1() override
	external view returns (uint);
}
interface C16B is C16BB {

	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
contract C16 is C16B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 267230971;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 2042519933;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 703050418;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1962570486;
	}
}
library L17 {

	function f0(uint) private pure returns (uint)
	{
		return 596516649;
	}
}



interface I18BB {

	function f0() external view returns (uint);
}
interface I18B is I18BB {

	function f0() override
	external view returns (uint);
}
interface I18 is I18B {

	function f0() override
	external view returns (uint);
}
library L19 {

	function f0(uint) external pure returns (uint)
	{
		return 1189641421;
	}
}


interface I20B {

}

interface I20BB is I20B {

	function f0() external view returns (uint);
}
interface I20 is I20B, I20BB {

}


contract C {
	using L15 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1649760492)
			return 1;
		return 0;
	}
}

