pragma solidity >=0.0;
contract C0B {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 48271;
	}
}
contract C0 is C0B {
	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1914720637;
	}
}
interface I1B {
	function f0() external view returns (uint);
}
interface I1BBBBBB {
}
interface I1BBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I1BBBBBBBBB is I1BBBBBBBBBB {
}
interface I1BBBBBBBB is I1BBBBBBBBB {
}
interface I1BBBBBBB is I1BBBBBB, I1BBBBBBBB {
}
interface I1BBBBB is I1BBBBBB, I1BBBBBBB {
}
interface I1BBBB is I1BBBBB {
}
interface I1BBB is I1BBBB {
}
interface I1BB is I1B, I1BBB {
	function f0() override(I1B, I1BBBBBBBBBB)
	external view returns (uint);
}
interface I1BBBBBBBBBBB is I1B {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I1BBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBB {
}
interface I1BBBBBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBB {
}
interface I1BBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBB {
}
interface I1BBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBB {
}
interface I1BBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBB {
}
interface I1BBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBB {
	function f0() override(I1BBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBB {
	function f1() external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I1BBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I1BBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I1BBBBBBBBBBBBB is I1BBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I1BBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I1BBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I1BBBBBBBBBBBB is I1B, I1BBBBBBBBBBBBB {
	function f0() override(I1B, I1BBBBBBBBBBBBB)
	external view returns (uint);
}
interface I1 is I1B, I1BB, I1BBBBBBBBBBB, I1BBBBBBBBBBBB {
	function f0() override(I1B, I1BB, I1BBBBBBBBBBB, I1BBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I1BBBBBBBBBBB, I1BBBBBBBBBBBBB)
	external view returns (uint);
}
interface I3B {
}
interface I3 is I3B {
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1914720637)
				return 1;
			C0B tc1 = new C0B();
			if (tc1.f0() != 48271)
				return 2;
			return 0;
	}
}
