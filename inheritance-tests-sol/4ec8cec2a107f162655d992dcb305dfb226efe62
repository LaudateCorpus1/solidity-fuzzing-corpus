pragma solidity >=0.0;
contract C0B {
	function f0() private pure
	
	returns (uint)
	{
		return 48271;
	}
}
contract C0 is C0B {
	function f1() public view
	
	returns (uint)
	{
		return 182605794;
	}
	function f2() virtual public view
	
	returns (uint)
	{
		return 1291394886;
	}
}
contract C1B {
	function f0() private pure
	
	returns (uint)
	{
		return 1914720637;
	}
}
contract C1BB is C1B {
	function f1() public view
	
	returns (uint)
	{
		return 2078669041;
	}
}
contract C1 is C1B, C1BB {
}
interface I3BBB {
	function f0() external view returns (uint);
}
interface I3BB is I3BBB {
}
interface I3B is I3BB {
}
interface I3 is I3B {
	function f1() external view returns (uint);
}
interface I4BBB {
	function f0() external view returns (uint);
}
interface I4BB is I4BBB {
}
interface I4B is I4BB {
}
interface I4 is I4B {
	function f1() external view returns (uint);
}
interface I6BBBBBB {
	function f0() external view returns (uint);
}
interface I6BBBBB is I6BBBBBB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I6BBBB is I6BBBBB {
	function f1() override
	external view returns (uint);
}
interface I6BBB is I6BBBB {
	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I6BB is I6BBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
interface I6B is I6BB {
	function f2() override
	external payable returns (uint);
}
interface I6 is I6B {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
contract C9BB {
	function f0() private pure
	
	returns (uint)
	{
		return 1272185027;
	}
}
contract C9B is C9BB {
	function f1() public payable
	
	returns (uint)
	{
		return 201068705;
	}
}
contract C9 is C9B {
}
contract C10 {
	function f0() virtual public view
	
	returns (uint)
	{
		return 928270262;
	}
	function f1() public view
	
	returns (uint)
	{
		return 1287522347;
	}
}
contract C12BB {
	function f0() private pure
	
	returns (uint)
	{
		return 1057382352;
	}
}
contract C12B is C12BB {
	function f1() public payable
	
	returns (uint)
	{
		return 1659675143;
	}
}
contract C12 is C12B {
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f1() != 182605794)
				return 1;
			if (tc0.f2() != 1291394886)
				return 2;
			C1 tc1 = new C1();
			if (tc1.f1() != 2078669041)
				return 3;
			C10 tc2 = new C10();
			if (tc2.f0() != 928270262)
				return 4;
			if (tc2.f1() != 1287522347)
				return 5;
			C12 tc3 = new C12();
			if (tc3.f1() != 1659675143)
				return 6;
			C12B tc4 = new C12B();
			if (tc4.f1() != 1659675143)
				return 7;
			C1BB tc5 = new C1BB();
			if (tc5.f1() != 2078669041)
				return 8;
			C9 tc6 = new C9();
			if (tc6.f1() != 201068705)
				return 9;
			C9B tc7 = new C9B();
			if (tc7.f1() != 201068705)
				return 10;
			return 0;
	}
}
