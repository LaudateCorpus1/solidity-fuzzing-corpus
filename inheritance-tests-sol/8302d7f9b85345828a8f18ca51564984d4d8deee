
pragma solidity >=0.0;




interface I0B {

	function f0() external payable returns (uint);
}
interface I0 is I0B {

}


interface I1B {

}


interface I1BBB {

	function f0() external payable returns (uint);
}
interface I1BB is I1B, I1BBB {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I1 is I1B, I1BB {

	function f2() external view returns (uint);
}



interface I4BB {

	function f0() external view returns (uint);
}
interface I4B is I4BB {

	function f1() external payable returns (uint);
}


interface I4BBBB {

	function f0() external view returns (uint);
}
interface I4BBB is I4BB, I4BBBB {

	function f0() override(I4BB, I4BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I4 is I4B, I4BBB {

	function f0() override(I4BB, I4BBB)
	external view returns (uint);
	function f1() override(I4B, I4BBB)
	external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

