pragma solidity >=0.0;
library L0 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
library L2 {
	function f0(uint) external pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}
library L3 {
	function f0(uint) public pure returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 424238335;
	}
}
library L4 {
	function f0(uint) internal pure returns (uint)
	{
		return 719885386;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
}
library L5 {
	function f0(uint) internal view returns (uint)
	{
		return 596516649;
	}
}
library L7 {
	function f0(uint) internal pure returns (uint)
	{
		return 1189641421;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1025202362;
	}
	function f2(uint) public view returns (uint)
	{
		return 1350490027;
	}
}
interface C8B {
	function f0() external payable returns (uint);
}
contract C8 is C8B {
	function f0() external payable
	override
	returns (uint)
	{
		return 908951446;
	}
}
library L9 {
	function f0(uint) external pure returns (uint)
	{
		return 783368690;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1102520059;
	}
}
contract C10B {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1301149675;
	}
}
abstract contract C10 is C10B {
	function f0() public pure
	override
	returns (uint)
	{
		return 2081258388;
	}
}
interface I11BBBB {
	function f0() external payable returns (uint);
}
interface I11BBBBB is I11BBBB {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I11BBB is I11BBBB, I11BBBBB {
	function f0() override(I11BBBB, I11BBBBB)
	external payable returns (uint);
}
interface I11BB is I11BBB {
	function f1() override
	external payable returns (uint);
}
interface I11BBBBBBBB {
	function f0() external payable returns (uint);
}
interface I11BBBBBBBBB is I11BBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I11BBBBBBB is I11BBBBBBBB, I11BBBBBBBBB {
	function f0() override(I11BBBBBBBB, I11BBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I11BBBBBB is I11BB, I11BBBBBBB {
	function f0() override(I11BBB, I11BBBBBBB)
	external payable returns (uint);
	function f1() override(I11BB, I11BBBBBBB)
	external payable returns (uint);
}
interface I11B is I11BB, I11BBBBBB {
	function f0() override(I11BBB, I11BBBBBB)
	external payable returns (uint);
	function f1() override(I11BB, I11BBBBBB)
	external payable returns (uint);
}
interface I11 is I11B {
	function f1() override
	external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C10B tc0 = new C10B();
			if (tc0.f0() != 1301149675)
				return 1;
			C8 tc1 = new C8();
			if (tc1.f0() != 908951446)
				return 2;
			return 0;
	}
}
