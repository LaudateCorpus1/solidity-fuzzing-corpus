
pragma solidity >=0.0;


library L0 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
library L1 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public view returns (uint)
	{
		return 1681692777;
	}
}
library L2 {

	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}
library L5 {

	function f0(uint) internal pure returns (uint)
	{
		return 719885386;
	}
}







interface C6BBBBBB {

	function f0() external payable returns (uint);
}
interface C6BBBBB is C6BBBBBB {

	function f0() override
	external payable returns (uint);
}


interface C6BBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface C6BBBBBBB is C6BBBBB, C6BBBBBBBB {

	function f0() override(C6BBBBB, C6BBBBBBBB)
	external payable returns (uint);
}
interface C6BBBB is C6BBBBB, C6BBBBBBB {

	function f0() override(C6BBBBB, C6BBBBBBB)
	external payable returns (uint);
}
interface C6BBB is C6BBBB {

}



interface C6BBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface C6BBBBBBBBBB is C6BBBBBBBBBBB {

}
interface C6BBBBBBBBB is C6BBBB, C6BBBBBBBBBB {

	function f0() override(C6BBBB, C6BBBBBBBBBBB)
	external payable returns (uint);
}
interface C6BB is C6BBB, C6BBBBBBBBB {

	function f0() override(C6BBBB, C6BBBBBBBBB)
	external payable returns (uint);
}
interface C6B is C6BB {

	function f1() override
	external view returns (uint);
}
contract C6 is C6B {

	function f0() external payable
	override
	returns (uint)
	{
		return 638022372;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1931656580;
	}
}


contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1681692777)
			return 1;
		return 0;
	}
}

