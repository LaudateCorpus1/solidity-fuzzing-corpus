pragma solidity >=0.0;
interface C0BBB {
	function f0() external view returns (uint);
}
interface C0BB is C0BBB {
}
interface C0B is C0BB {
	function f0() override
	external view returns (uint);
}
contract C0 is C0B {
	function f0() external view
	override
	returns (uint)
	{
		return 407355683;
	}
}
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
contract C2B {
	function f0() public view
	
	returns (uint)
	{
		return 1105902161;
	}
}
contract C2 is C2B {
}
interface I3B {
	function f0() external view returns (uint);
}
interface I3 is I3B {
}
contract C4 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 564586691;
	}
}
library L5 {
	function f0(uint) external pure returns (uint)
	{
		return 846930886;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 407355683)
				return 1;
			C2 tc1 = new C2();
			if (tc1.f0() != 1105902161)
				return 2;
			C2B tc2 = new C2B();
			if (tc2.f0() != 1105902161)
				return 3;
			C4 tc3 = new C4();
			if (tc3.f0() != 564586691)
				return 4;
			return 0;
	}
}
