pragma solidity >=0.0;
contract C0 {
	function f0() external pure
	
	returns (uint)
	{
		return 193084;
	}
}
contract C1BBB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 730423176;
	}
}
contract C1BB is C1BBB {
	function f0() public pure
	override
	returns (uint)
	{
		return 1872225223;
	}
}
contract C1B is C1BB {
}
contract C1 is C1B {
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1271382373;
	}
}
interface I2 {
	function f0() external view returns (uint);
}
interface C3BBBB {
}
interface C3BBB is C3BBBB {
	function f0() external payable returns (uint);
}
interface C3BB is C3BBB {
	function f0() override
	external payable returns (uint);
}
abstract contract C3B is C3BB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 511673655;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 100610062;
	}
}
contract C3 is C3B {
	function f1() public pure
	override
	returns (uint)
	{
		return 404605841;
	}
	function f2() external pure
	
	returns (uint)
	{
		return 1512265093;
	}
}
contract C4 {
	function f0() external pure
	
	returns (uint)
	{
		return 1284175379;
	}
}
library L5 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
