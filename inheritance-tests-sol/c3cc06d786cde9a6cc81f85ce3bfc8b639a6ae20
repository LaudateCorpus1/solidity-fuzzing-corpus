
pragma solidity >=0.0;




interface I0B {

	function f0() external view returns (uint);
}
interface I0 is I0B {

	function f0() override
	external view returns (uint);
}









interface C1BBBBBBBB {

	function f0() external view returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C1BBBBBB is C1BBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C1BBBBB is C1BBBBBB {

}
interface C1BBBB is C1BBBBB {

	function f0() override
	external view returns (uint);
}
interface C1BBB is C1BBBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface C1BB is C1BBB {

	function f0() override
	external view returns (uint);
}
contract C1B is C1BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 921123244;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 859669581;
	}
}
contract C1 is C1B {

	function f1() external payable
	override
	returns (uint)
	{
		return 1586385237;
	}
	function f2() virtual public pure
	
	returns (uint)
	{
		return 1429890501;
	}
}


interface I4B {

	function f0() external payable returns (uint);
}
interface I4 is I4B {

}









interface C5BBBBBBBB {

	function f0() external view returns (uint);
}
interface C5BBBBBBB is C5BBBBBBBB {

}
interface C5BBBBBB is C5BBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C5BBBBB is C5BBBBBB {

	function f0() override
	external view returns (uint);
}
interface C5BBBB is C5BBBBB {

}
interface C5BBB is C5BBBB {

	function f0() override
	external view returns (uint);
}
interface C5BB is C5BBB {

	function f0() override
	external view returns (uint);
}
contract C5B is C5BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1964106651;
	}
}
contract C5 is C5B {

	function f0() external view
	override
	returns (uint)
	{
		return 880913254;
	}
}


interface I6B {

	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface I6 is I6B {

}









interface C7BBBBBBBB {

	function f0() external view returns (uint);
}
interface C7BBBBBBB is C7BBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C7BBBBBB is C7BBBBBBB {

}
interface C7BBBBB is C7BBBBBB {

	function f0() override
	external view returns (uint);
}
interface C7BBBB is C7BBBBB {

}
interface C7BBB is C7BBBB {

}
interface C7BB is C7BBB {

	function f0() override
	external view returns (uint);
}
interface C7B is C7BB {

}
contract C7 is C7B {

	function f0() external view
	override
	returns (uint)
	{
		return 207611627;
	}
}


interface I8B {

	function f0() external view returns (uint);
}


interface I8BBB {

	function f0() external view returns (uint);
}
interface I8BB is I8B, I8BBB {

	function f0() override(I8B, I8BBB)
	external view returns (uint);
	function f1() external pure returns (uint);
}
interface I8 is I8B, I8BB {

	function f0() override(I8B, I8BB)
	external view returns (uint);
}


interface I9B {

	function f0() external view returns (uint);
}
interface I9 is I9B {

	function f0() override
	external view returns (uint);
}
library L10 {

	function f0(uint) internal view returns (uint)
	{
		return 1649760492;
	}
}

contract C11 {

	function f0() public view
	
	returns (uint)
	{
		return 1900848450;
	}
}


interface I12B {

}
interface I12 is I12B {

}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 921123244)
				return 1;
			if (tc0.f1() != 1586385237)
				return 2;
			if (tc0.f2() != 1429890501)
				return 3;
			C11 tc1 = new C11();
			if (tc1.f0() != 1900848450)
				return 4;
			C1B tc2 = new C1B();
			if (tc2.f0() != 921123244)
				return 5;
			if (tc2.f1() != 859669581)
				return 6;
			C5 tc3 = new C5();
			if (tc3.f0() != 880913254)
				return 7;
			C5B tc4 = new C5B();
			if (tc4.f0() != 1964106651)
				return 8;
			C7 tc5 = new C7();
			if (tc5.f0() != 207611627)
				return 9;
			return 0;
	}
}

