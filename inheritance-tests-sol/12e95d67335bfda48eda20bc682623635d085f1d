pragma solidity >=0.0;
library L0 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
interface C1B {
	function f0() external pure returns (uint);
}
contract C1 is C1B {
	function f0() virtual external pure
	override
	returns (uint)
	{
		return 1572557670;
	}
}
library L2 {
	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
library L4 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
library L5 {
	function f0(uint) internal pure returns (uint)
	{
		return 424238335;
	}
}
library L6 {
	function f0(uint) external pure returns (uint)
	{
		return 719885386;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
}
interface I7BBBBBBB {
	function f0() external payable returns (uint);
}
interface I7BBBBBB is I7BBBBBBB {
}
interface I7BBBBB is I7BBBBBB {
}
interface I7BBBB is I7BBBBB {
	function f0() override
	external payable returns (uint);
}
interface I7BBB is I7BBBB {
	function f0() override
	external payable returns (uint);
}
interface I7BB is I7BBB {
	function f0() override
	external payable returns (uint);
}
interface I7BBBBBBBBBB {
	function f0() external payable returns (uint);
}
interface I7BBBBBBBBBBB is I7BBBBBBBBBB {
	function f1() external payable returns (uint);
}
interface I7BBBBBBBBB is I7BBBBBBBBBB, I7BBBBBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I7BBBBBBBB is I7BBB, I7BBBBBBBBB {
	function f0() override(I7BBB, I7BBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I7BBBBBBBBBBBBBBB {
	function f0() external payable returns (uint);
}
interface I7BBBBBBBBBBBBBB is I7BBBBBBBBBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I7BBBBBBBBBBBBB is I7BBBBBBBBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I7BBBBBBBBBBBB is I7BBBBBBBB, I7BBBBBBBBBBBBB {
	function f0() override(I7BBBBBBBB, I7BBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface I7B is I7BB, I7BBBBBBBB, I7BBBBBBBBBBBB {
	function f0() override(I7BB, I7BBBBBBBB, I7BBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(I7BBBBBBBB, I7BBBBBBBBBBBB)
	external payable returns (uint);
}
interface I7 is I7B {
	function f0() override
	external payable returns (uint);
}
library L8 {
	function f0(uint) private pure returns (uint)
	{
		return 1350490027;
	}
	function f1(uint) private pure returns (uint)
	{
		return 783368690;
	}
}
library L9 {
	function f0(uint) external pure returns (uint)
	{
		return 1102520059;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 2044897763;
	}
}
library L10 {
	function f0(uint) external pure returns (uint)
	{
		return 1967513926;
	}
	function f1(uint) public view returns (uint)
	{
		return 1365180540;
	}
	function f2(uint) public view returns (uint)
	{
		return 1540383426;
	}
}
library L11 {
	function f0(uint) internal pure returns (uint)
	{
		return 304089172;
	}
}
contract C12B {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 431017937;
	}
}
abstract contract C12 is C12B {
}
contract C {
	using L6 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 719885386)
			return 1;
		return 0;
	}
}
