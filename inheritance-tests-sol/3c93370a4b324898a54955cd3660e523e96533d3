pragma solidity >=0.0;
interface I0BB {
	function f0() external payable returns (uint);
}
interface I0BBB is I0BB {
	function f1() external view returns (uint);
}
interface I0BBBB is I0BBB {
	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I0B is I0BB, I0BBB, I0BBBB {
	function f0() override(I0BB, I0BBBB)
	external payable returns (uint);
	function f3() external payable returns (uint);
	function f4() external payable returns (uint);
	function f5() external payable returns (uint);
}
interface I0BBBBBB {
	function f0() external payable returns (uint);
}
interface I0BBBBB is I0BBBB, I0BBBBBB {
	function f0() override(I0BBBB, I0BBBBBB)
	external payable returns (uint);
	function f3() external payable returns (uint);
}
interface I0 is I0B, I0BBBBB {
	function f0() override(I0B, I0BBBBB)
	external payable returns (uint);
	function f3() override(I0B, I0BBBBB)
	external payable returns (uint);
}
interface I1BB {
	function f0() external view returns (uint);
}
interface I1B is I1BB {
	function f1() external payable returns (uint);
}
interface I1 is I1B {
	function f0() override
	external view returns (uint);
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
