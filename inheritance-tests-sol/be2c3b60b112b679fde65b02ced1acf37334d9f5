
pragma solidity >=0.0;


library L0 {

	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private pure returns (uint)
	{
		return 846930886;
	}
}


interface I1B {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I1 is I1B {

}
library L2 {

	function f0(uint) private pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}


interface I3B {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I3 is I3B {

	function f1() override
	external view returns (uint);
}
library L4 {

	function f0(uint) private pure returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) public pure returns (uint)
	{
		return 424238335;
	}
}



interface I5BB {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I5B is I5BB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I5 is I5B {

	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
library L6 {

	function f0(uint) public view returns (uint)
	{
		return 719885386;
	}
}



interface I7BB {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I7B is I7BB {

	function f0() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface I7 is I7B {

	function f1() override
	external view returns (uint);
}

contract C8 {

	function f0() external pure
	
	returns (uint)
	{
		return 1162403279;
	}
	function f1() internal view
	
	returns (uint)
	{
		return 915951793;
	}
	function f2() public view
	
	returns (uint)
	{
		return 1515675467;
	}
}


interface I9B {

	function f0() external view returns (uint);
}
interface I9 is I9B {

	function f0() override
	external view returns (uint);
}
library L11 {

	function f0(uint) private pure returns (uint)
	{
		return 1649760492;
	}
	function f1(uint) private pure returns (uint)
	{
		return 596516649;
	}
}

contract C12 {

	function f0() external pure
	
	returns (uint)
	{
		return 1069127910;
	}
	function f1() internal view
	
	returns (uint)
	{
		return 1693822553;
	}
	function f2() public view
	
	returns (uint)
	{
		return 1363563632;
	}
}


contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 1714636915)
			return 1;
		return 0;
	}
}

