
pragma solidity >=0.0;




interface C0B {

}

contract C0BB is C0B {

}








interface C0BBBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C0BBBBBBBBB is C0BBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface C0BBBBBBBB is C0BBBBBBBBB {

	function f1() override
	external pure returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB {

	function f1() override
	external pure returns (uint);
	function f3() override
	external view returns (uint);
}

interface C0BBBBBBBBBBB is C0BBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f4() external view returns (uint);
}
interface C0BBBBBB is C0BBBBBBB, C0BBBBBBBBBBB {

	function f0() override(C0BBBBBBBBB, C0BBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(C0BBBBBBB, C0BBBBBBBB)
	external pure returns (uint);
	function f3() override(C0BBBBBBB, C0BBBBBBBB)
	external view returns (uint);
	function f4() override
	external view returns (uint);
}
contract C0BBBBB is C0BBBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1633106186;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1518187038;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 212682358;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1697268305;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1777615810;
	}
}
contract C0BBBB is C0BBBBB {

	function f1() virtual external pure
	override
	returns (uint)
	{
		return 431017937;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 538873778;
	}
}
abstract contract C0BBB is C0BB, C0BBBB {

	function f1() external pure
	override
	returns (uint)
	{
		return 122341836;
	}
}
abstract contract C0 is C0B, C0BB, C0BBB {

	function f3() external view
	override
	returns (uint)
	{
		return 2052226870;
	}
}


interface C1B {

}

contract C1BB is C1B {

}








interface C1BBBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C1BBBBBBBBB is C1BBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
}
interface C1BBBBBBBB is C1BBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB {

	function f0() override
	external payable returns (uint);
}

interface C1BBBBBBBBBBB is C1BBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface C1BBBBBB is C1BBBBBBB, C1BBBBBBBBBBB {

	function f0() override(C1BBBBBBB, C1BBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(C1BBBBBBBB, C1BBBBBBBBBBB)
	external pure returns (uint);
	function f3() override(C1BBBBBBBB, C1BBBBBBBBBBB)
	external view returns (uint);
}
contract C1BBBBB is C1BBBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 703050418;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 1962570486;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 88703659;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 800493463;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1465104029;
	}
}
contract C1BBBB is C1BBBBB {

	function f2() external view
	override
	returns (uint)
	{
		return 1823430883;
	}
}
abstract contract C1BBB is C1B, C1BBBB {

}
abstract contract C1 is C1B, C1BB, C1BBB {

	function f3() external view
	override
	returns (uint)
	{
		return 1561522897;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 802626028;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0BBBB tc0 = new C0BBBB();
			if (tc0.f0() != 1633106186)
				return 1;
			if (tc0.f1() != 431017937)
				return 2;
			if (tc0.f2() != 212682358)
				return 3;
			if (tc0.f3() != 1697268305)
				return 4;
			if (tc0.f4() != 538873778)
				return 5;
			C0BBBBB tc1 = new C0BBBBB();
			if (tc1.f0() != 1633106186)
				return 6;
			if (tc1.f1() != 1518187038)
				return 7;
			if (tc1.f2() != 212682358)
				return 8;
			if (tc1.f3() != 1697268305)
				return 9;
			if (tc1.f4() != 1777615810)
				return 10;
			C1BBBB tc2 = new C1BBBB();
			if (tc2.f0() != 703050418)
				return 11;
			if (tc2.f1() != 1962570486)
				return 12;
			if (tc2.f2() != 1823430883)
				return 13;
			if (tc2.f3() != 800493463)
				return 14;
			if (tc2.f4() != 1465104029)
				return 15;
			C1BBBBB tc3 = new C1BBBBB();
			if (tc3.f0() != 703050418)
				return 16;
			if (tc3.f1() != 1962570486)
				return 17;
			if (tc3.f2() != 88703659)
				return 18;
			if (tc3.f3() != 800493463)
				return 19;
			if (tc3.f4() != 1465104029)
				return 20;
			return 0;
	}
}

