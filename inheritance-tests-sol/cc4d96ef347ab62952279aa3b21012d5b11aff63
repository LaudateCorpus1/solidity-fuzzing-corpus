
pragma solidity >=0.0;




interface I0B {

	function f0() external view returns (uint);
}

interface I0BB is I0B {

	function f1() external view returns (uint);
}
interface I0 is I0B, I0BB {

	function f1() override
	external view returns (uint);
}
library L1 {

	function f0(uint) internal view returns (uint)
	{
		return 846930886;
	}
}



interface I2BB {

	function f0() external view returns (uint);
}
interface I2B is I2BB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I2 is I2B {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}

contract C3 {

	function f0() public view
	
	returns (uint)
	{
		return 1356035169;
	}
}
library L4 {

	function f0(uint) public view returns (uint)
	{
		return 1681692777;
	}
}





interface C5BBBB {

	function f0() external payable returns (uint);
}
interface C5BBB is C5BBBB {

}
contract C5BB is C5BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1943007398;
	}
}
contract C5B is C5BB {

}
contract C5 is C5B {

	function f1() public view
	
	returns (uint)
	{
		return 2015020308;
	}
}

contract C6 {

	function f0() public view
	
	returns (uint)
	{
		return 1068463897;
	}
}



interface I7BB {

	function f0() external view returns (uint);
}
interface I7B is I7BB {

	function f1() external payable returns (uint);
}
interface I7 is I7B {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}





interface C8BBBB {

	function f0() external payable returns (uint);
}
interface C8BBB is C8BBBB {

	function f0() override
	external payable returns (uint);
}
contract C8BB is C8BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1032438314;
	}
}
abstract contract C8B is C8BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1389449997;
	}
}
contract C8 is C8B {

	function f1() public view
	
	returns (uint)
	{
		return 445221226;
	}
}

contract C9 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1404944717;
	}
}





interface C10BBBB {

	function f0() external payable returns (uint);
}
interface C10BBB is C10BBBB {

}
contract C10BB is C10BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 739959938;
	}
}
contract C10B is C10BB {

}
contract C10 is C10B {

	function f1() public view
	
	returns (uint)
	{
		return 1174276176;
	}
}





interface C11BBBB {

	function f0() external payable returns (uint);
}
interface C11BBB is C11BBBB {

}
contract C11BB is C11BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1980975752;
	}
}
abstract contract C11B is C11BB {

}
contract C11 is C11B {

	function f1() public view
	
	returns (uint)
	{
		return 1150688209;
	}
}

contract C12 {

	function f0() external pure
	
	returns (uint)
	{
		return 206006984;
	}
	function f1() internal view
	
	returns (uint)
	{
		return 1313839054;
	}
	function f2() public view
	
	returns (uint)
	{
		return 837912430;
	}
}


contract C {
	using L4 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}

