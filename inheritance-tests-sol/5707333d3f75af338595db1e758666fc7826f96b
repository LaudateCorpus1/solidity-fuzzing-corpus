
pragma solidity >=0.0;


library L0 {

	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
}
library L1 {

	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
library L2 {

	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}



















interface I3BBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}

interface I3BBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBB {

	function f1() external payable returns (uint);
}
interface I3BBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBB {

	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I3BBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
interface I3BBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBBB {

	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface I3BBBBBBBBBBBBBB is I3BBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() external payable returns (uint);
}
interface I3BBBBBBBBBBBBB is I3BBBBBBBBBBBBBB {

	function f4() override
	external view returns (uint);
}

interface I3BBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBBBBBB {

	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() external view returns (uint);
}
interface I3BBBBBBBBBBBB is I3BBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() override(I3BBBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I3BBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f5() override(I3BBBBBBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f7() external view returns (uint);
	function f8() external pure returns (uint);
	function f9() external payable returns (uint);
	function f10() external payable returns (uint);
}
interface I3BBBBBBBBBBB is I3BBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
}
interface I3BBBBBBBBBB is I3BBBBBBBBBBB {

	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f7() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() external payable returns (uint);
}
interface I3BBBBBBBBB is I3BBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
}

interface I3BBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() override
	external view returns (uint);
	function f7() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f12() external payable returns (uint);
}
interface I3BBBBBBBB is I3BBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I3BBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I3BBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I3BBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override(I3BBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f5() override(I3BBBBBBBBB, I3BBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(I3BBBBBBBBB, I3BBBBBBBBBBB)
	external view returns (uint);
	function f7() override(I3BBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f8() override(I3BBBBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f9() override(I3BBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(I3BBBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(I3BBBBBBBBB, I3BBBBBBBBBB)
	external payable returns (uint);
	function f12() override
	external payable returns (uint);
	function f13() external view returns (uint);
}

interface I3BBBBBBBBBBBBBBBBBBBBBB is I3BBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f13() override
	external view returns (uint);
	function f14() external payable returns (uint);
}
interface I3BBBBBBB is I3BBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I3BBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I3BBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override(I3BBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I3BBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f6() override(I3BBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f7() override
	external view returns (uint);
	function f8() override(I3BBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f9() override(I3BBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override(I3BBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f13() override(I3BBBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f14() override
	external payable returns (uint);
	function f15() external view returns (uint);
	function f16() external pure returns (uint);
	function f17() external payable returns (uint);
	function f18() external payable returns (uint);
}
interface I3BBBBBB is I3BBBBBBB {

	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f7() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f13() override
	external view returns (uint);
	function f16() override
	external pure returns (uint);
	function f18() override
	external payable returns (uint);
}
interface I3BBBBB is I3BBBBBB {

	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
	function f10() override
	external payable returns (uint);
	function f13() override
	external view returns (uint);
	function f18() override
	external payable returns (uint);
	function f19() external payable returns (uint);
}
interface I3BBBB is I3BBBBB {

	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f7() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f12() override
	external payable returns (uint);
	function f13() override
	external view returns (uint);
	function f17() override
	external payable returns (uint);
	function f18() override
	external payable returns (uint);
}

interface I3BBBBBBBBBBBBBBBBBBBBBBB is I3BBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f13() override
	external view returns (uint);
	function f14() override
	external payable returns (uint);
	function f15() override
	external view returns (uint);
	function f16() override
	external pure returns (uint);
	function f20() external view returns (uint);
}
interface I3BBB is I3BBBB, I3BBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I3BBBB, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I3BBBBB, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I3BBBB, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f4() override(I3BBBBB, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f6() override(I3BBBBB, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f7() override
	external view returns (uint);
	function f8() override(I3BBBBBB, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override(I3BBBB, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(I3BBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f12() override
	external payable returns (uint);
	function f13() override(I3BBBB, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f14() override(I3BBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f15() override(I3BBBBBBB, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f16() override(I3BBBBBB, I3BBBBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f18() override
	external payable returns (uint);
	function f19() override
	external payable returns (uint);
	function f20() override
	external view returns (uint);
	function f21() external view returns (uint);
}
interface I3BB is I3BBB {

	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() override
	external view returns (uint);
	function f7() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f12() override
	external payable returns (uint);
	function f13() override
	external view returns (uint);
	function f15() override
	external view returns (uint);
	function f16() override
	external pure returns (uint);
	function f18() override
	external payable returns (uint);
	function f19() override
	external payable returns (uint);
	function f21() override
	external view returns (uint);
}
interface I3B is I3BB {

	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f7() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f15() override
	external view returns (uint);
	function f21() override
	external view returns (uint);
}

interface I3BBBBBBBBBBBBBBBBBBBBBBBB is I3BB {

	function f2() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f15() override
	external view returns (uint);
	function f16() override
	external pure returns (uint);
	function f17() override
	external payable returns (uint);
	function f19() override
	external payable returns (uint);
	function f20() override
	external view returns (uint);
	function f21() override
	external view returns (uint);
	function f22() external payable returns (uint);
}
interface I3 is I3B, I3BBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override(I3B, I3BB)
	external payable returns (uint);
	function f2() override(I3B, I3BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I3B, I3BBBBB)
	external view returns (uint);
	function f4() override(I3B, I3BB)
	external view returns (uint);
	function f5() override(I3B, I3BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(I3BBB, I3BBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f7() override(I3B, I3BB)
	external view returns (uint);
	function f8() override(I3BB, I3BBBBBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f9() override(I3B, I3BBB)
	external payable returns (uint);
	function f10() override(I3BBB, I3BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(I3BBB, I3BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f14() override
	external payable returns (uint);
	function f15() override(I3B, I3BBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f16() override(I3BB, I3BBBBBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f17() override(I3BBBB, I3BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f18() override
	external payable returns (uint);
	function f19() override(I3BB, I3BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f20() override(I3BBB, I3BBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f21() override(I3B, I3BBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}

interface I4 {

	function f0() external view returns (uint);
}


contract C {
	using L0 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

