
pragma solidity >=0.0;


library L0 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) external pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
	function f3(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}

interface I1 {

	function f0() external payable returns (uint);
}




interface C2BBB {

	function f0() external view returns (uint);
}
interface C2BB is C2BBB {

	function f0() override
	external view returns (uint);
}
interface C2B is C2BB {

	function f0() override
	external view returns (uint);
}
contract C2 is C2B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 756858009;
	}
}
library L3 {

	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}


contract C4B {

	function f0() virtual public payable
	
	returns (uint)
	{
		return 1301149675;
	}
}
abstract contract C4 is C4B {

	function f0() public payable
	override
	returns (uint)
	{
		return 2081258388;
	}
}
library L5 {

	function f0(uint) internal pure returns (uint)
	{
		return 424238335;
	}
}
library L6 {

	function f0(uint) internal pure returns (uint)
	{
		return 719885386;
	}
}
library L7 {

	function f0(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
}
library L8 {

	function f0(uint) internal pure returns (uint)
	{
		return 596516649;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1189641421;
	}
}
library L9 {

	function f0(uint) external pure returns (uint)
	{
		return 1025202362;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1350490027;
	}
}


contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 756858009)
				return 1;
			C4B tc1 = new C4B();
			if (tc1.f0() != 1301149675)
				return 2;
			return 0;
	}
}

