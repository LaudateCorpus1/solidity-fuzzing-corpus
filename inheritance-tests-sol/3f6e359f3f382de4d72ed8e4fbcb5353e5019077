pragma solidity >=0.0;
library L0 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
contract C1 {
	function f0() public view
	
	returns (uint)
	{
		return 182605794;
	}
}
interface C2BBBB {
	function f0() external view returns (uint);
}
interface C2BBB is C2BBBB {
	function f0() override
	external view returns (uint);
}
interface C2BB is C2BBB {
}
interface C2B is C2BB {
}
contract C2 is C2B {
	function f0() external view
	override
	returns (uint)
	{
		return 1596680831;
	}
}
abstract contract C3BB {
}
contract C3B is C3BB {
}
interface C3BBBBB {
	function f0() external payable returns (uint);
}
interface C3BBBB is C3BBBBB {
}
interface C3BBB is C3BBBB {
	function f1() external view returns (uint);
}
contract C3 is C3B, C3BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1882556969;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1559527823;
	}
}
interface I4BB {
	function f0() external view returns (uint);
}
interface I4B is I4BB {
	function f1() external payable returns (uint);
}
interface I4 is I4B {
	function f1() override
	external payable returns (uint);
}
library L5 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
contract C8 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1272185027;
	}
}
interface C9BBBB {
	function f0() external payable returns (uint);
}
interface C9BBB is C9BBBB {
}
interface C9BB is C9BBB {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C9B is C9BB {
	function f1() override
	external payable returns (uint);
}
interface C9BBBBBBB {
}
interface C9BBBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C9BBBBBBBB is C9BBBBBBB, C9BBBBBBBBB {
	function f1() override
	external payable returns (uint);
}
interface C9BBBBBB is C9BBBBBBB, C9BBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface C9BBBBB is C9BB, C9BBBBBB {
	function f0() override(C9BB, C9BBBBBB)
	external payable returns (uint);
	function f1() override(C9BB, C9BBBBBBBB)
	external payable returns (uint);
}
contract C9 is C9B, C9BBBBB {
	function f0() external payable
	override(C9BBBBB, C9BB)
	returns (uint)
	{
		return 1587659744;
	}
	function f1() external payable
	override(C9BBBBB, C9B)
	returns (uint)
	{
		return 942409124;
	}
}
library L10 {
	function f0(uint) public pure returns (uint)
	{
		return 719885386;
	}
}
library L11 {
	function f0(uint) public pure returns (uint)
	{
		return 1649760492;
	}
}
library L12 {
	function f0(uint) public view returns (uint)
	{
		return 596516649;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 182605794)
				return 1;
			C2 tc1 = new C2();
			if (tc1.f0() != 1596680831)
				return 2;
			C3 tc2 = new C3();
			if (tc2.f0() != 1882556969)
				return 3;
			if (tc2.f1() != 1559527823)
				return 4;
			C8 tc3 = new C8();
			if (tc3.f0() != 1272185027)
				return 5;
			C9 tc4 = new C9();
			if (tc4.f0() != 1587659744)
				return 6;
			if (tc4.f1() != 942409124)
				return 7;
			return 0;
	}
}
