
pragma solidity >=0.0;


library L0 {

	function f0(uint) internal view returns (uint)
	{
		return 1804289383;
	}
}






interface C1BBBBB {

	function f0() external payable returns (uint);
}
interface C1BBBB is C1BBBBB {

}
interface C1BBB is C1BBBB {

	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface C1BB is C1BBB {

}
interface C1B is C1BB {

	function f0() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
}
contract C1 is C1B {

	function f0() external payable
	override
	returns (uint)
	{
		return 1994182535;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 2126480862;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1616230303;
	}
}






interface C2BBBBB {

}
interface C2BBBB is C2BBBBB {

}
interface C2BBB is C2BBBB {

	function f0() external view returns (uint);
}
interface C2BB is C2BBB {

}
interface C2B is C2BB {

	function f0() override
	external view returns (uint);
}
contract C2 is C2B {

	function f0() external view
	override
	returns (uint)
	{
		return 1794668616;
	}
}
library L3 {

	function f0(uint) internal view returns (uint)
	{
		return 846930886;
	}
}
library L4 {

	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}


contract C {
	using L4 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}

