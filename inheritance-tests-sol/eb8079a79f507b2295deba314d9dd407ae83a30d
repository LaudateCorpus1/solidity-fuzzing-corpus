
pragma solidity >=0.0;


library L0 {

	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
library L1 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}






interface I2BBBBB {

	function f0() external payable returns (uint);
}
interface I2BBBB is I2BBBBB {

	function f0() override
	external payable returns (uint);
}
interface I2BBB is I2BBBB {

	function f0() override
	external payable returns (uint);
}
interface I2BB is I2BBB {

}
interface I2B is I2BB {

	function f0() override
	external payable returns (uint);
}

interface I2BBBBBB is I2BB {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I2 is I2B, I2BBBBBB {

	function f0() override(I2B, I2BBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}


contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}

