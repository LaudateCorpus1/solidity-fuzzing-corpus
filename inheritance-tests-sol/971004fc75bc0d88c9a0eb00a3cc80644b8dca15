pragma solidity >=0.0;
library L0 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
}
abstract contract C1B {
}
abstract contract C1BBB {
}
contract C1BB is C1B, C1BBB {
	function f0() external pure
	
	returns (uint)
	{
		return 182605794;
	}
}
contract C1 is C1B, C1BB {
	function f1() external pure
	
	returns (uint)
	{
		return 1914720637;
	}
}
interface I2B {
	function f0() external payable returns (uint);
}
interface I2 is I2B {
}
abstract contract C5B {
	function f0() virtual public pure
	
	returns (uint);
}
contract C5 is C5B {
	function f0() public pure
	override
	returns (uint)
	{
		return 1596680831;
	}
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 182605794)
				return 1;
			if (tc0.f1() != 1914720637)
				return 2;
			C1BB tc1 = new C1BB();
			if (tc1.f0() != 182605794)
				return 3;
			C5 tc2 = new C5();
			if (tc2.f0() != 1596680831)
				return 4;
			return 0;
	}
}
