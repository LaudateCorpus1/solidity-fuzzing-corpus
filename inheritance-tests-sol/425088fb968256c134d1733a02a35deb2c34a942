pragma solidity >=0.0;
interface C0B {
	function f0() external payable returns (uint);
}
contract C0 is C0B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1993411239;
	}
}
contract C1BB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1654146640;
	}
}
contract C1B is C1BB {
}
contract C1 is C1B {
	function f1() public pure
	
	returns (uint)
	{
		return 344074374;
	}
}
interface C3BB {
	function f0() external view returns (uint);
}
interface C3BBB is C3BB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface C3B is C3BB, C3BBB {
	function f0() override(C3BB, C3BBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface C3BBBBB {
	function f0() external view returns (uint);
}
interface C3BBBB is C3BBB, C3BBBBB {
	function f0() override(C3BBB, C3BBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
contract C3 is C3B, C3BBBB {
	function f0() external view
	override(C3BBBB, C3B)
	returns (uint)
	{
		return 915951793;
	}
	function f1() external view
	override(C3BBBB, C3B)
	returns (uint)
	{
		return 550097914;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 1924454432;
	}
}
library L4 {
	function f0(uint) private pure returns (uint)
	{
		return 1714636915;
	}
}
library L5 {
	function f0(uint) private view returns (uint)
	{
		return 1957747793;
	}
	function f1(uint) public view returns (uint)
	{
		return 424238335;
	}
}
contract C6B {
	function f0() public view
	
	returns (uint)
	{
		return 1327145777;
	}
}
abstract contract C6 is C6B {
}
interface C7BB {
	function f0() external view returns (uint);
}
interface C7BBB is C7BB {
	function f0() override
	external view returns (uint);
}
interface C7B is C7BB, C7BBB {
	function f0() override(C7BB, C7BBB)
	external view returns (uint);
}
contract C7 is C7B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 412209523;
	}
}
interface I8 {
	function f0() external view returns (uint);
}
interface I10 {
	function f0() external view returns (uint);
}
library L11 {
	function f0(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
	function f1(uint) public view returns (uint)
	{
		return 596516649;
	}
	function f2(uint) public view returns (uint)
	{
		return 1189641421;
	}
}
library L12 {
	function f0(uint) private pure returns (uint)
	{
		return 1025202362;
	}
}
contract C {
	using L11 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 596516649)
			return 1;
		return 0;
	}
}
