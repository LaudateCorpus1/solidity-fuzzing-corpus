
pragma solidity >=0.0;


library L0 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}

contract C1 {

	function f0() public view
	
	returns (uint)
	{
		return 182605794;
	}
}


interface C2B {

}


interface C2BBB {

	function f0() external view returns (uint);
}
interface C2BB is C2B, C2BBB {

	function f0() override
	external view returns (uint);
}








interface C2BBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface C2BBBBBBBBBB is C2BBBBBBBBBBB {

}
interface C2BBBBBBBBB is C2BBBBBBBBBB {

}
interface C2BBBBBBBB is C2BBBBBBBBB {

}
interface C2BBBBBBB is C2BBBBBBBB {

}
interface C2BBBBBB is C2BBBBBBB {

	function f1() external payable returns (uint);
}
interface C2BBBBB is C2BBBBBB {

}
contract C2BBBB is C2B, C2BBBBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1559527823;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 638022372;
	}
}
abstract contract C2 is C2B, C2BB, C2BBBB {

	function f0() external view
	override(C2BBBB, C2BB)
	returns (uint)
	{
		return 1936030137;
	}
}
library L5 {

	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 182605794)
				return 1;
			C2BBBB tc1 = new C2BBBB();
			if (tc1.f0() != 1559527823)
				return 2;
			if (tc1.f1() != 638022372)
				return 3;
			return 0;
	}
}

