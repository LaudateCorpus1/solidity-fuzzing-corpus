
pragma solidity >=0.0;


library L0 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}



interface I1BB {

	function f0() external view returns (uint);
}
interface I1B is I1BB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}


interface I1BBBB {

	function f0() external view returns (uint);
}
interface I1BBB is I1B, I1BBBB {

	function f0() override(I1B, I1BBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I1 is I1B, I1BBB {

	function f0() override(I1B, I1BBB)
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
library L2 {

	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}








interface C3BBBBBBB {

	function f0() external view returns (uint);
}
interface C3BBBBBB is C3BBBBBBB {

}
interface C3BBBBB is C3BBBBBB {

	function f0() override
	external view returns (uint);
}







interface C3BBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}




interface C3BBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}

interface C3BBBBBBBBBBBBBBBBBBB is C3BBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface C3BBBBBBBBBBBBBBBBB is C3BBBBBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBB {

	function f0() override(C3BBBBBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C3BBBBBBBBBBBBBBBB is C3BBBBBBBBBBBBBBBBB {

	function f2() override
	external view returns (uint);
}
interface C3BBBBBBBBBBBBBBB is C3BBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBB {

	function f0() override(C3BBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
interface C3BBBBBBBBBBBBB is C3BBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBB {

	function f0() override(C3BBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external view returns (uint);
	function f5() external payable returns (uint);
	function f6() external payable returns (uint);
}
interface C3BBBBBBBBBBBB is C3BBBBBBBBBBBBB {

	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external payable returns (uint);
}
interface C3BBBBBBBBBBB is C3BBBBBBBBBBBB {

	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
}
interface C3BBBBBBBBBB is C3BBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
}
interface C3BBBBBBBBB is C3BBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
}

interface C3BBBBBBBBBBBBBBBBBBBB is C3BBBBBBBBB {

	function f2() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
	function f7() external payable returns (uint);
}
interface C3BBBBBBBB is C3BBBBBB, C3BBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBB {

	function f0() override(C3BBBBBBB, C3BBBBBBBBB)
	external view returns (uint);
	function f2() override(C3BBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f3() override(C3BBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(C3BBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f6() override(C3BBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f8() external pure returns (uint);
	function f9() external pure returns (uint);
	function f10() external payable returns (uint);
	function f11() external payable returns (uint);
}
interface C3BBBB is C3BBBBB, C3BBBBBBBB {

	function f0() override(C3BBBBB, C3BBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f6() override
	external payable returns (uint);
	function f8() override
	external pure returns (uint);
}
interface C3BBB is C3BBBB {

	function f4() override
	external view returns (uint);
	function f8() override
	external pure returns (uint);
	function f10() override
	external payable returns (uint);
	function f12() external view returns (uint);
}
interface C3BB is C3BBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external pure returns (uint);
}

interface C3BBBBBBBBBBBBBBBBBBBBB is C3BB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external payable returns (uint);
	function f8() override
	external pure returns (uint);
	function f9() override
	external pure returns (uint);
	function f11() override
	external payable returns (uint);
	function f12() override
	external view returns (uint);
	function f13() external payable returns (uint);
}
interface C3B is C3BB, C3BBBBBBBBBBBBBBBBBBBBB {

	function f0() override(C3BB, C3BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(C3BB, C3BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override(C3BBBBBBBBBBBB, C3BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(C3BBBB, C3BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override(C3BB, C3BBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f9() override(C3BB, C3BBBBBBBBBBBBBBBBBBBBB)
	external pure returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override(C3BBBBBBBB, C3BBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f12() override(C3BBB, C3BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f14() external view returns (uint);
}

interface C3BBBBBBBBBBBBBBBBBBBBBB is C3BBBBBBBBBBBBBBBBBBBBB {

	function f2() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external pure returns (uint);
	function f10() override
	external payable returns (uint);
	function f12() override
	external view returns (uint);
	function f14() external view returns (uint);
}
contract C3 is C3B, C3BBBBBBBBBBBBBBBBBBBBBB {

	function f0() virtual external view
	override(C3BBBBBBBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 1223935589;
	}
	function f1() virtual external view
	override(C3BBBBBBBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 1560249386;
	}
	function f2() external view
	override(C3BBBBBBBBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 1215913062;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 686656868;
	}
	function f4() external view
	override(C3BBBBBBBBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 1304420173;
	}
	function f5() external payable
	override(C3BBBBBBBBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 48023188;
	}
	function f6() external payable
	override(C3BBBBBBBBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 625601009;
	}
	function f7() external payable
	override(C3BBBBBBBBBBBBBBBBBBBBBB, C3BB)
	returns (uint)
	{
		return 2108630051;
	}
	function f8() virtual external pure
	override(C3BBBBBBBBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 1232845375;
	}
	function f9() virtual external pure
	override(C3BBBBBBBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 1399025683;
	}
	function f10() virtual external payable
	override(C3BBBBBBBBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 515678042;
	}
	function f11() external payable
	override(C3BBBBBBBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 1891457546;
	}
	function f12() virtual external view
	override(C3BBBBBBBBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 1261242775;
	}
	function f13() virtual external payable
	override
	returns (uint)
	{
		return 445037787;
	}
	function f14() external view
	override(C3BBBBBBBBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 263666736;
	}
}
library L4 {

	function f0(uint) internal pure returns (uint)
	{
		return 1189641421;
	}
}
library L6 {

	function f0(uint) public view returns (uint)
	{
		return 1025202362;
	}
	function f1(uint) public view returns (uint)
	{
		return 1350490027;
	}
	function f2(uint) public pure returns (uint)
	{
		return 783368690;
	}
	function f3(uint) internal pure returns (uint)
	{
		return 1102520059;
	}
}


contract C {
	using L6 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f2() != 783368690)
			return 1;
		return 0;
	}
}

