
pragma solidity >=0.0;











interface C0BBBBBBBB {

	function f0() external view returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB {

}
interface C0BBBBBB is C0BBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C0BBBBB is C0BBBBBB {

}
interface C0BBBB is C0BBBBB {

}
interface C0BBB is C0BBBB {

	function f1() external payable returns (uint);
}
interface C0BB is C0BBB {

}
contract C0B is C0BB {

	function f0() external view
	override
	returns (uint)
	{
		return 1271135913;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1882556969;
	}
}
abstract contract C0 is C0B {

}
library L1 {

	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
library L2 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public view returns (uint)
	{
		return 1681692777;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1714636915;
	}
}




interface C3BBB {

	function f0() external view returns (uint);
}
interface C3BB is C3BBB {

	function f1() external view returns (uint);
}
interface C3B is C3BB {

	function f1() override
	external view returns (uint);
}
contract C3 is C3B {

	function f0() external view
	override
	returns (uint)
	{
		return 2064876628;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1842513780;
	}
}




interface C4BBB {

	function f0() external payable returns (uint);
}
interface C4BB is C4BBB {

}
interface C4B is C4BB {

}



interface C4BBBBBB {

	function f0() external payable returns (uint);
}
interface C4BBBBB is C4BBBBBB {

}
interface C4BBBB is C4BB, C4BBBBB {

	function f0() override(C4BBB, C4BBBBBB)
	external payable returns (uint);
}
contract C4 is C4B, C4BBBB {

	function f0() external payable
	override(C4BBBB, C4BBB)
	returns (uint)
	{
		return 1479919876;
	}
}
library L5 {

	function f0(uint) internal pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) public view returns (uint)
	{
		return 719885386;
	}
}
library L6 {

	function f0(uint) private view returns (uint)
	{
		return 1649760492;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 596516649;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1189641421;
	}
	function f3(uint) public view returns (uint)
	{
		return 1025202362;
	}
}



interface I7BB {

	function f0() external payable returns (uint);
}
interface I7B is I7BB {

}
interface I7 is I7B {

	function f0() override
	external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C0B tc0 = new C0B();
			if (tc0.f0() != 1271135913)
				return 1;
			if (tc0.f1() != 1882556969)
				return 2;
			C3 tc1 = new C3();
			if (tc1.f0() != 2064876628)
				return 3;
			if (tc1.f1() != 1842513780)
				return 4;
			C4 tc2 = new C4();
			if (tc2.f0() != 1479919876)
				return 5;
			return 0;
	}
}

