
pragma solidity >=0.0;


library L2 {

	function f0(uint) public view returns (uint)
	{
		return 1681692777;
	}
}





interface I3BBBB {

	function f0() external payable returns (uint);
}
interface I3BBB is I3BBBB {

}
interface I3BB is I3BBB {

}
interface I3B is I3BB {

	function f0() override
	external payable returns (uint);
}
interface I3 is I3B {

}



interface I9BB {

	function f0() external view returns (uint);
}
interface I9B is I9BB {

	function f1() external payable returns (uint);
}


interface I9BBBB {

	function f0() external view returns (uint);
}
interface I9BBB is I9BB, I9BBBB {

	function f0() override(I9BB, I9BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I9 is I9B, I9BBB {

	function f0() override(I9BB, I9BBB)
	external view returns (uint);
	function f1() override(I9B, I9BBB)
	external payable returns (uint);
}
library L10 {

	function f0(uint) private pure returns (uint)
	{
		return 1189641421;
	}
}


contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}

