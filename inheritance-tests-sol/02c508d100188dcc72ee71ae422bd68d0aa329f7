
pragma solidity >=0.0;









interface C0BBBBBB {

	function f0() external view returns (uint);
}
interface C0BBBBB is C0BBBBBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
	function f2() external pure returns (uint);
}
interface C0BBBB is C0BBBBB {

	function f0() override
	external view returns (uint);
}
interface C0BBB is C0BBBB {

	function f0() override
	external view returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C0BB is C0BBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external pure returns (uint);
	function f4() override
	external view returns (uint);
}
abstract contract C0B is C0BB {

	function f0() virtual external view
	override
	returns (uint);
	function f1() virtual external payable
	override
	returns (uint);
	function f2() virtual external pure
	override
	returns (uint);
	function f3() virtual external view
	override
	returns (uint);
	function f4() virtual external view
	override
	returns (uint);
}


interface C0BBBBBBBB {

}
abstract contract C0BBBBBBB is C0BB, C0BBBBBBBB {

	function f0() virtual external view
	override
	returns (uint);
	function f1() virtual external payable
	override
	returns (uint);
	function f2() virtual external pure
	override
	returns (uint)
	{
		return 940465754;
	}
	function f3() virtual external view
	override
	returns (uint);
	function f4() virtual external view
	override
	returns (uint);
}
contract C0 is C0B, C0BBBBBBB {

	function f0() virtual external view
	override(C0BBBBBBB, C0B)
	returns (uint)
	{
		return 260848499;
	}
	function f1() virtual external payable
	override(C0BBBBBBB, C0B)
	returns (uint)
	{
		return 1557726064;
	}
	function f2() virtual external pure
	override(C0BBBBBBB, C0B)
	returns (uint)
	{
		return 679820302;
	}
	function f3() virtual external view
	override(C0BBBBBBB, C0B)
	returns (uint)
	{
		return 550884893;
	}
	function f4() external view
	override(C0BBBBBBB, C0B)
	returns (uint)
	{
		return 1391437165;
	}
	function f5() virtual public pure
	
	returns (uint)
	{
		return 1364848143;
	}
}
library L1 {

	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}







interface C4BBBBBB {

	function f0() external view returns (uint);
}
interface C4BBBBB is C4BBBBBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
	function f2() external pure returns (uint);
}
interface C4BBBB is C4BBBBB {

	function f0() override
	external view returns (uint);
}
interface C4BBB is C4BBBB {

	function f0() override
	external view returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C4BB is C4BBB {

	function f1() override
	external payable returns (uint);
	function f2() override
	external pure returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
}
abstract contract C4B is C4BB {

	function f0() virtual external view
	override
	returns (uint);
	function f1() virtual external payable
	override
	returns (uint);
	function f2() virtual external pure
	override
	returns (uint);
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1074502796;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1708215671;
	}
}


interface C4BBBBBBBB {

}
abstract contract C4BBBBBBB is C4BB, C4BBBBBBBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 2019399742;
	}
	function f1() virtual external payable
	override
	returns (uint);
	function f2() virtual external pure
	override
	returns (uint)
	{
		return 614044814;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1461468348;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1414639022;
	}
}
contract C4 is C4B, C4BBBBBBB {

	function f0() virtual external view
	override(C4BBBBBBB, C4B)
	returns (uint)
	{
		return 995109425;
	}
	function f1() external payable
	override(C4BBBBBBB, C4B)
	returns (uint)
	{
		return 1231621073;
	}
	function f2() external pure
	override(C4BBBBBBB, C4B)
	returns (uint)
	{
		return 545290830;
	}
	function f3() external view
	override(C4BBBBBBB, C4B)
	returns (uint)
	{
		return 1654390162;
	}
	function f4() external view
	override(C4BBBBBBB, C4B)
	returns (uint)
	{
		return 673777619;
	}
	function f5() virtual public pure
	
	returns (uint)
	{
		return 279612934;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 260848499)
				return 1;
			if (tc0.f1() != 1557726064)
				return 2;
			if (tc0.f2() != 679820302)
				return 3;
			if (tc0.f3() != 550884893)
				return 4;
			if (tc0.f4() != 1391437165)
				return 5;
			if (tc0.f5() != 1364848143)
				return 6;
			C4 tc1 = new C4();
			if (tc1.f0() != 995109425)
				return 7;
			if (tc1.f1() != 1231621073)
				return 8;
			if (tc1.f2() != 545290830)
				return 9;
			if (tc1.f3() != 1654390162)
				return 10;
			if (tc1.f4() != 673777619)
				return 11;
			if (tc1.f5() != 279612934)
				return 12;
			return 0;
	}
}

