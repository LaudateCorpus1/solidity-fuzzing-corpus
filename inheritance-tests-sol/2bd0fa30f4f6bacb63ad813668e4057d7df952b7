pragma solidity >=0.0;
interface I0B {
	function f0() external view returns (uint);
}
interface I0 is I0B {
	function f0() override
	external view returns (uint);
}
library L1 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
interface I2BBBBB {
	function f0() external view returns (uint);
}
interface I2BBBB is I2BBBBB {
	function f0() override
	external view returns (uint);
}
interface I2BBB is I2BBBB {
}
interface I2BB is I2BBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I2B is I2BB {
}
interface I2 is I2B {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
library L3 {
	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
}
interface I4B {
	function f0() external pure returns (uint);
}
interface I4BBBB {
}
interface I4BBB is I4BBBB {
}
interface I4BB is I4B, I4BBB {
	function f1() external payable returns (uint);
}
interface I4 is I4B, I4BB {
	function f0() override
	external pure returns (uint);
}
library L5 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
interface I6BBB {
	function f0() external view returns (uint);
}
interface I6BB is I6BBB {
	function f0() override
	external view returns (uint);
}
interface I6B is I6BB {
}
interface I6 is I6B {
	function f1() external view returns (uint);
}
interface I8B {
}
interface I8 is I8B {
}
library L9 {
	function f0(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}
interface I10B {
	function f0() external view returns (uint);
}
interface I10BB is I10B {
	function f0() override
	external view returns (uint);
}
interface I10 is I10B, I10BB {
	function f0() override(I10B, I10BB)
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I11 {
	function f0() external payable returns (uint);
}
interface I12BBB {
	function f0() external view returns (uint);
}
interface I12BB is I12BBB {
}
interface I12B is I12BB {
}
interface I12 is I12B {
	function f1() external view returns (uint);
}
interface I13BB {
	function f0() external payable returns (uint);
}
interface I13B is I13BB {
	function f0() override
	external payable returns (uint);
}
interface I13 is I13B {
}
interface I14BBB {
	function f0() external view returns (uint);
}
interface I14BB is I14BBB {
	function f0() override
	external view returns (uint);
}
interface I14B is I14BB {
	function f0() override
	external view returns (uint);
}
interface I14 is I14B {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I15BBB {
	function f0() external view returns (uint);
}
interface I15BB is I15BBB {
}
interface I15B is I15BB {
}
interface I15BBBBB {
	function f0() external view returns (uint);
}
interface I15BBBB is I15B, I15BBBBB {
	function f0() override(I15BBB, I15BBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I15 is I15B, I15BBBB {
	function f0() override(I15BBB, I15BBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I16 {
	function f0() external payable returns (uint);
}
interface I17BBBB {
	function f0() external view returns (uint);
}
interface I17BBB is I17BBBB {
	function f0() override
	external view returns (uint);
}
interface I17BB is I17BBB {
}
interface I17B is I17BB {
	function f0() override
	external view returns (uint);
}
interface I17BBBBB is I17B {
	function f0() override
	external view returns (uint);
	function f1() external pure returns (uint);
}
interface I17BBBBBBBBB {
	function f0() external view returns (uint);
}
interface I17BBBBBBBB is I17BBBBBBBBB {
}
interface I17BBBBBBB is I17BBBBBBBB {
}
interface I17BBBBBB is I17BB, I17BBBBBBB {
	function f0() override(I17BBB, I17BBBBBBBBB)
	external view returns (uint);
}
interface I17 is I17B, I17BBBBB, I17BBBBBB {
	function f0() override(I17B, I17BBBBB, I17BBBBBB)
	external view returns (uint);
	function f1() override
	external pure returns (uint);
}
interface I18BBB {
	function f0() external view returns (uint);
}
interface I18BB is I18BBB {
	function f0() override
	external view returns (uint);
}
interface I18B is I18BB {
}
interface I18 is I18B {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
contract C19 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1106360392;
	}
}
interface I20BBB {
	function f0() external view returns (uint);
}
interface I20BB is I20BBB {
	function f0() override
	external view returns (uint);
}
interface I20B is I20BB {
	function f0() override
	external view returns (uint);
}
interface I20BBBBB {
	function f0() external view returns (uint);
}
interface I20BBBB is I20BB, I20BBBBB {
	function f0() override(I20BB, I20BBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I20 is I20B, I20BBBB {
	function f0() override(I20B, I20BBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
library L21 {
	function f0(uint) public pure returns (uint)
	{
		return 1025202362;
	}
}
library L22 {
	function f0(uint) private pure returns (uint)
	{
		return 1350490027;
	}
}
contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1714636915)
			return 1;
		return 0;
	}
}
