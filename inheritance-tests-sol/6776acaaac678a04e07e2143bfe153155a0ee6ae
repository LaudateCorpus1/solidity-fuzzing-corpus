pragma solidity >=0.0;
interface I0BBBB {
	function f0() external view returns (uint);
}
interface I0BBB is I0BBBB {
	function f0() override
	external view returns (uint);
}
interface I0BB is I0BBB {
	function f0() override
	external view returns (uint);
}
interface I0B is I0BB {
}
interface I0BBBBB is I0BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I0BBBBBBBBB {
	function f0() external view returns (uint);
}
interface I0BBBBBBBB is I0BBBBBBBBB {
}
interface I0BBBBBBB is I0BBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I0BBBBBB is I0BBBBB, I0BBBBBBB {
	function f0() override(I0BBBBB, I0BBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I0BBBBBBBBBB is I0BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I0 is I0B, I0BBBBB, I0BBBBBB, I0BBBBBBBBBB {
	function f0() override(I0BB, I0BBBBB, I0BBBBBB, I0BBBBBBBBBB)
	external view returns (uint);
	function f1() override(I0BBBBB, I0BBBBBB, I0BBBBBBBBBB)
	external payable returns (uint);
}
library L1 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
library L2 {
	function f0(uint) private pure returns (uint)
	{
		return 1957747793;
	}
}
library L3 {
	function f0(uint) public view returns (uint)
	{
		return 424238335;
	}
}
interface I4BBB {
	function f0() external view returns (uint);
}
interface I4BB is I4BBB {
	function f0() override
	external view returns (uint);
}
interface I4B is I4BB {
}
interface I4BBBBB {
	function f0() external view returns (uint);
}
interface I4BBBB is I4B, I4BBBBB {
	function f0() override(I4BB, I4BBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I4 is I4B, I4BBBB {
	function f0() override(I4BB, I4BBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I5B {
	function f0() external view returns (uint);
}
interface I5 is I5B {
}
interface I6BBBB {
	function f0() external view returns (uint);
}
interface I6BBB is I6BBBB {
}
interface I6BB is I6BBB {
}
interface I6B is I6BB {
}
interface I6BBBBBBBB {
	function f0() external view returns (uint);
}
interface I6BBBBBBB is I6BBBBBBBB {
}
interface I6BBBBBB is I6BBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I6BBBBB is I6B, I6BBBBBB {
	function f0() override(I6BBBB, I6BBBBBB)
	external view returns (uint);
}
interface I6BBBBBBBBB is I6BB {
	function f0() override
	external view returns (uint);
	function f1() external pure returns (uint);
}
interface I6 is I6B, I6BBBBB, I6BBBBBBBBB {
	function f0() override(I6BBBB, I6BBBBB, I6BBBBBBBBB)
	external view returns (uint);
	function f1() override
	external pure returns (uint);
}
interface I7BBBB {
	function f0() external view returns (uint);
}
interface I7BBB is I7BBBB {
	function f0() override
	external view returns (uint);
}
interface I7BB is I7BBB {
}
interface I7B is I7BB {
}
interface I7BBBBB is I7BB {
	function f1() external pure returns (uint);
}
interface I7BBBBBBBBB {
	function f0() external view returns (uint);
}
interface I7BBBBBBBB is I7BBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I7BBBBBBB is I7BBBBBBBB {
}
interface I7BBBBBB is I7BBBBB, I7BBBBBBB {
	function f0() override(I7BBB, I7BBBBBBBB)
	external view returns (uint);
	function f1() override
	external pure returns (uint);
}
interface I7 is I7B, I7BBBBB, I7BBBBBB {
	function f0() override(I7BBB, I7BBBBBB)
	external view returns (uint);
	function f1() override(I7BBBBB, I7BBBBBB)
	external pure returns (uint);
}
interface I8BB {
	function f0() external view returns (uint);
}
interface I8B is I8BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I8 is I8B {
}
contract C9 {
	function f0() public pure
	
	returns (uint)
	{
		return 1391437165;
	}
}
interface I11 {
	function f0() external payable returns (uint);
}
library L12 {
	function f0(uint) private pure returns (uint)
	{
		return 783368690;
	}
}
interface I13BBB {
	function f0() external view returns (uint);
}
interface I13BB is I13BBB {
	function f0() override
	external view returns (uint);
}
interface I13B is I13BB {
}
interface I13 is I13B {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C9 tc0 = new C9();
			if (tc0.f0() != 1391437165)
				return 1;
			return 0;
	}
}
