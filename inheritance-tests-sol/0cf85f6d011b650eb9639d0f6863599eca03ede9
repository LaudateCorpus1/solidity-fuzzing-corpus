pragma solidity >=0.0;
contract C0 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 2172195;
	}
}
interface I1BBBB {
	function f0() external pure returns (uint);
}
interface I1BBB is I1BBBB {
}
interface I1BB is I1BBB {
}
interface I1B is I1BB {
}
interface I1BBBBB is I1BB {
	function f0() override
	external pure returns (uint);
	function f1() external payable returns (uint);
}
interface I1BBBBBB is I1BBBBB {
	function f0() override
	external pure returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface I1BBBBBBBBBB {
	function f0() external pure returns (uint);
}
interface I1BBBBBBBBB is I1BBBBBBBBBB {
}
interface I1BBBBBBBB is I1BBBBBBBBB {
}
interface I1BBBBBBB is I1BB, I1BBBBBBBB {
	function f0() override(I1BBBB, I1BBBBBBBBBB)
	external pure returns (uint);
}
interface I1 is I1B, I1BBBBB, I1BBBBBB, I1BBBBBBB {
	function f0() override(I1BBBB, I1BBBBB, I1BBBBBB, I1BBBBBBB)
	external pure returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
library L2 {
	function f0(uint) private pure returns (uint)
	{
		return 1714636915;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 2172195)
				return 1;
			return 0;
	}
}
