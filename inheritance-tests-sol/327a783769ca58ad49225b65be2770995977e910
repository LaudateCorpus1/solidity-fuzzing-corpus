pragma solidity >=0.0;
interface I0BBB {
	function f0() external payable returns (uint);
}
interface I0BB is I0BBB {
	function f1() external payable returns (uint);
}
interface I0B is I0BB {
	function f0() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I0BBBBB {
	function f0() external payable returns (uint);
}
interface I0BBBB is I0BB, I0BBBBB {
	function f0() override(I0BBB, I0BBBBB)
	external payable returns (uint);
}
interface I0 is I0B, I0BBBB {
	function f0() override(I0B, I0BBBB)
	external payable returns (uint);
}
interface I1 {
	function f0() external view returns (uint);
}
library L2 {
	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
	function f1(uint) internal view returns (uint)
	{
		return 1681692777;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
	function f3(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
interface C3BB {
	function f0() external view returns (uint);
}
interface C3B is C3BB {
}
contract C3 is C3B {
	function f0() external view
	override
	returns (uint)
	{
		return 1738531149;
	}
	function f1() private pure
	
	returns (uint)
	{
		return 1271135913;
	}
}
interface I4 {
	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
library L5 {
	function f0(uint) public view returns (uint)
	{
		return 424238335;
	}
	function f1(uint) public view returns (uint)
	{
		return 719885386;
	}
}
contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f1() != 719885386)
			return 1;
		return 0;
	}
}
