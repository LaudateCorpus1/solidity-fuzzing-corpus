
pragma solidity >=0.0;



interface I0 {

	function f0() external payable returns (uint);
}


interface I1B {

	function f0() external view returns (uint);
}

interface I1BB is I1B {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I1 is I1B, I1BB {

	function f0() override(I1B, I1BB)
	external view returns (uint);
}

contract C2 {

	function f0() public payable
	
	returns (uint)
	{
		return 484957676;
	}
}



abstract contract C3BB {

	function f0() public view
	
	returns (uint)
	{
		return 1978292458;
	}
}
contract C3B is C3BB {

}
contract C3 is C3B {

}





interface C5BBBB {

	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface C5BBB is C5BBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
contract C5BB is C5BBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 584185730;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 808691899;
	}
}
contract C5B is C5BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1777777711;
	}
}
contract C5 is C5B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 559891122;
	}
	function f2() public view
	
	returns (uint)
	{
		return 422652567;
	}
}

interface I6 {

	function f0() external payable returns (uint);
}

interface I7 {

	function f0() external view returns (uint);
}

interface I8 {

	function f0() external view returns (uint);
}





interface I9BBBB {

	function f0() external payable returns (uint);
}
interface I9BBB is I9BBBB {

}
interface I9BB is I9BBB {

	function f0() override
	external payable returns (uint);
}
interface I9B is I9BB {

	function f1() external view returns (uint);
}
interface I9 is I9B {

	function f2() external payable returns (uint);
}



contract C10BB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1519767442;
	}
}
contract C10B is C10BB {

}
abstract contract C10 is C10B {

	function f0() public pure
	override
	returns (uint)
	{
		return 325488155;
	}
}





interface I11BBBB {

	function f0() external payable returns (uint);
}
interface I11BBB is I11BBBB {

}
interface I11BB is I11BBB {

	function f0() override
	external payable returns (uint);
}
interface I11B is I11BB {

	function f0() override
	external payable returns (uint);
}
interface I11 is I11B {

}


interface I12B {

	function f0() external view returns (uint);
}
interface I12 is I12B {

	function f0() override
	external view returns (uint);
}


interface C13B {

	function f0() external payable returns (uint);
}
contract C13 is C13B {

	function f0() external payable
	override
	returns (uint)
	{
		return 145579893;
	}
	function f1() private pure
	
	returns (uint)
	{
		return 720522019;
	}
	function f2() external pure
	
	returns (uint)
	{
		return 1820715984;
	}
	function f3() external pure
	
	returns (uint)
	{
		return 2013010189;
	}
}




interface I14BBB {

	function f0() external payable returns (uint);
}
interface I14BB is I14BBB {

}
interface I14B is I14BB {

	function f1() external payable returns (uint);
}
interface I14 is I14B {

	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C10B tc0 = new C10B();
			if (tc0.f0() != 1519767442)
				return 1;
			C10BB tc1 = new C10BB();
			if (tc1.f0() != 1519767442)
				return 2;
			C13 tc2 = new C13();
			if (tc2.f0() != 145579893)
				return 3;
			if (tc2.f2() != 1820715984)
				return 4;
			if (tc2.f3() != 2013010189)
				return 5;
			C2 tc3 = new C2();
			if (tc3.f0() != 484957676)
				return 6;
			C3 tc4 = new C3();
			if (tc4.f0() != 1978292458)
				return 7;
			C3B tc5 = new C3B();
			if (tc5.f0() != 1978292458)
				return 8;
			C5 tc6 = new C5();
			if (tc6.f0() != 559891122)
				return 9;
			if (tc6.f1() != 808691899)
				return 10;
			if (tc6.f2() != 422652567)
				return 11;
			C5B tc7 = new C5B();
			if (tc7.f0() != 1777777711)
				return 12;
			if (tc7.f1() != 808691899)
				return 13;
			C5BB tc8 = new C5BB();
			if (tc8.f0() != 584185730)
				return 14;
			if (tc8.f1() != 808691899)
				return 15;
			return 0;
	}
}

