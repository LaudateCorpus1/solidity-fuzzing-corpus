pragma solidity >=0.0;
contract C0B {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 48271;
	}
}
contract C0 is C0B {
	function f0() virtual public pure
	override
	returns (uint)
	{
		return 1914720637;
	}
}
interface I1B {
	function f0() external pure returns (uint);
	function f1() external view returns (uint);
}
interface I1 is I1B {
}
library L2 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
interface C3BBBB {
	function f0() external payable returns (uint);
}
interface C3BBB is C3BBBB {
	function f1() external view returns (uint);
}
interface C3BB is C3BBB {
}
interface C3B is C3BB {
}
contract C3 is C3B {
	function f0() external payable
	override
	returns (uint)
	{
		return 1098894339;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 2136927794;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1914720637)
				return 1;
			C0B tc1 = new C0B();
			if (tc1.f0() != 48271)
				return 2;
			C3 tc2 = new C3();
			if (tc2.f0() != 1098894339)
				return 3;
			if (tc2.f1() != 2136927794)
				return 4;
			return 0;
	}
}
