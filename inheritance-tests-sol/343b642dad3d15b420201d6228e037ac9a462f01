
pragma solidity >=0.0;


library L0 {

	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) external pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}
library L1 {

	function f0(uint) private pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1957747793;
	}
	function f2(uint) private pure returns (uint)
	{
		return 424238335;
	}
}




interface I2BBB {

}
interface I2BB is I2BBB {

	function f0() external view returns (uint);
}
interface I2B is I2BB {

	function f0() override
	external view returns (uint);
}



interface I2BBBBBB {

	function f0() external view returns (uint);
}
interface I2BBBBB is I2BBBBBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I2BBBB is I2B, I2BBBBB {

	function f0() override(I2B, I2BBBBB)
	external view returns (uint);
}
interface I2 is I2B, I2BBBB {

	function f0() override(I2B, I2BBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}



interface C3BB {

	function f0() external view returns (uint);
}
contract C3B is C3BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 843673194;
	}
}
abstract contract C3 is C3B {

}
library L4 {

	function f0(uint) private pure returns (uint)
	{
		return 1649760492;
	}
	function f1(uint) external pure returns (uint)
	{
		return 596516649;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1189641421;
	}
}
library L5 {

	function f0(uint) private pure returns (uint)
	{
		return 1025202362;
	}
}
library L6 {

	function f0(uint) private pure returns (uint)
	{
		return 1350490027;
	}
	function f1(uint) external pure returns (uint)
	{
		return 783368690;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1102520059;
	}
}



interface I8BB {

	function f0() external view returns (uint);
}
interface I8B is I8BB {

}
interface I8 is I8B {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C3B tc0 = new C3B();
			if (tc0.f0() != 843673194)
				return 1;
			return 0;
	}
}

