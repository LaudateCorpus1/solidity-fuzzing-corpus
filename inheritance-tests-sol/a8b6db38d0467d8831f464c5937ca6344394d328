
pragma solidity >=0.0;






interface I0BBB {

	function f0() external view returns (uint);
}
interface I0BB is I0BBB {

}
interface I0B is I0BB {

}
interface I0 is I0B {

	function f0() override
	external view returns (uint);
}

contract C2 {

	function f0() public view
	
	returns (uint)
	{
		return 1709309780;
	}
}

contract C3 {

	function f0() public view
	
	returns (uint)
	{
		return 1623188993;
	}
}


interface I4B {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}




interface I4BBBBB {

	function f0() external payable returns (uint);
}
interface I4BBBB is I4BBBBB {

	function f0() override
	external payable returns (uint);
}
interface I4BBB is I4BBBB {

}
interface I4BB is I4B, I4BBB {

	function f0() override(I4B, I4BBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface I4 is I4B, I4BB {

	function f0() override(I4B, I4BB)
	external payable returns (uint);
	function f1() override(I4B, I4BB)
	external view returns (uint);
}


abstract contract C5B {

}







interface C5BBBBBBBB {

}
interface C5BBBBBBB is C5BBBBBBBB {

}
interface C5BBBBBB is C5BBBBBBB {

}
interface C5BBBBB is C5BBBBBB {

}
interface C5BBBB is C5BBBBB {

}







interface C5BBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBB is C5BBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBB is C5BBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBB is C5BBBBBBBBBBBB {

}
interface C5BBBBBBBBBB is C5BBBBBBBBBBB {

}
interface C5BBBBBBBBB is C5BBBBB, C5BBBBBBBBBB {

}
interface C5BBB is C5BBBB, C5BBBBBBBBB {

}
contract C5BB is C5B, C5BBB {

}

contract C5BBBBBBBBBBBBBBBB is C5BBB {

}



interface C5BBBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface C5BBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
}

contract C5BBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBB {

}







interface C5BBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface C5BBBBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
}





interface C5BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface C5BBBBBBBBBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBBBBB, C5BBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C5BBBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBBBBBBBBB, C5BBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(C5BBBBBBBBBBBBBBBBBBBBBBB, C5BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
contract C5BBBBBBBBBBBBBBBBBBBBB is C5BBBBBBBBBBBBBBBB, C5BBBBBBBBBBBBBBBBBBBBBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1735915146;
	}
}
contract C5 is C5B, C5BB, C5BBBBBBBBBBBBBBBB, C5BBBBBBBBBBBBBBBBB, C5BBBBBBBBBBBBBBBBBBBB, C5BBBBBBBBBBBBBBBBBBBBB {

	function f0() virtual external view
	override(C5BBBBBBBBBBBBBBBBBBBBB, C5BBBBBBBBBBBBBBBBB)
	returns (uint)
	{
		return 1411037891;
	}
}

contract C7 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 471204562;
	}
}


interface C8B {

}
contract C8 is C8B {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1516106925;
	}
}

interface I10 {

	function f0() external view returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 1709309780)
				return 1;
			C3 tc1 = new C3();
			if (tc1.f0() != 1623188993)
				return 2;
			C5 tc2 = new C5();
			if (tc2.f0() != 1411037891)
				return 3;
			C5BBBBBBBBBBBBBBBBBBBBB tc3 = new C5BBBBBBBBBBBBBBBBBBBBB();
			if (tc3.f0() != 1735915146)
				return 4;
			C7 tc4 = new C7();
			if (tc4.f0() != 471204562)
				return 5;
			C8 tc5 = new C8();
			if (tc5.f0() != 1516106925)
				return 6;
			return 0;
	}
}

