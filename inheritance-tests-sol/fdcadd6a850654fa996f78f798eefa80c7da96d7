pragma solidity >=0.0;
library L1 {
	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
interface C2BB {
	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface C2B is C2BB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface C2BBBB {
	function f0() external view returns (uint);
}
interface C2BBB is C2B, C2BBBB {
	function f0() override(C2B, C2BBBB)
	external view returns (uint);
}
contract C2 is C2B, C2BBB {
	function f0() external view
	override(C2BBB, C2B)
	returns (uint)
	{
		return 854716505;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1596680831;
	}
}
library L3 {
	function f0(uint) external pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1714636915;
	}
}
contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}
