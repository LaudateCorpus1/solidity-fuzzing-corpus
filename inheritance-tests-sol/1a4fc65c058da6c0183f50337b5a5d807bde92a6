pragma solidity >=0.0;
interface C0BBBB {
	function f0() external payable returns (uint);
}
contract C0BBB is C0BBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 59087173;
	}
}
contract C0BB is C0BBB {
}
contract C0BBBBB is C0BBB {
	function f1() virtual public pure
	
	returns (uint)
	{
		return 911372703;
	}
}
contract C0B is C0BB, C0BBBBB {
}
contract C0 is C0B {
	function f1() public pure
	override
	returns (uint)
	{
		return 173363389;
	}
}
interface I1B {
}
interface I1BB is I1B {
	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface I1 is I1B, I1BB {
}
interface I2 {
	function f0() external payable returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 59087173)
				return 1;
			if (tc0.f1() != 173363389)
				return 2;
			C0B tc1 = new C0B();
			if (tc1.f0() != 59087173)
				return 3;
			if (tc1.f1() != 911372703)
				return 4;
			C0BB tc2 = new C0BB();
			if (tc2.f0() != 59087173)
				return 5;
			C0BBB tc3 = new C0BBB();
			if (tc3.f0() != 59087173)
				return 6;
			C0BBBBB tc4 = new C0BBBBB();
			if (tc4.f0() != 59087173)
				return 7;
			if (tc4.f1() != 911372703)
				return 8;
			return 0;
	}
}
