
pragma solidity >=0.0;





abstract contract C3BB {

}
contract C3B is C3BB {

}



interface C3BBBBB {

	function f0() external view returns (uint);
}
interface C3BBBB is C3BBBBB {

	function f0() override
	external view returns (uint);
}
abstract contract C3BBB is C3BB, C3BBBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 929908423;
	}
}


interface C3BBBBBBB {

}
contract C3BBBBBB is C3BBBB, C3BBBBBBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1884763534;
	}
}
contract C3 is C3B, C3BBB, C3BBBBBB {

	function f0() external view
	override(C3BBBBBB, C3BBB)
	returns (uint)
	{
		return 1241596857;
	}
}
library L4 {

	function f0(uint) internal pure returns (uint)
	{
		return 468703135;
	}
}
library L5 {

	function f0(uint) public pure returns (uint)
	{
		return 1101513929;
	}
}
library L7 {

	function f0(uint) internal pure returns (uint)
	{
		return 1656478042;
	}
}


contract C {
	function test() public returns (uint)
	{
			C3 tc0 = new C3();
			if (tc0.f0() != 1241596857)
				return 1;
			C3BBBBBB tc1 = new C3BBBBBB();
			if (tc1.f0() != 1884763534)
				return 2;
			return 0;
	}
}

