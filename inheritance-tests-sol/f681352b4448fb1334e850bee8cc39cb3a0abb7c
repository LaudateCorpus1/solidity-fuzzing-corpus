pragma solidity >=0.0;
interface C0BB {
	function f0() external view returns (uint);
}
interface C0B is C0BB {
}
interface C0BBBBB {
	function f0() external view returns (uint);
}
interface C0BBBB is C0BBBBB {
	function f0() override
	external view returns (uint);
}
interface C0BBBBBB is C0BBBB {
	function f1() external view returns (uint);
}
interface C0BBB is C0BB, C0BBBB, C0BBBBBB {
	function f0() override(C0BB, C0BBBB)
	external view returns (uint);
	function f2() external view returns (uint);
	function f3() external payable returns (uint);
}
contract C0 is C0B, C0BBB {
	function f0() external view
	override(C0BBB, C0BB)
	returns (uint)
	{
		return 1596680831;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1203428207;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1738531149;
	}
	function f3() external payable
	override
	returns (uint)
	{
		return 1098894339;
	}
}
interface C1BB {
	function f0() external view returns (uint);
}
interface C1B is C1BB {
}
interface C1BBB is C1BB {
	function f1() external view returns (uint);
}
contract C1 is C1B, C1BBB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 914937185;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1402304087;
	}
}
interface I2 {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
library L3 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
interface C4B {
	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
contract C4 is C4B {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 353718330;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1947433875;
	}
}
library L5 {
	function f0(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}
library L6 {
	function f0(uint) internal pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) private view returns (uint)
	{
		return 719885386;
	}
}
interface C7BBBB {
	function f0() external view returns (uint);
}
interface C7BBBBBB {
	function f0() external view returns (uint);
}
interface C7BBBBB is C7BBBB, C7BBBBBB {
	function f0() override(C7BBBB, C7BBBBBB)
	external view returns (uint);
}
interface C7BBB is C7BBBB, C7BBBBB {
	function f0() override(C7BBBB, C7BBBBB)
	external view returns (uint);
}
interface C7BB is C7BBB {
}
contract C7B is C7BB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1696049367;
	}
}
abstract contract C7BBBBBBB is C7BB {
	function f0() virtual external view
	override
	returns (uint);
	function f1() external pure
	
	returns (uint)
	{
		return 928270262;
	}
}
abstract contract C7 is C7B, C7BBBBBBB {
	function f0() virtual external view
	override(C7BBBBBBB, C7B)
	returns (uint)
	{
		return 1659675143;
	}
}
interface I8 {
	function f0() external view returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1596680831)
				return 1;
			if (tc0.f1() != 1203428207)
				return 2;
			if (tc0.f2() != 1738531149)
				return 3;
			if (tc0.f3() != 1098894339)
				return 4;
			C1 tc1 = new C1();
			if (tc1.f0() != 914937185)
				return 5;
			if (tc1.f1() != 1402304087)
				return 6;
			C4 tc2 = new C4();
			if (tc2.f0() != 353718330)
				return 7;
			if (tc2.f1() != 1947433875)
				return 8;
			C7B tc3 = new C7B();
			if (tc3.f0() != 1696049367)
				return 9;
			return 0;
	}
}
