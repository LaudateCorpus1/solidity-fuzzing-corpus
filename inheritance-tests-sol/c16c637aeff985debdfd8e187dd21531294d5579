pragma solidity >=0.0;
contract C0BBB {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 1575004944;
	}
}
contract C0BB is C0BBB {
	function f0() public pure
	override
	returns (uint)
	{
		return 992596462;
	}
}
contract C0B is C0BB {
}
contract C0 is C0B {
	function f1() virtual public pure
	
	returns (uint)
	{
		return 971846536;
	}
}
library L1 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
library L2 {
	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
library L3 {
	function f0(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}
contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}
