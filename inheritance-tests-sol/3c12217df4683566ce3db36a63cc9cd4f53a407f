pragma solidity >=0.0;
interface I0B {
	function f0() external payable returns (uint);
}
interface I0 is I0B {
	function f1() external payable returns (uint);
}
interface I1BBB {
	function f0() external payable returns (uint);
}
interface I1BB is I1BBB {
	function f0() override
	external payable returns (uint);
}
interface I1B is I1BB {
	function f1() external view returns (uint);
}
interface I1 is I1B {
}
interface I3BBB {
	function f0() external payable returns (uint);
}
interface I3BB is I3BBB {
}
interface I3B is I3BB {
	function f1() external view returns (uint);
}
interface I3 is I3B {
	function f2() external view returns (uint);
}
interface I4 {
	function f0() external view returns (uint);
}
library L5 {
	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}
interface C6BBBB {
	function f0() external payable returns (uint);
}
interface C6BBB is C6BBBB {
}
interface C6BB is C6BBB {
}
contract C6B is C6BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 2075782095;
	}
}
abstract contract C6 is C6B {
}
interface I7BB {
	function f0() external payable returns (uint);
}
interface I7B is I7BB {
}
interface I7 is I7B {
	function f1() external payable returns (uint);
}
interface I8B {
	function f0() external payable returns (uint);
}
interface I8 is I8B {
	function f1() external payable returns (uint);
}
interface I9BBB {
}
interface I9BB is I9BBB {
	function f0() external view returns (uint);
}
interface I9B is I9BB {
	function f0() override
	external view returns (uint);
}
interface I9BBBBBB {
	function f0() external view returns (uint);
}
interface I9BBBBB is I9BBBBBB {
	function f1() external payable returns (uint);
}
interface I9BBBB is I9B, I9BBBBB {
	function f0() override(I9B, I9BBBBBB)
	external view returns (uint);
}
interface I9 is I9B, I9BBBB {
	function f0() override(I9B, I9BBBB)
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I10BBBB {
	function f0() external view returns (uint);
}
interface I10BBB is I10BBBB {
	function f0() override
	external view returns (uint);
}
interface I10BB is I10BBB {
}
interface I10B is I10BB {
}
interface I10 is I10B {
}
contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}
