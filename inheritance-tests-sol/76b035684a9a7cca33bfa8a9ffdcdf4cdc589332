pragma solidity >=0.0;
interface C0BBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C0BBB is C0BBBB {
	function f1() override
	external payable returns (uint);
}
interface C0BB is C0BBB {
}
contract C0B is C0BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 854716505;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1596680831;
	}
}
abstract contract C0 is C0B {
}
interface I1BBB {
	function f0() external view returns (uint);
}
interface I1BB is I1BBB {
	function f1() external payable returns (uint);
}
interface I1B is I1BB {
}
interface I1 is I1B {
	function f1() override
	external payable returns (uint);
}
interface I2BBBBB {
	function f0() external view returns (uint);
}
interface I2BBBB is I2BBBBB {
}
interface I2BBB is I2BBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I2BB is I2BBB {
	function f0() override
	external view returns (uint);
}
interface I2B is I2BB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I2 is I2B {
}
interface I3BBB {
	function f0() external view returns (uint);
}
interface I3BB is I3BBB {
}
interface I3B is I3BB {
}
interface I3 is I3B {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
library L4 {
	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}
interface I5BBBBB {
	function f0() external view returns (uint);
}
interface I5BBBB is I5BBBBB {
	function f0() override
	external view returns (uint);
}
interface I5BBB is I5BBBB {
	function f1() external view returns (uint);
}
interface I5BB is I5BBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I5B is I5BB {
	function f1() override
	external view returns (uint);
}
interface I5 is I5B {
	function f1() override
	external view returns (uint);
}
contract C {
	using L4 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}
