pragma solidity >=0.0;
contract C0 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 5889062;
	}
}
library L1 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
library L2 {
	function f0(uint) external pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}
interface I3BBBB {
	function f0() external payable returns (uint);
}
interface I3BBB is I3BBBB {
}
interface I3BBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I3BBBBBBB is I3BBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I3BBBBBB is I3BBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I3BBBBB is I3BBBB, I3BBBBBB {
	function f0() override(I3BBBB, I3BBBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
}
interface I3BB is I3BBB, I3BBBBB {
	function f0() override(I3BBBB, I3BBBBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
}
interface I3B is I3BB {
	function f0() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
}
interface I3 is I3B {
	function f0() override
	external payable returns (uint);
}
library L4 {
	function f0(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
library L5 {
	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
}
library L6 {
	function f0(uint) private pure returns (uint)
	{
		return 719885386;
	}
}
library L7 {
	function f0(uint) external pure returns (uint)
	{
		return 1649760492;
	}
}
interface I8BB {
	function f0() external view returns (uint);
}
interface I8B is I8BB {
}
interface I8 is I8B {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 5889062)
				return 1;
			return 0;
	}
}
