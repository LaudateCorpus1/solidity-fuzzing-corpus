
pragma solidity >=0.0;





interface C0BB {

	function f0() external view returns (uint);
}
interface C0B is C0BB {

}
contract C0 is C0B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1914720637;
	}
}




contract C1BBB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 2078669041;
	}
}

contract C1BBBB is C1BBB {

}
contract C1BB is C1BBB, C1BBBB {

}
contract C1B is C1BB {

}
contract C1 is C1B {

	function f1() virtual public pure
	
	returns (uint)
	{
		return 1250328747;
	}
}
library L2 {

	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
}




interface C3BBB {

	function f0() external payable returns (uint);
}
interface C3BB is C3BBB {

	function f1() external payable returns (uint);
}
interface C3B is C3BB {

	function f2() external payable returns (uint);
}

interface C3BBBB is C3BB {

	function f2() external payable returns (uint);
}
contract C3 is C3B, C3BBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1936030137;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 353718330;
	}
	function f2() external payable
	override(C3BBBB, C3B)
	returns (uint)
	{
		return 1931656580;
	}
}



interface C4BB {

	function f0() external view returns (uint);
}
interface C4B is C4BB {

	function f0() override
	external view returns (uint);
}
contract C4 is C4B {

	function f0() external view
	override
	returns (uint)
	{
		return 2010567813;
	}
}
library L5 {

	function f0(uint) private pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}




contract C6BBB {

	function f0() external pure
	
	returns (uint)
	{
		return 662405787;
	}
}
contract C6BB is C6BBB {

}
abstract contract C6B is C6BB {

}
contract C6 is C6B {

}




interface I7BBB {

	function f0() external payable returns (uint);
}
interface I7BB is I7BBB {

}
interface I7B is I7BB {

}
interface I7 is I7B {

}




contract C8BBB {

	function f0() external pure
	
	returns (uint)
	{
		return 1308858262;
	}
}
contract C8BB is C8BBB {

}
contract C8B is C8BB {

}
contract C8 is C8B {

}



interface I9BB {

	function f0() external payable returns (uint);
}
interface I9B is I9BB {

}
interface I9 is I9B {

	function f1() external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1914720637)
				return 1;
			C1 tc1 = new C1();
			if (tc1.f0() != 2078669041)
				return 2;
			if (tc1.f1() != 1250328747)
				return 3;
			C1B tc2 = new C1B();
			if (tc2.f0() != 2078669041)
				return 4;
			C1BB tc3 = new C1BB();
			if (tc3.f0() != 2078669041)
				return 5;
			C1BBB tc4 = new C1BBB();
			if (tc4.f0() != 2078669041)
				return 6;
			C1BBBB tc5 = new C1BBBB();
			if (tc5.f0() != 2078669041)
				return 7;
			C3 tc6 = new C3();
			if (tc6.f0() != 1936030137)
				return 8;
			if (tc6.f1() != 353718330)
				return 9;
			if (tc6.f2() != 1931656580)
				return 10;
			C4 tc7 = new C4();
			if (tc7.f0() != 2010567813)
				return 11;
			C6 tc8 = new C6();
			if (tc8.f0() != 662405787)
				return 12;
			C6BB tc9 = new C6BB();
			if (tc9.f0() != 662405787)
				return 13;
			C6BBB tc10 = new C6BBB();
			if (tc10.f0() != 662405787)
				return 14;
			C8 tc11 = new C8();
			if (tc11.f0() != 1308858262)
				return 15;
			C8B tc12 = new C8B();
			if (tc12.f0() != 1308858262)
				return 16;
			C8BB tc13 = new C8BB();
			if (tc13.f0() != 1308858262)
				return 17;
			C8BBB tc14 = new C8BBB();
			if (tc14.f0() != 1308858262)
				return 18;
			return 0;
	}
}

