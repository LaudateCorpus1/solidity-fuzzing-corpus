
pragma solidity >=0.0;



interface I2 {

	function f0() external view returns (uint);
}






interface I4BBBBB {

	function f0() external view returns (uint);
}
interface I4BBBB is I4BBBBB {

}
interface I4BBB is I4BBBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I4BB is I4BBB {

}

interface I4BBBBBB is I4BBB {

	function f2() external payable returns (uint);
}
interface I4B is I4BB, I4BBBBBB {

}
interface I4 is I4B {

}





interface I5BBBB {

	function f0() external payable returns (uint);
}
interface I5BBB is I5BBBB {

	function f0() override
	external payable returns (uint);
}
interface I5BB is I5BBB {

}
interface I5B is I5BB {

}
interface I5 is I5B {

}



interface I7BB {

	function f0() external payable returns (uint);
}
interface I7B is I7BB {

}
interface I7 is I7B {

	function f0() override
	external payable returns (uint);
}

interface I9 {

	function f0() external payable returns (uint);
}





interface I11BBBB {

	function f0() external view returns (uint);
}
interface I11BBB is I11BBBB {

}
interface I11BB is I11BBB {

	function f0() override
	external view returns (uint);
}
interface I11B is I11BB {

}
interface I11 is I11B {

}






interface I12BBBBB {

	function f0() external view returns (uint);
}
interface I12BBBB is I12BBBBB {

	function f0() override
	external view returns (uint);
}
interface I12BBB is I12BBBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I12BB is I12BBB {

	function f1() override
	external payable returns (uint);
}
interface I12B is I12BB {

	function f0() override
	external view returns (uint);
}
interface I12 is I12B {

	function f1() override
	external payable returns (uint);
}









interface I13BBBBBBBB {

	function f0() external view returns (uint);
}
interface I13BBBBBBB is I13BBBBBBBB {

}
interface I13BBBBBB is I13BBBBBBB {

	function f1() external payable returns (uint);
}
interface I13BBBBB is I13BBBBBB {

	function f1() override
	external payable returns (uint);
}
interface I13BBBB is I13BBBBB {

	function f1() override
	external payable returns (uint);
}
interface I13BBB is I13BBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I13BB is I13BBB {

	function f1() override
	external payable returns (uint);
}
interface I13B is I13BB {

	function f0() override
	external view returns (uint);
}
interface I13 is I13B {

	function f1() override
	external payable returns (uint);
}



interface I14BB {

	function f0() external view returns (uint);
}
interface I14B is I14BB {

}
interface I14 is I14B {

	function f0() override
	external view returns (uint);
}
library L15 {

	function f0(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}
library L16 {

	function f0(uint) external pure returns (uint)
	{
		return 424238335;
	}
}





interface I17BBBB {

	function f0() external view returns (uint);
}
interface I17BBB is I17BBBB {

}
interface I17BB is I17BBB {

	function f0() override
	external view returns (uint);
}
interface I17B is I17BB {

	function f0() override
	external view returns (uint);
}
interface I17 is I17B {

	function f0() override
	external view returns (uint);
}


contract C {
	using L15 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1957747793)
			return 1;
		return 0;
	}
}

