
pragma solidity >=0.0;



interface I0 {

	function f0() external view returns (uint);
}





interface I1BBBB {

	function f0() external payable returns (uint);
}
interface I1BBB is I1BBBB {

	function f0() override
	external payable returns (uint);
}
interface I1BB is I1BBB {

	function f0() override
	external payable returns (uint);
}
interface I1B is I1BB {

	function f0() override
	external payable returns (uint);
}
interface I1 is I1B {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}




interface C2BBB {

	function f0() external payable returns (uint);
}
interface C2BB is C2BBB {

	function f0() override
	external payable returns (uint);
}
interface C2B is C2BB {

	function f0() override
	external payable returns (uint);
}



interface C2BBBBBB {

}
interface C2BBBBB is C2BBBBBB {

	function f0() external payable returns (uint);
}
interface C2BBBB is C2BB, C2BBBBB {

	function f0() override(C2BB, C2BBBBB)
	external payable returns (uint);
}
contract C2 is C2B, C2BBBB {

	function f0() external payable
	override(C2BBBB, C2B)
	returns (uint)
	{
		return 1086039286;
	}
}


interface C3B {

	function f0() external payable returns (uint);
}
contract C3 is C3B {

	function f0() external payable
	override
	returns (uint)
	{
		return 761551824;
	}
	function f1() private pure
	
	returns (uint)
	{
		return 243026958;
	}
	function f2() external pure
	
	returns (uint)
	{
		return 1598609704;
	}
	function f3() external pure
	
	returns (uint)
	{
		return 959134133;
	}
}

interface I4 {

	function f0() external payable returns (uint);
}


interface I5B {

	function f0() external view returns (uint);
}
interface I5 is I5B {

	function f0() override
	external view returns (uint);
}

interface I6 {

	function f0() external payable returns (uint);
}



abstract contract C7BB {

	function f0() public view
	
	returns (uint)
	{
		return 1564254415;
	}
}
contract C7B is C7BB {

}
contract C7 is C7B {

}
library L8 {

	function f0(uint) internal view returns (uint)
	{
		return 846930886;
	}
	function f1(uint) internal view returns (uint)
	{
		return 1681692777;
	}
}




interface I9BBB {

	function f0() external payable returns (uint);
}
interface I9BB is I9BBB {

}
interface I9B is I9BB {

	function f1() external payable returns (uint);
}
interface I9 is I9B {

	function f0() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}





interface I10BBBB {

	function f0() external payable returns (uint);
}
interface I10BBB is I10BBBB {

}
interface I10BB is I10BBB {

}
interface I10B is I10BB {

	function f0() override
	external payable returns (uint);
}
interface I10 is I10B {

	function f0() override
	external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C2 tc0 = new C2();
			if (tc0.f0() != 1086039286)
				return 1;
			C3 tc1 = new C3();
			if (tc1.f0() != 761551824)
				return 2;
			if (tc1.f2() != 1598609704)
				return 3;
			if (tc1.f3() != 959134133)
				return 4;
			C7 tc2 = new C7();
			if (tc2.f0() != 1564254415)
				return 5;
			C7B tc3 = new C7B();
			if (tc3.f0() != 1564254415)
				return 6;
			return 0;
	}
}

