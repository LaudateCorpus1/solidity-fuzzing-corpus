pragma solidity >=0.0;
contract C1 {
	function f0() private pure
	
	returns (uint)
	{
		return 1291394886;
	}
	function f1() external pure
	
	returns (uint)
	{
		return 1914720637;
	}
}
interface C2BBBBBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface C2BBBBBBBBBB is C2BBBBBBBBBBB {
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C2BBBBBBBBB is C2BBBBBBBBBB {
	function f4() external payable returns (uint);
	function f5() external payable returns (uint);
	function f6() external view returns (uint);
}
interface C2BBBBBBBB is C2BBBBBBBBB {
	function f5() override
	external payable returns (uint);
}
interface C2BBBBBBB is C2BBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f7() external payable returns (uint);
	function f8() external view returns (uint);
	function f9() external view returns (uint);
}
interface C2BBBBBB is C2BBBBBBB {
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f8() override
	external view returns (uint);
}
interface C2BBBBBBBBBBBB is C2BBBBBBB {
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f10() external view returns (uint);
}
interface C2BBBBB is C2BBBBBB, C2BBBBBBBBBBBB {
	function f1() override(C2BBBBBBBBBBB, C2BBBBBBBBBBBB)
	external view returns (uint);
	function f2() override(C2BBBBBBB, C2BBBBBBBBBBBB)
	external view returns (uint);
	function f3() override(C2BBBBBB, C2BBBBBBBBBB)
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override(C2BBBBBB, C2BBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(C2BBBBBB, C2BBBBBBB)
	external view returns (uint);
	function f8() override(C2BBBBBB, C2BBBBBBBBBBBB)
	external view returns (uint);
	function f10() override
	external view returns (uint);
	function f11() external payable returns (uint);
}
contract C2BBBB is C2BBBBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 884730203;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 2130959757;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 352020689;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 719080959;
	}
	function f4() virtual external payable
	override
	returns (uint)
	{
		return 163677341;
	}
	function f5() virtual external payable
	override
	returns (uint)
	{
		return 374787159;
	}
	function f6() external view
	override
	returns (uint)
	{
		return 80100956;
	}
	function f7() virtual external payable
	override
	returns (uint)
	{
		return 1003765604;
	}
	function f8() virtual external view
	override
	returns (uint)
	{
		return 1447645967;
	}
	function f9() external view
	override
	returns (uint)
	{
		return 143244144;
	}
	function f10() external view
	override
	returns (uint)
	{
		return 837051536;
	}
	function f11() external payable
	override
	returns (uint)
	{
		return 355190910;
	}
}
contract C2BBB is C2BBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1869683330;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1318652553;
	}
	function f5() virtual external payable
	override
	returns (uint)
	{
		return 1715708819;
	}
	function f7() virtual external payable
	override
	returns (uint)
	{
		return 583514338;
	}
	function f8() external view
	override
	returns (uint)
	{
		return 851194519;
	}
}
contract C2BB is C2BBB {
	function f2() external view
	override
	returns (uint)
	{
		return 268625699;
	}
}
contract C2B is C2BB {
	function f4() virtual external payable
	override
	returns (uint)
	{
		return 1578591759;
	}
	function f5() external payable
	override
	returns (uint)
	{
		return 15580725;
	}
}
contract C2 is C2B {
	function f12() private pure
	
	returns (uint)
	{
		return 1298302928;
	}
	function f13() external pure
	
	returns (uint)
	{
		return 365367087;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
