pragma solidity >=0.0;
contract C0BB {
}
contract C0B is C0BB {
}
interface C0BBBBBBBB {
	function f0() external payable returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface C0BBBBBB is C0BBBBBBB {
}
interface C0BBBBB is C0BBBBBB {
}
interface C0BBBB is C0BBBBB {
}
interface C0BBB is C0BBBB {
}
contract C0 is C0B, C0BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1250328747;
	}
}
library L1 {
	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
}
library L2 {
	function f0(uint) private view returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) internal view returns (uint)
	{
		return 1714636915;
	}
}
interface C3BB {
	function f0() external view returns (uint);
}
interface C3B is C3BB {
}
contract C3 is C3B {
	function f0() external view
	override
	returns (uint)
	{
		return 1882556969;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1250328747)
				return 1;
			C3 tc1 = new C3();
			if (tc1.f0() != 1882556969)
				return 2;
			return 0;
	}
}
