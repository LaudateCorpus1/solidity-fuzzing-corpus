
pragma solidity >=0.0;












interface I1BBBBBBBBB {

	function f0() external view returns (uint);
}

interface I1BBBBBBBBBB is I1BBBBBBBBB {

	function f1() external payable returns (uint);
}
interface I1BBBBBBBB is I1BBBBBBBBB, I1BBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I1BBBBBBB is I1BBBBBBBB {

}
interface I1BBBBBB is I1BBBBBBB {

}
interface I1BBBBB is I1BBBBBB {

	function f2() override
	external payable returns (uint);
	function f4() external payable returns (uint);
}
interface I1BBBB is I1BBBBB {

	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}

interface I1BBBBBBBBBBB is I1BBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f5() external payable returns (uint);
}
interface I1BBB is I1BBBB, I1BBBBBBBBBBB {

	function f0() override(I1BBBB, I1BBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I1BBBBBBBBBB, I1BBBBBBBBBBB)
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f6() external view returns (uint);
	function f7() external payable returns (uint);
	function f8() external view returns (uint);
	function f9() external payable returns (uint);
	function f10() external payable returns (uint);
}
interface I1BB is I1BBB {

	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
}
interface I1B is I1BB {

	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
}











interface I1BBBBBBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}

interface I1BBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBB {

	function f1() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBB {

	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f3() override
	external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBBB {

	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external payable returns (uint);
}

interface I1BBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBBB {

	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1BBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I1BBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I1BBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I1BBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I1BBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() external view returns (uint);
	function f7() external payable returns (uint);
	function f8() external view returns (uint);
	function f9() external payable returns (uint);
	function f10() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBB {

	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f10() override
	external payable returns (uint);
}

interface I1BBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBBB {

	function f1() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f11() external payable returns (uint);
}
interface I1BBBBBBBBBBBBBB is I1BBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBB {

	function f1() override(I1BBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I1BBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I1BBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f8() override(I1BBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override(I1BBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f12() external view returns (uint);
	function f13() external payable returns (uint);
	function f14() external view returns (uint);
	function f15() external payable returns (uint);
}
interface I1BBBBBBBBBBBBB is I1BBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f9() override
	external payable returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() override
	external payable returns (uint);
	function f12() override
	external view returns (uint);
}

interface I1BBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external view returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f11() override
	external payable returns (uint);
	function f16() external payable returns (uint);
}
interface I1BBBBBBBBBBBB is I1BB, I1BBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1BBB, I1BBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I1BBB, I1BBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I1BBBB, I1BBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(I1BB, I1BBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I1BB, I1BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override(I1BBBBBBBBBBB, I1BBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(I1BBB, I1BBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f7() override(I1BB, I1BBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override(I1BBB, I1BBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f9() override(I1BBB, I1BBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(I1BB, I1BBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(I1BBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f13() override
	external payable returns (uint);
	function f14() override
	external view returns (uint);
}

interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBB is I1B {

	function f2() override
	external payable returns (uint);
	function f5() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f11() external payable returns (uint);
}

interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BB {

	function f4() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f10() override
	external payable returns (uint);
	function f11() external payable returns (uint);
}


interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1B, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1B, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f10() override
	external payable returns (uint);
}

interface I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB is I1BBBBBBBBBBBB {

	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f6() override
	external view returns (uint);
	function f7() override
	external payable returns (uint);
	function f8() override
	external view returns (uint);
	function f10() override
	external payable returns (uint);
	function f12() override
	external view returns (uint);
	function f13() override
	external payable returns (uint);
	function f15() override
	external payable returns (uint);
	function f17() external payable returns (uint);
}
interface I1 is I1B, I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I1B, I1BBBBBBBBBBBB, I1BBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I1BBB, I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I1B, I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBB)
	external payable returns (uint);
	function f3() override(I1BB, I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() override(I1BB, I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f5() override(I1B, I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBB)
	external payable returns (uint);
	function f6() override(I1BBB, I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f7() override(I1B, I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f8() override(I1BBB, I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f9() override(I1BBB, I1BBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override(I1BB, I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f11() override(I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f12() override(I1BBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f13() override(I1BBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f14() override
	external view returns (uint);
	function f15() override(I1BBBBBBBBBBBBBB, I1BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f16() override
	external payable returns (uint);
	function f17() override
	external payable returns (uint);
	function f18() external payable returns (uint);
}
library L2 {

	function f0(uint) public view returns (uint)
	{
		return 1350490027;
	}
}


contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1350490027)
			return 1;
		return 0;
	}
}

