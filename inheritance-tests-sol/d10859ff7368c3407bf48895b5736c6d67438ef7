
pragma solidity >=0.0;


library L1 {

	function f0(uint) public view returns (uint)
	{
		return 1681692777;
	}
}
library L2 {

	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}



abstract contract C3BB {

}
contract C3B is C3BB {

}



interface C3BBBBB {

	function f0() external payable returns (uint);
}
interface C3BBBB is C3BBBBB {

}
interface C3BBB is C3BBBB {

	function f0() override
	external payable returns (uint);
}
contract C3 is C3B, C3BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 2015020308;
	}
}
library L4 {

	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
}
library L5 {

	function f0(uint) internal pure returns (uint)
	{
		return 719885386;
	}
}
library L6 {

	function f0(uint) public view returns (uint)
	{
		return 1649760492;
	}
}


contract C7B {

}



interface C7BBBB {

	function f0() external view returns (uint);
}
interface C7BBB is C7BBBB {

}

interface C7BBBBB is C7BBBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}



interface C7BBBBBBBB {

	function f0() external view returns (uint);
}
interface C7BBBBBBB is C7BBBBBBBB {

}
interface C7BBBBBB is C7BBBBB, C7BBBBBBB {

	function f0() override(C7BBBBB, C7BBBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface C7BB is C7BBB, C7BBBBB, C7BBBBBB {

	function f0() override(C7BBBB, C7BBBBB, C7BBBBBB)
	external view returns (uint);
	function f1() override(C7BBBBB, C7BBBBBB)
	external view returns (uint);
}
contract C7 is C7B, C7BB {

	function f0() external view
	override
	returns (uint)
	{
		return 1389449997;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 445221226;
	}
}


contract C {
	function test() public returns (uint)
	{
			C3 tc0 = new C3();
			if (tc0.f0() != 2015020308)
				return 1;
			C7 tc1 = new C7();
			if (tc1.f0() != 1389449997)
				return 2;
			if (tc1.f1() != 445221226)
				return 3;
			return 0;
	}
}

