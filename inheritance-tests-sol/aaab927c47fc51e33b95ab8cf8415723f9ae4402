
pragma solidity >=0.0;


library L2 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}






interface C3BBBBB {

	function f0() external payable returns (uint);
}
interface C3BBBB is C3BBBBB {

	function f0() override
	external payable returns (uint);
}
interface C3BBB is C3BBBB {

	function f0() override
	external payable returns (uint);
}
interface C3BB is C3BBB {

	function f0() override
	external payable returns (uint);
}
interface C3B is C3BB {

}
contract C3 is C3B {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 180753275;
	}
}



interface I4BB {

	function f0() external view returns (uint);
}
interface I4B is I4BB {

}
interface I4 is I4B {

	function f0() override
	external view returns (uint);
}









interface C6BBBBBBBB {

	function f0() external view returns (uint);
}
interface C6BBBBBBB is C6BBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C6BBBBBB is C6BBBBBBB {

}
interface C6BBBBB is C6BBBBBB {

}
interface C6BBBB is C6BBBBB {

}
interface C6BBB is C6BBBB {

	function f1() external payable returns (uint);
}
interface C6BB is C6BBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
contract C6B is C6BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 562351922;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 447122901;
	}
}
contract C6 is C6B {

}









interface C10BBBBBBBB {

	function f0() external view returns (uint);
}
interface C10BBBBBBB is C10BBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C10BBBBBB is C10BBBBBBB {

}
interface C10BBBBB is C10BBBBBB {

	function f0() override
	external view returns (uint);
}
interface C10BBBB is C10BBBBB {

}
interface C10BBB is C10BBBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface C10BB is C10BBB {

	function f1() override
	external payable returns (uint);
}
contract C10B is C10BB {

	function f0() external view
	override
	returns (uint)
	{
		return 518008164;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1849502422;
	}
}
contract C10 is C10B {

}
library L12 {

	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}


contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

