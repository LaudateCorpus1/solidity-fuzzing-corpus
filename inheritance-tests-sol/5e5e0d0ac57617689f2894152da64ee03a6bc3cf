
pragma solidity >=0.0;


library L0 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}



interface I1BB {

	function f0() external payable returns (uint);
}
interface I1B is I1BB {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
	function f2() external pure returns (uint);
}
interface I1 is I1B {

	function f3() external payable returns (uint);
}
library L2 {

	function f0(uint) external pure returns (uint)
	{
		return 846930886;
	}
}


contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}

