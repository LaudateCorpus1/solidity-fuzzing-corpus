
pragma solidity >=0.0;





abstract contract C2BB {

}
contract C2B is C2BB {

}



interface C2BBBBB {

	function f0() external payable returns (uint);
}
interface C2BBBB is C2BBBBB {

}
contract C2BBB is C2BB, C2BBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 375855352;
	}
}
contract C2 is C2B, C2BBB {

}
library L4 {

	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
library L5 {

	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}
library L6 {

	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}




interface C7BBB {

	function f0() external payable returns (uint);
}
interface C7BB is C7BBB {

	function f0() override
	external payable returns (uint);
}
contract C7B is C7BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 1425835579;
	}
}
contract C7 is C7B {

}


contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}

