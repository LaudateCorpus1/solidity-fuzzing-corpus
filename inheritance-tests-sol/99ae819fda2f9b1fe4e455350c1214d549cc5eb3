
pragma solidity >=0.0;






contract C0BBB {

}
contract C0BB is C0BBB {

}
abstract contract C0B is C0BB {

}


contract C0BBBBB {

	function f0() public view
	
	returns (uint)
	{
		return 394009225;
	}
	function f1() public payable
	
	returns (uint)
	{
		return 1104122143;
	}
}
contract C0BBBB is C0BB, C0BBBBB {

}
contract C0 is C0B, C0BBBB {

	function f2() public view
	
	returns (uint)
	{
		return 2089172319;
	}
	function f3() external view
	
	returns (uint)
	{
		return 604947329;
	}
	function f4() public view
	
	returns (uint)
	{
		return 2077369900;
	}
	function f5() public view
	
	returns (uint)
	{
		return 2121029882;
	}
	function f6() virtual public pure
	
	returns (uint)
	{
		return 803079650;
	}
}


contract C1B {

}
contract C1 is C1B {

	function f0() public view
	
	returns (uint)
	{
		return 1230473153;
	}
}
library L2 {

	function f0(uint) private view returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public view returns (uint)
	{
		return 1681692777;
	}
}



contract C4BB {

	function f0() public view
	
	returns (uint)
	{
		return 1728509667;
	}
	function f1() public payable
	
	returns (uint)
	{
		return 707998866;
	}
}
abstract contract C4B is C4BB {

}
contract C4 is C4B {

}


interface I7B {

	function f0() external view returns (uint);
}



interface I7BBBB {

}
interface I7BBB is I7BBBB {

}
interface I7BB is I7B, I7BBB {

}
interface I7 is I7B, I7BB {

}
library L8 {

	function f0(uint) external pure returns (uint)
	{
		return 424238335;
	}
}

contract C9 {

	function f0() public view
	
	returns (uint)
	{
		return 820216093;
	}
}


contract C {
	using L8 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 424238335)
			return 1;
		return 0;
	}
}

