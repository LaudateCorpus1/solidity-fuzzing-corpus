
pragma solidity >=0.0;





interface I0BB {

	function f0() external payable returns (uint);
}
interface I0B is I0BB {

}

interface I0BBB is I0BB {

	function f1() external view returns (uint);
}
interface I0 is I0B, I0BBB {

	function f0() override
	external payable returns (uint);
}


interface I1B {

}
interface I1 is I1B {

}



interface I2BB {

	function f0() external payable returns (uint);
}
interface I2B is I2BB {

	function f0() override
	external payable returns (uint);
}
interface I2 is I2B {

}





interface I3BBBB {

	function f0() external payable returns (uint);
}
interface I3BBB is I3BBBB {

}
interface I3BB is I3BBB {

}
interface I3B is I3BB {

	function f0() override
	external payable returns (uint);
}
interface I3 is I3B {

}


contract C4B {

	function f0() virtual public view
	
	returns (uint)
	{
		return 2015020308;
	}
}
contract C4 is C4B {

	function f1() virtual public pure
	
	returns (uint)
	{
		return 1853505735;
	}
}


contract C5B {

}
contract C5 is C5B {

	function f0() public view
	
	returns (uint)
	{
		return 2111632871;
	}
}





interface I6BBBB {

	function f0() external payable returns (uint);
}
interface I6BBB is I6BBBB {

	function f0() override
	external payable returns (uint);
}
interface I6BB is I6BBB {

	function f0() override
	external payable returns (uint);
}
interface I6B is I6BB {

	function f0() override
	external payable returns (uint);
}
interface I6 is I6B {

}


contract C7B {

}
contract C7 is C7B {

	function f0() public view
	
	returns (uint)
	{
		return 921256890;
	}
}


contract C8B {

	function f0() public view
	
	returns (uint)
	{
		return 2047458761;
	}
}
contract C8 is C8B {

	function f1() public view
	
	returns (uint)
	{
		return 1389449997;
	}
}











interface C9BBBBBBBBBB {

	function f0() external view returns (uint);
}
interface C9BBBBBBBBB is C9BBBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C9BBBBBBBB is C9BBBBBBBBB {

	function f1() external pure returns (uint);
}
interface C9BBBBBBB is C9BBBBBBBB {

	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface C9BBBBBB is C9BBBBBBB {

	function f0() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C9BBBBB is C9BBBBBB {

	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}

interface C9BBBBBBBBBBB is C9BBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external pure returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override
	external view returns (uint);
	function f5() external view returns (uint);
}
interface C9BBBB is C9BBBBB, C9BBBBBBBBBBB {

	function f0() override(C9BBBBBB, C9BBBBBBBBBBB)
	external view returns (uint);
	function f1() override(C9BBBBBBBB, C9BBBBBBBBBBB)
	external pure returns (uint);
	function f2() override(C9BBBBB, C9BBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(C9BBBBB, C9BBBBBBBBBBB)
	external view returns (uint);
	function f4() override(C9BBBBBB, C9BBBBBBBBBBB)
	external view returns (uint);
}
contract C9BBB is C9BBBB {

	function f0() external view
	override
	returns (uint)
	{
		return 471204562;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 2049654209;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 619611247;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1823773651;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 489392714;
	}
	function f5() virtual external view
	override
	returns (uint)
	{
		return 138295049;
	}
}
contract C9BB is C9BBB {

	function f2() virtual external payable
	override
	returns (uint)
	{
		return 541341238;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1797564807;
	}
	function f5() virtual external view
	override
	returns (uint)
	{
		return 1967849489;
	}
}
abstract contract C9B is C9BB {

}
contract C9 is C9B {

	function f2() external payable
	override
	returns (uint)
	{
		return 934841665;
	}
	function f5() virtual external view
	override
	returns (uint)
	{
		return 1733068100;
	}
}


interface I10B {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I10 is I10B {

}
library L11 {

	function f0(uint) external pure returns (uint)
	{
		return 1681692777;
	}
}


contract C {
	function test() public returns (uint)
	{
			C4 tc0 = new C4();
			if (tc0.f0() != 2015020308)
				return 1;
			if (tc0.f1() != 1853505735)
				return 2;
			C4B tc1 = new C4B();
			if (tc1.f0() != 2015020308)
				return 3;
			C5 tc2 = new C5();
			if (tc2.f0() != 2111632871)
				return 4;
			C7 tc3 = new C7();
			if (tc3.f0() != 921256890)
				return 5;
			C8 tc4 = new C8();
			if (tc4.f0() != 2047458761)
				return 6;
			if (tc4.f1() != 1389449997)
				return 7;
			C8B tc5 = new C8B();
			if (tc5.f0() != 2047458761)
				return 8;
			C9 tc6 = new C9();
			if (tc6.f0() != 471204562)
				return 9;
			if (tc6.f1() != 2049654209)
				return 10;
			if (tc6.f2() != 934841665)
				return 11;
			if (tc6.f3() != 1797564807)
				return 12;
			if (tc6.f4() != 489392714)
				return 13;
			if (tc6.f5() != 1733068100)
				return 14;
			C9BB tc7 = new C9BB();
			if (tc7.f0() != 471204562)
				return 15;
			if (tc7.f1() != 2049654209)
				return 16;
			if (tc7.f2() != 541341238)
				return 17;
			if (tc7.f3() != 1797564807)
				return 18;
			if (tc7.f4() != 489392714)
				return 19;
			if (tc7.f5() != 1967849489)
				return 20;
			C9BBB tc8 = new C9BBB();
			if (tc8.f0() != 471204562)
				return 21;
			if (tc8.f1() != 2049654209)
				return 22;
			if (tc8.f2() != 619611247)
				return 23;
			if (tc8.f3() != 1823773651)
				return 24;
			if (tc8.f4() != 489392714)
				return 25;
			if (tc8.f5() != 138295049)
				return 26;
			return 0;
	}
}

