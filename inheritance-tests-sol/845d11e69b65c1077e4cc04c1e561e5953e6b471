
pragma solidity >=0.0;


library L0 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
}
library L1 {

	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
library L2 {

	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
}

contract C5 {

	function f0() public view
	
	returns (uint)
	{
		return 992596462;
	}
}
library L6 {

	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
library L7 {

	function f0(uint) public pure returns (uint)
	{
		return 1957747793;
	}
}




interface C8BBB {

	function f0() external payable returns (uint);
}
interface C8BB is C8BBB {

	function f0() override
	external payable returns (uint);
}
abstract contract C8B is C8BB {

	function f0() virtual external payable
	override
	returns (uint);
}
contract C8 is C8B {

	function f0() external payable
	override
	returns (uint)
	{
		return 1805831206;
	}
}





interface C9BBBB {

	function f0() external view returns (uint);
}
interface C9BBB is C9BBBB {

}
interface C9BB is C9BBB {

	function f0() override
	external view returns (uint);
}
interface C9B is C9BB {

	function f0() override
	external view returns (uint);
}
contract C9 is C9B {

	function f0() external view
	override
	returns (uint)
	{
		return 1369023381;
	}
}

contract C10 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1760838767;
	}
}

contract C11 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 45373597;
	}
}



abstract contract C12BB {

}
contract C12B is C12BB {

}



interface C12BBBBB {

	function f0() external payable returns (uint);
}
interface C12BBBB is C12BBBBB {

	function f0() override
	external payable returns (uint);
}
interface C12BBB is C12BBBB {

}
contract C12 is C12B, C12BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1096328782;
	}
}

contract C13 {

	function f0() public view
	
	returns (uint)
	{
		return 447122901;
	}
}


contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}

