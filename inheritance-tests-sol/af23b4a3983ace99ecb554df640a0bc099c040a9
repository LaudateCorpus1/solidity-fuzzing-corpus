pragma solidity >=0.0;
library L0 {
	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}
interface C1BBBBB {
	function f0() external view returns (uint);
}
contract C1BBBB is C1BBBBB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1291394886;
	}
}
contract C1BBB is C1BBBB {
}
abstract contract C1BBBBBBBB {
}
contract C1BBBBBBB is C1BBBBBBBB {
}
contract C1BBBBBB is C1BBB, C1BBBBBBB {
}
contract C1BB is C1BBB, C1BBBBBB {
}
contract C1B is C1BB {
}
contract C1 is C1B {
}
contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 1291394886)
				return 1;
			C1B tc1 = new C1B();
			if (tc1.f0() != 1291394886)
				return 2;
			C1BB tc2 = new C1BB();
			if (tc2.f0() != 1291394886)
				return 3;
			C1BBB tc3 = new C1BBB();
			if (tc3.f0() != 1291394886)
				return 4;
			C1BBBB tc4 = new C1BBBB();
			if (tc4.f0() != 1291394886)
				return 5;
			C1BBBBBB tc5 = new C1BBBBBB();
			if (tc5.f0() != 1291394886)
				return 6;
			return 0;
	}
}
