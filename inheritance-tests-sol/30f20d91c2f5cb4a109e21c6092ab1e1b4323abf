pragma solidity >=0.0;
abstract contract C0B {
}
contract C0BB is C0B {
}
interface C0BBBBBBBBBB {
	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C0BBBBBBBBB is C0BBBBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
}
interface C0BBBBBBBB is C0BBBBBBBBB {
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB {
}
interface C0BBBBBBBBBBB is C0BBBBBBBB {
	function f4() external view returns (uint);
}
interface C0BBBBBB is C0BBBBBBB, C0BBBBBBBBBBB {
	function f0() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}
contract C0BBBBB is C0BBBBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1936030137;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 353718330;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1947433875;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 2010567813;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 662405787;
	}
}
contract C0BBBB is C0BBBBB {
	function f1() external pure
	override
	returns (uint)
	{
		return 1479919876;
	}
}
contract C0BBB is C0BB, C0BBBB {
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1287522347;
	}
}
abstract contract C0 is C0B, C0BB, C0BBB {
}
library L1 {
	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}
library L2 {
	function f0(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
interface C3BBBB {
	function f0() external payable returns (uint);
}
interface C3BBB is C3BBBB {
	function f0() override
	external payable returns (uint);
}
contract C3BB is C3BBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1324346645;
	}
}
contract C3B is C3BB {
	function f0() external payable
	override
	returns (uint)
	{
		return 942409124;
	}
}
contract C3 is C3B {
}
library L4 {
	function f0(uint) internal pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) public pure returns (uint)
	{
		return 719885386;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1649760492;
	}
}
interface C5BBBBBB {
	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
interface C5BBBBB is C5BBBBBB {
	function f1() override
	external view returns (uint);
}
interface C5BBBBBBB is C5BBBBBB {
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface C5BBBB is C5BBBBB, C5BBBBBBB {
	function f1() override(C5BBBBB, C5BBBBBB)
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
contract C5BBB is C5BBBB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1082682476;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1243427070;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 200599677;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1788215331;
	}
}
contract C5BB is C5BBB {
	function f1() external view
	override
	returns (uint)
	{
		return 2127735996;
	}
}
contract C5B is C5BB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1318652553;
	}
}
contract C5 is C5B {
	function f0() external view
	override
	returns (uint)
	{
		return 1273555394;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 425095546;
	}
}
contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1957747793)
			return 1;
		return 0;
	}
}
