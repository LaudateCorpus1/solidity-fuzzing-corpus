pragma solidity >=0.0;
contract C0 {
	function f0() public view
	
	returns (uint)
	{
		return 48271;
	}
	function f1() public view
	
	returns (uint)
	{
		return 182605794;
	}
}
interface C1BBBBBBBB {
	function f0() external pure returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB {
	function f0() override
	external pure returns (uint);
	function f1() external payable returns (uint);
}
interface C1BBBBBB is C1BBBBBBB {
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C1BBBBB is C1BBBBBB {
}
interface C1BBBBBBBBB is C1BBBBBB {
	function f4() external view returns (uint);
}
interface C1BBBB is C1BBBBB, C1BBBBBBBBB {
	function f0() override
	external pure returns (uint);
	function f3() override
	external view returns (uint);
}
contract C1BBB is C1BBBB {
	function f0() external pure
	override
	returns (uint)
	{
		return 1936030137;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 353718330;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1947433875;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 2010567813;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 662405787;
	}
}
contract C1BB is C1BBB {
	function f1() external payable
	override
	returns (uint)
	{
		return 1479919876;
	}
}
contract C1B is C1BB {
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1287522347;
	}
}
contract C1 is C1B {
}
interface I2B {
	function f0() external view returns (uint);
}
interface I2BBBBBB {
	function f0() external view returns (uint);
}
interface I2BBBBB is I2BBBBBB {
	function f0() override
	external view returns (uint);
}
interface I2BBBB is I2BBBBB {
	function f0() override
	external view returns (uint);
}
interface I2BBBBBBBB {
}
interface I2BBBBBBB is I2BBBBB, I2BBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I2BBB is I2BBBB, I2BBBBBBB {
	function f0() override(I2BBBB, I2BBBBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I2BB is I2B, I2BBB {
	function f0() override(I2B, I2BBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I2BBBBBBBBB is I2BB {
	function f0() override
	external view returns (uint);
	function f2() external view returns (uint);
}
interface I2 is I2B, I2BB, I2BBBBBBBBB {
	function f0() override(I2B, I2BB, I2BBBBBBBBB)
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 48271)
				return 1;
			if (tc0.f1() != 182605794)
				return 2;
			C1 tc1 = new C1();
			if (tc1.f0() != 1936030137)
				return 3;
			if (tc1.f1() != 1479919876)
				return 4;
			if (tc1.f2() != 1287522347)
				return 5;
			if (tc1.f3() != 2010567813)
				return 6;
			if (tc1.f4() != 662405787)
				return 7;
			C1B tc2 = new C1B();
			if (tc2.f0() != 1936030137)
				return 8;
			if (tc2.f1() != 1479919876)
				return 9;
			if (tc2.f2() != 1287522347)
				return 10;
			if (tc2.f3() != 2010567813)
				return 11;
			if (tc2.f4() != 662405787)
				return 12;
			C1BB tc3 = new C1BB();
			if (tc3.f0() != 1936030137)
				return 13;
			if (tc3.f1() != 1479919876)
				return 14;
			if (tc3.f2() != 1947433875)
				return 15;
			if (tc3.f3() != 2010567813)
				return 16;
			if (tc3.f4() != 662405787)
				return 17;
			C1BBB tc4 = new C1BBB();
			if (tc4.f0() != 1936030137)
				return 18;
			if (tc4.f1() != 353718330)
				return 19;
			if (tc4.f2() != 1947433875)
				return 20;
			if (tc4.f3() != 2010567813)
				return 21;
			if (tc4.f4() != 662405787)
				return 22;
			return 0;
	}
}
