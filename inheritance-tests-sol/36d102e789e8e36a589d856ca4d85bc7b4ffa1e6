
pragma solidity >=0.0;




interface I0B {

	function f0() external view returns (uint);
}
interface I0 is I0B {

	function f0() override
	external view returns (uint);
}
library L1 {

	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}






interface I2BBBBB {

	function f0() external view returns (uint);
}
interface I2BBBB is I2BBBBB {

	function f0() override
	external view returns (uint);
}
interface I2BBB is I2BBBB {

}
interface I2BB is I2BBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I2B is I2BB {

}
interface I2 is I2B {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
library L3 {

	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
}


interface I4B {

	function f0() external pure returns (uint);
}



interface I4BBBB {

}
interface I4BBB is I4BBBB {

}
interface I4BB is I4B, I4BBB {

	function f1() external payable returns (uint);
}
interface I4 is I4B, I4BB {

	function f0() override
	external pure returns (uint);
}
library L5 {

	function f0(uint) public pure returns (uint)
	{
		return 1714636915;
	}
}




interface I6BBB {

	function f0() external view returns (uint);
}
interface I6BB is I6BBB {

	function f0() override
	external view returns (uint);
}
interface I6B is I6BB {

}
interface I6 is I6B {

	function f1() external view returns (uint);
}


interface I8B {

}
interface I8 is I8B {

}
library L9 {

	function f0(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}


interface I10B {

	function f0() external view returns (uint);
}

interface I10BB is I10B {

	function f0() override
	external view returns (uint);
}
interface I10 is I10B, I10BB {

	function f0() override(I10B, I10BB)
	external view returns (uint);
	function f1() external view returns (uint);
}




interface I11BBB {

	function f0() external view returns (uint);
}
interface I11BB is I11BBB {

}
interface I11B is I11BB {

}
interface I11 is I11B {

	function f1() external view returns (uint);
}



interface I12BB {

	function f0() external payable returns (uint);
}
interface I12B is I12BB {

	function f0() override
	external payable returns (uint);
}
interface I12 is I12B {

}




interface I13BBB {

	function f0() external view returns (uint);
}
interface I13BB is I13BBB {

	function f0() override
	external view returns (uint);
}
interface I13B is I13BB {

	function f0() override
	external view returns (uint);
}
interface I13 is I13B {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}




interface I14BBB {

	function f0() external view returns (uint);
}
interface I14BB is I14BBB {

}
interface I14B is I14BB {

}


interface I14BBBBB {

	function f0() external view returns (uint);
}
interface I14BBBB is I14B, I14BBBBB {

	function f0() override(I14BBB, I14BBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I14 is I14B, I14BBBB {

	function f0() override(I14BBB, I14BBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}

interface I15 {

	function f0() external payable returns (uint);
}





interface I16BBBB {

	function f0() external view returns (uint);
}
interface I16BBB is I16BBBB {

	function f0() override
	external view returns (uint);
}
interface I16BB is I16BBB {

}
interface I16B is I16BB {

	function f0() override
	external view returns (uint);
}

interface I16BBBBB is I16B {

	function f0() override
	external view returns (uint);
	function f1() external pure returns (uint);
}




interface I16BBBBBBBBB {

	function f0() external view returns (uint);
}
interface I16BBBBBBBB is I16BBBBBBBBB {

}
interface I16BBBBBBB is I16BBBBBBBB {

}
interface I16BBBBBB is I16BB, I16BBBBBBB {

	function f0() override(I16BBB, I16BBBBBBBBB)
	external view returns (uint);
}
interface I16 is I16B, I16BBBBB, I16BBBBBB {

	function f0() override(I16B, I16BBBBB, I16BBBBBB)
	external view returns (uint);
	function f1() override
	external pure returns (uint);
}




interface I17BBB {

	function f0() external view returns (uint);
}
interface I17BB is I17BBB {

	function f0() override
	external view returns (uint);
}
interface I17B is I17BB {

}
interface I17 is I17B {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}

contract C18 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1106360392;
	}
}




interface I19BBB {

	function f0() external view returns (uint);
}
interface I19BB is I19BBB {

	function f0() override
	external view returns (uint);
}
interface I19B is I19BB {

	function f0() override
	external view returns (uint);
}


interface I19BBBBB {

	function f0() external view returns (uint);
}
interface I19BBBB is I19BB, I19BBBBB {

	function f0() override(I19BB, I19BBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I19 is I19B, I19BBBB {

	function f0() override(I19B, I19BBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
library L20 {

	function f0(uint) public pure returns (uint)
	{
		return 1025202362;
	}
}
library L21 {

	function f0(uint) private pure returns (uint)
	{
		return 1350490027;
	}
}


contract C {
	using L5 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1714636915)
			return 1;
		return 0;
	}
}

