pragma solidity >=0.0;
interface I0 {
	function f0() external payable returns (uint);
}
interface I1BBB {
	function f0() external view returns (uint);
}
interface I1BBBBB {
	function f0() external view returns (uint);
}
interface I1BBBB is I1BBB, I1BBBBB {
	function f0() override(I1BBB, I1BBBBB)
	external view returns (uint);
}
interface I1BBBBBB is I1BBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I1BBBBBBBB {
	function f0() external view returns (uint);
}
interface I1BBBBBBB is I1BBBBB, I1BBBBBBBB {
	function f0() override(I1BBBBB, I1BBBBBBBB)
	external view returns (uint);
}
interface I1BB is I1BBB, I1BBBB, I1BBBBBB, I1BBBBBBB {
	function f0() override(I1BBB, I1BBBB, I1BBBBBB, I1BBBBBBB)
	external view returns (uint);
	function f2() external view returns (uint);
}
interface I1B is I1BB {
}
interface I1 is I1B {
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
