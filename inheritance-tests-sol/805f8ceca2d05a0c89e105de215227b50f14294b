pragma solidity >=0.0;
contract C0BBBBB {
}
abstract contract C0BBBB is C0BBBBB {
}
contract C0BBB is C0BBBB {
}
contract C0BB is C0BBB {
}
contract C0B is C0BB {
}
interface C0BBBBBBBB {
	function f0() external payable returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB {
}
contract C0BBBBBB is C0BB, C0BBBBBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 854716505;
	}
}
contract C0 is C0B, C0BBBBBB {
}
interface C1BBBBBBBB {
	function f0() external view returns (uint);
}
interface C1BBBBBBB is C1BBBBBBBB {
}
interface C1BBBBBB is C1BBBBBBB {
}
interface C1BBBBB is C1BBBBBB {
}
interface C1BBBB is C1BBBBB {
}
interface C1BBB is C1BBBB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface C1BB is C1BBB {
	function f1() override
	external payable returns (uint);
}
contract C1B is C1BB {
	function f0() virtual external view
	override
	returns (uint)
	{
		return 1402304087;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 2064876628;
	}
}
contract C1 is C1B {
	function f0() external view
	override
	returns (uint)
	{
		return 631416347;
	}
}
library L2 {
	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}
interface C3BBBBBBBBB {
	function f0() external view returns (uint);
	function f1() external pure returns (uint);
}
interface C3BBBBBBBB is C3BBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface C3BBBBBBBBBB is C3BBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f2() external view returns (uint);
}
interface C3BBBBBBB is C3BBBBBBBB, C3BBBBBBBBBB {
	function f0() override(C3BBBBBBBB, C3BBBBBBBBBB)
	external view returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C3BBBBBB is C3BBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external pure returns (uint);
	function f4() override
	external view returns (uint);
}
interface C3BBBBBBBBBBB is C3BBBBBBB {
	function f1() override
	external pure returns (uint);
	function f3() override
	external view returns (uint);
	function f5() external view returns (uint);
}
interface C3BBBBB is C3BBBBBB, C3BBBBBBBBBBB {
	function f0() override(C3BBBBBB, C3BBBBBBB)
	external view returns (uint);
	function f1() override(C3BBBBBB, C3BBBBBBBBBBB)
	external pure returns (uint);
	function f3() override(C3BBBBBBB, C3BBBBBBBBBBB)
	external view returns (uint);
	function f4() override(C3BBBBBB, C3BBBBBBB)
	external view returns (uint);
}
contract C3BBBB is C3BBBBB {
	function f0() external view
	override
	returns (uint)
	{
		return 942409124;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 1951824771;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1239222494;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1500063655;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 978785428;
	}
	function f5() external view
	override
	returns (uint)
	{
		return 276590098;
	}
}
contract C3BBB is C3BBBB {
}
contract C3BB is C3BBB {
}
contract C3B is C3BB {
}
contract C3BBBBBBBBBBBB is C3BB {
}
contract C3BBBBBBBBBBBBBBB {
}
abstract contract C3BBBBBBBBBBBBBB is C3BBBBBBBBBBBBBBB {
}
contract C3BBBBBBBBBBBBB is C3BB, C3BBBBBBBBBBBBBB {
}
contract C3 is C3B, C3BBBBBBBBBBBB, C3BBBBBBBBBBBBB {
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 854716505)
				return 1;
			C0BBBBBB tc1 = new C0BBBBBB();
			if (tc1.f0() != 854716505)
				return 2;
			C1 tc2 = new C1();
			if (tc2.f0() != 631416347)
				return 3;
			if (tc2.f1() != 2064876628)
				return 4;
			C1B tc3 = new C1B();
			if (tc3.f0() != 1402304087)
				return 5;
			if (tc3.f1() != 2064876628)
				return 6;
			C3 tc4 = new C3();
			if (tc4.f0() != 942409124)
				return 7;
			if (tc4.f1() != 1951824771)
				return 8;
			if (tc4.f2() != 1239222494)
				return 9;
			if (tc4.f3() != 1500063655)
				return 10;
			if (tc4.f4() != 978785428)
				return 11;
			if (tc4.f5() != 276590098)
				return 12;
			C3B tc5 = new C3B();
			if (tc5.f0() != 942409124)
				return 13;
			if (tc5.f1() != 1951824771)
				return 14;
			if (tc5.f2() != 1239222494)
				return 15;
			if (tc5.f3() != 1500063655)
				return 16;
			if (tc5.f4() != 978785428)
				return 17;
			if (tc5.f5() != 276590098)
				return 18;
			C3BB tc6 = new C3BB();
			if (tc6.f0() != 942409124)
				return 19;
			if (tc6.f1() != 1951824771)
				return 20;
			if (tc6.f2() != 1239222494)
				return 21;
			if (tc6.f3() != 1500063655)
				return 22;
			if (tc6.f4() != 978785428)
				return 23;
			if (tc6.f5() != 276590098)
				return 24;
			C3BBB tc7 = new C3BBB();
			if (tc7.f0() != 942409124)
				return 25;
			if (tc7.f1() != 1951824771)
				return 26;
			if (tc7.f2() != 1239222494)
				return 27;
			if (tc7.f3() != 1500063655)
				return 28;
			if (tc7.f4() != 978785428)
				return 29;
			if (tc7.f5() != 276590098)
				return 30;
			C3BBBB tc8 = new C3BBBB();
			if (tc8.f0() != 942409124)
				return 31;
			if (tc8.f1() != 1951824771)
				return 32;
			if (tc8.f2() != 1239222494)
				return 33;
			if (tc8.f3() != 1500063655)
				return 34;
			if (tc8.f4() != 978785428)
				return 35;
			if (tc8.f5() != 276590098)
				return 36;
			C3BBBBBBBBBBBB tc9 = new C3BBBBBBBBBBBB();
			if (tc9.f0() != 942409124)
				return 37;
			if (tc9.f1() != 1951824771)
				return 38;
			if (tc9.f2() != 1239222494)
				return 39;
			if (tc9.f3() != 1500063655)
				return 40;
			if (tc9.f4() != 978785428)
				return 41;
			if (tc9.f5() != 276590098)
				return 42;
			C3BBBBBBBBBBBBB tc10 = new C3BBBBBBBBBBBBB();
			if (tc10.f0() != 942409124)
				return 43;
			if (tc10.f1() != 1951824771)
				return 44;
			if (tc10.f2() != 1239222494)
				return 45;
			if (tc10.f3() != 1500063655)
				return 46;
			if (tc10.f4() != 978785428)
				return 47;
			if (tc10.f5() != 276590098)
				return 48;
			return 0;
	}
}
