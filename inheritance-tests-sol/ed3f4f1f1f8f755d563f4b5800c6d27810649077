pragma solidity >=0.0;
interface I0BB {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I0B is I0BB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I0 is I0B {
	function f1() override
	external view returns (uint);
}
interface C1BBB {
	function f0() external payable returns (uint);
}
interface C1BBBBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C1BBBB is C1BBB, C1BBBBB {
	function f0() override(C1BBB, C1BBBBB)
	external payable returns (uint);
}
interface C1BB is C1BBB, C1BBBB {
	function f0() override(C1BBB, C1BBBB)
	external payable returns (uint);
}
interface C1B is C1BB {
}
contract C1 is C1B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 367115401;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1428771907;
	}
}
interface C2BBB {
}
interface C2BBBBB {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
interface C2BBBB is C2BBB, C2BBBBB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
interface C2BB is C2BBB, C2BBBB {
	function f1() override
	external view returns (uint);
}
interface C2B is C2BB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
contract C2 is C2B {
	function f0() external payable
	override
	returns (uint)
	{
		return 777266;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 1785881680;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 281078149;
	}
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
