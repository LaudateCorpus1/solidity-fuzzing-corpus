
pragma solidity >=0.0;






interface C0BBB {

	function f0() external payable returns (uint);
}
interface C0BB is C0BBB {

}
interface C0B is C0BB {

	function f0() override
	external payable returns (uint);
}
contract C0 is C0B {

	function f0() external payable
	override
	returns (uint)
	{
		return 407355683;
	}
}
library L1 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}
library L2 {

	function f0(uint) public view returns (uint)
	{
		return 846930886;
	}
}
library L3 {

	function f0(uint) public view returns (uint)
	{
		return 1681692777;
	}
}
library L4 {

	function f0(uint) external pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) public view returns (uint)
	{
		return 1957747793;
	}
}
library L5 {

	function f0(uint) external pure returns (uint)
	{
		return 424238335;
	}
}




interface C6BBB {

	function f0() external payable returns (uint);
}
interface C6BB is C6BBB {

}
interface C6B is C6BB {

}
contract C6 is C6B {

	function f0() external payable
	override
	returns (uint)
	{
		return 1882556969;
	}
}



interface I7BB {

	function f0() external payable returns (uint);
}




interface I7BBBBBB {

	function f0() external payable returns (uint);
}

interface I7BBBBBBB is I7BBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I7BBBBB is I7BBBBBB, I7BBBBBBB {

	function f0() override(I7BBBBBB, I7BBBBBBB)
	external payable returns (uint);
}
interface I7BBBB is I7BBBBB {

	function f1() override
	external payable returns (uint);
}
interface I7BBB is I7BB, I7BBBB {

	function f0() override(I7BB, I7BBBBB)
	external payable returns (uint);
}
interface I7B is I7BB, I7BBB {

	function f0() override(I7BB, I7BBB)
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I7 is I7B {

	function f2() external payable returns (uint);
}





interface I8BBBB {

	function f0() external payable returns (uint);
}
interface I8BBB is I8BBBB {

}
interface I8BB is I8BBB {

}




interface I8BBBBBBBB {

	function f0() external payable returns (uint);
}
interface I8BBBBBBB is I8BBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I8BBBBBB is I8BBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface I8BBBBB is I8BBB, I8BBBBBB {

	function f0() override(I8BBBB, I8BBBBBB)
	external payable returns (uint);
}
interface I8B is I8BB, I8BBBBB {

	function f0() override(I8BBBB, I8BBBBB)
	external payable returns (uint);
}


interface I8BBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface I8BBBBBBBBB is I8BBBBB, I8BBBBBBBBBB {

	function f0() override(I8BBBBB, I8BBBBBBBBBB)
	external payable returns (uint);
}
interface I8 is I8B, I8BBBBBBBBB {

	function f0() override(I8B, I8BBBBBBBBB)
	external payable returns (uint);
	function f1() external view returns (uint);
}


contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1681692777)
			return 1;
		return 0;
	}
}

