
pragma solidity >=0.0;






interface C1BBB {

	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface C1BB is C1BBB {

}
interface C1B is C1BB {

	function f0() override
	external view returns (uint);
}
contract C1 is C1B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1356035169;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1169893009;
	}
}



interface I2BB {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}
interface I2B is I2BB {

	function f2() external payable returns (uint);
}
interface I2 is I2B {

	function f0() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}





interface C4BBBB {

	function f0() external payable returns (uint);
}
interface C4BBB is C4BBBB {

}
abstract contract C4BB is C4BBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 965828290;
	}
}
contract C4B is C4BB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 176859165;
	}
}
contract C4 is C4B {

}


interface C5B {

	function f0() external view returns (uint);
}
contract C5 is C5B {

	function f0() external view
	override
	returns (uint)
	{
		return 2079025730;
	}
	function f1() public view
	
	returns (uint)
	{
		return 445221226;
	}
}



interface C6BB {

	function f0() external payable returns (uint);
}
contract C6B is C6BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 552862047;
	}
	function f1() public view
	
	returns (uint)
	{
		return 424589468;
	}
}
contract C6 is C6B {

}




interface C8BBB {

	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface C8BB is C8BBB {

	function f0() override
	external view returns (uint);
}
interface C8B is C8BB {

}
contract C8 is C8B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 528691176;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1150688209;
	}
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

