pragma solidity >=0.0;
interface I0BBBBBB {
	function f0() external payable returns (uint);
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface I0BBBBB is I0BBBBBB {
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
interface I0BBBB is I0BBBBB {
}
interface I0BBB is I0BBBB {
}
interface I0BB is I0BBB {
	function f3() external payable returns (uint);
}
interface I0B is I0BB {
	function f1() override
	external view returns (uint);
}
interface I0 is I0B {
	function f1() override
	external view returns (uint);
}
library L1 {
	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}
interface I2BB {
	function f0() external payable returns (uint);
}
interface I2B is I2BB {
	function f0() override
	external payable returns (uint);
}
interface I2 is I2B {
	function f1() external payable returns (uint);
}
library L3 {
	function f0(uint) external pure returns (uint)
	{
		return 846930886;
	}
}
interface I4BBB {
	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I4BB is I4BBB {
	function f1() override
	external payable returns (uint);
}
interface I4B is I4BB {
	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I4 is I4B {
	function f0() override
	external payable returns (uint);
}
contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}
