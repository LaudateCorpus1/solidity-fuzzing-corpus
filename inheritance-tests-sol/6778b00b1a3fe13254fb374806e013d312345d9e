pragma solidity >=0.0;
contract C0 {
	function f0() public view
	
	returns (uint)
	{
		return 1073765959;
	}
}
contract C1 {
	function f0() public view
	
	returns (uint)
	{
		return 91302897;
	}
}
contract C3 {
	function f0() public view
	
	returns (uint)
	{
		return 2031102142;
	}
}
contract C5 {
	function f0() public view
	
	returns (uint)
	{
		return 1626692904;
	}
	function f1() public payable
	
	returns (uint)
	{
		return 1501100076;
	}
}
library L6 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}
interface I7B {
	function f0() external payable returns (uint);
}
interface I7BB is I7B {
	function f1() external view returns (uint);
}
interface I7 is I7B, I7BB {
}
interface I8 {
	function f0() external payable returns (uint);
}
library L9 {
	function f0(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}
interface I10BBBB {
}
interface I10BBB is I10BBBB {
	function f0() external view returns (uint);
}
interface I10BB is I10BBB {
	function f0() override
	external view returns (uint);
}
interface I10B is I10BB {
	function f0() override
	external view returns (uint);
}
interface I10BBBBBBBB {
}
interface I10BBBBBBB is I10BBBBBBBB {
	function f0() external view returns (uint);
}
interface I10BBBBBB is I10BBBBBBB {
}
interface I10BBBBB is I10BB, I10BBBBBB {
	function f0() override(I10BB, I10BBBBBBB)
	external view returns (uint);
}
interface I10BBBBBBBBBBBBBB {
}
interface I10BBBBBBBBBBBBB is I10BBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I10BBBBBBBBBBBB is I10BBBBBBBBBBBBB {
}
interface I10BBBBBBBBBBBBBBBBBB {
}
interface I10BBBBBBBBBBBBBBBBB is I10BBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I10BBBBBBBBBBBBBBBB is I10BBBBBBBBBBBBBBBBB {
}
interface I10BBBBBBBBBBBBBBB is I10BBBBBBBBBBBB, I10BBBBBBBBBBBBBBBB {
	function f0() override(I10BBBBBBBBBBBBB, I10BBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I10BBBBBBBBBBB is I10BBBBBBBBBBBB, I10BBBBBBBBBBBBBBB {
	function f0() override(I10BBBBBBBBBBBBB, I10BBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I10BBBBBBBBBB is I10BBBBBBBBBBB {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I10BBBBBBBBB is I10BBBBB, I10BBBBBBBBBB {
	function f0() override(I10BBBBB, I10BBBBBBBBBB)
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
interface I10BBBBBBBBBBBBBBBBBBBBBBBB {
}
interface I10BBBBBBBBBBBBBBBBBBBBBBB is I10BBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() external view returns (uint);
}
interface I10BBBBBBBBBBBBBBBBBBBBBB is I10BBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I10BBBBBBBBBBBBBBBBBBBBBBBBBB {
}
interface I10BBBBBBBBBBBBBBBBBBBBBBBBB is I10BBBBBBBBBBBBBBBBBBBBBBB, I10BBBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override
	external view returns (uint);
}
interface I10BBBBBBBBBBBBBBBBBBBBB is I10BBBBBBBBBBBBBBBBBBBBBB, I10BBBBBBBBBBBBBBBBBBBBBBBBB {
	function f0() override(I10BBBBBBBBBBBBBBBBBBBBBB, I10BBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I10BBBBBBBBBBBBBBBBBBBB is I10BBBBBBBBBBBBBBBBBBBBB {
	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I10BBBBBBBBBBBBBBBBBBB is I10BB, I10BBBBBBBBBBBBBBBBBBBB {
	function f0() override(I10BB, I10BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface I10 is I10B, I10BBBBB, I10BBBBBBBBB, I10BBBBBBBBBBBBBBBBBBB {
	function f0() override(I10B, I10BBBBB, I10BBBBBBBBB, I10BBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I10BBBBBBBBBB, I10BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I10BBBBBBBBB, I10BBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
}
interface C11BBBB {
	function f0() external payable returns (uint);
}
interface C11BBB is C11BBBB {
	function f0() override
	external payable returns (uint);
}
contract C11BB is C11BBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 194715758;
	}
}
contract C11B is C11BB {
}
contract C11 is C11B {
	function f1() public view
	
	returns (uint)
	{
		return 471204562;
	}
}
contract C {
	using L9 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1957747793)
			return 1;
		return 0;
	}
}
