
pragma solidity >=0.0;







interface C0BBBB {

	function f0() external view returns (uint);
}
contract C0BBB is C0BBBB {

	function f0() external view
	override
	returns (uint)
	{
		return 182605794;
	}
	function f1() external pure
	
	returns (uint)
	{
		return 1291394886;
	}
}
contract C0BB is C0BBB {

}
contract C0B is C0BB {

}
contract C0 is C0B {

}
library L2 {

	function f0(uint) internal view returns (uint)
	{
		return 1804289383;
	}
}

contract C3 {

	function f0() public view
	
	returns (uint)
	{
		return 854716505;
	}
	function f1() public view
	
	returns (uint)
	{
		return 564586691;
	}
}
library L4 {

	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
}





interface I5BBBB {

	function f0() external payable returns (uint);
}

interface I5BBBBB is I5BBBB {

	function f1() external payable returns (uint);
}
interface I5BBB is I5BBBB, I5BBBBB {

}
interface I5BB is I5BBB {

}


interface I5BBBBBBB {

}
interface I5BBBBBB is I5BBB, I5BBBBBBB {

}
interface I5B is I5BB, I5BBBBBB {

	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I5 is I5B {

	function f1() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
	function f3() external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 182605794)
				return 1;
			if (tc0.f1() != 1291394886)
				return 2;
			C0B tc1 = new C0B();
			if (tc1.f0() != 182605794)
				return 3;
			if (tc1.f1() != 1291394886)
				return 4;
			C0BB tc2 = new C0BB();
			if (tc2.f0() != 182605794)
				return 5;
			if (tc2.f1() != 1291394886)
				return 6;
			C0BBB tc3 = new C0BBB();
			if (tc3.f0() != 182605794)
				return 7;
			if (tc3.f1() != 1291394886)
				return 8;
			C3 tc4 = new C3();
			if (tc4.f0() != 854716505)
				return 9;
			if (tc4.f1() != 564586691)
				return 10;
			return 0;
	}
}

