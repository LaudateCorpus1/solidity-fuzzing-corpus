
pragma solidity >=0.0;




interface I0B {

	function f0() external payable returns (uint);
}
interface I0 is I0B {

}
library L1 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}



interface I2BB {

	function f0() external view returns (uint);
}
interface I2B is I2BB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I2 is I2B {

}



interface I3BB {

	function f0() external view returns (uint);
}
interface I3B is I3BB {

	function f1() external view returns (uint);
}
interface I3 is I3B {

}



interface I4BB {

	function f0() external view returns (uint);
}
interface I4B is I4BB {

	function f1() external view returns (uint);
}
interface I4 is I4B {

}



interface I5BB {

	function f0() external view returns (uint);
}
interface I5B is I5BB {

	function f1() external payable returns (uint);
}
interface I5 is I5B {

	function f1() override
	external payable returns (uint);
}



interface I6BB {

	function f0() external view returns (uint);
}



interface I6BBBBB {

	function f0() external view returns (uint);
}
interface I6BBBB is I6BBBBB {

	function f1() external payable returns (uint);
}


interface I6BBBBBBB {

	function f0() external view returns (uint);
}
interface I6BBBBBB is I6BBBBB, I6BBBBBBB {

	function f0() override(I6BBBBB, I6BBBBBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I6BBB is I6BB, I6BBBB, I6BBBBBB {

	function f0() override(I6BB, I6BBBBB, I6BBBBBB)
	external view returns (uint);
	function f1() override(I6BBBB, I6BBBBBB)
	external payable returns (uint);
}
interface I6B is I6BB, I6BBB {

	function f0() override(I6BB, I6BBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I6 is I6B {

	function f1() override
	external payable returns (uint);
}



interface I7BB {

	function f0() external view returns (uint);
}
interface I7B is I7BB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}

interface I7BBB is I7BB {

	function f1() external payable returns (uint);
}
interface I7 is I7B, I7BBB {

	function f0() override(I7B, I7BB)
	external view returns (uint);
	function f1() override(I7B, I7BBB)
	external payable returns (uint);
}



interface I8BB {

	function f0() external view returns (uint);
}
interface I8B is I8BB {

	function f1() external payable returns (uint);
}
interface I8 is I8B {

	function f1() override
	external payable returns (uint);
}


contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

