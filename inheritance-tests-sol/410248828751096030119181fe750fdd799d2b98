
pragma solidity >=0.0;



contract C0 {

	function f0() external pure
	
	returns (uint)
	{
		return 1575004944;
	}
	function f1() external pure
	
	returns (uint)
	{
		return 1847580730;
	}
}
library L1 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}
library L2 {

	function f0(uint) public pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1681692777;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1714636915;
	}
}


interface I3B {

	function f0() external payable returns (uint);
}

interface I3BB is I3B {

	function f1() external view returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface I3 is I3B, I3BB {

	function f0() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}

contract C4 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 2062763411;
	}
	function f1() external pure
	
	returns (uint)
	{
		return 1425835579;
	}
	function f2() private pure
	
	returns (uint)
	{
		return 1805831206;
	}
	function f3() external pure
	
	returns (uint)
	{
		return 769429449;
	}
}



interface C5BB {

	function f0() external view returns (uint);
}
interface C5B is C5BB {

	function f0() override
	external view returns (uint);
}
contract C5 is C5B {

	function f0() external view
	override
	returns (uint)
	{
		return 1379193482;
	}
	function f1() external pure
	
	returns (uint)
	{
		return 908028975;
	}
	function f2() external pure
	
	returns (uint)
	{
		return 1325416955;
	}
}
library L6 {

	function f0(uint) external pure returns (uint)
	{
		return 424238335;
	}
	function f1(uint) private pure returns (uint)
	{
		return 719885386;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1649760492;
	}
}


interface C7B {

	function f0() external payable returns (uint);
}
contract C7 is C7B {

	function f0() external payable
	override
	returns (uint)
	{
		return 45373597;
	}
	function f1() private pure
	
	returns (uint)
	{
		return 1943064494;
	}
	function f2() external pure
	
	returns (uint)
	{
		return 170423502;
	}
	function f3() external pure
	
	returns (uint)
	{
		return 1650497032;
	}
}



abstract contract C8BB {

	function f0() virtual public view
	
	returns (uint);
}
contract C8B is C8BB {

	function f0() virtual public view
	override
	returns (uint)
	{
		return 1096328782;
	}
}
contract C8 is C8B {

}








interface C9BBBBBBB {

	function f0() external view returns (uint);
}
interface C9BBBBBB is C9BBBBBBB {

}
interface C9BBBBB is C9BBBBBB {

	function f1() external payable returns (uint);
}
interface C9BBBB is C9BBBBB {

	function f0() override
	external view returns (uint);
}
interface C9BBB is C9BBBB {

	function f0() override
	external view returns (uint);
}
contract C9BB is C9BBB {

	function f0() external view
	override
	returns (uint)
	{
		return 1932363884;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1488084345;
	}
}
contract C9B is C9BB {

}
contract C9 is C9B {

}


contract C {
	using L1 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

