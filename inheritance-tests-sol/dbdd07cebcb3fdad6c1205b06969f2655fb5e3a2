
pragma solidity >=0.0;



contract C0 {

	function f0() public payable
	
	returns (uint)
	{
		return 1575004944;
	}
}

contract C1 {

	function f0() public view
	
	returns (uint)
	{
		return 1847580730;
	}
}


contract C2B {

}









interface C2BBBBBBBBBB {

	function f0() external payable returns (uint);
	function f1() external pure returns (uint);
}
interface C2BBBBBBBBB is C2BBBBBBBBBB {

	function f1() override
	external pure returns (uint);
}

interface C2BBBBBBBBBBB is C2BBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external pure returns (uint);
	function f2() external payable returns (uint);
}
interface C2BBBBBBBB is C2BBBBBBBBB, C2BBBBBBBBBBB {

	function f0() override(C2BBBBBBBBBB, C2BBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(C2BBBBBBBBB, C2BBBBBBBBBBB)
	external pure returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C2BBBBBBB is C2BBBBBBBB {

	function f3() override
	external view returns (uint);
}

interface C2BBBBBBBBBBBB is C2BBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
	function f5() external view returns (uint);
}
interface C2BBBBBB is C2BBBBBBB, C2BBBBBBBBBBBB {

	function f0() override(C2BBBBBBBB, C2BBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(C2BBBBBBBBBBB, C2BBBBBBBBBBBB)
	external payable returns (uint);
	function f3() override(C2BBBBBBB, C2BBBBBBBB)
	external view returns (uint);
	function f5() override
	external view returns (uint);
}
contract C2BBBBB is C2BBBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1646411619;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 562351922;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 447122901;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 730512509;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 1654044397;
	}
	function f5() virtual external view
	override
	returns (uint)
	{
		return 148120656;
	}
}
contract C2BBBB is C2BBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 552744463;
	}
	function f5() external view
	override
	returns (uint)
	{
		return 1488084345;
	}
}
contract C2BBB is C2BBBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 518008164;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1373258228;
	}
}
contract C2BB is C2B, C2BBB {

	function f1() external pure
	override
	returns (uint)
	{
		return 904623502;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 1630082519;
	}
}
contract C2 is C2B, C2BB {

}










interface C3BBBBBBBBB {

}




interface C3BBBBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface C3BBBBBBBBBBBB is C3BBBBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface C3BBBBBBBBBBB is C3BBBBBBBBBBBB {

}
interface C3BBBBBBBBBB is C3BBBBBBBBB, C3BBBBBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface C3BBBBBBBB is C3BBBBBBBBB, C3BBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface C3BBBBBBB is C3BBBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface C3BBBBBB is C3BBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}

interface C3BBBBBBBBBBBBBB is C3BBBBBBB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface C3BBBBB is C3BBBBBB, C3BBBBBBBBBBBBBB {

	function f0() override(C3BBBBBB, C3BBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override(C3BBBBBB, C3BBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() external pure returns (uint);
	function f4() external pure returns (uint);
	function f5() external payable returns (uint);
	function f6() external payable returns (uint);
}
interface C3BBBB is C3BBBBB {

	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f4() override
	external pure returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external payable returns (uint);
}
interface C3BBB is C3BBBB {

	function f0() override
	external payable returns (uint);
	function f4() override
	external pure returns (uint);
	function f6() override
	external payable returns (uint);
	function f7() external payable returns (uint);
	function f8() external payable returns (uint);
}
interface C3BB is C3BBB {

	function f0() override
	external payable returns (uint);
	function f3() override
	external pure returns (uint);
	function f5() override
	external payable returns (uint);
	function f6() override
	external payable returns (uint);
}

interface C3BBBBBBBBBBBBBBB is C3BBB {

	function f0() override
	external payable returns (uint);
	function f7() override
	external payable returns (uint);
	function f9() external view returns (uint);
	function f10() external view returns (uint);
}
interface C3B is C3BB, C3BBBBBBBBBBBBBBB {

	function f0() override(C3BB, C3BBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
	function f3() override(C3BB, C3BBBBB)
	external pure returns (uint);
	function f5() override(C3BB, C3BBBB)
	external payable returns (uint);
	function f6() override(C3BB, C3BBB)
	external payable returns (uint);
	function f7() override(C3BBB, C3BBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f10() override
	external view returns (uint);
	function f11() external view returns (uint);
}

interface C3BBBBBBBBBBBBBBBB is C3B {

	function f1() override
	external view returns (uint);
	function f3() override
	external pure returns (uint);
	function f4() override
	external pure returns (uint);
	function f5() override
	external payable returns (uint);
	function f9() override
	external view returns (uint);
	function f10() override
	external view returns (uint);
	function f12() external view returns (uint);
}
contract C3 is C3B, C3BBBBBBBBBBBBBBBB {

	function f0() virtual external payable
	override
	returns (uint)
	{
		return 577012872;
	}
	function f1() virtual external view
	override(C3BBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 1406026512;
	}
	function f2() virtual external payable
	override
	returns (uint)
	{
		return 1489232769;
	}
	function f3() virtual external pure
	override(C3BBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 1881273109;
	}
	function f4() virtual external pure
	override(C3BBBBBBBBBBBBBBBB, C3BBB)
	returns (uint)
	{
		return 2074585973;
	}
	function f5() external payable
	override(C3BBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 521659040;
	}
	function f6() external payable
	override
	returns (uint)
	{
		return 1487795063;
	}
	function f7() external payable
	override
	returns (uint)
	{
		return 65455896;
	}
	function f8() external payable
	override
	returns (uint)
	{
		return 317315299;
	}
	function f9() external view
	override(C3BBBBBBBBBBBBBBBB, C3BBBBBBBBBBBBBBB)
	returns (uint)
	{
		return 1694452345;
	}
	function f10() virtual external view
	override(C3BBBBBBBBBBBBBBBB, C3B)
	returns (uint)
	{
		return 1830250426;
	}
	function f11() external view
	override
	returns (uint)
	{
		return 52974647;
	}
	function f12() external view
	override
	returns (uint)
	{
		return 2097923457;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1575004944)
				return 1;
			C1 tc1 = new C1();
			if (tc1.f0() != 1847580730)
				return 2;
			C2 tc2 = new C2();
			if (tc2.f0() != 518008164)
				return 3;
			if (tc2.f1() != 904623502)
				return 4;
			if (tc2.f2() != 1630082519)
				return 5;
			if (tc2.f3() != 730512509)
				return 6;
			if (tc2.f4() != 1654044397)
				return 7;
			if (tc2.f5() != 1488084345)
				return 8;
			C2BB tc3 = new C2BB();
			if (tc3.f0() != 518008164)
				return 9;
			if (tc3.f1() != 904623502)
				return 10;
			if (tc3.f2() != 1630082519)
				return 11;
			if (tc3.f3() != 730512509)
				return 12;
			if (tc3.f4() != 1654044397)
				return 13;
			if (tc3.f5() != 1488084345)
				return 14;
			C2BBB tc4 = new C2BBB();
			if (tc4.f0() != 518008164)
				return 15;
			if (tc4.f1() != 562351922)
				return 16;
			if (tc4.f2() != 1373258228)
				return 17;
			if (tc4.f3() != 730512509)
				return 18;
			if (tc4.f4() != 1654044397)
				return 19;
			if (tc4.f5() != 1488084345)
				return 20;
			C2BBBB tc5 = new C2BBBB();
			if (tc5.f0() != 552744463)
				return 21;
			if (tc5.f1() != 562351922)
				return 22;
			if (tc5.f2() != 447122901)
				return 23;
			if (tc5.f3() != 730512509)
				return 24;
			if (tc5.f4() != 1654044397)
				return 25;
			if (tc5.f5() != 1488084345)
				return 26;
			C2BBBBB tc6 = new C2BBBBB();
			if (tc6.f0() != 1646411619)
				return 27;
			if (tc6.f1() != 562351922)
				return 28;
			if (tc6.f2() != 447122901)
				return 29;
			if (tc6.f3() != 730512509)
				return 30;
			if (tc6.f4() != 1654044397)
				return 31;
			if (tc6.f5() != 148120656)
				return 32;
			C3 tc7 = new C3();
			if (tc7.f0() != 577012872)
				return 33;
			if (tc7.f1() != 1406026512)
				return 34;
			if (tc7.f10() != 1830250426)
				return 35;
			if (tc7.f11() != 52974647)
				return 36;
			if (tc7.f12() != 2097923457)
				return 37;
			if (tc7.f2() != 1489232769)
				return 38;
			if (tc7.f3() != 1881273109)
				return 39;
			if (tc7.f4() != 2074585973)
				return 40;
			if (tc7.f5() != 521659040)
				return 41;
			if (tc7.f6() != 1487795063)
				return 42;
			if (tc7.f7() != 65455896)
				return 43;
			if (tc7.f8() != 317315299)
				return 44;
			if (tc7.f9() != 1694452345)
				return 45;
			return 0;
	}
}

