
pragma solidity >=0.0;





interface I0BB {

}
interface I0B is I0BB {

}
interface I0 is I0B {

	function f0() external view returns (uint);
}

interface I1 {

	function f0() external pure returns (uint);
}
library L2 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}




interface I3BBB {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I3BB is I3BBB {

	function f0() override
	external payable returns (uint);
}
interface I3B is I3BB {

}


interface I3BBBBB {

	function f0() external payable returns (uint);
}
interface I3BBBB is I3B, I3BBBBB {

	function f0() override(I3BB, I3BBBBB)
	external payable returns (uint);
	function f2() external payable returns (uint);
}
interface I3 is I3B, I3BBBB {

	function f0() override(I3BB, I3BBBB)
	external payable returns (uint);
}






interface I4BBBBB {

	function f0() external view returns (uint);
}
interface I4BBBB is I4BBBBB {

}
interface I4BBB is I4BBBB {

	function f1() external payable returns (uint);
}
interface I4BB is I4BBB {

	function f1() override
	external payable returns (uint);
}
interface I4B is I4BB {

	function f1() override
	external payable returns (uint);
}
interface I4 is I4B {

	function f0() override
	external view returns (uint);
}





interface C5BBBB {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface C5BBB is C5BBBB {

	function f1() override
	external payable returns (uint);
}
interface C5BB is C5BBB {

	function f0() override
	external payable returns (uint);
}
contract C5B is C5BB {

	function f0() external payable
	override
	returns (uint)
	{
		return 890442452;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1105724094;
	}
}
abstract contract C5 is C5B {

}

interface I6 {

	function f0() external view returns (uint);
}

contract C7 {

	function f0() external pure
	
	returns (uint)
	{
		return 1696049367;
	}
	function f1() internal pure
	
	returns (uint)
	{
		return 1479919876;
	}
}




interface I8BBB {

}
interface I8BB is I8BBB {

	function f0() external view returns (uint);
}
interface I8B is I8BB {

}



interface I8BBBBBB {

	function f0() external view returns (uint);
}
interface I8BBBBB is I8BBBBBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I8BBBB is I8BB, I8BBBBB {

	function f0() override(I8BB, I8BBBBB)
	external view returns (uint);
}
interface I8 is I8B, I8BBBB {

	function f0() override(I8BB, I8BBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() external payable returns (uint);
}




interface I9BBB {

}
interface I9BB is I9BBB {

	function f0() external view returns (uint);
}
interface I9B is I9BB {

	function f1() external payable returns (uint);
}
interface I9 is I9B {

	function f1() override
	external payable returns (uint);
}


contract C {
	using L2 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1804289383)
			return 1;
		return 0;
	}
}

