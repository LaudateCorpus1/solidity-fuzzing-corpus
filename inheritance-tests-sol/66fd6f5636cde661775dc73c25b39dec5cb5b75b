
pragma solidity >=0.0;



interface I0 {

	function f0() external view returns (uint);
}


contract C1B {

	function f0() public view
	
	returns (uint)
	{
		return 48271;
	}
}
contract C1 is C1B {

}


interface I2B {

	function f0() external view returns (uint);
}



interface I2BBBB {

	function f0() external view returns (uint);
}


interface I2BBBBBB {

}
interface I2BBBBB is I2BBBB, I2BBBBBB {

	function f0() override
	external view returns (uint);
}
interface I2BBB is I2BBBB, I2BBBBB {

	function f0() override(I2BBBB, I2BBBBB)
	external view returns (uint);
}
interface I2BB is I2B, I2BBB {

	function f0() override(I2B, I2BBB)
	external view returns (uint);
}
interface I2 is I2B, I2BB {

	function f0() override(I2B, I2BB)
	external view returns (uint);
}




interface I3BBB {

	function f0() external payable returns (uint);
}
interface I3BB is I3BBB {

	function f1() external payable returns (uint);
}
interface I3B is I3BB {

	function f2() external view returns (uint);
}


interface I3BBBBB {

	function f0() external payable returns (uint);
}
interface I3BBBB is I3BB, I3BBBBB {

	function f0() override(I3BBB, I3BBBBB)
	external payable returns (uint);
}
interface I3 is I3B, I3BBBB {

	function f0() override(I3BBB, I3BBBB)
	external payable returns (uint);
}









interface C4BBBBBBBB {

	function f0() external view returns (uint);
	function f1() external pure returns (uint);
}
interface C4BBBBBBB is C4BBBBBBBB {

}
interface C4BBBBBB is C4BBBBBBB {

	function f0() override
	external view returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C4BBBBB is C4BBBBBB {

	function f0() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
}

interface C4BBBBBBBBB is C4BBBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external pure returns (uint);
	function f2() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface C4BBBB is C4BBBBB, C4BBBBBBBBB {

	function f0() override(C4BBBBB, C4BBBBBBBBB)
	external view returns (uint);
	function f1() override(C4BBBBBBBB, C4BBBBBBBBB)
	external pure returns (uint);
	function f2() override(C4BBBBB, C4BBBBBBBBB)
	external view returns (uint);
	function f4() override
	external view returns (uint);
}
contract C4BBB is C4BBBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 849178936;
	}
	function f1() external pure
	override
	returns (uint)
	{
		return 1479919876;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1272185027;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1308858262;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1287522347;
	}
}
contract C4BB is C4BBB {

	function f0() external view
	override
	returns (uint)
	{
		return 153892771;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 1675824860;
	}
}
contract C4B is C4BB {

}
contract C4 is C4B {

}

contract C5 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1324346645;
	}
}


interface I6B {

	function f0() external payable returns (uint);
	function f1() external view returns (uint);
}




interface I6BBBBB {

	function f0() external payable returns (uint);
}
interface I6BBBB is I6BBBBB {

}
interface I6BBB is I6BBBB {

}
interface I6BB is I6B, I6BBB {

	function f0() override(I6B, I6BBBBB)
	external payable returns (uint);
}
interface I6 is I6B, I6BB {

	function f0() override(I6B, I6BB)
	external payable returns (uint);
}
library L7 {

	function f0(uint) external pure returns (uint)
	{
		return 424238335;
	}
}


contract C8B {

	function f0() public view
	
	returns (uint)
	{
		return 352020689;
	}
}
contract C8 is C8B {

}

interface I9 {

	function f0() external view returns (uint);
}


contract C10B {

	function f0() public view
	
	returns (uint)
	{
		return 1500063655;
	}
}
contract C10 is C10B {

}


interface C11B {

	function f0() external view returns (uint);
	function f1() external view returns (uint);
}
contract C11 is C11B {

	function f0() external view
	override
	returns (uint)
	{
		return 978785428;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 276590098;
	}
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 48271)
				return 1;
			C10 tc1 = new C10();
			if (tc1.f0() != 1500063655)
				return 2;
			C10B tc2 = new C10B();
			if (tc2.f0() != 1500063655)
				return 3;
			C11 tc3 = new C11();
			if (tc3.f0() != 978785428)
				return 4;
			if (tc3.f1() != 276590098)
				return 5;
			C1B tc4 = new C1B();
			if (tc4.f0() != 48271)
				return 6;
			C4 tc5 = new C4();
			if (tc5.f0() != 153892771)
				return 7;
			if (tc5.f1() != 1479919876)
				return 8;
			if (tc5.f2() != 1272185027)
				return 9;
			if (tc5.f3() != 1308858262)
				return 10;
			if (tc5.f4() != 1675824860)
				return 11;
			C4B tc6 = new C4B();
			if (tc6.f0() != 153892771)
				return 12;
			if (tc6.f1() != 1479919876)
				return 13;
			if (tc6.f2() != 1272185027)
				return 14;
			if (tc6.f3() != 1308858262)
				return 15;
			if (tc6.f4() != 1675824860)
				return 16;
			C4BB tc7 = new C4BB();
			if (tc7.f0() != 153892771)
				return 17;
			if (tc7.f1() != 1479919876)
				return 18;
			if (tc7.f2() != 1272185027)
				return 19;
			if (tc7.f3() != 1308858262)
				return 20;
			if (tc7.f4() != 1675824860)
				return 21;
			C4BBB tc8 = new C4BBB();
			if (tc8.f0() != 849178936)
				return 22;
			if (tc8.f1() != 1479919876)
				return 23;
			if (tc8.f2() != 1272185027)
				return 24;
			if (tc8.f3() != 1308858262)
				return 25;
			if (tc8.f4() != 1287522347)
				return 26;
			C5 tc9 = new C5();
			if (tc9.f0() != 1324346645)
				return 27;
			C8 tc10 = new C8();
			if (tc10.f0() != 352020689)
				return 28;
			C8B tc11 = new C8B();
			if (tc11.f0() != 352020689)
				return 29;
			return 0;
	}
}

