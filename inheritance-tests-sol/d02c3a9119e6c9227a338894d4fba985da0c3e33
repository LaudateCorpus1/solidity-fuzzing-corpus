
pragma solidity >=0.0;



contract C0 {

	function f0() virtual public view
	
	returns (uint)
	{
		return 5889062;
	}
}
library L1 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}
library L2 {

	function f0(uint) external pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}


interface C3B {

	function f0() external view returns (uint);
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}

interface C3BB is C3B {

	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}

interface C3BBB is C3B {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external view returns (uint);
}


interface C3BBBBB {

}
interface C3BBBB is C3B, C3BBBBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
contract C3 is C3B, C3BB, C3BBB, C3BBBB {

	function f0() external view
	override(C3BBB, C3B, C3BBBB)
	returns (uint)
	{
		return 659361917;
	}
	function f1() virtual external view
	override(C3BB, C3B, C3BBB, C3BBBB)
	returns (uint)
	{
		return 1448381872;
	}
	function f2() external view
	override(C3BB, C3B, C3BBB)
	returns (uint)
	{
		return 1429890501;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 1870866689;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1259796794;
	}
}


interface C4B {

	function f0() external view returns (uint);
}

interface C4BB is C4B {

	function f1() external view returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}


interface C4BBBB {

	function f0() external view returns (uint);
}
interface C4BBB is C4B, C4BBBB {

	function f0() override(C4B, C4BBBB)
	external view returns (uint);
}
contract C4 is C4B, C4BB, C4BBB {

	function f0() virtual external view
	override(C4BBB, C4B)
	returns (uint)
	{
		return 161598524;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 587750710;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 766918086;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 311420103;
	}
}
library L6 {

	function f0(uint) external pure returns (uint)
	{
		return 1350490027;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 783368690;
	}
}
library L7 {

	function f0(uint) internal view returns (uint)
	{
		return 1102520059;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 2044897763;
	}
}
library L8 {

	function f0(uint) internal pure returns (uint)
	{
		return 1967513926;
	}
}
library L9 {

	function f0(uint) internal pure returns (uint)
	{
		return 1365180540;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1540383426;
	}
}
library L10 {

	function f0(uint) private pure returns (uint)
	{
		return 304089172;
	}
}
library L11 {

	function f0(uint) internal pure returns (uint)
	{
		return 1303455736;
	}
}
library L12 {

	function f0(uint) internal view returns (uint)
	{
		return 35005211;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 521595368;
	}
	function f2(uint) internal view returns (uint)
	{
		return 294702567;
	}
	function f3(uint) public pure returns (uint)
	{
		return 1726956429;
	}
	function f4(uint) public view returns (uint)
	{
		return 336465782;
	}
	function f5(uint) internal view returns (uint)
	{
		return 861021530;
	}
	function f6(uint) private pure returns (uint)
	{
		return 278722862;
	}
	function f7(uint) internal view returns (uint)
	{
		return 233665123;
	}
	function f8(uint) private view returns (uint)
	{
		return 2145174067;
	}
}


contract C {
	using L6 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 1350490027)
			return 1;
		return 0;
	}
}

