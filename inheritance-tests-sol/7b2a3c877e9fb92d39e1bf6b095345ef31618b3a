pragma solidity >=0.0;
interface I0BBB {
}
interface I0BB is I0BBB {
}
interface I0B is I0BB {
}
interface I0 is I0B {
}
interface I1BBBBBBB {
	function f0() external payable returns (uint);
}
interface I1BBBBBB is I1BBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I1BBBBB is I1BBBBBB {
}
interface I1BBBB is I1BBBBB {
}
interface I1BBB is I1BBBB {
}
interface I1BB is I1BBB {
}
interface I1B is I1BB {
}
interface I1 is I1B {
	function f1() external payable returns (uint);
	function f2() external payable returns (uint);
	function f3() external view returns (uint);
}
interface I2BBB {
}
interface I2BB is I2BBB {
}
interface I2B is I2BB {
}
interface I2 is I2B {
}
interface I3BBBB {
	function f0() external payable returns (uint);
}
interface I3BBB is I3BBBB {
	function f0() override
	external payable returns (uint);
}
interface I3BB is I3BBB {
}
interface I3B is I3BB {
}
interface I3BBBBBB {
	function f0() external payable returns (uint);
}
interface I3BBBBB is I3BB, I3BBBBBB {
	function f0() override(I3BBB, I3BBBBBB)
	external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I3 is I3B, I3BBBBB {
	function f0() override(I3BBB, I3BBBBB)
	external payable returns (uint);
	function f2() external payable returns (uint);
	function f3() external payable returns (uint);
}
interface I4BBBB {
	function f0() external payable returns (uint);
}
interface I4BBB is I4BBBB {
	function f0() override
	external payable returns (uint);
}
interface I4BB is I4BBB {
	function f0() override
	external payable returns (uint);
}
interface I4B is I4BB {
}
interface I4BBBBB is I4B {
	function f0() override
	external payable returns (uint);
}
interface I4BBBBBBBB {
}
interface I4BBBBBBB is I4BBBBBBBB {
}
interface I4BBBBBB is I4BB, I4BBBBBBB {
	function f0() override
	external payable returns (uint);
}
interface I4 is I4B, I4BBBBB, I4BBBBBB {
	function f0() override(I4BB, I4BBBBB, I4BBBBBB)
	external payable returns (uint);
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
interface I5BB {
	function f0() external view returns (uint);
}
interface I5B is I5BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I5 is I5B {
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
