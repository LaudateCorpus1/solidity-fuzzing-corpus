pragma solidity >=0.0;
interface C0BBBB {
	function f0() external payable returns (uint);
}
interface C0BBB is C0BBBB {
}
contract C0BB is C0BBB {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1914720637;
	}
}
abstract contract C0B is C0BB {
}
contract C0 is C0B {
	function f1() public view
	
	returns (uint)
	{
		return 564586691;
	}
}
interface I1 {
	function f0() external payable returns (uint);
}
interface I2BBBB {
	function f0() external payable returns (uint);
}
interface I2BBB is I2BBBB {
}
interface I2BB is I2BBB {
	function f1() external payable returns (uint);
}
interface I2B is I2BB {
}
interface I2 is I2B {
	function f1() override
	external payable returns (uint);
}
library L3 {
	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private view returns (uint)
	{
		return 846930886;
	}
}
library L4 {
	function f0(uint) public pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) private pure returns (uint)
	{
		return 1714636915;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1957747793;
	}
}
library L5 {
	function f0(uint) internal pure returns (uint)
	{
		return 424238335;
	}
}
library L6 {
	function f0(uint) private pure returns (uint)
	{
		return 719885386;
	}
	function f1(uint) public pure returns (uint)
	{
		return 1649760492;
	}
}
interface C7BBB {
	function f0() external payable returns (uint);
}
interface C7BBBB is C7BBB {
	function f0() override
	external payable returns (uint);
	function f1() external view returns (uint);
}
interface C7BB is C7BBB, C7BBBB {
	function f0() override(C7BBB, C7BBBB)
	external payable returns (uint);
	function f1() override
	external view returns (uint);
}
interface C7B is C7BB {
	function f1() override
	external view returns (uint);
}
contract C7 is C7B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 1947433875;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 2010567813;
	}
}
library L8 {
	function f0(uint) external pure returns (uint)
	{
		return 1189641421;
	}
}
interface I9 {
	function f0() external view returns (uint);
}
library L10 {
	function f0(uint) public pure returns (uint)
	{
		return 1025202362;
	}
}
interface C12BBBBB {
	function f0() external payable returns (uint);
}
interface C12BBBB is C12BBBBB {
	function f0() override
	external payable returns (uint);
}
interface C12BBB is C12BBBB {
}
contract C12BB is C12BBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 1272185027;
	}
}
contract C12B is C12BB {
}
contract C12 is C12B {
	function f1() virtual public pure
	
	returns (uint)
	{
		return 928270262;
	}
	function f2() public view
	
	returns (uint)
	{
		return 1287522347;
	}
}
interface I13B {
	function f0() external payable returns (uint);
}
interface I13BB is I13B {
}
interface I13 is I13B, I13BB {
	function f1() external payable returns (uint);
}
interface I14 {
	function f0() external view returns (uint);
}
library L15 {
	function f0(uint) external pure returns (uint)
	{
		return 783368690;
	}
}
interface I16 {
	function f0() external view returns (uint);
}
interface I17B {
	function f0() external payable returns (uint);
}
interface I17 is I17B {
	function f0() override
	external payable returns (uint);
}
library L18 {
	function f0(uint) internal pure returns (uint)
	{
		return 1102520059;
	}
}
library L19 {
	function f0(uint) private view returns (uint)
	{
		return 2044897763;
	}
	function f1(uint) private view returns (uint)
	{
		return 1967513926;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1914720637)
				return 1;
			if (tc0.f1() != 564586691)
				return 2;
			C0BB tc1 = new C0BB();
			if (tc1.f0() != 1914720637)
				return 3;
			C12 tc2 = new C12();
			if (tc2.f0() != 1272185027)
				return 4;
			if (tc2.f1() != 928270262)
				return 5;
			if (tc2.f2() != 1287522347)
				return 6;
			C12B tc3 = new C12B();
			if (tc3.f0() != 1272185027)
				return 7;
			C12BB tc4 = new C12BB();
			if (tc4.f0() != 1272185027)
				return 8;
			C7 tc5 = new C7();
			if (tc5.f0() != 1947433875)
				return 9;
			if (tc5.f1() != 2010567813)
				return 10;
			return 0;
	}
}
