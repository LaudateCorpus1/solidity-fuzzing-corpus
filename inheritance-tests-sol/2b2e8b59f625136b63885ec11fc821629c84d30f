
pragma solidity >=0.0;











interface C0BBBBBBBB {

	function f0() external pure returns (uint);
}
interface C0BBBBBBB is C0BBBBBBBB {

}
interface C0BBBBBB is C0BBBBBBB {

	function f0() override
	external pure returns (uint);
	function f1() external view returns (uint);
	function f2() external view returns (uint);
}
interface C0BBBBB is C0BBBBBB {

}

interface C0BBBBBBBBB is C0BBBBBB {

	function f3() external view returns (uint);
}
interface C0BBBB is C0BBBBB, C0BBBBBBBBB {

}
contract C0BBB is C0BBBB {

	function f0() virtual external pure
	override
	returns (uint)
	{
		return 1559527823;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 638022372;
	}
	function f2() external view
	override
	returns (uint)
	{
		return 1931656580;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1936030137;
	}
}
contract C0BB is C0BBB {

	function f0() virtual external pure
	override
	returns (uint)
	{
		return 1947433875;
	}
}
contract C0B is C0BB {

}
contract C0 is C0B {

}




interface C1BBB {

}


interface C1BBBBB {

	function f0() external payable returns (uint);
}
interface C1BBBB is C1BBB, C1BBBBB {

	function f0() override
	external payable returns (uint);
}
interface C1BB is C1BBB, C1BBBB {

}
interface C1B is C1BB {

	function f1() external view returns (uint);
}
contract C1 is C1B {

	function f0() external payable
	override
	returns (uint)
	{
		return 1308858262;
	}
	function f1() virtual external view
	override
	returns (uint)
	{
		return 1287522347;
	}
}


contract C2B {

	function f0() public view
	
	returns (uint)
	{
		return 1814467857;
	}
}

contract C2BB is C2B {

	function f1() public view
	
	returns (uint)
	{
		return 1057382352;
	}
}
contract C2 is C2B, C2BB {

	function f2() virtual public pure
	
	returns (uint)
	{
		return 153892771;
	}
}



contract C3BB {

	function f0() public view
	
	returns (uint)
	{
		return 412013968;
	}
}
contract C3B is C3BB {

}
contract C3 is C3B {

}




interface C4BBB {

	function f0() external view returns (uint);
}
interface C4BB is C4BBB {

	function f0() override
	external view returns (uint);
}
interface C4B is C4BB {

	function f0() override
	external view returns (uint);
}
contract C4 is C4B {

	function f0() external view
	override
	returns (uint)
	{
		return 1587659744;
	}
}
library L5 {

	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
}



interface I6BB {

	function f0() external view returns (uint);
}
interface I6B is I6BB {

	function f1() external payable returns (uint);
}
interface I6 is I6B {

}

contract C7 {

	function f0() external pure
	
	returns (uint)
	{
		return 2130959757;
	}
}



interface I8BB {

	function f0() external view returns (uint);
}
interface I8B is I8BB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}


interface I8BBBB {

	function f0() external view returns (uint);
}
interface I8BBB is I8BB, I8BBBB {

	function f0() override(I8BB, I8BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I8 is I8B, I8BBB {

	function f0() override(I8B, I8BBB)
	external view returns (uint);
	function f1() override(I8B, I8BBB)
	external payable returns (uint);
}




interface C10BBB {

	function f0() external view returns (uint);
}
interface C10BB is C10BBB {

}
interface C10B is C10BB {

	function f0() override
	external view returns (uint);
}


abstract contract C10BBBBB {

}
contract C10BBBB is C10BB, C10BBBBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1447645967;
	}
}
contract C10 is C10B, C10BBBB {

	function f0() virtual external view
	override(C10BBBB, C10B)
	returns (uint)
	{
		return 1788215331;
	}
}



contract C11BB {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 837051536;
	}
}
contract C11B is C11BB {

}
abstract contract C11 is C11B {

}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1947433875)
				return 1;
			if (tc0.f1() != 638022372)
				return 2;
			if (tc0.f2() != 1931656580)
				return 3;
			if (tc0.f3() != 1936030137)
				return 4;
			C0B tc1 = new C0B();
			if (tc1.f0() != 1947433875)
				return 5;
			if (tc1.f1() != 638022372)
				return 6;
			if (tc1.f2() != 1931656580)
				return 7;
			if (tc1.f3() != 1936030137)
				return 8;
			C0BB tc2 = new C0BB();
			if (tc2.f0() != 1947433875)
				return 9;
			if (tc2.f1() != 638022372)
				return 10;
			if (tc2.f2() != 1931656580)
				return 11;
			if (tc2.f3() != 1936030137)
				return 12;
			C0BBB tc3 = new C0BBB();
			if (tc3.f0() != 1559527823)
				return 13;
			if (tc3.f1() != 638022372)
				return 14;
			if (tc3.f2() != 1931656580)
				return 15;
			if (tc3.f3() != 1936030137)
				return 16;
			C1 tc4 = new C1();
			if (tc4.f0() != 1308858262)
				return 17;
			if (tc4.f1() != 1287522347)
				return 18;
			C10 tc5 = new C10();
			if (tc5.f0() != 1788215331)
				return 19;
			C10BBBB tc6 = new C10BBBB();
			if (tc6.f0() != 1447645967)
				return 20;
			C11B tc7 = new C11B();
			if (tc7.f0() != 837051536)
				return 21;
			C11BB tc8 = new C11BB();
			if (tc8.f0() != 837051536)
				return 22;
			C2 tc9 = new C2();
			if (tc9.f0() != 1814467857)
				return 23;
			if (tc9.f1() != 1057382352)
				return 24;
			if (tc9.f2() != 153892771)
				return 25;
			C2B tc10 = new C2B();
			if (tc10.f0() != 1814467857)
				return 26;
			C2BB tc11 = new C2BB();
			if (tc11.f0() != 1814467857)
				return 27;
			if (tc11.f1() != 1057382352)
				return 28;
			C3 tc12 = new C3();
			if (tc12.f0() != 412013968)
				return 29;
			C3B tc13 = new C3B();
			if (tc13.f0() != 412013968)
				return 30;
			C3BB tc14 = new C3BB();
			if (tc14.f0() != 412013968)
				return 31;
			return 0;
	}
}

