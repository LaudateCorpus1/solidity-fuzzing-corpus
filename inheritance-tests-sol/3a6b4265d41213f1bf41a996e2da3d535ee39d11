
pragma solidity >=0.0;


library L0 {

	function f0(uint) internal pure returns (uint)
	{
		return 1804289383;
	}
}




interface C1BBB {

	function f0() external view returns (uint);
}
interface C1BB is C1BBB {

	function f0() override
	external view returns (uint);
}
interface C1B is C1BB {

}
contract C1 is C1B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 305269445;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1776077528;
	}
}


contract C2B {

	function f0() virtual public payable
	
	returns (uint)
	{
		return 1196198554;
	}
}
abstract contract C2 is C2B {

	function f0() virtual public payable
	override
	returns (uint)
	{
		return 1986052792;
	}
}
library L3 {

	function f0(uint) internal pure returns (uint)
	{
		return 846930886;
	}
}
library L4 {

	function f0(uint) internal pure returns (uint)
	{
		return 1681692777;
	}
}




interface C5BBB {

	function f0() external view returns (uint);
}
interface C5BB is C5BBB {

	function f0() override
	external view returns (uint);
}
interface C5B is C5BB {

	function f0() override
	external view returns (uint);
}
contract C5 is C5B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 2038683636;
	}
}
library L6 {

	function f0(uint) internal pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}

contract C7 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 859669581;
	}
}
library L8 {

	function f0(uint) external view returns (uint)
	{
		return 424238335;
	}
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 305269445)
				return 1;
			if (tc0.f1() != 1776077528)
				return 2;
			C2B tc1 = new C2B();
			if (tc1.f0() != 1196198554)
				return 3;
			C5 tc2 = new C5();
			if (tc2.f0() != 2038683636)
				return 4;
			C7 tc3 = new C7();
			if (tc3.f0() != 859669581)
				return 5;
			return 0;
	}
}

