
pragma solidity >=0.0;





interface I0BB {

	function f0() external view returns (uint);
}
interface I0B is I0BB {

	function f1() external view returns (uint);
}
interface I0 is I0B {

}

contract C1 {

	function f0() external pure
	
	returns (uint)
	{
		return 911372703;
	}
	function f1() external pure
	
	returns (uint)
	{
		return 1669237718;
	}
}

interface I2 {

	function f0() external payable returns (uint);
}



interface I3BB {

	function f0() external view returns (uint);
}
interface I3B is I3BB {

	function f1() external view returns (uint);
}
interface I3 is I3B {

	function f0() override
	external view returns (uint);
}

contract C4 {

	function f0() virtual external pure
	
	returns (uint)
	{
		return 173363389;
	}
	function f1() external pure
	
	returns (uint)
	{
		return 1827861707;
	}
}



interface I5BB {

	function f0() external view returns (uint);
}
interface I5B is I5BB {

	function f1() external payable returns (uint);
}


interface I5BBBB {

	function f0() external view returns (uint);
}
interface I5BBB is I5BB, I5BBBB {

	function f0() override(I5BB, I5BBBB)
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I5 is I5B, I5BBB {

	function f0() override(I5BB, I5BBB)
	external view returns (uint);
	function f1() override(I5B, I5BBB)
	external payable returns (uint);
}


interface I6B {

	function f0() external pure returns (uint);
	function f1() external view returns (uint);
}
interface I6 is I6B {

	function f1() override
	external view returns (uint);
}


contract C {
	function test() public returns (uint)
	{
			C1 tc0 = new C1();
			if (tc0.f0() != 911372703)
				return 1;
			if (tc0.f1() != 1669237718)
				return 2;
			C4 tc1 = new C4();
			if (tc1.f0() != 173363389)
				return 3;
			if (tc1.f1() != 1827861707)
				return 4;
			return 0;
	}
}

