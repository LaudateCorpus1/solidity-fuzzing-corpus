
pragma solidity >=0.0;





interface C0BB {

	function f0() external view returns (uint);
}
interface C0B is C0BB {

	function f0() override
	external view returns (uint);
}
contract C0 is C0B {

	function f0() external view
	override
	returns (uint)
	{
		return 992596462;
	}
}
library L1 {

	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}









interface C2BBBBBBBB {

	function f0() external view returns (uint);
}
interface C2BBBBBBB is C2BBBBBBBB {

}
interface C2BBBBBB is C2BBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C2BBBBB is C2BBBBBB {

}
interface C2BBBB is C2BBBBB {

}
interface C2BBB is C2BBBB {

	function f1() external payable returns (uint);
}
interface C2BB is C2BBB {

	function f1() override
	external payable returns (uint);
}
contract C2B is C2BB {

	function f0() external view
	override
	returns (uint)
	{
		return 1379193482;
	}
	function f1() external payable
	override
	returns (uint)
	{
		return 1325416955;
	}
}
contract C2 is C2B {

}
library L3 {

	function f0(uint) external pure returns (uint)
	{
		return 846930886;
	}
}
library L4 {

	function f0(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}


interface C5B {

}
contract C5 is C5B {

	function f0() public view
	
	returns (uint)
	{
		return 45373597;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 1943064494;
	}
}




contract C6BBB {

	function f0() virtual public payable
	
	returns (uint)
	{
		return 170423502;
	}
}
contract C6BB is C6BBB {

	function f0() public payable
	override
	returns (uint)
	{
		return 2007936220;
	}
}
contract C6B is C6BB {

}
contract C6 is C6B {

	function f1() virtual public pure
	
	returns (uint)
	{
		return 447122901;
	}
}


contract C {
	using L3 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 846930886)
			return 1;
		return 0;
	}
}

