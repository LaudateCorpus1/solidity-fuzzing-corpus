pragma solidity >=0.0;
contract C0 {
	function f0() virtual public pure
	
	returns (uint)
	{
		return 530981;
	}
}
interface I1B {
	function f0() external view returns (uint);
}
interface I1 is I1B {
	function f0() override
	external view returns (uint);
}
interface I2B {
	function f0() external view returns (uint);
	function f1() external payable returns (uint);
}
interface I2 is I2B {
	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
}
interface I3B {
	function f0() external view returns (uint);
}
interface I3 is I3B {
}
library L4 {
	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 530981)
				return 1;
			return 0;
	}
}
