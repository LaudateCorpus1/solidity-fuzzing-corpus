
pragma solidity >=0.0;




interface I0B {

}

interface I0BB is I0B {

	function f0() external view returns (uint);
}
interface I0 is I0B, I0BB {

	function f0() override
	external view returns (uint);
}
library L1 {

	function f0(uint) private pure returns (uint)
	{
		return 846930886;
	}
	function f1(uint) public view returns (uint)
	{
		return 1681692777;
	}
}

interface I3 {

	function f0() external payable returns (uint);
}







interface I5BBBBBB {

}
interface I5BBBBB is I5BBBBBB {

}
interface I5BBBB is I5BBBBB {

}




interface I5BBBBBBBBBB {

}
interface I5BBBBBBBBB is I5BBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I5BBBBBBBB is I5BBBBBBBBB {

}
interface I5BBBBBBB is I5BBBBB, I5BBBBBBBB {

}
interface I5BBB is I5BBBB, I5BBBBBBB {

	function f1() external payable returns (uint);
}
interface I5BB is I5BBB {

	function f2() external view returns (uint);
}




interface I5BBBBBBBBBBBBBB {

}
interface I5BBBBBBBBBBBBB is I5BBBBBBBBBBBBBB {

}




interface I5BBBBBBBBBBBBBBBBBB {

}
interface I5BBBBBBBBBBBBBBBBB is I5BBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I5BBBBBBBBBBBBBBBB is I5BBBBBBBBBBBBBBBBB {

}
interface I5BBBBBBBBBBBBBBB is I5BBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I5BBBBBBBBBBBB is I5BBBBBBBBBBBBB, I5BBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I5BBBBBBBBBBB is I5BBB, I5BBBBBBBBBBBB {

	function f0() override(I5BBBBBBBBB, I5BBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I5BBB, I5BBBBBBBBBBBB)
	external payable returns (uint);
	function f2() external view returns (uint);
}
interface I5B is I5BB, I5BBBBBBBBBBB {

	function f0() override(I5BBBBBBBBB, I5BBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I5BBB, I5BBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I5BB, I5BBBBBBBBBBB)
	external view returns (uint);
}

interface I5BBBBBBBBBBBBBBBBBBB is I5B {

	function f0() override
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f3() external payable returns (uint);
}




interface I5BBBBBBBBBBBBBBBBBBBBBBB {

}
interface I5BBBBBBBBBBBBBBBBBBBBBB is I5BBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I5BBBBBBBBBBBBBBBBBBBBB is I5BBBBBBBBBBBBBBBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface I5BBBBBBBBBBBBBBBBBBBB is I5B, I5BBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I5B, I5BBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override
	external payable returns (uint);
	function f2() override
	external view returns (uint);
}




interface I5BBBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I5BBBBBBBBBBBBBBBBBBBBBBBBBB is I5BBBBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() external view returns (uint);
}
interface I5BBBBBBBBBBBBBBBBBBBBBBBBB is I5BBBBBBBBBBBBBBBBBBBBBBBBBB {

}
interface I5BBBBBBBBBBBBBBBBBBBBBBBB is I5B, I5BBBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I5B, I5BBBBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f2() override
	external view returns (uint);
}
interface I5 is I5B, I5BBBBBBBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBBBBBBBBBBB {

	function f0() override(I5B, I5BBBBBBBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f1() override(I5B, I5BBBBBBBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBBBBBBB)
	external payable returns (uint);
	function f2() override(I5B, I5BBBBBBBBBBBBBBBBBBBB, I5BBBBBBBBBBBBBBBBBBBBBBBB)
	external view returns (uint);
	function f4() external payable returns (uint);
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

