pragma solidity >=0.0;
library L0 {
	function f0(uint) public view returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) private pure returns (uint)
	{
		return 1681692777;
	}
}
library L1 {
	function f0(uint) private pure returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1957747793;
	}
}
interface I2BB {
	function f0() external payable returns (uint);
}
interface I2B is I2BB {
	function f0() override
	external payable returns (uint);
}
interface I2 is I2B {
	function f0() override
	external payable returns (uint);
	function f1() external payable returns (uint);
}
contract C3 {
	function f0() external view
	
	returns (uint)
	{
		return 1161902063;
	}
	function f1() public view
	
	returns (uint)
	{
		return 344074374;
	}
	function f2() public view
	
	returns (uint)
	{
		return 175581456;
	}
}
interface C4B {
	function f0() external payable returns (uint);
}
contract C4 is C4B {
	function f0() virtual external payable
	override
	returns (uint)
	{
		return 489324777;
	}
}
contract C5 {
	function f0() external view
	
	returns (uint)
	{
		return 23677214;
	}
	function f1() public view
	
	returns (uint)
	{
		return 461496790;
	}
	function f2() public view
	
	returns (uint)
	{
		return 1063679759;
	}
}
library L6 {
	function f0(uint) public view returns (uint)
	{
		return 424238335;
	}
}
library L7 {
	function f0(uint) private pure returns (uint)
	{
		return 719885386;
	}
}
contract C {
	using L6 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 424238335)
			return 1;
		return 0;
	}
}
