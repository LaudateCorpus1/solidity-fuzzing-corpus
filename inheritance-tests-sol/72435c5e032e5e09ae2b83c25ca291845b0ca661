pragma solidity >=0.0;
interface I0BBB {
	function f0() external view returns (uint);
}
interface I0BB is I0BBB {
}
interface I0B is I0BB {
	function f0() override
	external view returns (uint);
}
interface I0 is I0B {
	function f1() external view returns (uint);
}
library L1 {
	function f0(uint) private pure returns (uint)
	{
		return 1804289383;
	}
}
interface I2BBBB {
	function f0() external view returns (uint);
}
interface I2BBB is I2BBBB {
}
interface I2BB is I2BBB {
}
interface I2B is I2BB {
}
interface I2BBBBB is I2B {
	function f1() external pure returns (uint);
}
interface I2BBBBBBBBB {
	function f0() external view returns (uint);
}
interface I2BBBBBBBB is I2BBBBBBBBB {
}
interface I2BBBBBBB is I2BBBBBBBB {
}
interface I2BBBBBB is I2BB, I2BBBBBBB {
	function f0() override(I2BBBB, I2BBBBBBBBB)
	external view returns (uint);
}
interface I2 is I2B, I2BBBBB, I2BBBBBB {
	function f0() override(I2BBBB, I2BBBBBB)
	external view returns (uint);
}
interface I3BBB {
	function f0() external view returns (uint);
}
interface I3BB is I3BBB {
	function f1() external view returns (uint);
	function f2() external payable returns (uint);
}
interface I3BBBBB {
}
interface I3BBBB is I3BBB, I3BBBBB {
	function f1() external view returns (uint);
}
interface I3B is I3BB, I3BBBB {
	function f1() override(I3BB, I3BBBB)
	external view returns (uint);
}
interface I3 is I3B {
	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f3() external view returns (uint);
	function f4() external payable returns (uint);
}
interface I4B {
	function f0() external view returns (uint);
}
interface I4BB is I4B {
}
interface I4 is I4B, I4BB {
	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I5B {
	function f0() external view returns (uint);
}
interface I5 is I5B {
}
library L6 {
	function f0(uint) private pure returns (uint)
	{
		return 424238335;
	}
}
interface I7BB {
	function f0() external view returns (uint);
}
interface I7B is I7BB {
	function f0() override
	external view returns (uint);
	function f1() external payable returns (uint);
}
interface I7 is I7B {
	function f1() override
	external payable returns (uint);
}
interface I8BB {
	function f0() external view returns (uint);
}
interface I8B is I8BB {
	function f1() external payable returns (uint);
}
interface I8 is I8B {
	function f1() override
	external payable returns (uint);
}
library L9 {
	function f0(uint) private pure returns (uint)
	{
		return 719885386;
	}
}
interface I10B {
	function f0() external view returns (uint);
}
interface I10BB is I10B {
	function f0() override
	external view returns (uint);
}
interface I10 is I10B, I10BB {
	function f0() override(I10B, I10BB)
	external view returns (uint);
	function f1() external view returns (uint);
}
contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}
