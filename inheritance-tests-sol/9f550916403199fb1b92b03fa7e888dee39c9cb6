
pragma solidity >=0.0;






interface I0BBB {

}
interface I0BB is I0BBB {

	function f0() external view returns (uint);
}
interface I0B is I0BB {

	function f0() override
	external view returns (uint);
}



interface I0BBBBBB {

	function f0() external view returns (uint);
}
interface I0BBBBB is I0BBBBBB {

}
interface I0BBBB is I0BB, I0BBBBB {

	function f0() override(I0BB, I0BBBBBB)
	external view returns (uint);
}
interface I0 is I0B, I0BBBB {

	function f0() override(I0B, I0BBBB)
	external view returns (uint);
	function f1() external pure returns (uint);
}

contract C1 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1105902161;
	}
}



abstract contract C2BB {

}
contract C2B is C2BB {

}




interface C2BBBBBB {

	function f0() external payable returns (uint);
}
interface C2BBBBB is C2BBBBBB {

}

interface C2BBBBBBB is C2BBBBBB {

	function f1() external payable returns (uint);
}
interface C2BBBB is C2BBBBB, C2BBBBBBB {

	function f2() external payable returns (uint);
}




interface C2BBBBBBBBBBB {

	function f0() external payable returns (uint);
}
interface C2BBBBBBBBBB is C2BBBBBBBBBBB {

}
interface C2BBBBBBBBB is C2BBBBBBBBBB {

	function f0() override
	external payable returns (uint);
}
interface C2BBBBBBBB is C2BBBBBBB, C2BBBBBBBBB {

	function f0() override(C2BBBBBB, C2BBBBBBBBB)
	external payable returns (uint);
}
interface C2BBB is C2BBBB, C2BBBBBBBB {

	function f0() override(C2BBBBBB, C2BBBBBBBB)
	external payable returns (uint);
	function f2() override
	external payable returns (uint);
}
contract C2 is C2B, C2BBB {

	function f0() external payable
	override
	returns (uint)
	{
		return 2064876628;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1842513780;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 631416347;
	}
}







interface C3BBBBBB {

	function f0() external view returns (uint);
}
interface C3BBBBB is C3BBBBBB {

}
interface C3BBBB is C3BBBBB {

}
interface C3BBB is C3BBBB {

	function f0() override
	external view returns (uint);
}

interface C3BBBBBBB is C3BBBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface C3BB is C3BBB, C3BBBBBBB {

	function f0() override(C3BBB, C3BBBBBBB)
	external view returns (uint);
}
interface C3B is C3BB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
contract C3 is C3B {

	function f0() external view
	override
	returns (uint)
	{
		return 1057382352;
	}
	function f1() external view
	override
	returns (uint)
	{
		return 153892771;
	}
}
library L4 {

	function f0(uint) public pure returns (uint)
	{
		return 424238335;
	}
}










interface C5BBBBBBBBB {

	function f0() external pure returns (uint);
}
interface C5BBBBBBBB is C5BBBBBBBBB {

	function f1() external payable returns (uint);
}
interface C5BBBBBBB is C5BBBBBBBB {

	function f1() override
	external payable returns (uint);
	function f2() external view returns (uint);
	function f3() external view returns (uint);
}
interface C5BBBBBB is C5BBBBBBB {

	function f1() override
	external payable returns (uint);
	function f3() override
	external view returns (uint);
}

interface C5BBBBBBBBBB is C5BBBBBB {

	function f2() override
	external view returns (uint);
	function f4() external view returns (uint);
}
interface C5BBBBB is C5BBBBBB, C5BBBBBBBBBB {

	function f1() override
	external payable returns (uint);
	function f2() override(C5BBBBBBB, C5BBBBBBBBBB)
	external view returns (uint);
	function f4() override
	external view returns (uint);
}
contract C5BBBB is C5BBBBB {

	function f0() external pure
	override
	returns (uint)
	{
		return 80100956;
	}
	function f1() virtual external payable
	override
	returns (uint)
	{
		return 1003765604;
	}
	function f2() virtual external view
	override
	returns (uint)
	{
		return 1447645967;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 143244144;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 837051536;
	}
}
contract C5BBB is C5BBBB {

	function f1() external payable
	override
	returns (uint)
	{
		return 2127735996;
	}
}
contract C5BB is C5BBB {

	function f2() virtual external view
	override
	returns (uint)
	{
		return 1318652553;
	}
}
contract C5B is C5BB {

	function f2() virtual external view
	override
	returns (uint)
	{
		return 1715708819;
	}
}
contract C5 is C5B {

	function f2() virtual external view
	override
	returns (uint)
	{
		return 425095546;
	}
}


contract C {
	using L4 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 424238335)
			return 1;
		return 0;
	}
}

