pragma solidity >=0.0;
contract C0BB {
}
contract C0B is C0BB {
}
interface C0BBBBB {
	function f0() external payable returns (uint);
}
interface C0BBBB is C0BBBBB {
	function f0() override
	external payable returns (uint);
}
contract C0BBB is C0BB, C0BBBB {
	function f0() external payable
	override
	returns (uint)
	{
		return 2078669041;
	}
}
contract C0 is C0B, C0BBB {
}
library L2 {
	function f0(uint) internal view returns (uint)
	{
		return 846930886;
	}
}
library L3 {
	function f0(uint) private pure returns (uint)
	{
		return 1681692777;
	}
	function f1(uint) public view returns (uint)
	{
		return 1714636915;
	}
}
library L5 {
	function f0(uint) internal pure returns (uint)
	{
		return 1957747793;
	}
}
library L6 {
	function f0(uint) public view returns (uint)
	{
		return 424238335;
	}
}
contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 2078669041)
				return 1;
			C0BBB tc1 = new C0BBB();
			if (tc1.f0() != 2078669041)
				return 2;
			return 0;
	}
}
