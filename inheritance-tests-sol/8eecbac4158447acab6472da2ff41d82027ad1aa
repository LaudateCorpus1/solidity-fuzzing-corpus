
pragma solidity >=0.0;




interface C0B {

	function f0() external view returns (uint);
}
contract C0 is C0B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1572557670;
	}
}

interface I1 {

	function f0() external view returns (uint);
}
library L2 {

	function f0(uint) external pure returns (uint)
	{
		return 1804289383;
	}
}






interface I3BBBBB {

	function f0() external view returns (uint);
}

interface I3BBBBBB is I3BBBBB {

	function f0() override
	external view returns (uint);
	function f1() external view returns (uint);
}
interface I3BBBB is I3BBBBB, I3BBBBBB {

	function f0() override(I3BBBBB, I3BBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I3BBB is I3BBBB {

	function f1() override
	external view returns (uint);
}
interface I3BB is I3BBB {

	function f0() override
	external view returns (uint);
	function f1() override
	external view returns (uint);
}
interface I3B is I3BB {

}

interface I3BBBBBBB is I3BB {

	function f0() override
	external view returns (uint);
	function f2() external payable returns (uint);
}
interface I3 is I3B, I3BBBBBBB {

	function f0() override(I3BB, I3BBBBBBB)
	external view returns (uint);
	function f1() override
	external view returns (uint);
	function f2() override
	external payable returns (uint);
}
library L4 {

	function f0(uint) external pure returns (uint)
	{
		return 1714636915;
	}
}

contract C5 {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1838990330;
	}
}




interface I7BBB {

	function f0() external payable returns (uint);
	function f1() external payable returns (uint);
}
interface I7BB is I7BBB {

	function f0() override
	external payable returns (uint);
}
interface I7B is I7BB {

	function f0() override
	external payable returns (uint);
	function f1() override
	external payable returns (uint);
}


interface I7BBBBB {

	function f0() external payable returns (uint);
}
interface I7BBBB is I7B, I7BBBBB {

	function f0() override(I7B, I7BBBBB)
	external payable returns (uint);
}
interface I7 is I7B, I7BBBB {

	function f0() override(I7B, I7BBBB)
	external payable returns (uint);
}





interface I8BBBB {

	function f0() external payable returns (uint);
}
interface I8BBB is I8BBBB {

	function f0() override
	external payable returns (uint);
}
interface I8BB is I8BBB {

}




interface I8BBBBBBBB {

	function f0() external payable returns (uint);
}
interface I8BBBBBBB is I8BBBBBBBB {

}
interface I8BBBBBB is I8BBBBBBB {

}
interface I8BBBBB is I8BB, I8BBBBBB {

	function f0() override(I8BBB, I8BBBBBBBB)
	external payable returns (uint);
}
interface I8B is I8BB, I8BBBBB {

	function f0() override(I8BBB, I8BBBBB)
	external payable returns (uint);
}
interface I8 is I8B {

}

interface I9 {

	function f0() external view returns (uint);
}



interface C10BB {

	function f0() external view returns (uint);
}
contract C10B is C10BB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1770089307;
	}
}
contract C10 is C10B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1184570770;
	}
}


interface C11B {

	function f0() external view returns (uint);
}
contract C11 is C11B {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 1625403789;
	}
}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1572557670)
				return 1;
			C10 tc1 = new C10();
			if (tc1.f0() != 1184570770)
				return 2;
			C10B tc2 = new C10B();
			if (tc2.f0() != 1770089307)
				return 3;
			C11 tc3 = new C11();
			if (tc3.f0() != 1625403789)
				return 4;
			C5 tc4 = new C5();
			if (tc4.f0() != 1838990330)
				return 5;
			return 0;
	}
}

