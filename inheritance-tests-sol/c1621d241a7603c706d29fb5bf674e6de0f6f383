
pragma solidity >=0.0;







interface I0BBBB {

	function f0() external pure returns (uint);
}
interface I0BBB is I0BBBB {

}
interface I0BB is I0BBB {

	function f0() override
	external pure returns (uint);
}
interface I0B is I0BB {

}

interface I0BBBBB is I0BB {

	function f1() external payable returns (uint);
}

interface I0BBBBBB is I0BBBBB {

	function f2() external view returns (uint);
}




interface I0BBBBBBBBBB {

	function f0() external pure returns (uint);
}
interface I0BBBBBBBBB is I0BBBBBBBBBB {

}
interface I0BBBBBBBB is I0BBBBBBBBB {

}
interface I0BBBBBBB is I0BB, I0BBBBBBBB {

	function f0() override(I0BB, I0BBBBBBBBBB)
	external pure returns (uint);
}
interface I0 is I0B, I0BBBBB, I0BBBBBB, I0BBBBBBB {

	function f0() override(I0BB, I0BBBBBBB)
	external pure returns (uint);
	function f2() override
	external view returns (uint);
}


contract C {
	function test() public returns (uint)
	{
		return 0;
	}
}

