
pragma solidity >=0.0;




interface I0B {

	function f0() external view returns (uint);
}
interface I0 is I0B {

}
library L1 {

	function f0(uint) public pure returns (uint)
	{
		return 1804289383;
	}
	function f1(uint) private pure returns (uint)
	{
		return 846930886;
	}
	function f2(uint) internal view returns (uint)
	{
		return 1681692777;
	}
}
library L2 {

	function f0(uint) private view returns (uint)
	{
		return 1714636915;
	}
	function f1(uint) internal view returns (uint)
	{
		return 1957747793;
	}
}



interface C3BB {

	function f0() external payable returns (uint);
}
interface C3B is C3BB {

	function f0() override
	external payable returns (uint);
}
contract C3 is C3B {

	function f0() external payable
	override
	returns (uint)
	{
		return 407355683;
	}
}




interface I4BBB {

	function f0() external payable returns (uint);
}
interface I4BB is I4BBB {

}
interface I4B is I4BB {

}
interface I4 is I4B {

}



interface C5BB {

	function f0() external view returns (uint);
}
interface C5B is C5BB {

}
contract C5 is C5B {

	function f0() external view
	override
	returns (uint)
	{
		return 1271135913;
	}
}
library L6 {

	function f0(uint) internal view returns (uint)
	{
		return 424238335;
	}
	function f1(uint) internal view returns (uint)
	{
		return 719885386;
	}
}
library L7 {

	function f0(uint) internal view returns (uint)
	{
		return 1649760492;
	}
	function f1(uint) internal view returns (uint)
	{
		return 596516649;
	}
}
library L8 {

	function f0(uint) private pure returns (uint)
	{
		return 1189641421;
	}
}
library L9 {

	function f0(uint) public view returns (uint)
	{
		return 1025202362;
	}
}




contract C10BBB {

	function f0() external pure
	
	returns (uint)
	{
		return 1882556969;
	}
}
contract C10BB is C10BBB {

}
contract C10B is C10BB {

}
contract C10 is C10B {

}
library L11 {

	function f0(uint) internal pure returns (uint)
	{
		return 1350490027;
	}
}
library L12 {

	function f0(uint) public pure returns (uint)
	{
		return 783368690;
	}
}


interface I13B {

	function f0() external view returns (uint);
}

interface I13BB is I13B {

	function f0() override
	external view returns (uint);
}
interface I13 is I13B, I13BB {

	function f0() override(I13B, I13BB)
	external view returns (uint);
}
library L14 {

	function f0(uint) public view returns (uint)
	{
		return 2044897763;
	}
	function f1(uint) external pure returns (uint)
	{
		return 1967513926;
	}
}


contract C {
	using L14 for uint;
	function test() public returns (uint)
	{
		uint x;
		if (x.f0() != 2044897763)
			return 1;
		return 0;
	}
}

