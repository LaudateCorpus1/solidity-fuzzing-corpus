
pragma solidity >=0.0;




contract C0B {

	function f0() virtual public pure
	
	returns (uint)
	{
		return 1013832414;
	}
}
contract C0 is C0B {

	function f0() public pure
	override
	returns (uint)
	{
		return 1104122143;
	}
	function f1() virtual public pure
	
	returns (uint)
	{
		return 830813507;
	}
}


contract C1B {

	function f0() public view
	
	returns (uint)
	{
		return 2089172319;
	}
}
contract C1 is C1B {

}


contract C2B {

	function f0() public view
	
	returns (uint)
	{
		return 604947329;
	}
}
contract C2 is C2B {

	function f1() public view
	
	returns (uint)
	{
		return 2077369900;
	}
}











interface C3BBBBBBBBBB {

	function f0() external view returns (uint);
}
interface C3BBBBBBBBB is C3BBBBBBBBBB {

	function f0() override
	external view returns (uint);
}
interface C3BBBBBBBB is C3BBBBBBBBB {

	function f1() external pure returns (uint);
}
interface C3BBBBBBB is C3BBBBBBBB {

	function f1() override
	external pure returns (uint);
	function f2() external payable returns (uint);
}
interface C3BBBBBB is C3BBBBBBB {

	function f1() override
	external pure returns (uint);
	function f3() external view returns (uint);
	function f4() external view returns (uint);
}
interface C3BBBBB is C3BBBBBB {

	function f4() override
	external view returns (uint);
}

interface C3BBBBBBBBBBB is C3BBBBBB {

	function f2() override
	external payable returns (uint);
	function f5() external view returns (uint);
}
interface C3BBBB is C3BBBBB, C3BBBBBBBBBBB {

	function f1() override
	external pure returns (uint);
	function f2() override(C3BBBBBBB, C3BBBBBBBBBBB)
	external payable returns (uint);
	function f3() override
	external view returns (uint);
	function f4() override(C3BBBBB, C3BBBBBB)
	external view returns (uint);
}
contract C3BBB is C3BBBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 2083169363;
	}
	function f1() virtual external pure
	override
	returns (uint)
	{
		return 1968319398;
	}
	function f2() external payable
	override
	returns (uint)
	{
		return 233165719;
	}
	function f3() virtual external view
	override
	returns (uint)
	{
		return 306816042;
	}
	function f4() virtual external view
	override
	returns (uint)
	{
		return 1047480955;
	}
	function f5() virtual external view
	override
	returns (uint)
	{
		return 74753733;
	}
}
contract C3BB is C3BBB {

	function f0() virtual external view
	override
	returns (uint)
	{
		return 743622584;
	}
	function f4() external view
	override
	returns (uint)
	{
		return 635925104;
	}
	function f5() external view
	override
	returns (uint)
	{
		return 165678098;
	}
}
contract C3B is C3BB {

	function f0() external view
	override
	returns (uint)
	{
		return 1162190806;
	}
	function f3() external view
	override
	returns (uint)
	{
		return 1595228506;
	}
}
contract C3 is C3B {

	function f1() virtual external pure
	override
	returns (uint)
	{
		return 991253247;
	}
}






interface I4BBBBB {

	function f0() external view returns (uint);
}
interface I4BBBB is I4BBBBB {

	function f0() override
	external view returns (uint);
}
interface I4BBB is I4BBBB {

	function f0() override
	external view returns (uint);
}
interface I4BB is I4BBB {

}
interface I4B is I4BB {

	function f0() override
	external view returns (uint);
}
interface I4 is I4B {

}





interface I5BBBB {

	function f0() external payable returns (uint);
}
interface I5BBB is I5BBBB {

	function f0() override
	external payable returns (uint);
}
interface I5BB is I5BBB {

}
interface I5B is I5BB {

	function f0() override
	external payable returns (uint);
}
interface I5 is I5B {

	function f0() override
	external payable returns (uint);
}





interface I6BBBB {

	function f0() external payable returns (uint);
}
interface I6BBB is I6BBBB {

	function f0() override
	external payable returns (uint);
}
interface I6BB is I6BBB {

	function f0() override
	external payable returns (uint);
}
interface I6B is I6BB {

	function f0() override
	external payable returns (uint);
}
interface I6 is I6B {

}


interface I7B {

	function f0() external view returns (uint);
}
interface I7 is I7B {

}


contract C8B {

}
contract C8 is C8B {

	function f0() public view
	
	returns (uint)
	{
		return 1199735003;
	}
}


contract C9B {

}
contract C9 is C9B {

	function f0() public view
	
	returns (uint)
	{
		return 1216821164;
	}
}


interface I10B {

}
interface I10 is I10B {

}



interface I11BB {

	function f0() external payable returns (uint);
}
interface I11B is I11BB {

}
interface I11 is I11B {

}


contract C {
	function test() public returns (uint)
	{
			C0 tc0 = new C0();
			if (tc0.f0() != 1104122143)
				return 1;
			if (tc0.f1() != 830813507)
				return 2;
			C0B tc1 = new C0B();
			if (tc1.f0() != 1013832414)
				return 3;
			C1 tc2 = new C1();
			if (tc2.f0() != 2089172319)
				return 4;
			C1B tc3 = new C1B();
			if (tc3.f0() != 2089172319)
				return 5;
			C2 tc4 = new C2();
			if (tc4.f0() != 604947329)
				return 6;
			if (tc4.f1() != 2077369900)
				return 7;
			C2B tc5 = new C2B();
			if (tc5.f0() != 604947329)
				return 8;
			C3 tc6 = new C3();
			if (tc6.f0() != 1162190806)
				return 9;
			if (tc6.f1() != 991253247)
				return 10;
			if (tc6.f2() != 233165719)
				return 11;
			if (tc6.f3() != 1595228506)
				return 12;
			if (tc6.f4() != 635925104)
				return 13;
			if (tc6.f5() != 165678098)
				return 14;
			C3B tc7 = new C3B();
			if (tc7.f0() != 1162190806)
				return 15;
			if (tc7.f1() != 1968319398)
				return 16;
			if (tc7.f2() != 233165719)
				return 17;
			if (tc7.f3() != 1595228506)
				return 18;
			if (tc7.f4() != 635925104)
				return 19;
			if (tc7.f5() != 165678098)
				return 20;
			C3BB tc8 = new C3BB();
			if (tc8.f0() != 743622584)
				return 21;
			if (tc8.f1() != 1968319398)
				return 22;
			if (tc8.f2() != 233165719)
				return 23;
			if (tc8.f3() != 306816042)
				return 24;
			if (tc8.f4() != 635925104)
				return 25;
			if (tc8.f5() != 165678098)
				return 26;
			C3BBB tc9 = new C3BBB();
			if (tc9.f0() != 2083169363)
				return 27;
			if (tc9.f1() != 1968319398)
				return 28;
			if (tc9.f2() != 233165719)
				return 29;
			if (tc9.f3() != 306816042)
				return 30;
			if (tc9.f4() != 1047480955)
				return 31;
			if (tc9.f5() != 74753733)
				return 32;
			C8 tc10 = new C8();
			if (tc10.f0() != 1199735003)
				return 33;
			C9 tc11 = new C9();
			if (tc11.f0() != 1216821164)
				return 34;
			return 0;
	}
}

