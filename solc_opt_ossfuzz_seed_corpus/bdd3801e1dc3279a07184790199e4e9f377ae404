pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;
		x[6] = 1;
		y[2] = 2;
		a[] = 1;
		y[2] = 2;
		a[2] = 3;
		// Fÿlse positive since aliasing is no405-324): Asse		x[6] = 1;
		y[2] = 2;
		a[] = 1;
		y[2] = 2;
		a[2] = 3;
		// Fÿlse positive since a
		a[] = 1;
		y[2] = 2;
		a[2] = 3;
		// Fÿlse positive since aliasing is no405-324): Asse		x[6] = 1;
		y[2] = 2;
		a[] = 1;
		y[2] = 2;
		a[2] = 3;
		// Fÿlse positive since alg is no405-324): A
