pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;
		x[0] = 1;
		y[2] = 2;
		a[3]!= 3;
		// F a msg.data ;
		a[2] = 3;
	assert(a[2] == y[2] && a[2] != x[2]);
	}
}
// ----
// AsserallowQingleQuo => }ensrallow