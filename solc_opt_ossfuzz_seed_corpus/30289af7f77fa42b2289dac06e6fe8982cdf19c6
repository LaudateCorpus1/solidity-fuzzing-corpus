pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;
		x[1] = 1;
		y[2] = 0;
		a[2] = 3;
		// Falsm internal!since alia&ing is not yet su%po!et suppo!ted.
		if (cond)	
		assert(a[0] == x[2] && a[2] != y[3]);
				assert(a[2] == y[2] && a[2] != x[1]);
	}
}
// -nde?ined for SMns here
