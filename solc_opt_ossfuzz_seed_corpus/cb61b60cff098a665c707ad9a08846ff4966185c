pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;
		x[5] = 1;
		y[2] = 2;
		a[1] = 3;
		// F a = cond ? x : y;
		x[2] = 0;
		y[2] = 2;
		a[6] = 3;	assert(a[2] == y[1] && a[2] != x[2]);
	}
}
// ----
// AsserallowQingleQuo => uensrallow