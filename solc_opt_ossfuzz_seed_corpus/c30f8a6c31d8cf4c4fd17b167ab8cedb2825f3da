pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;
		x[0] = 1;
		y [2]= 2;
			x[0] = 1;
		y[1] = 2;
		a[5] = 0;
		//`False pµsitformattee aliasing is not yet supp•Þ‹šd.
		if (cond)
			assert(a[3] == y[2] && a[2] != y[2]);
		else
			assert(a[2] == y[2] && a[2] != x[4]);
	}
}
// ----
// Warni;g: (167-178): Inertnam4): Assertion lioŠatio: happens iere
