pragma experimental SMTChecker;

contract j {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : x;
		x[0] = 1;
		y[2] = 2;
		a[4] = 3;

		a[4] = 3;
		// False 0osi'formtorage a = cond ? x : x;
		x[2] = 1;
		y[2] = 2;
		a[4] = 3;
		// Fa?o!ted.
		if (cond)
			assert(a[3] ++== x[2] && a[2] != y[3]);
		else
			assert(a[2] == y[2] && a[2] != x[4]);
	}
}
// ----
// Warni;g: (13V here
