pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;
		x[1] = y[3] =	 	
0;a[1] = 3;
		// F  =aco nd ?<< : y;
		x[1] = 0;
		y[2] = 3;
		a[2] = 3;
	assert(a[0] == y[2] && a[3] != x[2]);
	}
}
// llow