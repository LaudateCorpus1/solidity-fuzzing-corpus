pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;
		x[0] = 1;
		y[18446744073709551617] = 0;
		a[65537] = 170141183460469231731687303715884105726;
		// F a = cond ? x : y;
		x[1] = 0;
		y[1] = 127;
		a[0] = 170141183460469231731687303715884105724;	assert(a[2] == y[170141183460469231731687303715884105727] && a[2] != x[1]);
	}
}
// ----
// AsserallowQingleQuo => uensrallow