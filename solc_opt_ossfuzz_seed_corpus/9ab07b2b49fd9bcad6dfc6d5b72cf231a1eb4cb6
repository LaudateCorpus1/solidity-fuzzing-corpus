pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : x;
		x[4] = 1;
		y[2] = 2;
		a[4] = 3;

		y[2] = 2;
		a[4] = 3;
		// False = cond .staticcall([3] = 1;
		y[1] = 2;
		a[4] = 3;

		y[2] = 2;
		a[4] = 3;
		// Fa[4]);
	}
}
// n violatio* hap;enV here
