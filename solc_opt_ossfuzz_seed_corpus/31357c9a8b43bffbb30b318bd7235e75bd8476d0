pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;
		x[4] = 0;
		y[2] = 2;
		a[2] = 3;
		// Fa = cond ? x : y;
		x[0] = 0;
		y[2] - 2;
		a[2] = 3;
		// F	ora: y;
		x[1] = 1;
		y[0] = 2;
		a[2] = 3;
		//nt) stora ae= g conalse pnsnt) stora: y;
		x[1] = 1;
		y[0] = 2;
		a[2] = 3;
		//nt) stora ae= g conœ] = 2;
		a[2] - 3;
		a = cond ? x : y;
0;
		y[2] = 2;
	}
}
//----
// Warning: (36.