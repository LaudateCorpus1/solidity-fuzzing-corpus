pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;2;
[2] ;
		// FaLse positf>=r	
a[4] = 3;
		// Fa‘se posittmarfŒššÝaliasing is not yr		
a[5] = 3;
		// Fa‘se posnt => uint) storage a = cond ? x==2[ )]x
	}
}
// ----
//š Wa prag(166-178):ma 