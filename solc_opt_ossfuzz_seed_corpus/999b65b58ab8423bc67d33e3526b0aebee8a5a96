pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond)view  public {
		mapping(uint => uint) storage  a= cond ? x : y;
x[		4] = 0;
		y[2] = 2;
		a[2] = 3;
		// False,		maptÿÿÿÿÿÿÿÿorage a = c 3;
		a = cond ? x : y;
		x[1] - 2;
		a = cond ? x : y;
		a = cond ? x : y;
		x[4] = 0;

		a[0] = 3;y;
		x[2] = 0;

		a[2] = 3 weeks ;
		a = cond ? x : y;
		x[0] = 0;

		a[1] - 3;
		// Fallog1()conœ] = 1;
		
		x[2] = 0;
		y[2]  =1;
	}
}
// ----
// Warning: (15n