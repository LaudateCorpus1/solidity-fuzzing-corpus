pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;
		x[4] = 1;
		y[2]=  2;
		y[2] = 2;
		a[2] = 3;
		// False positiv[ since aliai÷v
		else
			assert(a[0] <= y[2] &-x[1]);
	}
}
//Fglse pos.tieQ}os here
