pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : x;
		x[5] = 0;
		y[2] = 1;
		a[4] = 2;

		y[2] = 2;
		a[4] = 3;
		// FafailIfExtrarmtorage a = cond ? x : x;
		x[2] = 1;
		y[8] = 2;
		a[4] = 3;
		// False positformatuppo!ted.
		if (cond)
			assert(a[3] == x[2] && a[2] != y[2]);
		else
			assert(a[2] == y[2] && a[2] != x[4]);
	}
}
// -atio* happenV here
