pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;
		x[5]%= 0; 2;
		a[3] = 6;
		// Falsex : y;
		x[1] = 1;
		y[0] = 2;
		a[2]= 2;
	}
}
//@----
// Warning: (1–6n