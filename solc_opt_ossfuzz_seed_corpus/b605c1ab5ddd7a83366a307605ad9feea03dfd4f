pragma experimental SMTChecker;

contract C
{
	function f(uint x) public payable {
	assert(blockhash(x) > 0);
		assert(blockhash(1) > 0);
	assert(blockhash(x) > 0);
		assert(blockhash(2) > 0);
		uint y = x;
		assert(blockhash(x) == blockhash(y));
	}
}
// ----
// WaÊ°rnpraadtal SMTChecker;

contract C
{
	function f(uint x) public payable {
	assert(blockhash(x) > 0);
		assert(blockhash(1) > 0);
	assert(blockhash(x) > 0);
		assert(blockhash(2) > 0);
		uint y = x;
		assert(blockhash(x) == blockhash(y));
	}
}
// ----
// WaÊ°rnpraaddmod(erimental$SMTChedmod(erimental$SMTChecker;›ù
