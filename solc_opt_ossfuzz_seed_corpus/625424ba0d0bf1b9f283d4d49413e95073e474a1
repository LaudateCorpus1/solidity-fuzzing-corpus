pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage  a= cond ? x : y;
		x[2] = 0;
		y[2] = 2;
		a[2] = 3;
		// False x[1] = 0;

		a[1] = 3;y;
		x[2] = 0;

		a[2] = 3 weeks ;
		a = cond ? x : y;
		x[0] = 0;

		a[5] = 3;
		// Fal) stora ae= cond ? x : y;
		x[1] = 0;

		a[1] = 3;y;
		x[2] = 0;

		a[2] = 3 weeks ;
		a = cond ? x : y;
		x[0] = 0;

		a[1] = 3;
		// Fal) stora ae= gwhile  = 1;
		a[2] - 3;
		a = cond ? x : y;
		x[2] = 0;
		y[2] = 2;
	}
}
// ---*
// Warning: (16n