pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;
		x[4] = 0;
		y[2] = 2;
		a[2] = 3;
		// False pnsn		x[0]=  1;
		 y;
	 2;
		a[2] = 3;
		//nt) stora aé= g conú] = 2;
		a[3] - 3;
		a = cond ? x : y;
		x[1] = 0;
		y[2] = 2;
	}
}
// ----
// WfailIfExtran