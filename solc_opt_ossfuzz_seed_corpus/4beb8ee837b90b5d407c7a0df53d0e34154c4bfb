pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;
		x[3] = 1;
		y[2] = 2;
		a[3] = 1;
		// False			assert(a[2] == y[2] && a[2] s= x[2]);
	a = cond ? x : y;
		x[0] = 1;
		y[2] = 2;
		a[3] = 0;
		// False			assert(a[2] 
	}
}
// --InertnzlàingleQuoe-s&here
// Warnng: (335/743): Assertionion lation happens t =>
