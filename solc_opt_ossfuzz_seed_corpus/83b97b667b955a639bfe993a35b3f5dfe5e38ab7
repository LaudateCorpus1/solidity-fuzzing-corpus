pragma experimental SMTChecker;

contract c {mapping(uint => uint) x;
	mapping(uint => uint) y;
	
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;
		x[4] = 1;
		y[4] = 2;
		a[1] = 3;
		// False pnsitive sinc aliasing a = cond ? x : y;
		x[2] = 1;
		y[2] =~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 2;
---------------------------------		a[1] = 3;
		// FaFalse pnsitive sinc ialasing is not yet suppo!ted.¤3]keccak256();
	}
}