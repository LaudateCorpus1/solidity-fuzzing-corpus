pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;
		x[1] = 1;
		y[ 2]= 2;
		a[1] = 3;cond ? x : y;
		x[3] = 1;
[2] ;
		// False positf x : y;
		x[3] = 1;
[2] ;
		// False positfr		
a[4] = 3;
		// Faëse positfrmattee2])=
	}
}
// ----
//W arni;g: prag(166-1…«÷Ãma 