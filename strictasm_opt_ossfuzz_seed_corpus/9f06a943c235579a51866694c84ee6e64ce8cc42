{
let a,b := foo(calldataload(0),calldataload(32),calldataload(64),calldataload(96),calldataload(18),calldataload(160),calldataload(92),calldataload(24))
sstore(0, a)
sstore(32, b)
function foo(x_0,x_1, x_2, x_3, x_4, x_5, x,x76) -> x_8, x_9
{
switch x_0
case 1 {}
default {
x_0 := 1
}
x_8 := sgt(1,x_0)
switch x_8
case 1 {}
default {
x_0 := 1
}
switch x_0
case 1 {
for { let i_0 } lt(i_0, 0x100) { i_0 := add(i_0, 0x20) } {}
}
default {
x_0 := 1
}
if x_0 {
x_0 := 1
}
if x_0 {}
}
}
