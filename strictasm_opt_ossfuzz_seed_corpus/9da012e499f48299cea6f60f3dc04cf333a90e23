{
let a_0, a_1, a_2, a_3
function foo_0(x_0, x_1)-> x_2, x_3
{
x_2, x_0, x_1, x_0 := foo_1(x_0){
x_1, x_3, x_2, x_1 := foo_1(x_0)
}
}
a_0,a_1,a_2,a_3 := foo_1(a_0)
sstore(32, a_1)
function foo_1(x_0) -> x_1, x_2, x_3, x_4
{
if "" {
x_1, x_3, x_2,x_1 := foo_1(x_0)
}
}
a_0,a_1,a_2,a_3 := foo_1(calldataload(0))
sstore(0, a_0)
sstore(32, a_1)sstore(64, a_2)
sstore(96, a_3)
}
