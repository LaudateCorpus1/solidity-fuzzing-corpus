statements {
  statements {
storage_func {
  loc {
  }
  val {
    binop {
  op: EXP    left {
    cons {
  hexval: "f\0ffffffAfdddddddddddddddffff" }
  }
  right { binop {   op: SMOD
  left { cons {
  hexval: "ffff& hexval: \"1x_91111111\\37211ÿ€11111111111111111111&1111111111111\"\n     -  }\n              }\n            }\n          }\nfff        }\n      }\n      if_body {\n     y {\n      }\n    }\n  }\n}\n" }
  }
  right { cons {
  intval: 100597760
}
  }
    }
  }
}
  }
    }
  }
  statements {
  }
  statements {
  }
  statements { storage_func {
  loc {
  }
  val {
binop {
  op: ADD
  left {
    binop {
  op: SDIV
  left {
    binop {
    left {
    binop {
    left { varref {
    }
  }
  right {
  }
    }
  }
  right {
    binop {
    left { binop { left {
binop {
  op: SDIV
  left {
binop {
  op: MUL
  left {
    binop {
    left {
    varref {
    }   }   right {
  }
    }   }   right {
    binop {
    left {
    binop {
    left { cons {
  intval: 18446744073709551524
    }   }   right {
    binop {
    left {
    unop {   op: NOT
  operand {
    cons {
  intval: 4831838208
    }   } }
  }
  right {   } }
  }
    }   }   right {
  }
    }   } }
  }
  right { cons {
  intval:  8446744073709551524
    }   } }
  }
  right { binop {   op: MUL
  left {
  }
  right {
    cons { }
  }
    }   } }
  }
  right {   } }
  }
    }   }   right {
    cons {
  intval: 18446744073709551524 }
  }
    }   }   right {
    binop {
  op: MUL   left {
  }
  right {
cons {
    }   } }
  }
    }   }   st: SSTORE
    }
  }
  statements {
    assignment {
  ref_id {
    varnum: 0   }   expr {
    binop {
  op: SLT
  left { binop {   op: MUL
  left {
binop {
left {
    varref {
  varnum: 0
}
  }
  right {
  }
}
  }
  right {
cons {
  intval: 2113929216
}
  }
    }
  }
  right {
    binop {
    left { varref {
  varnum: 0
    }
  }
  right {
  }
    }
  }
}
  }
    }
  }
}
