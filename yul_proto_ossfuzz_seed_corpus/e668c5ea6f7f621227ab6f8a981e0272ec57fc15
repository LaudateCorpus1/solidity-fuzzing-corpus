statements {
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    storage_func {
      loc {
      }
      val {
      }
      st: MSTORE
    }
  }
  statements {
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    storage_func {
      loc {
        varref {
          varnum: 65536
        }
      }
      val {
      }
      st: SSTORE
    }
  }
  statements {
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    storage_func {
      loc {
        binop {
          op: SHL
          left {
          }
          right {
            binop {
              op: SHL
              left {
              }
              right {
                unop {
                  op: NOT
                  operand {
                  }
                }
              }
            }
          }
        }
      }
      val {
        binop {
          op: SHL
          left {
          }
          right {
            binop {
              op: SHL
              left {
              }
              right {
                binop {
                  op: SHL
                  left {
                  }
                  right {
                    unop {
                      op: NOT
                      operand {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      st: MSTORE
    }
  }
  statements {
    storage_func {
      loc {
        binop {
          op: SHL
          left {
          }
          right {
            binop {
              op: SHL
              left {
              }
              right {
                unop {
                  op: NOT
                  operand {
                  }
                }
              }
            }
          }
        }
      }
      val {
        binop {
          op: SHL
          left {
          }
          right {
            binop {
              op: SHL
              left {
              }
              right {
              }
            }
          }
        }
      }
      st: MSTORE
    }
  }
  statements {
  }
  statements {
    storage_func {
      loc {
        binop {
          op: GT
          left {
            binop {
              op: SHL
              left {
                binop {
                  op: ADD
                  left {
                    binop {
                      op: LT
                      left {
                        binop {
                          op: SHL
                          left {
                            binop {
                              op: ADD
                              left {
                                binop {
                                  op: LT
                                  left {
                                    binop {
                                      op: SLT
                                      left {
                                      }
                                      right {
                                        binop {
                                          op: ADD
                                          left {
                                          }
                                          right {
                                            varref {
                                              varnum: 8388608
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  right {
                                    unop {
                                      op: MLOAD
                                      operand {
                                      }
                                    }
                                  }
                                }
                              }
                              right {
                                binop {
                                  op: ADD
                                  left {
                                    unop {
                                      op: SLOAD
                                      operand {
                                      }
                                    }
                                  }
                                  right {
                                  }
                                }
                              }
                            }
                          }
                          right {
                            unop {
                              op: SLOAD
                              operand {
                              }
                            }
                          }
                        }
                      }
                      right {
                        unop {
                          op: MLOAD
                          operand {
                          }
                        }
                      }
                    }
                  }
                  right {
                    binop {
                      op: ADD
                      left {
                        unop {
                          op: SLOAD
                          operand {
                          }
                        }
                      }
                      right {
                      }
                    }
                  }
                }
              }
              right {
                binop {
                  op: ADD
                  left {
                    binop {
                      op: LT
                      left {
                        binop {
                          op: SHL
                          left {
                            binop {
                              op: ADD
                              left {
                                binop {
                                  op: LT
                                  left {
                                    binop {
                                      op: SLT
                                      left {
                                      }
                                      right {
                                      }
                                    }
                                  }
                                  right {
                                    unop {
                                      op: MLOAD
                                      operand {
                                      }
                                    }
                                  }
                                }
                              }
                              right {
                                binop {
                                  op: ADD
                                  left {
                                    unop {
                                      op: SLOAD
                                      operand {
                                      }
                                    }
                                  }
                                  right {
                                  }
                                }
                              }
                            }
                          }
                          right {
                            unop {
                              op: SLOAD
                              operand {
                              }
                            }
                          }
                        }
                      }
                      right {
                        unop {
                          op: MLOAD
                          operand {
                          }
                        }
                      }
                    }
                  }
                  right {
                    binop {
                      op: ADD
                      left {
                        unop {
                          op: SLOAD
                          operand {
                          }
                        }
                      }
                      right {
                      }
                    }
                  }
                }
              }
            }
          }
          right {
          }
        }
      }
      val {
        varref {
          varnum: 16
        }
      }
      st: MSTORE
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    storage_func {
      loc {
        varref {
          varnum: 65536
        }
      }
      val {
      }
      st: SSTORE
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      default_block {
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
}
