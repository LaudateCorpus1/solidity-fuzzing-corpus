statements {
  statements {
  }
  statements {
  }
  statements {
  }
  statements {
  }
  statements {
    storage_func {
      loc {
      }
      val {
      }
      st: SSTORE
    }
  }
  statements {
    ifstmt {
      cond {
        varref {
          varnum: 4
        }
      }
      if_body {
        statements {
          ifstmt {
            cond {
              varref {
                varnum: 4
              }
            }
            if_body {
              statements {
                assignment {
                  ref_id {
                    varnum: 4
                  }
                  expr {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  statements {
    ifstmt {
      cond {
        varref {
          varnum: 4
        }
      }
      if_body {
        statements {
          ifstmt {
            cond {
              varref {
                varnum: 4
              }
            }
            if_body {
              statements {
                assignment {
                  ref_id {
                    varnum: 4
                  }
                  expr {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  statements {
    ifstmt {
      cond {
        varref {
          varnum: 4
        }
      }
      if_body {
        statements {
          ifstmt {
            cond {
              varref {
                varnum: 4
              }
            }
            if_body {
              statements {
                assignment {
                  ref_id {
                    varnum: 4
                  }
                  expr {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  statements {
    ifstmt {
      cond {
        varref {
          varnum: 4
        }
      }
      if_body {
        statements {
          ifstmt {
            cond {
              varref {
                varnum: 4
              }
            }
            if_body {
              statements {
                assignment {
                  ref_id {
                    varnum: 4
                  }
                  expr {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
        varref {
          varnum: 0
        }
      }
      case_stmt {
        case_lit {
          hexval: "md"
        }
        case_block {
        }
      }
      case_stmt {
        case_lit {
        }
        case_block {
        }
      }
      case_stmt {
        case_lit {
          intval: 4398065385472
        }
        case_block {
        }
      }
      case_stmt {
        case_lit {
          intval: 0
        }
        case_block {
        }
      }
      case_stmt {
        case_lit {
          intval: 31
        }
        case_block {
        }
      }
      case_stmt {
        case_lit {
          intval: 14
        }
        case_block {
        }
      }
      default_block {
        statements {
          storage_func {
            loc {
            }
            val {
            }
            st: MSTORE
          }
        }
      }
    }
  }
  statements {
  }
  statements {
  }
  statements {
    ifstmt {
      cond {
        varref {
          varnum: 4
        }
      }
      if_body {
        statements {
          ifstmt {
            cond {
              varref {
                varnum: 4
              }
            }
            if_body {
              statements {
                assignment {
                  ref_id {
                    varnum: 4
                  }
                  expr {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  statements {
    ifstmt {
      cond {
        varref {
          varnum: 4
        }
      }
      if_body {
        statements {
          assignment {
            ref_id {
              varnum: 4
            }
            expr {
            }
          }
        }
      }
    }
  }
}
