
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
function foo_m_0(x_4, x_5) -> x_6, x_7, x_8
{
}
let x_10, x_11, x_12 := foo_m_0(sload(160),calldataload(224))
sstore(288, x_10)
sstore(32, x_11)
sstore(96, x_12)
function foo_m_1(x_24, x_25) -> x_26, x_27, x_28, x_29
{
sstore(0x1000000000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000000000)
function foo_m_31() -> x_34, x_35, x_36, x_37
{
foo_n_3()
}
let x_40, x_41, x_42, x_43 := foo_m_31()
mstore(192, x_40)
mstore(256, x_41)
mstore(0, x_42)
mstore(64, x_43)
}
let x_53, x_54, x_55, x_56 := foo_m_1(sload(288),calldataload(32))
sstore(96, x_53)
sstore(160, x_54)
sstore(224, x_55)
sstore(288, x_56)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
function foo_m_70(x_73, x_74) -> x_75, x_76, x_77, x_78
{
x_73 := 0x10000000000000000000000001
}
let x_81, x_82, x_83, x_84 := foo_m_70(sload(224),calldataload(288))
sstore(32, x_81)
sstore(96, x_82)
sstore(160, x_83)
sstore(224, x_84)
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
}
function foo_m_71() -> x_98, x_99, x_100, x_101
{
let x_104, x_105, x_106, x_107 := foo_m_72()
}
let x_109, x_110, x_111, x_112 := foo_m_71()
sstore(160, x_109)
sstore(224, x_110)
sstore(288, x_111)
sstore(32, x_112)
function foo_m_72() -> x_122, x_123, x_124, x_125
{
let x_128, x_129, x_130, x_131 := foo_m_1(0x1fffffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffffff)
}
let x_135, x_136, x_137, x_138 := foo_m_72()
sstore(32, x_135)
sstore(96, x_136)
sstore(160, x_137)
sstore(224, x_138)
}
function foo_m_2() -> x_148, x_149, x_150, x_151
{
let x_154, x_155, x_156, x_157 := foo_m_1(0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
}
let x_161, x_162, x_163, x_164 := foo_m_2()
sstore(224, x_161)
sstore(288, x_162)
sstore(32, x_163)
sstore(96, x_164)
function foo_n_3()
{
foo_n_3()
}
foo_n_3()
}
}

			}
		}
	}
		