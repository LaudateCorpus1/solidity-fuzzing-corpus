
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x10000000000000000000000000000000000, 0x100000000000000000000000000000000000, 0x1000000000000000000000000000000000000, 0x10000000000000000000000000000000000000)
let x_12, x_13, x_14, x_15 := foo_m_0(0x100000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000000000)
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
x_2 := x_2
}
}
if 0x1000000000000000000000000000000000000000000000000 {
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
x_2 := x_2
}
}
mstore(0x10000000000000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000000000000)
let x_25, x_26, x_27, x_28 := foo_m_0(x_2, add(0x1000000000000000000000000000000000000000000000000000000000,0x10000000000000000000000000000000000000000000000000000000000), 0x100000000000000000000000000000000000000000000000000000000000, balance(0x1000000000000000000000000000000000000000000000000000000000000))
function foo_m_0(x_34, x_35, x_36, x_37) -> x_38, x_39, x_40, x_41
{
}
let x_44, x_45, x_46, x_47 := foo_m_0(0x1000000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000000001, 0x1000000000000000000000000000000000000000000000001)
selfdestruct(addmod(0x100000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000001, 0x1000000000000000000000000000000000000000000001))
}
}

			}
		}
	}
		