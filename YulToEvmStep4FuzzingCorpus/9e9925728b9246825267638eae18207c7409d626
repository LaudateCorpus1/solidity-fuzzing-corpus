
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x2000000000000000000000000000000000000000000000000000000001, 0x200000000000000000000000000000000000000000000000000000001, addmod(0x20000000000000000000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000000000000000000001, callvalue()))
let x_12, x_13, x_14, x_15 := foo_m_0(0x200000000000000000000000000000000000000000000001, 0x20000000000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000000000001)
let x_21, x_22, x_23, x_24 := foo_m_0(0x200000000000000000000000000000000000001, 0x20000000000000000000000000000000000001, 0x2000000000000000000000000000000000001)
calldatacopy(1078036791296, 0x200000000000000000000000000000000001, 0x20000000000000000000000000000000001)
mstore(0x2000000000000000000000000000000001, 0x200000000000000000000000000000001)
let x_34, x_35, x_36, x_37 := foo_m_0(0x20000000000000000000000001, 0x2000000000000000000000001, 0x200000000000000000000001)
function foo_m_0(x_42, x_43, x_44) -> x_45, x_46, x_47, x_48
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
x_46 := 0x200000000000001
}
sstore(0x20000000000001, x_43)
mstore(slt(x_42,0x2000000000001), x_46)
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
x_46 := 0x200000000001
}
}
{
codecopy(byte(0x20000000001,0x2000000001), difficulty(), div(0x200000001,0x20000001))
}
let x_59, x_60, x_61, x_62 := foo_m_0(0x3, 0x3f, calldataload(0x3ff))
}
}

			}
		}
	}
		