
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2 := foo_s_0(0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x8)
let x_8 := foo_s_0(0x80000, 0x800000, x_2)
let x_13 := foo_s_0(0x8000000000, 0x80000000000, foo_s_0(0x800000000000, 0x8000000000000, 0x80000000000000)
)
mstore(0x800000000000000, 0x8000000000000000)
let x_23 := foo_s_0(0x80000000000000000000, 0x800000000000000000000, 0x8000000000000000000000)
function foo_s_0(x_28, x_29, x_30) -> x_31
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
extcodecopy(addmod(0x8000000000000000000000000000, 0x80000000000000000000000000000, origin()), not(0x800000000000000000000000000000), 0x8000000000000000000000000000000, 0x80000000000000000000000000000000)
}
mstore8(0x800000000000000000000000000000000, addmod(0x8000000000000000000000000000000000, 0x80000000000000000000000000000000000, origin()))
switch x_28
case 0x800000000000000000000000000000000000 {}
default {
{
{
extcodecopy(0x8000000000000000000000000000000000000, 0x80000000000000000000000000000000000000, 0x800000000000000000000000000000000000000, 0x8000000000000000000000000000000000000000)
}
}
}
}
let x_47 := foo_s_0(0x80000000000000000000000000000000000000000000, 0x800000000000000000000000000000000000000000000, 0x8000000000000000000000000000000000000000000000)
let x_53 := foo_s_0(0x80000000000000000000000000000000000000000000000000, 0x800000000000000000000000000000000000000000000000000, 0x8000000000000000000000000000000000000000000000000000)
}
}

			}
		}
	}
		