
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x40000000000000000000000000000000000000000000000000000000000, 0x400000000000000000000000000000000000000000000000000000000000, add(0x4000000000000000000000000000000000000000000000000000000000000,0x40000000000000000000000000000000000000000000000000000000000000))
let x_12, x_13, x_14, x_15 := foo_m_0(x_2, 0x400000000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000000001)
let x_20, x_21, x_22, x_23 := foo_m_0(0x4000000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000001)
let x_29, x_30, x_31, x_32 := foo_m_0(0x4000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000001, call(0x40000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000001, 134217728, codesize(), 0x400000000000000000000000000000000000001, 0x40000000000000000000000000000000000001, 0x4000000000000000000000000000000000001))
mstore(0x400000000000000000000000000000000001, 0x40000000000000000000000000000000001)
let x_44, x_45, x_46, x_47 := foo_m_0(0x4000000000000000000000000001, 0x400000000000000000000000001, 0x40000000000000000000000001)
function foo_m_0(x_52, x_53, x_54) -> x_55, x_56, x_57, x_58
{
let x_60 := 0x4000000000000001
switch mload(0x400000000000001)
case 0x40000000000001 {}
case 0x4000000000001 {
x_52 := 0x400000000001
}
case 0x40000000001 {
x_52 := 0x4000000001
}
case 0x400000001 {
x_52 := 0x40000001
}
codecopy(x_52, 0x4000001, 0x400001)
}
let x_72, x_73, x_74, x_75 := foo_m_0(mload(256),0x7ffff,sload(96))
sstore(160, x_72)
sstore(224, x_73)
sstore(288, x_74)
sstore(32, x_75)
let x_93, x_94, x_95, x_96 := foo_m_0(0x7fffffffffffffffffffff, 0x7ffffffffffffffffffffff, 0x7fffffffffffffffffffffff)
let x_102, x_103, x_104, x_105 := foo_m_0(0x7ffffffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffff)
}
}

			}
		}
	}
		