
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3 := foo_m_0(0x40000000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000000001)
{
let x_8, x_9 := foo_m_0(0x40000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000001)
}
{
let x_14, x_15 := foo_m_0(0x40000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000001)
let x_20, x_21 := foo_m_0(0x40000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000001)
let x_26, x_27 := foo_m_0(0x40000000000000000000000000000000001, 0x4000000000000000000000000000000001)
}
let x_32, x_33 := foo_m_0(slt(true,addmod(0x40000000000000000000000000001, 0x4000000000000000000000000001, 0x400000000000000000000000001)), 0x40000000000000000000000001)
let x_40, x_41 := foo_m_0(addmod(0x400000000000000000001, 0x40000000000000000001, 0x4000000000000000001), 0x400000000000000001)
let x_48, x_49 := foo_m_0(0x4000000000001, 0x400000000001)
let x_54, x_55 := foo_m_0(0x4000001, 0x400001)
function foo_m_0(x_59, x_60) -> x_61, x_62
{
switch create(caller(), 0x7, 0x7f)
case 0x7ff {}
default {
switch x_59
case "" {}
default {
selfdestruct(0x7fff)
}
}
}
let x_68, x_69 := foo_m_0(0x7fffffffff,sload(160))
sstore(224, x_68)
sstore(288, x_69)
let x_81, x_82 := foo_m_0(0x7ffffffffffffffffffff, 0x7fffffffffffffffffffff)
}
}

			}
		}
	}
		