
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x0, 0x1)
{
}
let x_11, x_12, x_13, x_14 := foo_m_0(0x100, 0x101, 0x10)
let x_20, x_21, x_22, x_23 := foo_m_0(0x100000000, 0x1000000000, call(0x10000000000, 0x100000000000, 0x1000000000000, 0x10000000000000, 0x100000000000000, 0x1000000000000000, 0x10000000000000000))
mstore(0x100000000000000000, 0x1000000000000000000)
let x_37, x_38, x_39, x_40 := foo_m_0(0x10000000000000000000000000, 0x100000000000000000000000000, 0x1000000000000000000000000000)
function foo_m_0(x_45, x_46, x_47) -> x_48, x_49, x_50, x_51
{
sstore("", 0x1000000000000000000000000000000000000)
sstore(0x10000000000000000000000000000000000000, slt(x_47,0x100000000000000000000000000000000000000))
mstore(0x1000000000000000000000000000000000000000, addmod(0x10000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000, origin()))
sstore(slt(0x1000000000000000000000000000000000000000000,0x10000000000000000000000000000000000000000000), xor(x_45,0x100000000000000000000000000000000000000000000))
}
let x_63, x_64, x_65, x_66 := foo_m_0(0x1000000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000000000000000)
let x_72, x_73, x_74, x_75 := foo_m_0(0x1000000000000000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000000000000000000000000)
}
}

			}
		}
	}
		