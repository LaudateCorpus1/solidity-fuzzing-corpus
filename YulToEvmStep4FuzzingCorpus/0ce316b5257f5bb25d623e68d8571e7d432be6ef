
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x7ffffffffffffffffffffffffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffffffffffffffffffffffffff, add(0x7ffffffffffffffffffffffffffffffffffffffffffffffffff,0x7fffffffffffffffffffffffffffffffffffffffffffffffffff))
{
}
let x_12, x_13, x_14, x_15 := foo_m_0(0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
let x_21, x_22, x_23, x_24 := foo_m_0(0x8000, 0x80000, 0x800000)
mstore(0x8000000, 0x80000000)
let x_32, x_33, x_34, x_35 := foo_m_0(0x800000000000000, 0x8000000000000000, 0x80000000000000000)
function foo_m_0(x_40, x_41, x_42) -> x_43, x_44, x_45, x_46
{
sstore(0x80000000000000000000000000, 0x800000000000000000000000000)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
if 0x8000000000000000000000000000 {
selfdestruct(x_40)
}
}
}
}
let x_52, x_53, x_54, x_55 := foo_m_0(0x80000000000000000000000000000000000, 0x800000000000000000000000000000000000, not(0x8000000000000000000000000000000000000))
}
}

			}
		}
	}
		