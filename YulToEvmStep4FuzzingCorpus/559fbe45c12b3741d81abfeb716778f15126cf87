
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
function foo_m_0(x_1, x_2, x_3) -> x_4, x_5, x_6, x_7
{
sstore(div(x_1,0x3fffffff), 0x3ffffffff)
}
let x_11, x_12, x_13, x_14 := foo_m_0(calldataload(224),sload(288),calldataload(32))
sstore(96, x_11)
sstore(160, x_12)
sstore(224, x_13)
sstore(288, x_14)
{
mstore(0x3ffffffffffffffffffffffffffff, 0x3fffffffffffffffffffffffffffff)
}
let x_33, x_34, x_35, x_36 := foo_m_0(0x3ffffffffffffffffffffffffffffffffffff, 0x3fffffffffffffffffffffffffffffffffffff, 0x3ffffffffffffffffffffffffffffffffffffff)
mstore(0x3fffffffffffffffffffffffffffffffffffffff, call(0x3ffffffffffffffffffffffffffffffffffffffff, 0x3fffffffffffffffffffffffffffffffffffffffff, 0x3ffffffffffffffffffffffffffffffffffffffffff, 0x3fffffffffffffffffffffffffffffffffffffffffff, 0x3ffffffffffffffffffffffffffffffffffffffffffff, 0x3fffffffffffffffffffffffffffffffffffffffffffff, 0x3ffffffffffffffffffffffffffffffffffffffffffffff))
switch mload(0x3fffffffffffffffffffffffffffffffffffffffffffffff)
case 0x3ffffffffffffffffffffffffffffffffffffffffffffffff {
x_33 := 0x3fffffffffffffffffffffffffffffffffffffffffffffffff
}
case 0x3ffffffffffffffffffffffffffffffffffffffffffffffffff {
switch 0x3fffffffffffffffffffffffffffffffffffffffffffffffffff
default {
}
}
case 0x3ffffffffffffffffffffffffffffffffffffffffffffffffffff {
let x_56, x_57, x_58, x_59 := foo_m_0(0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
}
case 0x03ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff {
sstore(0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x4)
mstore8(div(0x40,0x400), 0x4000)
}
case 0x40000 {
extcodecopy(0x400000, 0x4000000, 0x40000000, 0x400000000)
}
let x_76, x_77, x_78, x_79 := foo_m_0(0x4000000000000000, 0x40000000000000000, 0x400000000000000000)
}
}

			}
		}
	}
		