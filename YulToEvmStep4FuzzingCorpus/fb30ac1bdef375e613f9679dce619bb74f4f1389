
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4 := foo_m_0(0xa1, 0xff, 0x100)
{
}
x_2 := create(0x101, 0x10, 0x100)
let x_13, x_14, x_15 := foo_m_0(0x100000000, 0x1000000000, not(0x10000000000))
mstore(0x100000000000, 0x1000000000000)
let x_23, x_24, x_25 := foo_m_0(0x1000000000000000000, 0x10000000000000000000, 0x100000000000000000000)
function foo_m_0(x_30, x_31, x_32) -> x_33, x_34, x_35
{
calldatacopy(0x10000000000000000000000000000, x_30, 0x100000000000000000000000000000)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
{
if 0x1000000000000000000000000000000 {
{
continue
}
}
}
mstore(0x10000000000000000000000000000000, 0x100000000000000000000000000000000)
}
mstore8(slt(x_30,and(0x1000000000000000000000000000000000,0x10000000000000000000000000000000000)), slt(x_30,0x100000000000000000000000000000000000))
}
let x_45, x_46, x_47 := foo_m_0(mload(0),0x100000000000000000000000000000000000000000000,sload(160))
sstore(224, x_45)
sstore(288, x_46)
sstore(32, x_47)
let x_63, x_64, x_65 := foo_m_0(0x10000000000000000000000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000000000000000000)
let x_71, x_72, x_73 := foo_m_0(0x10000000000000000000000000000000000000000000000000000000000001, 0x1000000000000000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000000000000000001)
}
}

			}
		}
	}
		