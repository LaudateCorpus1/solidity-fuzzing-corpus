
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
pop(0x7ffffffffff)
function foo_m_0(x_3, x_4) -> x_5, x_6
{
function foo_m_8(x_9, x_10) -> x_11, x_12
{
function foo_n_14(x_15, x_16, x_17, x_18)
{
function foo_m_20(x_21, x_22) -> x_23, x_24
{
function foo_m_26(x_27, x_28, x_29, x_30) -> x_31, x_32
{
function foo_m_34(x_35, x_36, x_37, x_38) -> x_39, x_40
{
function foo_m_42(x_43) -> x_44, x_45
{
}
let x_47, x_48 := foo_m_42(sload(32))
sstore(96, x_47)
sstore(160, x_48)
}
let x_56, x_57 := foo_m_34(0x800000,sload(96),calldataload(160),sload(224))
sstore(288, x_56)
sstore(32, x_57)
}
let x_72, x_73 := foo_m_26(0x8000000000000000000000,sload(288),calldataload(32),sload(96))
sstore(160, x_72)
sstore(224, x_73)
}
let x_88, x_89 := foo_m_20(0x80000000000000000000000000000000000000,sload(160))
sstore(224, x_88)
sstore(288, x_89)
}
foo_n_14(calldataload(32),sload(96),calldataload(160),sload(224))
}
let x_108, x_109 := foo_m_8(0x8000000000000000000000000000000000000000000000000000000000,sload(160))
sstore(224, x_108)
sstore(288, x_109)
}
let x_120, x_121 := foo_m_0(0x80000000000000000000000000000000000000000000000000000000001,sload(224))
sstore(288, x_120)
sstore(32, x_121)
function foo_m_1(x_132, x_133) -> x_134, x_135
{
function foo_m_137(x_138, x_139, x_140, x_141) -> x_142, x_143
{
function foo_m_145(x_146, x_147, x_148, x_149) -> x_150, x_151
{
function foo_m_153(x_154, x_155, x_156, x_157) -> x_158, x_159
{
let x_161, x_162
}
let x_163, x_164 := foo_m_153(sload(224),calldataload(288),sload(32),calldataload(96))
sstore(160, x_163)
sstore(224, x_164)
}
let x_178, x_179 := foo_m_145(mload(64),0xff,sload(224),calldataload(288))
sstore(32, x_178)
sstore(96, x_179)
}
let x_194, x_195 := foo_m_137(mload(256),0xffffffffffffffffff,sload(96),calldataload(160))
sstore(224, x_194)
sstore(288, x_195)
}
let x_210, x_211 := foo_m_1(mload(128),0xffffffffffffffffffffffffffffffffff)
sstore(288, x_210)
sstore(32, x_211)
}
}

			}
		}
	}
		