
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x2000000000000000000000000000000000000000000001, 0x200000000000000000000000000000000000000000001, 0x20000000000000000000000000000000000000000001)
function foo_m_0(x_10, x_11, x_12) -> x_13, x_14, x_15, x_16
{
sstore(0x20000000000000000000000000000000001, byte(x_10,0x2000000000000000000000000000000001))
}
let x_21, x_22, x_23, x_24 := foo_m_0(0x200000000000000000000000001, 0x20000000000000000000000001, 0x2000000000000000000000001)
let x_30, x_31, x_32, x_33 := foo_m_0(0x200000000000000001, 0x20000000000000001, 0x2000000000000001)
for {}
byte(call(0x0, 0x0, 0x0, 0x0, 0x0, add(0x0,0x0), 0x0),0x0){}
{
extcodecopy(0x200000000000001, calldataload(0x20000000000001), 0x2000000000001, 0x200000000001)
}
let x_43, x_44, x_45, x_46 := foo_m_0(0x20001, 0x2001, 0x201)
let x_52, x_53, x_54, x_55 := foo_m_0(0x3fffff, call(0x3ffffff, 0x3fffffff, 0x3ffffffff, 0x3fffffffff, 0x3ffffffffff, add(0x3fffffffffff,0x3ffffffffffff), 0x3fffffffffffff), 0x3ffffffffffffff)
let x_68, x_69, x_70, x_71 := foo_m_0(0x3fffffffffffffffffffff, 0x3ffffffffffffffffffffff, 0x3fffffffffffffffffffffff)
}
}

			}
		}
	}
		