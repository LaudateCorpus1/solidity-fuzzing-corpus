
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
function foo_m_2(x_6, x_7, x_8, x_9) -> x_10, x_11, x_12, x_13
{
function foo_m_15() -> x_16, x_17, x_18, x_19
{
}
let x_21, x_22, x_23, x_24 := foo_m_15()
sstore(224, x_21)
sstore(288, x_22)
sstore(32, x_23)
sstore(96, x_24)
}
let x_34, x_35, x_36, x_37 := foo_m_2(0x100000000000000000000000000000000000000000,sload(96),calldataload(160),sload(224))
sstore(288, x_34)
sstore(32, x_35)
sstore(96, x_36)
sstore(160, x_37)
function foo_n_3(x_56, x_57, x_58, x_59)
{
}
function foo_m_4(x_61, x_62, x_63, x_64) -> x_65, x_66, x_67, x_68
{
}
let x_70, x_71, x_72, x_73 := foo_m_4(0x100000000000000000000000000000000000000000000000001,sload(288),calldataload(32),sload(96))
sstore(160, x_70)
sstore(224, x_71)
sstore(288, x_72)
sstore(32, x_73)
function foo_m_5(x_92, x_93, x_94, x_95) -> x_96, x_97, x_98, x_99
{
}
let x_101, x_102, x_103, x_104 := foo_m_5(sload(224),calldataload(288),sload(32),calldataload(96))
sstore(160, x_101)
sstore(224, x_102)
sstore(288, x_103)
sstore(32, x_104)
}
function foo_m_0(x_122, x_123, x_124) -> x_125, x_126, x_127, x_128
{
function foo_m_130(x_131, x_132, x_133, x_134) -> x_135, x_136, x_137, x_138
{
leave
}
let x_140, x_141, x_142, x_143 := foo_m_130(mload(192),0x1fffffffffffffffffffffff,sload(32),calldataload(96))
sstore(160, x_140)
sstore(224, x_141)
sstore(288, x_142)
sstore(32, x_143)
}
let x_162, x_163, x_164, x_165 := foo_m_0(0x1fffffffffffffffffffffffffffffffffffffffffff,sload(32),calldataload(96))
sstore(160, x_162)
sstore(224, x_163)
sstore(288, x_164)
sstore(32, x_165)
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
function foo_m_182(x_186, x_187, x_188, x_189) -> x_190, x_191, x_192, x_193
{
function foo_m_195(x_196, x_197, x_198, x_199) -> x_200, x_201, x_202, x_203
{
}
let x_205, x_206, x_207, x_208 := foo_m_195(sload(32),calldataload(96),sload(160),calldataload(224))
sstore(288, x_205)
sstore(32, x_206)
sstore(96, x_207)
sstore(160, x_208)
}
let x_226, x_227, x_228, x_229 := foo_m_182(0x20000000000000000000000000000000000000000000,sload(160),calldataload(224),sload(288))
sstore(32, x_226)
sstore(96, x_227)
sstore(160, x_228)
sstore(224, x_229)
function foo_m_183(x_248, x_249, x_250, x_251) -> x_252, x_253, x_254, x_255
{
}
let x_257, x_258, x_259, x_260 := foo_m_183(sload(96),calldataload(160),sload(224),calldataload(288))
sstore(32, x_257)
sstore(96, x_258)
sstore(160, x_259)
sstore(224, x_260)
function foo_m_184(x_278, x_279, x_280, x_281) -> x_282, x_283, x_284, x_285
{
}
let x_287, x_288, x_289, x_290 := foo_m_184(calldataload(96),sload(160),calldataload(224),sload(288))
sstore(32, x_287)
sstore(96, x_288)
sstore(160, x_289)
sstore(224, x_290)
function foo_m_185(x_308, x_309, x_310, x_311) -> x_312, x_313, x_314, x_315
{
function foo_n_317(x_318, x_319, x_320, x_321)
{
function foo_m_323(x_324, x_325, x_326, x_327) -> x_328, x_329, x_330, x_331
{
}
let x_333, x_334, x_335, x_336 := foo_m_323(sload(288),calldataload(32),sload(96),calldataload(160))
sstore(224, x_333)
sstore(288, x_334)
sstore(32, x_335)
sstore(96, x_336)
}
foo_n_317(sload(160),calldataload(224),sload(288),calldataload(32))
}
let x_362, x_363, x_364, x_365 := foo_m_185(0x3ffffffffffffffffffffffffffffffffffffffffffffffffffff,sload(32),calldataload(96),sload(160))
sstore(224, x_362)
sstore(288, x_363)
sstore(32, x_364)
sstore(96, x_365)
}
function foo_m_1(x_384, x_385, x_386, x_387) -> x_388, x_389, x_390, x_391
{
function foo_m_393(x_394, x_395, x_396, x_397) -> x_398, x_399, x_400, x_401
{
}
let x_403, x_404, x_405, x_406 := foo_m_393(calldataload(288),sload(32),calldataload(96),sload(160))
sstore(224, x_403)
sstore(288, x_404)
sstore(32, x_405)
sstore(96, x_406)
}
let x_424, x_425, x_426, x_427 := foo_m_1(mload(0),0x40000000000000000000000000000000000000000000000000000,sload(160),calldataload(224))
sstore(288, x_424)
sstore(32, x_425)
sstore(96, x_426)
sstore(160, x_427)
}
}

			}
		}
	}
		