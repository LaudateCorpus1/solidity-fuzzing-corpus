
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
if 0x800000000000000000000000000000000000000000000000000000000000 {
let x_3, x_4, x_5, x_6 := foo_m_0(0x80000000000000000000000000000000000000000000000000000000000001, 0x8000000000000000000000000000000000000000000000000000000000001)
}
let x_11, x_12, x_13, x_14 := foo_m_0(add(add(0x800000000000000000000000000000000000000000000000000001,add(call(0x80000000000000000000000000000000000000000000000000001, 0x8000000000000000000000000000000000000000000000000001, 0x800000000000000000000000000000000000000000000000001, 0x80000000000000000000000000000000000000000000000001, 0x8000000000000000000000000000000000000000000000001, 0x800000000000000000000000000000000000000000000001, 0x80000000000000000000000000000000000000000000001),0x8000000000000000000000000000000000000000000001)),0x800000000000000000000000000000000000000000001), 0x80000000000000000000000000000000000000000001)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
let x_28, x_29, x_30, x_31 := foo_m_0(0x8000000000000000000000000000000000001, 0x800000000000000000000000000000000001)
}
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
extcodecopy(0x80000000000000000000000000000000001, 0x8000000000000000000000000000000001, 0x800000000000000000000000000000001, 0x80000000000000000000000000000001)
}
function foo_m_0(x_39, x_40) -> x_41, x_42, x_43, x_44
{
switch x_39
case 0x800000000000000000000001 {}
default {
{
{
extcodecopy(0x80000000000000000000001, 0x8000000000000000000001, 0x800000000000000000001, 0x80000000000000000001)
}
{
extcodecopy(0x8000000000000000001, 0x800000000000000001, 0x80000000000000001, 0x8000000000000001)
}
}
}
}
sstore(xor(0x800000000000001,0x80000000000001), 0x8000000000001)
}
}

			}
		}
	}
		