
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x7ffffffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffff)
{
}
let x_11, x_12, x_13, x_14 := foo_m_0(0x7fffffffffffffffffffffffffffffffffffffff, slt(0x7ffffffffffffffffffffffffffffffffffffffff,call(0x7fffffffffffffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffffffffffffffff, add(addmod(x_2, 0x7fffffffffffffffffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffffffffffffffffff),0x7fffffffffffffffffffffffffffffffffffffffffffffff), 0x7ffffffffffffffffffffffffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffffffffffffffffffffffffff)), 0x7ffffffffffffffffffffffffffffffffffffffffffffffffff)
let x_29, x_30, x_31, x_32 := foo_m_0(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, not(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))
mstore(msize(), msize())
let x_38, x_39, x_40, x_41 := foo_m_0(0x800, 0x8000, 0x80000)
function foo_m_0(x_46, x_47, x_48) -> x_49, x_50, x_51, x_52
{
sstore(x_46, 0x80000000000000)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
{
if 0x800000000000000 {
leave
}
}
}
mstore8(slt(x_46,0x8000000000000000), or(x_46,0x80000000000000000))
}
let x_58, x_59, x_60, x_61 := foo_m_0(0x8000000000000000000000000,sload(224),calldataload(288))
sstore(32, x_58)
sstore(96, x_59)
sstore(160, x_60)
sstore(224, x_61)
let x_79, x_80, x_81, x_82 := foo_m_0(0x80000000000000000000000000000000000000000000, 0x800000000000000000000000000000000000000000000, 0x8000000000000000000000000000000000000000000000)
let x_88, x_89, x_90, x_91 := foo_m_0(0x80000000000000000000000000000000000000000000000000000, 0x800000000000000000000000000000000000000000000000000000, 0x8000000000000000000000000000000000000000000000000000000)
}
}

			}
		}
	}
		