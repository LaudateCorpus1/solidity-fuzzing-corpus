
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
sstore(foo_s_1(0x20000000000000000000000000000)
, 0x200000000000000000000000000000)
let x_5, x_6, x_7 := foo_m_0(0x200000000000000000000000000000000000, 0x2000000000000000000000000000000000000, 0x20000000000000000000000000000000000000)
function foo_m_0(x_12, x_13, x_14) -> x_15, x_16, x_17
{
let x_20 := foo_s_1(0x2000000000000000000000000000000000000000000000000)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
x_12 := 0x20000000000000000000000000000000000000000000000000
}
}
sstore(mod(x_12,0x200000000000000000000000000000000000000000000000000), 0x2000000000000000000000000000000000000000000000000000)
}
let x_26, x_27, x_28 := foo_m_0(sload(32),calldataload(96),sload(160))
sstore(224, x_26)
sstore(288, x_27)
sstore(32, x_28)
let x_43, x_44, x_45 := foo_m_0(0x2000000000000000000000000000000000000000000000000000001, 0x200000000000000000000000000000000000000000000000000001, 0x20000000000000000000000000000000000000000000000000001)
let x_51, x_52, x_53 := foo_m_0(0x20000000000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000000000001, 0x200000000000000000000000000000000000000000001)
function foo_s_1(x_58) -> x_59
{
x_59 := not(foo_s_1(mulmod(mload(0x20000000000000000000000000000000000000001), 0x2000000000000000000000000000000000000001, 0x200000000000000000000000000000000000001))
)
}
let x_64 := foo_s_1(sload(224))
sstore(288, x_64)
let x_71, x_72, x_73 := foo_m_0(0x200000000000000000000000001, 0x20000000000000000000000001, 0x2000000000000000000000001)
}
}

			}
		}
	}
		