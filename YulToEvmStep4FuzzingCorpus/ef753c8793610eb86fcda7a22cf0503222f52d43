
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
switch gas()
case 0x200000000000000000000000000 {}
case 0x2000000000000000000000000000 {}
case 0x20000000000000000000000000000 {}
case 0x200000000000000000000000000000 {}
case 0x02000000000000000000000000000000 {}
case 0x20000000000000000000000000000000 {}
case 0x200000000000000000000000000000000 {}
case 0x2000000000000000000000000000000000 {}
case 0x20000000000000000000000000000000000 {
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
}
}
case 0x200000000000000000000000000000000000 {}
case 0x2000000000000000000000000000000000000 {}
case 0x20000000000000000000000000000000000000 {}
case 0x200000000000000000000000000000000000000 {}
case 0x2000000000000000000000000000000000000000 {}
case 0x20000000000000000000000000000000000000000 {}
case 0x200000000000000000000000000000000000000000 {}
case 0x2000000000000000000000000000000000000000000 {}
case "" {}
case 0x20000000000000000000000000000000000000000000 {}
case 0x200000000000000000000000000000000000000000000 {}
case 0x2000000000000000000000000000000000000000000000 {
function foo_m_20(x_21, x_22, x_23, x_24) -> x_25, x_26
{
function foo_m_28(x_29, x_30, x_31, x_32) -> x_33, x_34
{
}
let x_36, x_37 := foo_m_28(0x2000000000000000000000000000000000000000000000000000000000001,sload(96),calldataload(160),sload(224))
sstore(288, x_36)
sstore(32, x_37)
}
let x_52, x_53 := foo_m_20(0x200000000000000000000000000000000000000000001,sload(288),calldataload(32),sload(96))
sstore(160, x_52)
sstore(224, x_53)
}
case 0x2000000000000000000000000000000001 {}
case 0x200000000000000000000000000000001 {}
case 0x20000000000000000000000000000001 {}
case 0x2000000000000000000000000000001 {}
case 0x200000000000000000000000000001 {}
case 0x20000000000000000000000000001 {}
case 0x2000000000000000000000000001 {}
case 0x200000000000000000000000001 {}
case 0x20000000000000000000000001 {}
default {
stop()
}
}
}

			}
		}
	}
		