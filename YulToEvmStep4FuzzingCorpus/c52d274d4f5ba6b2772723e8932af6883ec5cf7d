
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
function foo_m_0(x_3, x_4) -> x_5, x_6, x_7, x_8
{
sstore(0x100000000000000001, 0x10000000000000001)
let x_13, x_14, x_15, x_16 := foo_m_0(0x1000000001, 0x100000001)
}
let x_20, x_21, x_22, x_23 := foo_m_0(mload(192),0x1fff)
sstore(32, x_20)
sstore(96, x_21)
sstore(160, x_22)
sstore(224, x_23)
pop(call(0x1ffffffffffff, 0x1fffffffffffff, 0x1ffffffffffffff, 0x1fffffffffffffff, mulmod(0x1ffffffffffffffff, 0x1fffffffffffffffff, 0x1ffffffffffffffffff), 0x1fffffffffffffffffff, 0x1ffffffffffffffffffff))
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
}
}
function foo_m_1() -> x_47, x_48, x_49, x_50
{
let x_53, x_54, x_55, x_56 := foo_m_1()
}
let x_58, x_59, x_60, x_61 := foo_m_1()
mstore(128, x_58)
mstore(192, x_59)
mstore(256, x_60)
mstore(0, x_61)
function foo_m_2() -> x_71, x_72, x_73, x_74
{
let x_77, x_78, x_79, x_80 := foo_m_1()
}
let x_82, x_83, x_84, x_85 := foo_m_2()
mstore(256, x_82)
mstore(0, x_83)
mstore(64, x_84)
mstore(128, x_85)
}
}

			}
		}
	}
		