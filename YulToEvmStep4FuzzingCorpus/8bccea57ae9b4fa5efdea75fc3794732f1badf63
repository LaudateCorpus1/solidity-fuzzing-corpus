
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2 := foo_s_0(foo_s_0(0x10000000000000000000000000000000, 0x100000000000000000000000000000000, codesize())
, 0x1000000000000000000000000000000000, 0x10000000000000000000000000000000000)
let x_9 := foo_s_0(0x100000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000, codesize())
let x_14 := foo_s_0(0x10000000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000000, foo_s_0(0x1000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000000000)
)
mstore(0x1000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000)
let x_24 := foo_s_0(0x100000000000000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000000000)
function foo_s_0(x_29, x_30, x_31) -> x_32
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
extcodecopy(0x10000000000000000000000000000000000000000000000000000000000000, balance(0x100000000000000000000000000000000000000000000000000000000000000), 0x1000000000000000000000000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000000000000000000001)
extcodecopy(0x100000000000000000000000000000000000000000000000000000000000001, call(not(0x10000000000000000000000000000000000000000000000000000000000001), 0x1000000000000000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000000000000000001, 0x1000000000000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000000000000001, keccak256(0x10000000000000000000000000000000000000000000000000000001,0x1000000000000000000000000000000000000000000000000000001)), 0x100000000000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000000000001)
}
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
mstore8(0x1000000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000000001)
}
sstore(xor(0x10000000000000000000000000000000000000000000000001,0x1000000000000000000000000000000000000000000000001), xor(x_29,0x100000000000000000000000000000000000000000000001))
}
let x_54 := foo_s_0(calldataload(224),sload(288),calldataload(32))
sstore(96, x_54)
let x_65 := foo_s_0(0x1000000000000000000000000000000001, 0x100000000000000000000000000000001, 0x10000000000000000000000000000001)
}
}

			}
		}
	}
		