
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
function foo_m_0(x_2, x_3, x_4, x_5) -> x_6, x_7, x_8, x_9
{
}
function foo_m_1(x_11, x_12, x_13, x_14) -> x_15, x_16, x_17, x_18
{
let x_21, x_22, x_23, x_24 := foo_m_0(0xffffffffffffffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffffffffffffffffff)
let x_31, x_32, x_33, x_34 := foo_m_0(caller(), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
function foo_m_39() -> x_42, x_43, x_44, x_45
{
}
let x_47, x_48, x_49, x_50 := foo_m_39()
sstore(96, x_47)
sstore(160, x_48)
sstore(224, x_49)
sstore(288, x_50)
function foo_m_40(x_60, x_61, x_62, x_63) -> x_64, x_65, x_66, x_67
{
mstore(0x1000000000000000, not(0x10000000000000000))
}
let x_71, x_72, x_73, x_74 := foo_m_40(calldataload(224),sload(288),calldataload(32),sload(96))
sstore(160, x_71)
sstore(224, x_72)
sstore(288, x_73)
sstore(32, x_74)
function foo_m_41(x_92, x_93, x_94, x_95) -> x_96, x_97, x_98, x_99
{
}
let x_101, x_102, x_103, x_104 := foo_m_41(sload(224),calldataload(288),sload(32),calldataload(96))
sstore(160, x_101)
sstore(224, x_102)
sstore(288, x_103)
sstore(32, x_104)
}
}
let x_123, x_124, x_125, x_126 := foo_m_0(mload(0x100000000000000000000000000000000000000000000000000001), mulmod(add(x_23,0x10000000000000000000000000000000000000000000000000001), 0x1000000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000000001), 0x10000000000000000000000000000000000000000000000001, x_11)
}
calldatacopy(0x1000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000001)
}
}

			}
		}
	}
		