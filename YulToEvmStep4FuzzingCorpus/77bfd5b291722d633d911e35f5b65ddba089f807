
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x800000, 0x8000000, 0x80000000)
{
}
let x_11, x_12, x_13, x_14 := foo_m_0(0x800000000000000, slt(addmod(0x8000000000000000, "", 0x80000000000000000),call(0x800000000000000000, 0x8000000000000000000, 0x80000000000000000000, 0x800000000000000000000, 0x8000000000000000000000, 0x80000000000000000000000, 0x800000000000000000000000)), 0x8000000000000000000000000)
let x_28, x_29, x_30, x_31 := foo_m_0(0x80000000000000000000000000000000, 0x800000000000000000000000000000000, not(0x8000000000000000000000000000000000))
mstore(0x80000000000000000000000000000000000, msize())
let x_38, x_39, x_40, x_41 := foo_m_0(0x800000000000000000000000000000000000000000, 0x8000000000000000000000000000000000000000000, 0x80000000000000000000000000000000000000000000)
function foo_m_0(x_46, x_47, x_48) -> x_49, x_50, x_51, x_52
{
let x_54 := 0x800000000000000000000000000000000000000000000000000000
sstore(x_46, 0x8000000000000000000000000000000000000000000000000000000)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
x_46 := 0x80000000000000000000000000000000000000000000000000000000
}
mstore8(slt(x_46,0x800000000000000000000000000000000000000000000000000000000), slt(addmod(0x8000000000000000000000000000000000000000000000000000000000, "", 0x80000000000000000000000000000000000000000000000000000000000),0x800000000000000000000000000000000000000000000000000000000000))
}
let x_62, x_63, x_64, x_65 := foo_m_0(0x8000000000000000000000000000000000000000000000000000000000001,sload(32),calldataload(96))
sstore(160, x_62)
sstore(224, x_63)
sstore(288, x_64)
sstore(32, x_65)
let x_83, x_84, x_85, x_86 := foo_m_0(0x800000000000000000000000000000000000000001, 0x80000000000000000000000000000000000000001, 0x8000000000000000000000000000000000000001)
let x_92, x_93, x_94, x_95 := foo_m_0(0x800000000000000000000000000000001, 0x80000000000000000000000000000001, 0x8000000000000000000000000000001)
}
}

			}
		}
	}
		