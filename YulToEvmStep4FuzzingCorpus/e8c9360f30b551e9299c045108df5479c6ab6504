
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
function foo_s_0() -> x_2
{
x_2 := 0x1ffffffffffffffffffffff
}
function foo_s_1(x_5, x_6, x_7) -> x_8
{
let x_10 := keccak256(0x1fffffffffffffffffffffffffffff,addmod(0x1ffffffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffffffff, gaslimit()))
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
let x_14 := keccak256(0x1fffffffffffffffffffffffffffffffff,addmod(addmod(0x1ffffffffffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffffffffffff), 0x1fffffffffffffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffffffffffffff))
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
let x_21 := keccak256(0x1ffffffffffffffffffffffffffffffffffffffff,addmod(0x1fffffffffffffffffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffffffffffffffffffff))
}
}
}
switch 0x1ffffffffffffffffffffffffffffffffffffffffffff
case "" {}
case 0x1fffffffffffffffffffffffffffffffffffffffffffff {}
}
}

			}
		}
	}
		