
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
function foo_m_0(x_1, x_2, x_3, x_4) -> x_5, x_6, x_7, x_8
{
extcodecopy(0x800, 0x8000, 0x80000, 0x800000)
x_1 := 0x8000000
switch eq(0x80000000,0x800000000)
case 0x8000000000 {}
case 0x80000000000 {}
case 0x800000000000 {
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
let x_21, x_22, x_23, x_24 := foo_m_0(0x08000000000000000000, 0x80000000000000000000, 0x800000000000000000000, 0x8000000000000000000000)
}
}
default {
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
function foo_m_30(x_31, x_32, x_33, x_34) -> x_35, x_36, x_37, x_38
{
}
let x_40, x_41, x_42, x_43 := foo_m_30(mload(192),0x800000000000000000000000000000000000000000,sload(32),calldataload(96))
sstore(160, x_40)
sstore(224, x_41)
sstore(288, x_42)
sstore(32, x_43)
}
}
let x_63, x_64, x_65, x_66 := foo_m_0(0x8000000000000000000000000000000000000000000000000000000000000, addmod(add(x_3,0x80000000000000000000000000000000000000000000000000000000000000), x_1, 0x800000000000000000000000000000000000000000000000000000000000000), x_1, x_1)
}
}
}

			}
		}
	}
		