
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x800000000000000000000000000000000000000000000000000000000000001, 0x80000000000000000000000000000000000000000000000000000000000001, 0x8000000000000000000000000000000000000000000000000000000000001, 0x800000000000000000000000000000000000000000000000000000000001)
let x_12, x_13, x_14, x_15 := foo_m_0(0x80000000000000000000000000000000000000000000000000001, 0x8000000000000000000000000000000000000000000000000001, 0x800000000000000000000000000000000000000000000000001, 0x80000000000000000000000000000000000000000000000001)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
x_2 := number()
}
let x_22, x_23, x_24, x_25 := foo_m_0(0x8000000000000000000000000000000000000000001, 0x800000000000000000000000000000000000000001, 0x80000000000000000000000000000000000000001, call(0x8000000000000000000000000000000000000001, 0x800000000000000000000000000000000000001, 0x80000000000000000000000000000000000001, 0x8000000000000000000000000000000000001, calldatasize(), 0x800000000000000000000000000000000001, 0x80000000000000000000000000000000001))
mstore(0x8000000000000000000000000000000001, 0x800000000000000000000000000000001)
let x_39, x_40, x_41, x_42 := foo_m_0(0x80000000000000000000000001, 0x8000000000000000000000001, 0x800000000000000000000001, balance(0x80000000000000000000001))
function foo_m_0(x_48, x_49, x_50, x_51) -> x_52, x_53, x_54, x_55
{
for {
}
msize(){
x_48 := x_48
}
{
x_48 := x_48
}
}
let x_58, x_59, x_60, x_61 := foo_m_0(0x8000001, 0x800001, 0x80001, 0x8001)
let x_68, x_69, x_70, x_71 := foo_m_0(0xffff, 0xfffff, 0xffffff, 0xfffffff)
}
}

			}
		}
	}
		