
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3 := foo_m_0(0x4000000000000000000000000000000000, 0x40000000000000000000000000000000000)
{
let x_8, x_9 := foo_m_0(0x4000000000000000000000000000000000000000, 0x40000000000000000000000000000000000000000)
}
{
let x_14, x_15 := foo_m_0(0x4000000000000000000000000000000000000000000000, 0x40000000000000000000000000000000000000000000000)
let x_20, x_21 := foo_m_0(0x4000000000000000000000000000000000000000000000000000, 0x40000000000000000000000000000000000000000000000000000)
let x_26, x_27 := foo_m_0(0x4000000000000000000000000000000000000000000000000000000000, 0x40000000000000000000000000000000000000000000000000000000000)
}
let x_32, x_33 := foo_m_0(0x4000000000000000000000000000000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000000000000000000000000001)
let x_38, x_39 := foo_m_0(msize(), 0x40000000000000000000000000000000000000000000000000000000001)
let x_43, x_44 := foo_m_0(0x400000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000001)
let x_49, x_50 := foo_m_0(0x400000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000001)
function foo_m_0(x_54, x_55) -> x_56, x_57
{
switch x_54
case 0x40000000000000000000000000000000000000001 {}
default {
switch x_54
case 262144 {}
default {
selfdestruct(0x4000000000000000000000000000000000000001)
}
}
}
let x_61, x_62 := foo_m_0(calldataload(160),sload(224))
sstore(288, x_61)
sstore(32, x_62)
let x_73, x_74 := foo_m_0(0x400000000000000000000001, 0x40000000000000000000001)
}
}

			}
		}
	}
		