
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
function foo_m_0(x_1, x_2, x_3, x_4) -> x_5, x_6, x_7, x_8
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
log3(0x800000000000000000000000000000000000000000000, 0x8000000000000000000000000000000000000000000000, create(0x80000000000000000000000000000000000000000000000, 0x800000000000000000000000000000000000000000000000, 0x8000000000000000000000000000000000000000000000000), 0x80000000000000000000000000000000000000000000000000, 0x800000000000000000000000000000000000000000000000000)
}
codecopy(0x8000000000000000000000000000000000000000000000000000, balance(0x80000000000000000000000000000000000000000000000000000), 0x800000000000000000000000000000000000000000000000000000)
}
let x_20, x_21, x_22, x_23 := foo_m_0(mload(192),0x8000000000000000000000000000000000000000000000000000000000000000,sload(32),calldataload(96))
sstore(160, x_20)
sstore(224, x_21)
sstore(288, x_22)
sstore(32, x_23)
switch balance(0x8000000000000000000000000000000000000000000000000001)
case "" {
sstore(0x800000000000000000000000000000000000000000000000001, 0x80000000000000000000000000000000000000000000000001)
}
default {
}
let x_46, x_47, x_48, x_49 := foo_m_0(0x8000000000000000000000000000000000000000001, 0x800000000000000000000000000000000000000001, 0x80000000000000000000000000000000000000001, 0x8000000000000000000000000000000000000001)
calldatacopy(0x800000000000000000000000000000000000001, 0x80000000000000000000000000000000000001, lt(0x8000000000000000000000000000000000001,0x800000000000000000000000000000000001))
codecopy(0x80000000000000000000000000000000001, 0x8000000000000000000000000000000001, 0x800000000000000000000000000000001)
}
}

			}
		}
	}
		