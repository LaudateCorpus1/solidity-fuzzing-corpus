
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_3, x_4, x_5, x_6 := foo_m_0(0x400000000000000000000000000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000000000000000000000000, 0x40000000000000000000000000000000000000000000000000000000000000, create(0x400000000000000000000000000000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000000000000000000000000001))
let x_15, x_16, x_17, x_18 := foo_m_0(0x400000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000001, add(0x400000000000000000000000000000000000000000000000000001,0x40000000000000000000000000000000000000000000000000001))
switch 0x4000000000000000000000000000000000000000000000000001
case 0x400000000000000000000000000000000000000000000000001 {}
default {
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
}
}
function foo_m_0(x_27, x_28, x_29, x_30) -> x_31, x_32, x_33, x_34
{
sstore(mod(x_27,x_30), 0x40000000000000000000000000000000000000001)
let x_38 := foo_s_1(0x4000000000000000000000000000000000001, foo_s_1(0x400000000000000000000000000000000001, 0x40000000000000000000000000000000001, x_27, 0x4000000000000000000000000000000001)
, 0x400000000000000000000000000000001, 0x40000000000000000000000000000001)
}
let x_46, x_47, x_48, x_49 := foo_m_0(0x400000000000000000000001,sload(160),calldataload(224),sload(288))
sstore(32, x_46)
sstore(96, x_47)
sstore(160, x_48)
sstore(224, x_49)
function foo_s_1(x_68, x_69, x_70, x_71) -> x_72
{
sstore(mod(x_69,x_71), 0x401)
let x_76 := foo_s_1(0x7f, foo_s_1(0x7ff, 0x7fff, x_68, 0x7ffff)
, 0x7fffff, 0x7ffffff)
}
let x_84 := foo_s_1(sload(224),calldataload(288),sload(32),calldataload(96))
sstore(160, x_84)
pop(x_3)
let x_97, x_98, x_99, x_100 := foo_m_0(0x7fffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffff)
{
switch 0x7fffffffffffffffffffffffffffff
case "" {}
}
}
}

			}
		}
	}
		