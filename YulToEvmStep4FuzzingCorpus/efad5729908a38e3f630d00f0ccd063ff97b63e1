
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
function foo_m_0() -> x_2, x_3, x_4, x_5
{
function foo_m_7(x_8, x_9, x_10, x_11) -> x_12, x_13, x_14, x_15
{
selfdestruct(0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffff)
}
}
function foo_m_1(x_18) -> x_19, x_20, x_21, x_22
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
x_18 := call(add(0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff,0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x2, 0x20, 0x200, 0x2000, 0x20000)
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
function foo_m_32(x_33, x_34, x_35, x_36) -> x_37, x_38, x_39, x_40
{
selfdestruct(0x2000000000000000)
}
}
}
let x_44, x_45, x_46, x_47 := foo_m_1(mulmod(0x20000000000000000000000, 0x200000000000000000000000, 0x2000000000000000000000000))
let x_53, x_54, x_55, x_56 := foo_m_0()
}
let x_58, x_59, x_60, x_61 := foo_m_1(0x200000000000000000000000000000000000000)
sstore(224, x_58)
sstore(288, x_59)
sstore(32, x_60)
sstore(96, x_61)
}
}

			}
		}
	}
		