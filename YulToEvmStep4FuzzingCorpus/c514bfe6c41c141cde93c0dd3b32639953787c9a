
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x80, 0x800, 0x8000)
{
}
let x_11, x_12, x_13, x_14 := foo_m_0(0x80000000000, 0x800000000000, 0x8000000000000)
let x_20, x_21, x_22, x_23 := foo_m_0(0x80000000000000000000, 0x800000000000000000000, not(addmod(0x8000000000000000000000, 0x80000000000000000000000, 0x800000000000000000000000)))
mstore(0x8000000000000000000000000, 0x80000000000000000000000000)
calldatacopy(0x800000000000000000000000000, 0x8000000000000000000000000000, 0x80000000000000000000000000000)
function foo_m_0(x_35, x_36, x_37) -> x_38, x_39, x_40, x_41
{
sstore(0x80000000000000000000000000000000000000, 0x800000000000000000000000000000000000000)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
{
if x_35 {
{
log0(0x8000000000000000000000000000000000000000, 0x80000000000000000000000000000000000000000)
}
}
}
x_35 := 0x800000000000000000000000000000000000000000
}
mstore8(slt(x_35,0x8000000000000000000000000000000000000000000), slt(x_35,0x80000000000000000000000000000000000000000000))
}
let x_50, x_51, x_52, x_53 := foo_m_0(0x8000000000000000000000000000000000000000000000000000,sload(288),calldataload(32))
sstore(96, x_50)
sstore(160, x_51)
sstore(224, x_52)
sstore(288, x_53)
let x_71, x_72, x_73, x_74 := foo_m_0(0x8000000000000000000000000000000000000000000000000000000001, calldatasize(), 0x800000000000000000000000000000000000000000000000000000001)
}
}

			}
		}
	}
		