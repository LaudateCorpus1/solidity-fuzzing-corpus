
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x10000000, 0x100000000, 0x1000000000)
{
let x_11, x_12, x_13, x_14 := foo_m_0(0x10000000000000000, 0x100000000000000000, 0x1000000000000000000)
}
let x_20, x_21, x_22, x_23 := foo_m_0(0x10000000000000000000000000, x_2, 0x100000000000000000000000000)
let x_28, x_29, x_30, x_31 := foo_m_0(call(0x1000000000000000000000000000000000, 0x10000000000000000000000000000000000, 0x100000000000000000000000000000000000, 0x1000000000000000000000000000000000000, 0x10000000000000000000000000000000000000, 0x100000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000), 0x10000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000)
mstore(0x1000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000)
let x_45, x_46, x_47, x_48 := foo_m_0(0x100000000000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000000)
function foo_m_0(x_53, x_54, x_55) -> x_56, x_57, x_58, x_59
{
function foo_m_61(x_62, x_63) -> x_64, x_65
{
let x_68, x_69 := foo_m_61(mulmod(0x100000000000000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000000000000001, add(0x1000000000000000000000000000000000000000000000000000001,x_62)), 0x100000000000000000000000000000000000000000000000000001)
}
let x_75, x_76 := foo_m_61(sload(288),calldataload(32))
sstore(96, x_75)
sstore(160, x_76)
sstore(0x100000000000000000000000000000000000000001, mul(x_53,0x10000000000000000000000000000000000000001))
}
let x_89, x_90, x_91, x_92 := foo_m_0(0x1000000000000000000000000000000001, 0x100000000000000000000000000000001, not(0x10000000000000000000000000000001))
let x_98, x_99, x_100, x_101 := foo_m_0(0x1000000000000000000000001, 0x100000000000000000000001, 0x10000000000000000000001)
}
}

			}
		}
	}
		