
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
let x_11, x_12, x_13, x_14 := foo_m_0(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x8, 0x80)
let x_20, x_21, x_22, x_23 := foo_m_0(call(0x800000000, 0x8000000000, not(0), 0x80000000000, 0x800000000000, sload(0x8000000000000), 0x80000000000000), 0x800000000000000, 0x8000000000000000)
calldatacopy(1078036791296, 0x80000000000000000, 0x800000000000000000)
mstore(0x8000000000000000000, 0x80000000000000000000)
let x_38, x_39, x_40, x_41 := foo_m_0(0x800000000000000000000000000, 0x8000000000000000000000000000, 0x80000000000000000000000000000)
function foo_m_0(x_46, x_47, x_48) -> x_49, x_50, x_51, x_52
{
sstore("", 0x80000000000000000000000000000000000000)
sstore(0x800000000000000000000000000000000000000, slt(x_46,0x8000000000000000000000000000000000000000))
mstore(0x80000000000000000000000000000000000000000, mulmod(0x800000000000000000000000000000000000000000, create(0x8000000000000000000000000000000000000000000, 0x80000000000000000000000000000000000000000000, 0x800000000000000000000000000000000000000000000), number()))
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
x_50 := 0x8000000000000000000000000000000000000000000000
}
}
let x_64, x_65, x_66, x_67 := foo_m_0(0x80000000000000000000000000000000000000000000000000000, 0x800000000000000000000000000000000000000000000000000000, 0x8000000000000000000000000000000000000000000000000000000)
let x_73, x_74, x_75, x_76 := foo_m_0(0x80000000000000000000000000000000000000000000000000000000000000, 0x800000000000000000000000000000000000000000000000000000000000000, calldataload(0x8000000000000000000000000000000000000000000000000000000000000000))
}
}

			}
		}
	}
		