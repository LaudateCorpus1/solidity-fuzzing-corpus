
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x10000000, 0x100000000, 0x1000000000)
{
}
let x_11, x_12, x_13, x_14 := foo_m_0(0x10000000000000000, 0x100000000000000000, 0x1000000000000000000)
mstore(0x10000000000000000000, msize())
let x_21, x_22, x_23, x_24 := foo_m_0(0x100000000000000000000000000, 0x1000000000000000000000000000, 0x10000000000000000000000000000)
function foo_m_0(x_29, x_30, x_31) -> x_32, x_33, x_34, x_35
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
{
if x_29 {
leave
}
if x_29 {
leave
}
}
}
returndatacopy(0x10000000000000000000000000000000000000, 0x100000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000)
mstore8(slt(x_29,0x10000000000000000000000000000000000000000), or(x_29,addmod(0x100000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000)))
}
let x_44, x_45, x_46, x_47 := foo_m_0(mload(0),0x100000000000000000000000000000000000000000000000000000,sload(160))
sstore(224, x_44)
sstore(288, x_45)
sstore(32, x_46)
sstore(96, x_47)
let x_65, x_66, x_67, x_68 := foo_m_0(0x1000000000000000000000000000000000000000000000000000000001, not(0x100000000000000000000000000000000000000000000000000000001), or(x_2,0x10000000000000000000000000000000000000000000000000000001))
let x_74, x_75, x_76, x_77 := foo_m_0(0x1000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000001)
}
}

			}
		}
	}
		