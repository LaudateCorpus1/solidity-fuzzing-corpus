
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x100000000000000000000000001, 0x10000000000000000000000001, smod(0x1000000000000000000000001,0x100000000000000000000001))
{
let x_12, x_13, x_14, x_15 := foo_m_0(0x10000000000000001, 0x1000000000000001, smod(x_2,0x100000000000001))
let x_21, x_22, x_23, x_24 := foo_m_0(0x10000001, 0x1000001, 0x100001)
}
let x_30, x_31, x_32, x_33 := foo_m_0(0x1fff, 0x1ffff, 0x1fffff)
let x_39, x_40, x_41, x_42 := foo_m_0(call(0x1ffffffffffff, 0x1fffffffffffff, 0x1ffffffffffffff, 0x1fffffffffffffff, 0x1ffffffffffffffff, 0x1fffffffffffffffff, 0x1ffffffffffffffffff), 0x1fffffffffffffffffff, 0x1ffffffffffffffffffff)
let x_54, x_55, x_56, x_57 := foo_m_0(0x1fffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffffff)
let x_63, x_64, x_65, x_66 := foo_m_0(0x1ffffffffffffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffffffffffffff)
mstore(0x1fffffffffffffffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffffffffffffffff)
let x_74, x_75, x_76, x_77 := foo_m_0(lt(0x1fffffffffffffffffffffffffffffffffffffffffffffff,0x1ffffffffffffffffffffffffffffffffffffffffffffffff), 0x1fffffffffffffffffffffffffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffffffffffffffffffffffffff)
function foo_m_0(x_83, x_84, x_85) -> x_86, x_87, x_88, x_89
{
sstore(0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
function foo_m_91(x_94, x_95) -> x_96, x_97
{
let x_100, x_101 := foo_m_91(0x20000000, 0x200000000)
}
let x_105, x_106 := foo_m_91(calldataload(288),sload(32))
sstore(96, x_105)
sstore(160, x_106)
sstore(0x200000000000000000000, slt(x_83,true))
}
let x_118, x_119, x_120, x_121 := foo_m_0(0x2000000000000000000000000000, 0x20000000000000000000000000000, 0x200000000000000000000000000000)
}
}

			}
		}
	}
		