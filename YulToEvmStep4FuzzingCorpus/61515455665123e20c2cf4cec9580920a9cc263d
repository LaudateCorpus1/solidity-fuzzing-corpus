
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x1000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000001, 0x1000000000000000000000000000000000000000000001)
let x_12, x_13, x_14, x_15 := foo_m_0(0x100000000000000000000000000000000000001, 0x10000000000000000000000000000000000001, 0x1000000000000000000000000000000000001, 0x100000000000000000000000000000000001)
let x_22, x_23, x_24, x_25 := foo_m_0(0x10000000000000000000000000001, 0x1000000000000000000000000001, 0x100000000000000000000000001, 0x10000000000000000000000001)
if 0x1000000000000000000000001 {
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
if x_12 {
x_22 := 0x100000000000000000000001
}
}
}
mstore(0x10000000000000000000001, 0x1000000000000000000001)
let x_36, x_37, x_38, x_39 := foo_m_0(x_2, add(0x100000000000001,0x10000000000001), 0x1000000000001, balance(0x100000000001))
function foo_m_0(x_45, x_46, x_47, x_48) -> x_49, x_50, x_51, x_52
{
for {
}
x_45{
x_49 := x_45
}
{
}
}
let x_55, x_56, x_57, x_58 := foo_m_0(0x1ffffff, 0x1fffffff, 0x1ffffffff, 0x1fffffffff)
selfdestruct(addmod(0x1ffffffffff, not(x_22), 0x1fffffffffff))
}
}

			}
		}
	}
		