
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_4, x_5, x_6, x_7 := foo_m_0(0x1000000000, 0x10000000000)
function foo_m_0(x_11, x_12) -> x_13, x_14, x_15, x_16
{
if 0x1000000000000000000 {
leave
}
let x_20, x_21, x_22, x_23 := foo_m_1()
let x_26, x_27, x_28, x_29 := foo_m_1()
}
log1(mul(mul(0x10000000000000000000000000000000,0x100000000000000000000000000000000),div(not(call(0x1000000000000000000000000000000000, 0x10000000000000000000000000000000000, 0x100000000000000000000000000000000000, 0x1000000000000000000000000000000000000, 0x10000000000000000000000000000000000000, 0x100000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000)),0x10000000000000000000000000000000000000000)), mul(mul(0x100000000000000000000000000000000000000000,0x1000000000000000000000000000000000000000000),mul(0x10000000000000000000000000000000000000000000,0x100000000000000000000000000000000000000000000)), 0x1000000000000000000000000000000000000000000000)
function foo_m_1() -> x_46, x_47, x_48, x_49
{
let x_52, x_53, x_54, x_55 := foo_m_0(0x1000000000000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000000000000)
}
let x_60, x_61, x_62, x_63 := foo_m_2()
function foo_m_2() -> x_65, x_66, x_67, x_68
{
sstore(0x1000000000000000000000000000000000000000000000000000000001, x_65)
sstore(0x100000000000000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000000000000001)
sstore(0x1000000000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000000000001)
}
}
}

			}
		}
	}
		