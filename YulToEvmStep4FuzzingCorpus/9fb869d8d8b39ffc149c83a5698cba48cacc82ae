
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
mstore(0x7ffffffffffffffffffffffff, msize())
{
function foo_m_2(x_3, x_4) -> x_5, x_6
{
function foo_m_8(x_9, x_10) -> x_11, x_12
{
}
let x_14, x_15 := foo_m_8(mload(256),0x7ffffffffffffffffffffffffffffffffffffffffffff)
sstore(96, x_14)
sstore(160, x_15)
}
let x_26, x_27 := foo_m_2(mload(0),0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
sstore(160, x_26)
sstore(224, x_27)
}
let x_39, x_40, x_41, x_42 := foo_m_0(0x8000, slt(0x80000,call(0x800000, 0x8000000, 0x80000000, 0x800000000, 0x8000000000, 0x80000000000, 0x800000000000)), 0x8000000000000)
pop(x_42)
let x_55, x_56, x_57, x_58 := foo_m_0(0x80000000000000000000, 0x800000000000000000000, not(0x8000000000000000000000))
mstore(0x80000000000000000000000, msize())
let x_65, x_66, x_67, x_68 := foo_m_0(0x800000000000000000000000000000, 0x8000000000000000000000000000000, 0x80000000000000000000000000000000)
function foo_m_0(x_73, x_74, x_75) -> x_76, x_77, x_78, x_79
{
sstore(x_73, 0x80000000000000000000000000000000000000000)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
extcodecopy(0x800000000000000000000000000000000000000000, 0x8000000000000000000000000000000000000000000, 0x80000000000000000000000000000000000000000000, gas())
}
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
x_79 := 0x800000000000000000000000000000000000000000000
}
}
let x_86, x_87, x_88, x_89 := foo_m_0(0x80000000000000000000000000000000000000000000000000000,sload(160),calldataload(224))
sstore(288, x_86)
sstore(32, x_87)
sstore(96, x_88)
sstore(160, x_89)
let x_107, x_108, x_109, x_110 := foo_m_0(0x800000000000000000000000000000000000000000000000000000001, 0x80000000000000000000000000000000000000000000000000000001, 0x8000000000000000000000000000000000000000000000000000001)
let x_116, x_117, x_118, x_119 := foo_m_0(0x800000000000000000000000000000000000000000000001, 0x80000000000000000000000000000000000000000000001, 0x8000000000000000000000000000000000000000000001)
}
}

			}
		}
	}
		