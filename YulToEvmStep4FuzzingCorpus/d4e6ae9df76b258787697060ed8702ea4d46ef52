
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
let x_4, x_5, x_6, x_7 := foo_m_0(not(difficulty()), 0x7ffffffffffffffffffffffffffffffffffffffffffffffffff, iszero(iszero(0x7fffffffffffffffffffffffffffffffffffffffffffffffffff)), 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffff)
function foo_m_0(x_12, x_13, x_14, x_15) -> x_16, x_17, x_18, x_19
{
}
function foo_m_1() -> x_21, x_22, x_23, x_24
{
mstore(0x8000, codesize())
extcodecopy(0x80000, 0x800000, 0x8000000, codesize())
}
let x_30, x_31, x_32, x_33 := foo_m_1()
mstore(192, x_30)
mstore(256, x_31)
mstore(0, x_32)
mstore(64, x_33)
function foo_m_2(x_43, x_44, x_45) -> x_46, x_47, x_48, x_49
{
mstore(0x80000000000000000000000000000, 0x800000000000000000000000000000)
}
}
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
let x_57, x_58, x_59, x_60 := foo_m_55(0x8000000000000000000000000000000000000000, 0x80000000000000000000000000000000000000000, 0x800000000000000000000000000000000000000000, 0x8000000000000000000000000000000000000000000)
function foo_m_53(x_66, x_67, x_68, x_69) -> x_70, x_71, x_72, x_73
{
}
function foo_m_54() -> x_75, x_76, x_77, x_78
{
mstore(0x8000000000000000000000000000000000000000000000000000000000, 0x80000000000000000000000000000000000000000000000000000000000)
}
let x_82, x_83, x_84, x_85 := foo_m_54()
mstore(256, x_82)
mstore(0, x_83)
mstore(64, x_84)
mstore(128, x_85)
function foo_m_55(x_95, x_96, x_97, x_98) -> x_99, x_100, x_101, x_102
{
mstore(0x80000000000000000000000000000000000000000000001, 0x8000000000000000000000000000000000000000000001)
}
}
}
}

			}
		}
	}
		