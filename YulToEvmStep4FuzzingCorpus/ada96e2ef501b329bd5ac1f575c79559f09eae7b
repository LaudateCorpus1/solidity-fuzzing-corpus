
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x10000000000000000000000000000000000, 0x100000000000000000000000000000000000, 0x1000000000000000000000000000000000000)
function foo_m_0(x_10, x_11, x_12) -> x_13, x_14, x_15, x_16
{
sstore(0x1000000000000000000000000000000000000000000000, byte(x_10,0x10000000000000000000000000000000000000000000000))
}
let x_21, x_22, x_23, x_24 := foo_m_0(0x100000000000000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000000000)
let x_30, x_31, x_32, x_33 := foo_m_0(0x100000000000000000000000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000000000000000000001)
for {}
byte(0x0,0x0){
switch 0x100000000000000000000000000000000000000000000000000000000000001
default {}
}
{
extcodecopy(add(0x10000000000000000000000000000000000000000000000000000000000001,0x1000000000000000000000000000000000000000000000000000000000001), calldataload(0x100000000000000000000000000000000000000000000000000000000001), 0x10000000000000000000000000000000000000000000000000000000001, 0x1000000000000000000000000000000000000000000000000000000001)
switch 0x100000000000000000000000000000000000000000000000000000001
default {
switch 0x10000000000000000000000000000000000000000000000000000001
default {}
switch 0x1000000000000000000000000000000000000000000000000000001
default {
switch 0x100000000000000000000000000000000000000000000000000001
default {}
}
}
}
let x_49, x_50, x_51, x_52 := foo_m_0(0x10000000000000000000000000000000000000000000001, false, 0x1000000000000000000000000000000000000000000001)
let x_57, x_58, x_59, x_60 := foo_m_0(x_2, 0x100000000000000000000000000000000000001, 0x10000000000000000000000000000000000001)
let x_65, x_66, x_67, x_68 := foo_m_0(0x1000000000000000000000000000001, 0x100000000000000000000000000001, 0x10000000000000000000000000001)
}
}

			}
		}
	}
		