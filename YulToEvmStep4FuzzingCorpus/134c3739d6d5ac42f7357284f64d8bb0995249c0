
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x7fffffffffffffffffffff, 0x7ffffffffffffffffffffff, 0x7fffffffffffffffffffffff)
{
function foo_m_10(x_11, x_12) -> x_13, x_14
{
function foo_m_16(x_17, x_18) -> x_19, x_20
{
}
let x_22, x_23 := foo_m_16(mload(192),0x7fffffffffffffffffffffffffffffffffffffffffff)
sstore(32, x_22)
sstore(96, x_23)
}
let x_34, x_35 := foo_m_10(mload(256),0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffff)
sstore(96, x_34)
sstore(160, x_35)
}
let x_47, x_48, x_49, x_50 := foo_m_0(0x800, slt(0x8000,call(0x80000, 0x800000, 0x8000000, 0x80000000, 0x800000000, 0x8000000000, 0x80000000000)), 0x800000000000)
let x_63, x_64, x_65, x_66 := foo_m_0(0x8000000000000000000, 0x80000000000000000000, not(0x800000000000000000000))
mstore(0x8000000000000000000000, msize())
let x_73, x_74, x_75, x_76 := foo_m_0(0x80000000000000000000000000000, 0x800000000000000000000000000000, 0x8000000000000000000000000000000)
function foo_m_0(x_81, x_82, x_83) -> x_84, x_85, x_86, x_87
{
sstore(x_81, 0x8000000000000000000000000000000000000000)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
x_81 := 0x80000000000000000000000000000000000000000
}
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
x_81 := 0x800000000000000000000000000000000000000000
}
}
let x_92, x_93, x_94, x_95 := foo_m_0(mload(256),0x8000000000000000000000000000000000000000000000000000,sload(96))
sstore(160, x_92)
sstore(224, x_93)
sstore(288, x_94)
sstore(32, x_95)
let x_113, x_114, x_115, x_116 := foo_m_0(0x800000000000000000000000000000000000000000000000000000000001, 0x80000000000000000000000000000000000000000000000000000000001, 0x8000000000000000000000000000000000000000000000000000000001)
let x_122, x_123, x_124, x_125 := foo_m_0(0x800000000000000000000000000000000000000000000000001, add(0x80000000000000000000000000000000000000000000000001,addmod(0x8000000000000000000000000000000000000000000000001, 0x800000000000000000000000000000000000000000000001, 0x80000000000000000000000000000000000000000000001)), 0x8000000000000000000000000000000000000000000001)
}
}

			}
		}
	}
		