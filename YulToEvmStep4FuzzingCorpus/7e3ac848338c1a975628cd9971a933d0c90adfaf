
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x7fffffffff, 0x7ffffffffff, 0x7fffffffffff, 0x7ffffffffffff)
let x_12, x_13, x_14, x_15 := foo_m_0(0x7fffffffffffffffffff, 0x7ffffffffffffffffffff, 0x7fffffffffffffffffffff, 0x7ffffffffffffffffffffff)
let x_22, x_23, x_24, x_25 := foo_m_0(calldatasize(), 0x7fffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffff, call(0x7fffffffffffffffffffffffffffffff, mulmod(0x7ffffffffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffffff), 0x7fffffffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffffffff, balance(0x7fffffffffffffffffffffffffffffffffffff), 0x7ffffffffffffffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffffffffffffffff))
if 0x7ffffffffffffffffffffffffffffffffffffffff {
}
log0(0x7fffffffffffffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffffffffffffff)
let x_42, x_43, x_44, x_45 := foo_m_0(x_2, 0x7fffffffffffffffffffffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffffffffffffffffffffff, balance(0x7fffffffffffffffffffffffffffffffffffffffffffffffffff))
function foo_m_0(x_50, x_51, x_52, x_53) -> x_54, x_55, x_56, x_57
{
for {
}
msize(){
x_54 := x_50
if 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff {
}
}
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
x_50 := x_50
}
}
}
let x_61, x_62, x_63, x_64 := foo_m_0(0x80000, 0x800000, 0x8000000, 0x80000000)
let x_71, x_72, x_73, x_74 := foo_m_0(0x800000000000000, 0x8000000000000000, 0x80000000000000000, 0x800000000000000000)
}
}

			}
		}
	}
		