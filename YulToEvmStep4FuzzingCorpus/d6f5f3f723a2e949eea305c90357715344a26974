
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
{
let x_4, x_5, x_6, x_7 := foo_m_0(0x10000000000000000000000000000000000000000000001, 0x1000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000001)
calldatacopy(keccak256(0x1000000000000000000000000000000000000000001,0x100000000000000000000000000000000000000001), 0x10000000000000000000000000000000000000001, 0x1000000000000000000000000000000000000001)
}
let x_17 := 0x10000000000000000000000000000000000001
function foo_m_0(x_19, x_20, x_21, x_22) -> x_23, x_24, x_25, x_26
{
let x_29, x_30, x_31 := foo_m_1()
}
x_17 := 0x10000000000000000000001
function foo_m_1() -> x_34, x_35, x_36
{
let x_39, x_40, x_41, x_42 := foo_m_2()
let x_45, x_46, x_47, x_48 := foo_m_2()
let x_51, x_52, x_53, x_54 := foo_m_2()
let x_57, x_58, x_59, x_60 := foo_m_2()
let x_63, x_64, x_65, x_66 := foo_m_2()
let x_69, x_70, x_71, x_72 := foo_m_2()
let x_75, x_76, x_77, x_78 := foo_m_2()
let x_81, x_82, x_83, x_84 := foo_m_2()
let x_87, x_88, x_89, x_90 := foo_m_2()
}
function foo_m_2() -> x_92, x_93, x_94, x_95
{
let x_98, x_99, x_100 := foo_m_1()
}
}
}

			}
		}
	}
		