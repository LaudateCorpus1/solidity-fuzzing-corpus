
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
function foo_m_0(x_2, x_3, x_4, x_5) -> x_6, x_7, x_8, x_9
{
selfdestruct(0x1000000000000000000)
}
function foo_s_1(x_12) -> x_13
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
x_12 := call(add(0x10000000000000000000000,0x100000000000000000000000), 0x1000000000000000000000000, 0x10000000000000000000000000, 0x100000000000000000000000000, or(0x1000000000000000000000000000,0x10000000000000000000000000000), 0x100000000000000000000000000000, 0x1000000000000000000000000000000)
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
leave
}
}
let x_25, x_26, x_27, x_28 := foo_m_0(0x10000000000000000000000000000000000000, x_12, 0x100000000000000000000000000000000000000, mulmod(0x1000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000))
let x_36 := foo_s_1(0x1000000000000000000000000000000000000000000000)
}
let x_39 := foo_s_1(mload(64))
mstore(128, x_39)
}
}

			}
		}
	}
		