
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x10000000000000000000000000000000000, 0x100000000000000000000000000000000000, add(0x1000000000000000000000000000000000000,0x10000000000000000000000000000000000000))
{
}
let x_12, x_13, x_14, x_15 := foo_m_0(0x100000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000)
let x_21, x_22, x_23, x_24 := foo_m_0(0x100000000000000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000000000)
{
}
let x_30, x_31, x_32, x_33 := foo_m_0(0x100000000000000000000000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000000000000000000000, add(x_12,0x1000000000000000000000000000000000000000000000000000000000000001))
function foo_m_0(x_38, x_39, x_40) -> x_41, x_42, x_43, x_44
{
mstore8(0x1000000000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000000000001)
sstore(0x10000000000000000000000000000000000000000000000000001, slt(x_38,call(0x1000000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000000001, 0x1000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000001, 0x1000000000000000000000000000000000000000000001)))
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
extcodecopy(0x100000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000001, x_38, addmod(0x1000000000000000000000000000000000000000001, calldatasize(), 0x100000000000000000000000000000000000000001))
}
}
let x_61, x_62, x_63, x_64 := foo_m_0(0x10000000000000000000000000000000001, 0x1000000000000000000000000000000001, not(0x100000000000000000000000000000001))
}
}

			}
		}
	}
		