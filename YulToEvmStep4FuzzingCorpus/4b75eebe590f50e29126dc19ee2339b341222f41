
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x1ffffffffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffffffffff, add(0x1ffffffffffffffffffffffffffffffffff,0x1fffffffffffffffffffffffffffffffffff))
{
sstore(0x1ffffffffffffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffffffffffffff)
}
let x_14, x_15, x_16, x_17 := foo_m_0(0x1ffffffffffffffffffffffffffffffffffffffffffff, x_2, 0x1fffffffffffffffffffffffffffffffffffffffffffff)
let x_22, x_23, x_24, x_25 := foo_m_0(0x1ffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffff)
let x_31, x_32, x_33, x_34 := foo_m_0(0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
mstore(0x2, 0x20)
let x_42, x_43, x_44, x_45 := foo_m_0(0x200000000, 0x2000000000, 0x20000000000)
function foo_m_0(x_50, x_51, x_52) -> x_53, x_54, x_55, x_56
{
sstore(0x20000000000000000000, 0x200000000000000000000)
sstore(slt(slt(x_50,0x2000000000000000000000),0x20000000000000000000000), slt(x_50,call(0x200000000000000000000000, 0x2000000000000000000000000, difficulty(), 0x20000000000000000000000000, 0x200000000000000000000000000, 0x2000000000000000000000000000, 0x20000000000000000000000000000)))
sstore(0x200000000000000000000000000000, slt(not(0x2000000000000000000000000000000),0x20000000000000000000000000000000))
}
let x_72, x_73, x_74, x_75 := foo_m_0(0x200000000000000000000000000000000000000, 0x2000000000000000000000000000000000000000, not(0x20000000000000000000000000000000000000000))
let x_81, x_82, x_83, x_84 := foo_m_0(0x200000000000000000000000000000000000000000000000, 0x2000000000000000000000000000000000000000000000000, 0x20000000000000000000000000000000000000000000000000)
}
}

			}
		}
	}
		