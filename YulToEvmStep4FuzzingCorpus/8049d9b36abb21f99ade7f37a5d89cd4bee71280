
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
if 0xffffffffffffffffffffffffffffffffffffffffffffffff {
let x_3, x_4, x_5, x_6 := foo_m_0(0xfffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
}
let x_11, x_12, x_13, x_14 := foo_m_0(add(add(0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff,add(create(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, number(), 0x0),0x1)),0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x1f)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
log0(0x9f, 0xa0)
}
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
extcodecopy(0xa1, 0xff, 0x100, 0x101)
}
function foo_m_0(x_28, x_29) -> x_30, x_31, x_32, x_33
{
switch x_28
case 0x100000000 {}
default {
{
{
extcodecopy(0x1000000000, 0x10000000000, 0x100000000000, 0x1000000000000)
}
}
}
}
sstore(xor(0x10000000000000,0x100000000000000), 0x1000000000000000)
}
}

			}
		}
	}
		