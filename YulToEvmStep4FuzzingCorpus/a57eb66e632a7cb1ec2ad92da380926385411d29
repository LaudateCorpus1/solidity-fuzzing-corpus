
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
function foo_m_0(x_2) -> x_3, x_4
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
extcodecopy(0x2, div(mul(0x20,div(calldatasize(),0x200)),0x2000), 0x20000, div(mul(0x200000,div(calldatasize(),0x2000000)),0x20000000))
}
}
let x_14, x_15 := foo_m_0(mload(256))
mstore(0, x_14)
mstore(64, x_15)
function foo_m_1(x_23, x_24) -> x_25, x_26
{
switch 0x20000000000000000000000
case "" {}
}
let x_29, x_30 := foo_m_1(calldataload(96),sload(160))
sstore(224, x_29)
sstore(288, x_30)
}
}

			}
		}
	}
		