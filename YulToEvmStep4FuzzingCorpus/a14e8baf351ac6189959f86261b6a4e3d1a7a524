
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
function foo_m_0(x_1, x_2, x_3, x_4) -> x_5, x_6, x_7
{
sstore(div(0x10000000000000,0x100000000000000), 0x1000000000000000)
sstore(mulmod(0x10000000000000000, 0x100000000000000000, 0x1000000000000000000), 0x10000000000000000000)
}
{
mstore(0x100000000000000000000, 0x1000000000000000000000)
}
let x_19, x_20, x_21 := foo_m_0(0x1000000000000000000000000000, 0x10000000000000000000000000000, 0x100000000000000000000000000000, 0x1000000000000000000000000000000)
let x_28, x_29, x_30 := foo_m_0(calldatasize(), 0x1000000000000000000000000000000000000, 0x10000000000000000000000000000000000000, 0x100000000000000000000000000000000000000)
mstore(0x1000000000000000000000000000000000000000, addmod(0x10000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000, number()))
switch mload(0x1000000000000000000000000000000000000000000)
case 0x10000000000000000000000000000000000000000000 {
}
case 0x100000000000000000000000000000000000000000000 {
let x_42, x_43, x_44 := foo_m_0(0x100000000000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000000000, x_29, 0x10000000000000000000000000000000000000000000000000000)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
continue
}
}
case 0x100000000000000000000000000000000000000000000000000000 {
x_19 := 0x1000000000000000000000000000000000000000000000000000000
}
case "" {
x_29 := 0x10000000000000000000000000000000000000000000000000000000
}
case 0x100000000000000000000000000000000000000000000000000000000 {
x_19 := 0x1000000000000000000000000000000000000000000000000000000000
}
let x_55, x_56, x_57 := foo_m_0(0x1000000000000000000000000000000000000000000000000000000000000000, x_19, x_28, 0x1000000000000000000000000000000000000000000000000000000000000001)
}
}

			}
		}
	}
		