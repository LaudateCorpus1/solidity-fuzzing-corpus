
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
{
}
let x_2, x_3, x_4, x_5 := foo_m_0(0x100000000000000000000000000000000000000000000000000, call(0x1000000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000000000000000), 0x10000000000000000000000000000000000000000000000000000000000)
let x_17, x_18, x_19, x_20 := foo_m_0(0x100000000000000000000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000000000000000000001, 0x1000000000000000000000000000000000000000000000000000000000001)
mstore(0x100000000000000000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000000000000000001)
let x_28, x_29, x_30, x_31 := foo_m_0(0x1000000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000000001)
function foo_m_0(x_36, x_37, x_38) -> x_39, x_40, x_41, x_42
{
sstore(call(0x10000000000000000000000000000000000000001, 0x1000000000000000000000000000000000000001, 0x100000000000000000000000000000000000001, 0x10000000000000000000000000000000000001, x_36, 0x1000000000000000000000000000000000001, 0x100000000000000000000000000000000001), 0x10000000000000000000000000000000001)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
sstore(addmod(x_36, 0x1000000000000000000000000000000001, true), 0x100000000000000000000000000000001)
}
}
}
let x_54, x_55, x_56, x_57 := foo_m_0(0x10000000000000000000000001, 0x1000000000000000000000001, not(0x100000000000000000000001))
}
}

			}
		}
	}
		