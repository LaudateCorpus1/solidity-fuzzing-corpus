
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
function foo_m_0(x_1, x_2, x_3) -> x_4, x_5, x_6
{
{
mstore(0x20000000000000000000000000, 0x200000000000000000000000000)
}
sstore(div(x_1,0x2000000000000000000000000000), 0x20000000000000000000000000000)
}
{
mstore(0x200000000000000000000000000000, 0x2000000000000000000000000000000)
}
let x_15, x_16, x_17 := foo_m_0(0x2000000000000000000000000000000000000, 0x20000000000000000000000000000000000000, 0x200000000000000000000000000000000000000)
let x_23, x_24, x_25 := foo_m_0(0x200000000000000000000000000000000000000000000, 0x2000000000000000000000000000000000000000000000, 0x20000000000000000000000000000000000000000000000)
mstore(mload(0x200000000000000000000000000000000000000000000000), addmod(0x2000000000000000000000000000000000000000000000000, 0x20000000000000000000000000000000000000000000000000, number()))
switch mload(0x200000000000000000000000000000000000000000000000000)
case 0x2000000000000000000000000000000000000000000000000000 {
x_23 := 0x20000000000000000000000000000000000000000000000000000
}
case 0x200000000000000000000000000000000000000000000000000000 {
let x_38, x_39, x_40 := foo_m_0(0x200000000000000000000000000000000000000000000000000000000000, x_24, 0x2000000000000000000000000000000000000000000000000000000000000)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
continue
}
}
case 0x20000000000000000000000000000000000000000000000000000000000000 {
x_15 := 0x200000000000000000000000000000000000000000000000000000000000000
}
case 0x2000000000000000000000000000000000000000000000000000000000000000 {
x_24 := 0x2000000000000000000000000000000000000000000000000000000000000001
}
case 0x200000000000000000000000000000000000000000000000000000000000001 {
x_23 := 0x20000000000000000000000000000000000000000000000000000000000001
}
let x_51, x_52, x_53 := foo_m_0(x_15, 0x20000000000000000000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000000000000000000001)
}
}

			}
		}
	}
		