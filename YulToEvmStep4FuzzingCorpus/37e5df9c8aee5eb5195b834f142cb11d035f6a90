
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x100000000000000000000000001, 0x10000000000000000000000001, add(0x1000000000000000000000001,0x100000000000000000000001))
let x_12, x_13, x_14, x_15 := foo_m_0(0x10000000000000001, 0x1000000000000001, 0x100000000000001)
{
x_2 := 0x10000000000001
}
let x_22, x_23, x_24, x_25 := foo_m_0(0x1000001, 0x100001, 0x10001)
let x_31, x_32, x_33, x_34 := foo_m_0(0x1ffff, 0x1fffff, call(0x1ffffff, 0x1fffffff, 0x1ffffffff, codesize(), 0x1fffffffff, 0x1ffffffffff, 0x1fffffffffff))
mstore(0x1ffffffffffff, 0x1fffffffffffff)
let x_47, x_48, x_49, x_50 := foo_m_0(0x1ffffffffffffffffffff, 0x1fffffffffffffffffffff, call(0x1ffffffffffffffffffffff, 0x1fffffffffffffffffffffff, 0x1ffffffffffffffffffffffff, codesize(), 0x1fffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffff))
function foo_m_0(x_60, x_61, x_62) -> x_63, x_64, x_65, x_66
{
let x_68 := 0x1fffffffffffffffffffffffffffffffffffff
switch mload(0x1ffffffffffffffffffffffffffffffffffffff)
case 0x1fffffffffffffffffffffffffffffffffffffff {
leave
}
case 0x1ffffffffffffffffffffffffffffffffffffffff {
leave
}
case 0x1fffffffffffffffffffffffffffffffffffffffff {
x_60 := 0x1ffffffffffffffffffffffffffffffffffffffffff
}
case 0x1fffffffffffffffffffffffffffffffffffffffffff {
leave
}
codecopy(0x1ffffffffffffffffffffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffffffffffffffffffffff)
}
let x_79, x_80, x_81, x_82 := foo_m_0(calldataload(160),sload(224),calldataload(288))
sstore(32, x_79)
sstore(96, x_80)
sstore(160, x_81)
sstore(224, x_82)
let x_99, x_100, x_101, x_102 := foo_m_0(0x200000000, 0x2000000000, 0x20000000000)
let x_108, x_109, x_110, x_111 := foo_m_0(0x200000000000000000, 0x2000000000000000000, 0x20000000000000000000)
}
}

			}
		}
	}
		