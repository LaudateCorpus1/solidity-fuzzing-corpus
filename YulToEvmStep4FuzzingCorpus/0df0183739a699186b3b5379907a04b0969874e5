
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
let x_4, x_5, x_6, x_7 := foo_m_0(0x80000000000000000000000000000000001, 0x8000000000000000000000000000000001, 0x800000000000000000000000000000001, 0x80000000000000000000000000000001)
function foo_m_0(x_13, x_14, x_15, x_16) -> x_17, x_18, x_19, x_20
{
}
function foo_m_1(x_22) -> x_23, x_24, x_25, x_26
{
mstore(0x8000000000000001, 0x800000000000001)
}
let x_30, x_31, x_32, x_33 := foo_m_1(0x8000001)
sstore(288, x_30)
sstore(32, x_31)
sstore(96, x_32)
sstore(160, x_33)
function foo_m_2() -> x_46, x_47, x_48, x_49
{
mstore(0xffffffff, 0xfffffffff)
}
let x_53, x_54, x_55, x_56 := foo_m_2()
sstore(288, x_53)
sstore(32, x_54)
sstore(96, x_55)
sstore(160, x_56)
}
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
let x_70, x_71, x_72, x_73 := foo_m_66(0xffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffff)
function foo_m_66(x_79, x_80, x_81, x_82) -> x_83, x_84, x_85, x_86
{
}
let x_88, x_89, x_90, x_91 := foo_m_66(mload(128),0xffffffffffffffffffffffffffffffffffffffffffffffffffffff,sload(288),calldataload(32))
sstore(96, x_88)
sstore(160, x_89)
sstore(224, x_90)
sstore(288, x_91)
function foo_m_67() -> x_110, x_111, x_112, x_113
{
function foo_m_115(x_116, x_117, x_118, x_119) -> x_120, x_121, x_122, x_123
{
}
let x_125, x_126, x_127, x_128 := foo_m_115(sload(32),calldataload(96),sload(160),calldataload(224))
sstore(288, x_125)
sstore(32, x_126)
sstore(96, x_127)
sstore(160, x_128)
}
let x_146, x_147, x_148, x_149 := foo_m_67()
mstore(64, x_146)
mstore(128, x_147)
mstore(192, x_148)
mstore(256, x_149)
function foo_m_68(x_159, x_160, x_161, x_162) -> x_163, x_164, x_165, x_166
{
mstore(0x1000000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000000)
}
}
}
}

			}
		}
	}
		