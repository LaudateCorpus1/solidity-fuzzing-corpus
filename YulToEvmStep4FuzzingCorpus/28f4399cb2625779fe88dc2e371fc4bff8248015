
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
let x_4, x_5, x_6, x_7 := foo_m_0(0x40000000000000000000000000000000, 0x400000000000000000000000000000000, 0x4000000000000000000000000000000000, 0x40000000000000000000000000000000000)
function foo_m_0(x_13, x_14, x_15, x_16) -> x_17, x_18, x_19, x_20
{
}
let x_22, x_23, x_24, x_25 := foo_m_0(0x4000000000000000000000000000000000000000000000000000,sload(32),calldataload(96),sload(160))
sstore(224, x_22)
sstore(288, x_23)
sstore(32, x_24)
sstore(96, x_25)
function foo_m_1() -> x_44, x_45, x_46, x_47
{
mstore(0x400000000000000000000000000000000000000000000000000000001, delegatecall(0x40000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000000001))
}
let x_56, x_57, x_58, x_59 := foo_m_1()
mstore(64, x_56)
mstore(128, x_57)
mstore(192, x_58)
mstore(256, x_59)
function foo_m_2(x_69, x_70, x_71) -> x_72, x_73, x_74, x_75
{
calldatacopy(0x40000000000000000000000000001, 0x4000000000000000000000000001, create(0x400000000000000000000000001, 0x40000000000000000000000001, balance(0x4000000000000000000000001)))
mstore(0x400000000000000000000001, 0x40000000000000000000001)
}
}
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
let x_88, x_89, x_90, x_91 := foo_m_84(0x4000000000001, 0x400000000001, 0x40000000001, 0x4000000001)
function foo_m_84(x_97, x_98, x_99, x_100) -> x_101, x_102, x_103, x_104
{
}
function foo_m_85() -> x_106, x_107, x_108, x_109
{
mstore(0x7fffff, 0x7ffffff)
}
let x_113, x_114, x_115, x_116 := foo_m_85()
sstore(288, x_113)
sstore(32, x_114)
sstore(96, x_115)
sstore(160, x_116)
function foo_m_86(x_126, x_127, x_128, x_129) -> x_130, x_131, x_132, x_133
{
mstore(0x7fffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffff)
}
let x_137, x_138, x_139, x_140 := foo_m_86(sload(96),calldataload(160),sload(224),calldataload(288))
sstore(32, x_137)
sstore(96, x_138)
sstore(160, x_139)
sstore(224, x_140)
}
}
}

			}
		}
	}
		