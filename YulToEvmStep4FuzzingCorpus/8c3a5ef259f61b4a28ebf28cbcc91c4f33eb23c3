
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x3ffffffffffffffffffffffffffffffffffffffffffffffff, 0x3fffffffffffffffffffffffffffffffffffffffffffffffff, add("",0x3ffffffffffffffffffffffffffffffffffffffffffffffffff))
{
}
let x_11, x_12, x_13, x_14 := foo_m_0(0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
let x_20, x_21, x_22, x_23 := foo_m_0(0x400, 0x4000, 0x40000)
let x_29, x_30, x_31, x_32 := foo_m_0(0x400000000000, 0x4000000000000, 0x40000000000000)
mstore(0x400000000000000, 0x4000000000000000)
let x_40, x_41, x_42, x_43 := foo_m_0(0x40000000000000000000000, 0x400000000000000000000000, 0x4000000000000000000000000)
function foo_m_0(x_48, x_49, x_50) -> x_51, x_52, x_53, x_54
{
sstore(mload(0x4000000000000000000000000000000000), 0x40000000000000000000000000000000000)
sstore(slt(slt(x_48,0x400000000000000000000000000000000000),0x4000000000000000000000000000000000000), slt(x_48,call(0x40000000000000000000000000000000000000, 0x400000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000, 0x40000000000000000000000000000000000000000, 0x400000000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000000, 0x40000000000000000000000000000000000000000000)))
sstore(slt(msize(),mload(0x400000000000000000000000000000000000000000000)), 25895697857380352)
}
let x_69, x_70, x_71, x_72 := foo_m_0(0x4000000000000000000000000000000000000000000000000000, 0x40000000000000000000000000000000000000000000000000000, 0x400000000000000000000000000000000000000000000000000000)
let x_78, x_79, x_80, x_81 := foo_m_0(0x4000000000000000000000000000000000000000000000000000000000000, 0x40000000000000000000000000000000000000000000000000000000000000, 0x400000000000000000000000000000000000000000000000000000000000000)
}
}

			}
		}
	}
		