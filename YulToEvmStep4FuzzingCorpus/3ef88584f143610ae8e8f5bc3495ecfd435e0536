
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
function foo_m_0(x_1, x_2, x_3, x_4) -> x_5, x_6, x_7, x_8
{
switch eq(call(0xffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffffffff),0xfffffffffffffffffffffffffffffffffffff)
case 0xffffffffffffffffffffffffffffffffffffff {
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
}
}
case 0xfffffffffffffffffffffffffffffffffffffff {
x_5 := 0xffffffffffffffffffffffffffffffffffffffff
}
case 0xfffffffffffffffffffffffffffffffffffffffff {}
case 0xffffffffffffffffffffffffffffffffffffffffff {}
case 0xfffffffffffffffffffffffffffffffffffffffffff {
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
leave
}
}
default {
}
x_5 := mload(0xffffffffffffffffffffffffffffffffffffffffffff)
let x_26, x_27, x_28, x_29 := foo_m_0(0xfffffffffffffffffffffffffffffffffffffffffffffffffff, mulmod(add(x_3,x_1), 0xffffffffffffffffffffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffff), x_5, x_5)
}
let x_34, x_35, x_36, x_37 := foo_m_0(0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff,sload(96),calldataload(160),sload(224))
sstore(288, x_34)
sstore(32, x_35)
sstore(96, x_36)
sstore(160, x_37)
}
}

			}
		}
	}
		