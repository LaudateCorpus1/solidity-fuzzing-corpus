
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
sstore(0x4000000000000000000000000000000000000000000000000000000000, foo_s_0(0x40000000000000000000000000000000000000000000000000000000000)
)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
let x_5, x_6, x_7, x_8 := foo_m_1()
}
function foo_s_0(x_10) -> x_11
{
x_11 := call(0x400000000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000001, addmod(0x400000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000001, call(0x4000000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000001, difficulty(), 0x4000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000001, addmod(0x40000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000001, call(0x400000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000001, 0x400000000000000000000000000000000000001)))))
}
function foo_m_1() -> x_35, x_36, x_37, x_38
{
let x_41, x_42, x_43, x_44 := foo_m_1()
}
let x_46, x_47, x_48, x_49 := foo_m_1()
mstore(64, x_46)
mstore(128, x_47)
mstore(192, x_48)
mstore(256, x_49)
let x_60 := foo_s_0(x_46)
}
}

			}
		}
	}
		