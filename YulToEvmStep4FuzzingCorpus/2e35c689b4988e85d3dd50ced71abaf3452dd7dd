
	object "main" {
		code {
			codecopy(0, dataoffset("deployed"), datasize("deployed"))
			return(0, datasize("deployed"))
		}
		object "deployed" {
			code {
				{
{
sstore(foo_s_1(0x1000000)
, 0x10000000)
let x_5, x_6, x_7, x_8 := foo_m_0(0x100000000000000, 0x1000000000000000, 0x10000000000000000)
function foo_m_0(x_13, x_14, x_15) -> x_16, x_17, x_18, x_19
{
sstore(mload(0x10000000000000000000000000), x_13)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
x_13 := 0x100000000000000000000000000
invalid()
}
}
let x_23, x_24
sstore(mod(x_13,0x100000000000000000000000000000), 0x1000000000000000000000000000000)
}
let x_27, x_28, x_29, x_30 := foo_m_0(calldataload(96),sload(160),calldataload(224))
sstore(288, x_27)
sstore(32, x_28)
sstore(96, x_29)
sstore(160, x_30)
let x_47, x_48, x_49, x_50 := foo_m_0(0x100000000000000000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000000000000)
let x_56 := foo_s_1(0x100000000000000000000000000000000000000000000000000000000000000)
function foo_s_1(x_59) -> x_60
{
x_60 := not(foo_s_1(mulmod(mload(0x10000000000000000000000000000000000000000000000000000000000001), 0x1000000000000000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000000000000000001))
)
}
let x_65 := foo_s_1(0x1000000000000000000000000000000000000000000000000000001)
sstore(32, x_65)
let x_73, x_74, x_75, x_76 := foo_m_0(0x1000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000001)
}
}

			}
		}
	}
		