obj {
  code {
    block {
      statements {
        breakstmt {
        }
      }
      statements {
        storage_func {
          loc {
          }
          val {
            binop {
              op: SDIV
              left {
              }
              right {
                binop {
                  op: SDIV
                  left {
                    unop {
                      op: CALLDATALOAD
                      operand {
                        cons {
                          intval: 0
                        }
                      }
                    }
                  }
                  right {
                  }
                }
              }
            }
          }
          st: MSTORE
        }
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: RETURN
            pos {
              binop {
                op: SDIV
                left {
                  unop {
                    op: SLOAD
                    operand {
                      cons {
                        intval: 0
                      }
                    }
                  }
                }
                right {
                  binop {
                    op: SDIV
                    left {
                      unop {
                        op: CALLDATALOAD
                        operand {
                          cons {
                            intval: 0
                          }
                        }
                      }
                    }
                    right {
                    }
                  }
                }
              }
            }
            size {
            }
          }
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
    }
  }
  data {
    hex: "~"
  }
  sub_obj {
    code {
      block {
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
      }
    }
    data {
      hex: "\001\010"
    }
  }
}
ver: SPURIOUS
