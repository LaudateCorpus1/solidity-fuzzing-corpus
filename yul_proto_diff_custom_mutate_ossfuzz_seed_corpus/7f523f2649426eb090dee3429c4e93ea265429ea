block {
  statements {
    forstmt {
      for_body {
        statements {
          copy_func {
            ct: CALLDATA
            target {
              top {
                op: MULM
                arg1 {
                }
                arg2 {
                }
                arg3 {
                }
              }
            }
            source {
            }
            size {
            }
          }
        }
      }
      for_init {
        statements {
          decl {
            expr {
              cons {
                intval: 1
              }
            }
          }
        }
        statements {
          assignment {
            ref_id {
              varnum: 0
            }
            expr {
              nop {
                op: PC
              }
            }
          }
        }
      }
      for_post {
        statements {
          decl {
          }
        }
        statements {
          assignment {
            ref_id {
              varnum: 0
            }
            expr {
              nop {
                op: COINBASE
              }
            }
          }
        }
      }
      for_cond {
        unop {
          op: BLOCKHASH
          operand {
            nop {
              op: SELFBALANCE
            }
          }
        }
      }
    }
  }
  statements {
    storage_func {
      loc {
        binop {
          op: BYTE
          left {
          }
          right {
            binop {
              op: BYTE
              left {
              }
              right {
              }
            }
          }
        }
      }
      val {
      }
      st: MSTORE
    }
  }
  statements {
  }
  statements {
    storage_func {
      loc {
        binop {
          op: MOD
          left {
          }
          right {
            binop {
              op: BYTE
              left {
              }
              right {
              }
            }
          }
        }
      }
      val {
      }
      st: MSTORE
    }
  }
  statements {
  }
}
ver: ISTANBUL
