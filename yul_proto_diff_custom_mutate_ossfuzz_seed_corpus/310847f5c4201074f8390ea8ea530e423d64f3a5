obj {
  code {
    block {
      statements {
      }
      statements {
        contstmt {
        }
      }
      statements {
        leave {
        }
      }
      statements {
        functioncall {
          ret: MULTIASSIGN
          func_index: 1352551930
          in_param1 {
            varref {
              varnum: 1284748239
            }
          }
          in_param2 {
            varref {
              varnum: 1892059762
            }
          }
          in_param3 {
            varref {
              varnum: 621735469
            }
          }
          in_param4 {
            func_expr {
              ret: SINGLE
              func_index: 217747666
            }
          }
          out_param1 {
            varnum: 1327072619
          }
          out_param2 {
            varnum: 2002746958
          }
          out_param3 {
            varnum: 433043879
          }
          out_param4 {
            varnum: 1236376936
          }
        }
      }
      statements {
        pop {
          expr {
            create {
              createty: CREATE
            }
          }
        }
      }
    }
  }
  data {
    hex: "~"
  }
  sub_obj {
    code {
      block {
        statements {
          assignment {
            ref_id {
              varnum: 1410552300
            }
            expr {
              cons {
                intval: 653561518
              }
            }
          }
        }
        statements {
          ifstmt {
            cond {
              varref {
                varnum: 653561518
              }
            }
            if_body {
              statements {
              }
              statements {
              }
            }
          }
        }
        statements {
          forstmt {
            for_cond {
              unop {
                op: MLOAD
                operand {
                  func_expr {
                    ret: SINGLE
                    func_index: 830164646
                  }
                }
              }
            }
          }
        }
        statements {
          boundedforstmt {
          }
        }
      }
    }
    data {
      hex: "+"
    }
    sub_obj {
      code {
        block {
          statements {
            decl {
            }
          }
          statements {
          }
        }
      }
      data {
        hex: "~"
      }
    }
  }
}
ver: SPURIOUS
