obj {
  code {
    block {
      statements {
        boundedforstmt {
          for_body {
            statements {
              funcdef {
                num_input_params: 0
                num_output_params: 0
                block {
                }
              }
            }
            statements {
              boundedforstmt {
                for_body {
                  statements {
                    decl {
                      expr {
                        top {
                          op: MULM
                          arg1 {
                          }
                          arg2 {
                          }
                          arg3 {
                            top {
                              op: MULM
                              arg1 {
                              }
                              arg2 {
                                nop {
                                  op: NUMBER
                                }
                              }
                              arg3 {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  statements {
                    decl {
                      expr {
                        top {
                          op: MULM
                          arg1 {
                          }
                          arg2 {
                          }
                          arg3 {
                            top {
                              op: MULM
                              arg1 {
                              }
                              arg2 {
                                nop {
                                  op: NUMBER
                                }
                              }
                              arg3 {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
