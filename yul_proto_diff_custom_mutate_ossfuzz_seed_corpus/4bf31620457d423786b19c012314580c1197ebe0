obj {
  code {
    block {
      statements {
        functioncall {
          ret: ZERO
          func_index: 0
          in_param1 {
          }
          in_param2 {
          }
          in_param3 {
          }
          in_param4 {
          }
          out_param1 {
            varnum: 0
          }
          out_param2 {
            varnum: 4
          }
          out_param3 {
            varnum: 1646272544
          }
          out_param4 {
            varnum: 0
          }
        }
      }
      statements {
        storage_func {
          loc {
          }
          val {
          }
          st: SSTORE
        }
      }
      statements {
      }
      statements {
      }
      statements {
        funcdef {
          num_input_params: 686848
          num_output_params: 0
          block {
            statements {
              extcode_copy {
                addr {
                  cons {
                    intval: 47
                  }
                }
                target {
                  binop {
                    op: SI
                    left {
                      binop {
                        op: ADD
                        left {
                        }
                        right {
                          binop {
                            op: KECCAK
                            left {
                            }
                            right {
                            }
                          }
                        }
                      }
                    }
                    right {
                    }
                  }
                }
                source {
                }
                size {
                }
              }
            }
          }
        }
      }
    }
  }
  sub_obj {
    code {
      block {
      }
    }
    sub_obj {
      code {
        block {
        }
      }
      sub_obj {
        code {
          block {
          }
        }
        data {
          hex: "\001\000\000\000"
        }
      }
    }
  }
}
