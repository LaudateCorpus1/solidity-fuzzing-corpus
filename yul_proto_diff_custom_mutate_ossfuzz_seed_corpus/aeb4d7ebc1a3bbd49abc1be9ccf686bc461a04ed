block {
  statements {
    breakstmt {
    }
  }
  statements {
    extcode_copy {
      addr {
      }
      target {
        unop {
          op: MLOAD
          operand {
            cons {
              intval: 0
            }
          }
        }
      }
      source {
      }
      size {
        unop {
          op: CALLDATALOAD
          operand {
            binop {
              op: SGT
              left {
                unop {
                  op: SLOAD
                  operand {
                    unop {
                      op: CALLDATALOAD
                      operand {
                        cons {
                          intval: 0
                        }
                      }
                    }
                  }
                }
              }
              right {
              }
            }
          }
        }
      }
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    storage_func {
      loc {
        binop {
          op: ADD
          left {
          }
          right {
            binop {
              op: ADD
              left {
              }
              right {
                binop {
                  op: LT
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
        }
      }
      val {
        binop {
          op: ADD
          left {
          }
          right {
            binop {
              op: ADD
              left {
              }
              right {
                binop {
                  op: LT
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
        }
      }
      st: MSTORE
    }
  }
  statements {
    storage_func {
      loc {
        binop {
          op: ADD
          left {
          }
          right {
            binop {
              op: ADD
              left {
              }
              right {
                binop {
                  op: LT
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
        }
      }
      val {
        binop {
          op: ADD
          left {
          }
          right {
            binop {
              op: ADD
              left {
              }
              right {
                binop {
                  op: LT
                  left {
                  }
                  right {
                  }
                }
              }
            }
          }
        }
      }
      st: MSTORE
    }
  }
  statements {
    breakstmt {
    }
  }
}
ver: HOMESTEAD
