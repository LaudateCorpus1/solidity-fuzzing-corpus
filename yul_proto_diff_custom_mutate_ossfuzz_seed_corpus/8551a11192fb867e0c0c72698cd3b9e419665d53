block {
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    switchstmt {
      switch_expr {
        unop {
          op: MLOAD
          operand {
            cons {
              intval: 0
            }
          }
        }
      }
      case_stmt {
        case_lit {
          strval: "\000"
        }
        case_block {
          statements {
            storage_func {
              loc {
              }
              val {
              }
              st: MSTORE
            }
          }
          statements {
            breakstmt {
            }
          }
          statements {
            breakstmt {
            }
          }
          statements {
            breakstmt {
            }
          }
          statements {
            terminatestmt {
              self_des {
                addr {
                  binop {
                    op: ADD
                    left {
                      lowcall {
                        callty: CALL
                        gas {
                          top {
                            op: MULM
                            arg1 {
                            }
                            arg2 {
                            }
                            arg3 {
                            }
                          }
                        }
                        addr {
                        }
                        wei {
                        }
                        in {
                          unop {
                            op: CALLDATALOAD
                            operand {
                              cons {
                                intval: 0
                              }
                            }
                          }
                        }
                        insize {
                        }
                        out {
                          unop {
                            op: SLOAD
                            operand {
                              cons {
                                intval: 0
                              }
                            }
                          }
                        }
                        outsize {
                        }
                      }
                    }
                    right {
                    }
                  }
                }
              }
            }
          }
          statements {
            breakstmt {
            }
          }
          statements {
            breakstmt {
            }
          }
          statements {
            breakstmt {
            }
          }
          statements {
            breakstmt {
            }
          }
          statements {
            breakstmt {
            }
          }
        }
      }
      default_block {
        statements {
          terminatestmt {
            stop_invalid {
              stmt: INVALID
            }
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    functioncall {
      ret: ZERO
      func_index: 0
      in_param1 {
      }
      in_param2 {
      }
      in_param3 {
      }
      in_param4 {
      }
      out_param1 {
        varnum: 0
      }
      out_param2 {
        varnum: 0
      }
      out_param3 {
        varnum: 0
      }
      out_param4 {
        varnum: 0
      }
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
}
ver: SPURIOUS
