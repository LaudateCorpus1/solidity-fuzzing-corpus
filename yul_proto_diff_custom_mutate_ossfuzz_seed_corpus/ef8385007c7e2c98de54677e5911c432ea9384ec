obj {
  code {
    block {
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        forstmt {
          for_body {
            statements {
              terminatestmt {
                stop_invalid {
                  stmt: INVALID
                }
              }
            }
            statements {
              breakstmt {
              }
            }
            statements {
              breakstmt {
              }
            }
          }
          for_init {
            statements {
              breakstmt {
              }
            }
            statements {
              breakstmt {
              }
            }
          }
          for_post {
            statements {
              breakstmt {
              }
            }
            statements {
              breakstmt {
              }
            }
          }
          for_cond {
          }
        }
      }
      statements {
        storage_func {
          loc {
            unop {
              op: MLOAD
              operand {
                cons {
                  intval: 0
                }
              }
            }
          }
          val {
          }
          st: MSTORE
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        leave {
        }
      }
      statements {
        storage_func {
          loc {
            binop {
              op: ADD
              left {
                top {
                  op: ADDM
                  arg1 {
                    unop {
                      op: MLOAD
                      operand {
                        cons {
                          intval: 0
                        }
                      }
                    }
                  }
                  arg2 {
                  }
                  arg3 {
                  }
                }
              }
              right {
              }
            }
          }
          val {
          }
          st: MSTORE
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
    }
  }
  data {
    hex: "\210"
  }
  sub_obj {
    code {
      block {
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          leave {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
      }
    }
  }
}
ver: HOMESTEAD
