obj {
  code {
    block {
      statements {
        breakstmt {
        }
      }
      statements {
        funcdef {
          num_input_params: 538968064
          num_output_params: 7634208
          block {
            statements {
              copy_func {
                ct: DATA
                target {
                  varref {
                    varnum: 33554432
                  }
                }
                source {
                  nop {
                    op: GASLIMIT
                  }
                }
                size {
                }
              }
            }
            statements {
              storage_func {
                loc {
                }
                val {
                  binop {
                    op: SMOD
                    left {
                      nop {
                        op: GASLIMIT
                      }
                    }
                    right {
                    }
                  }
                }
                st: MSTORE
              }
            }
            statements {
              functioncall {
                ret: MULTIASSIGN
                func_index: 0
                in_param1 {
                }
                in_param2 {
                }
                in_param3 {
                }
                in_param4 {
                  binop {
                    op: SMOD
                    left {
                      nop {
                        op: GASLIMIT
                      }
                    }
                    right {
                    }
                  }
                }
                out_param1 {
                  varnum: 0
                }
                out_param2 {
                  varnum: 0
                }
                out_param3 {
                  varnum: 0
                }
                out_param4 {
                  varnum: 33554432
                }
              }
            }
            statements {
              breakstmt {
              }
            }
            statements {
              breakstmt {
              }
            }
            statements {
              breakstmt {
              }
            }
            statements {
              breakstmt {
              }
            }
            statements {
              breakstmt {
              }
            }
            statements {
              breakstmt {
              }
            }
            statements {
              breakstmt {
              }
            }
            statements {
              breakstmt {
              }
            }
            statements {
              breakstmt {
              }
            }
          }
          force_call: true
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
    }
  }
  data {
    hex: "\003\000\000\000\000\000\000\000"
  }
}
ver: BERLIN
