obj {
  code {
    block {
      statements {
        multidecl {
          num_vars: 117703122
        }
      }
      statements {
        decl {
          expr {
          }
        }
      }
      statements {
        decl {
          expr {
          }
        }
      }
      statements {
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        breakstmt {
        }
      }
      statements {
        contstmt {
        }
      }
      statements {
        storage_func {
          loc {
          }
          val {
          }
          st: MSTORE
        }
      }
      statements {
        leave {
        }
      }
      statements {
        ifstmt {
          cond {
            varref {
              varnum: 24605677
            }
          }
        }
      }
      statements {
        switchstmt {
          switch_expr {
          }
          case_stmt {
          }
        }
      }
      statements {
        funcdef {
          num_input_params: 538968064
          num_output_params: 538966528
          block {
            statements {
              multidecl {
                num_vars: 97527100
              }
            }
            statements {
              storage_func {
                loc {
                }
                val {
                }
                st: MSTORE
              }
            }
            statements {
            }
            statements {
              breakstmt {
              }
            }
            statements {
              breakstmt {
              }
            }
            statements {
              breakstmt {
              }
            }
            statements {
              contstmt {
              }
            }
            statements {
              storage_func {
                loc {
                }
                val {
                }
                st: MSTORE
              }
            }
            statements {
              leave {
              }
            }
            statements {
              ifstmt {
                cond {
                }
              }
            }
            statements {
              switchstmt {
                switch_expr {
                }
                case_stmt {
                }
              }
            }
            statements {
              copy_func {
                ct: RETURNDATA
                target {
                }
                source {
                }
                size {
                }
              }
            }
            statements {
              decl {
                expr {
                }
              }
            }
            statements {
              terminatestmt {
                ret_rev {
                  stmt: REVERT
                  pos {
                  }
                  size {
                  }
                }
              }
            }
            statements {
              pop {
                expr {
                }
              }
            }
          }
          force_call: true
        }
      }
      statements {
        decl {
          expr {
          }
        }
      }
      statements {
        boundedforstmt {
        }
      }
      statements {
        terminatestmt {
          ret_rev {
            stmt: REVERT
            pos {
            }
            size {
            }
          }
        }
      }
    }
  }
  data {
    hex: "$"
  }
}
ver: SPURIOUS
