block {
  statements {
  }
  statements {
  }
  statements {
  }
  statements {
    functioncall {
      ret: MULTIDECL
      func_index: 0
      in_param1 {
      }
      in_param2 {
      }
      in_param3 {
      }
      in_param4 {
      }
      out_param1 {
        varnum: 0
      }
      out_param2 {
        varnum: 0
      }
      out_param3 {
        varnum: 0
      }
      out_param4 {
        varnum: 0
      }
    }
  }
  statements {
    funcdef {
      num_input_params: 538976288
      num_output_params: 3640655872
      block {
        statements {
          funcdef {
            num_input_params: 0
            num_output_params: 3640655872
            block {
              statements {
                log_func {
                  pos {
                  }
                  size {
                  }
                  num_topics: ZERO
                  t1 {
                  }
                  t2 {
                  }
                  t3 {
                  }
                  t4 {
                    nop {
                      op: CALLVALUE
                    }
                  }
                }
              }
              statements {
              }
              statements {
                boundedforstmt {
                  for_body {
                    statements {
                      assignment {
                        ref_id {
                          varnum: 0
                        }
                        expr {
                          varref {
                            varnum: 2105376
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            force_call: true
          }
        }
        statements {
        }
        statements {
          boundedforstmt {
            for_body {
              statements {
              }
            }
          }
        }
      }
      force_call: false
    }
  }
  statements {
    blockstmt {
    }
  }
}
ver: SPURIOUS
