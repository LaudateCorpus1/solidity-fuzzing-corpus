obj {
  code {
    block {
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
      statements {
        terminatestmt {
          stop_invalid {
            stmt: STOP
          }
        }
      }
    }
  }
  sub_obj {
    code {
      block {
        statements {
          terminatestmt {
            stop_invalid {
              stmt: STOP
            }
          }
        }
        statements {
          terminatestmt {
            stop_invalid {
              stmt: STOP
            }
          }
        }
        statements {
          terminatestmt {
            stop_invalid {
              stmt: STOP
            }
          }
        }
        statements {
          terminatestmt {
            stop_invalid {
              stmt: STOP
            }
          }
        }
        statements {
          terminatestmt {
            stop_invalid {
              stmt: STOP
            }
          }
        }
        statements {
          terminatestmt {
            stop_invalid {
              stmt: STOP
            }
          }
        }
        statements {
          terminatestmt {
            self_des {
              addr {
                nop {
                  op: CHAINID
                }
              }
            }
          }
        }
        statements {
        }
        statements {
          terminatestmt {
            stop_invalid {
              stmt: STOP
            }
          }
        }
        statements {
          terminatestmt {
            stop_invalid {
              stmt: STOP
            }
          }
        }
        statements {
          terminatestmt {
            stop_invalid {
              stmt: STOP
            }
          }
        }
      }
    }
    sub_obj {
      code {
        block {
        }
      }
    }
  }
}
ver: ISTANBUL
