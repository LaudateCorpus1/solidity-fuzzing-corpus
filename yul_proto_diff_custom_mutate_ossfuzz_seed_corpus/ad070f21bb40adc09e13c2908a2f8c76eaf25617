block {
  statements {
    multidecl {
      num_vars: 0
    }
  }
  statements {
  }
  statements {
    storage_func {
      loc {
      }
      val {
      }
      st: MSTORE8
    }
  }
  statements {
    storage_func {
      loc {
      }
      val {
      }
      st: MSTORE8
    }
  }
  statements {
    funcdef {
      num_input_params: 1
      num_output_params: 10
      block {
        statements {
          funcdef {
            num_input_params: 1
            num_output_params: 1342177290
            block {
              statements {
                forstmt {
                  for_body {
                    statements {
                      functioncall {
                        ret: ZERO
                        func_index: 0
                        in_param1 {
                        }
                        in_param2 {
                        }
                        in_param3 {
                        }
                        in_param4 {
                        }
                        out_param1 {
                          varnum: 0
                        }
                        out_param2 {
                          varnum: 49
                        }
                        out_param3 {
                          varnum: 0
                        }
                        out_param4 {
                          varnum: 0
                        }
                      }
                    }
                  }
                  for_init {
                  }
                  for_post {
                  }
                  for_cond {
                    lowcall {
                      callty: CALL
                      gas {
                        lowcall {
                          callty: CALL
                          gas {
                            lowcall {
                              callty: CALL
                              gas {
                              }
                              addr {
                              }
                              wei {
                              }
                              in {
                              }
                              insize {
                              }
                              out {
                                nop {
                                  op: MSIZE
                                }
                              }
                              outsize {
                              }
                            }
                          }
                          addr {
                          }
                          wei {
                          }
                          in {
                          }
                          insize {
                          }
                          out {
                          }
                          outsize {
                          }
                        }
                      }
                      addr {
                      }
                      wei {
                      }
                      in {
                      }
                      insize {
                      }
                      out {
                        top {
                          op: MULM
                          arg1 {
                          }
                          arg2 {
                          }
                          arg3 {
                          }
                        }
                      }
                      outsize {
                        unop {
                          op: BLOCKHASH
                          operand {
                            nop {
                              op: MSIZE
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              statements {
                leave {
                }
              }
            }
            force_call: true
          }
        }
      }
      force_call: true
    }
  }
}
ver: SPURIOUS
