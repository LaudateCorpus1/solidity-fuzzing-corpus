block {
  statements {
    extcode_copy {
      addr {
      }
      target {
        binop {
          op: ADD
          left {
            cons {
              intval: 0
            }
          }
          right {
          }
        }
      }
      source {
      }
      size {
      }
    }
  }
  statements {
    extcode_copy {
      addr {
      }
      target {
        binop {
          op: ADD
          left {
            cons {
              intval: 0
            }
          }
          right {
          }
        }
      }
      source {
      }
      size {
      }
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    functioncall {
      ret: MULTIASSIGN
      func_index: 0
      in_param1 {
      }
      in_param2 {
      }
      in_param3 {
      }
      in_param4 {
      }
      out_param1 {
        varnum: 0
      }
      out_param2 {
        varnum: 0
      }
      out_param3 {
        varnum: 0
      }
      out_param4 {
        varnum: 0
      }
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    extcode_copy {
      addr {
      }
      target {
        binop {
          op: ADD
          left {
            cons {
              intval: 0
            }
          }
          right {
          }
        }
      }
      source {
      }
      size {
      }
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
  }
  statements {
  }
  statements {
    functioncall {
      ret: MULTIASSIGN
      func_index: 0
      in_param1 {
      }
      in_param2 {
      }
      in_param3 {
      }
      in_param4 {
      }
      out_param1 {
        varnum: 0
      }
      out_param2 {
        varnum: 0
      }
      out_param3 {
        varnum: 0
      }
      out_param4 {
        varnum: 0
      }
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
}
ver: HOMESTEAD
