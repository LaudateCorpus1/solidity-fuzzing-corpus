block {
  statements {
    copy_func {
      ct: CODE
      target {
      }
      source {
      }
      size {
      }
    }
  }
  statements {
    copy_func {
      ct: CODE
      target {
      }
      source {
      }
      size {
        varref {
          varnum: 0
        }
      }
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    copy_func {
      ct: CODE
      target {
      }
      source {
        binop {
          op: ADD
          left {
          }
          right {
          }
        }
      }
      size {
        varref {
          varnum: 851968
        }
      }
    }
  }
  statements {
    funcdef {
      num_input_params: 248
      num_output_params: 4177526774
      block {
        statements {
        }
        statements {
          assignment {
            ref_id {
              varnum: 0
            }
            expr {
            }
          }
        }
        statements {
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          functioncall {
            ret: MULTIDECL
            func_index: 0
            in_param1 {
            }
            in_param2 {
            }
            in_param3 {
            }
            in_param4 {
            }
            out_param1 {
              varnum: 0
            }
            out_param2 {
              varnum: 0
            }
            out_param3 {
              varnum: 0
            }
            out_param4 {
              varnum: 0
            }
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
        statements {
          breakstmt {
          }
        }
      }
      force_call: true
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
}
ver: SPURIOUS
