block {
  statements {
    multidecl {
      num_vars: 36673881
    }
  }
  statements {
    decl {
      expr {
        varref {
          varnum: 80625485
        }
      }
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    storage_func {
      loc {
      }
      val {
      }
      st: SSTORE
    }
  }
  statements {
    storage_func {
      loc {
      }
      val {
      }
      st: SSTORE
    }
  }
  statements {
    leave {
    }
  }
  statements {
    storage_func {
      loc {
        varref {
          varnum: 39898033
        }
      }
      val {
      }
      st: SSTORE
    }
  }
  statements {
    storage_func {
      loc {
      }
      val {
      }
      st: MSTORE8
    }
  }
  statements {
    storage_func {
      loc {
        varref {
          varnum: 42782542
        }
      }
      val {
      }
      st: SSTORE
    }
  }
  statements {
    contstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    multidecl {
      num_vars: 32629788
    }
  }
  statements {
    storage_func {
      loc {
      }
      val {
      }
      st: SSTORE
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    storage_func {
      loc {
      }
      val {
        varref {
          varnum: 59500673
        }
      }
      st: SSTORE
    }
  }
  statements {
  }
  statements {
    breakstmt {
    }
  }
  statements {
    breakstmt {
    }
  }
  statements {
    contstmt {
    }
  }
  statements {
    storage_func {
      loc {
      }
      val {
        varref {
          varnum: 54720220
        }
      }
      st: MSTORE
    }
  }
  statements {
    leave {
    }
  }
  statements {
    ifstmt {
      cond {
      }
    }
  }
  statements {
    switchstmt {
      switch_expr {
      }
      case_stmt {
      }
    }
  }
  statements {
    storage_func {
      loc {
      }
      val {
      }
      st: SSTORE
    }
  }
  statements {
    decl {
      expr {
      }
    }
  }
  statements {
    boundedforstmt {
    }
  }
  statements {
    forstmt {
      for_cond {
      }
    }
  }
  statements {
    terminatestmt {
      ret_rev {
        stmt: REVERT
        pos {
        }
        size {
        }
      }
    }
  }
}
ver: CONSTANTINOPLE
