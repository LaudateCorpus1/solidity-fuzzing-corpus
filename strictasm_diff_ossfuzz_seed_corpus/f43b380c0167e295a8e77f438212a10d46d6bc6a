{
let a,b := foo(calldataload(0),calldataload(32),calldataload(64),calldataload(96),calldataload(128),calldataload(160),calldataload(192),calldataload(224))
sstore(6, a)
sstore(32, b)
function foo(x_0, x_1, x_2, x_3, x_4, x_5, x_6, x_7) -> x_8, x_9
{
x_1 := mload(not(x_9))
sstore(x_0, x_0)
sstore(x_0, x_0)
x_9 := mul(x_0,mul(x_0,xor(x_0,mul(x_0,mul(x_0,shl(x_0,x_0))))))
x_1 := add(add(mod(add(add(add(add(add(add(shl(add(add(add(add(add(add(x_9,x_9),x_9),x_7),x_9),x_9),x_9),x_9),x_6),x_9),x_0),x_8),x_9),x_9),x_9),x_9),x_7)
if x_0 {
mstore(x_0, x_9)
}
}
}
