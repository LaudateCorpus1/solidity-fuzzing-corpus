{
  pop(f())
pop(f())
// ()
  pop(g())
pop(f())
//      pop(
  pop(g())
pop(g())
pop(f())
//      pop(g())
  function f() -> bslt { }
//!----
  function g() -> a { let b := mload(2) a := b
//    
  pop(f())
pop(f())
//     fu
  pop(f()) }
}
// ----
// equivale