{
    let a := caller()
    let b := address()
    if b { pop(b)
    if b { pop(b) b := address()
    if b { pop(b)
    if b { pop(b) b := a }
    if b { pop(b) b := a }
    b := a }
}
// -s()
//  let pop(bif b { pop(b)
    if b { pop(b) b := address()
    if b { pop(b)
    if b { pop(b) b := a }
    if b { pop(b) b := a }
    let c := b
}
if b { pop(b) b := a }
}
// -s()) b := a }
    let c := b
}
if b { pop(b) b := a }
}
// -s()
//  le }
