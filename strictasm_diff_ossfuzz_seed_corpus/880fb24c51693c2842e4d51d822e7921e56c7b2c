{
let a_0, a_1, a_2, a_3
function foo_noreturn_0()
{
let x_0
let x_1, x_2, x_3, x_4 := foo_multireturn_0(1, 1, 1, 1)
let x_5, x_6, x_7, x_8 := foo_multireturn_0(1, 1, 1, 1)
let x_9, x_10, x_11, x_12 := foo_multireturn_0(1, 1, 1, 1)
let x_13, x_14, x_15, x_16 := foo_multireturn_0(1, 1, 1, 1)
let x_17, x_18, x_19, x_20 := foo_multireturn_0(1, 1, 1, 1)
let x_21, x_22, x_23, x_24 := foo_multireturn_0(1, 1, 1, 1)
let x_25, x_26, x_27, x_28 := foo_multireturn_0(1, 1, 1, 1)
let x_29, x_30, x_31, x_32 := foo_multireturn_0(1, 1, 1, 1)
let x_33, x_34, x_35, x_36 := foo_multireturn_0(1, 1, 1, 1)
let x_37, x_38, x_39, x_40 := foo_multireturn_0(1, 1, 1, 1)
let x_41, x_42, x_43, x_44 := foo_multireturn_0(1, 1, 1, 1)
let x_45, x_46, x_47, x_48 := foo_multireturn_0(x_0, 1, 1, 1)
let x_49, x_50, x_51, x_52 := foo_multireturn_0(1, 1, 1, 1)
let x_53, x_54, x_55, x_56 := foo_multireturn_0(1, 1, 1, 1)
let x_57, x_58, x_59, x_60 := foo_multireturn_0(1, 1, 1, 1)
let x_61, x_62, x_63, x_64 := foo_multireturn_0(1, 1, 1, 1)
let x_65, x_66, x_67, x_68 := foo_multireturn_0(1, 1, 1, 1)
let x_69, x_70, x_71, x_72 := foo_multireturn_0(1, 1, 1, 1)
let x_73, x_74, x_75, x_76 := foo_multireturn_0(1, 1, 1, 1)
calldatacopy(1, addmod(1, 1, codesize()), 1)
let x_77, x_78, x_79, x_80 := foo_multireturn_0(1, 1, 1, 1)
let x_81, x_82, x_83, x_84 := foo_multireturn_0(1, 1, 1, 1)
calldatacopy(1, addmod(1, 1, codesize()), 1)
let x_85, x_86, x_87, x_88 := foo_multireturn_0(1, 1, 1, 1)
extcodecopy(1, not(x_0), 1, 1)
let x_89, x_90, x_91, x_92 := foo_multireturn_0(1, 1, 1, 1)
let x_93, x_94, x_95, x_96 := foo_multireturn_0(1, 1, 1, 1)
let x_97, x_98, x_99, x_100 := foo_multireturn_0(1, 1, 1, 1)
let x_101, x_102, x_103, x_104 := foo_multireturn_0(1, 1, 1, 1)
let x_105, x_106, x_107, x_108 := foo_multireturn_1(1, 1, 1, 1)
let x_109, x_110, x_111, x_112 := foo_multireturn_0(1, 1, 1, 1)
let x_113, x_114, x_115, x_116 := foo_multireturn_0(1, 1, 1, 1)
let x_117, x_118, x_119, x_120 := foo_multireturn_0(1, 1, 1, 1)
let x_121, x_122, x_123, x_124 := foo_multireturn_1(1, 1, 1, 1)
let x_125, x_126, x_127, x_128 := foo_multireturn_0(1, 1, 1, 1)
let x_129 := pc()
let x_130, x_131, x_132, x_133 := foo_multireturn_0(1, 1, 1, 1)
let x_134, x_135, x_136, x_137 := foo_multireturn_0(1, 1, 1, 1)
let x_138, x_139, x_140, x_141 := foo_multireturn_0(1, 1, 1, 1)
}
foo_noreturn_0()
function foo_singlereturn_0() -> x_0
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
mstore(1, mulmod(1, 1, x_0))
}
}
a_0 := foo_singlereturn_0()
sstore(0, a_0)
function foo_multireturn_0(x_0, x_1, x_2, x_3) -> x_4, x_5, x_6, x_7
{}
a_0, a_1, a_2, a_3 := foo_multireturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
sstore(96, a_3)
function foo_noreturn_1()
{
let x_0
calldatacopy(1, addmod(1, 1, pc()), 1)
let x_1, x_2, x_3, x_4 := foo_multireturn_1(1, 1, 1, 1)
let x_5, x_6, x_7, x_8 := foo_multireturn_0(1, 1, 1, 1)
let x_9, x_10, x_11, x_12 := foo_multireturn_0(1, 1, 1, 1)
let x_13, x_14, x_15, x_16 := foo_multireturn_0(1, 1, 1, 1)
let x_17, x_18, x_19, x_20 := foo_multireturn_0(1, 1, 1, 1)
let x_21, x_22, x_23, x_24 := foo_multireturn_0(1, 1, 1, 1)
let x_25, x_26, x_27, x_28 := foo_multireturn_0(1, 1, 1, 1)
let x_29, x_30, x_31, x_32 := foo_multireturn_0(1, 1, 1, 1)
let x_33, x_34, x_35, x_36 := foo_multireturn_0(1, 1, 1, 1)
let x_37, x_38, x_39, x_40 := foo_multireturn_0(1, 1, 1, 1)
foo_noreturn_0()
extcodecopy(1, not(x_0), 1, 1)
let x_41, x_42, x_43, x_44 := foo_multireturn_0(1, 1, 1, 1)
let x_45, x_46, x_47, x_48 := foo_multireturn_0(1, 1, 1, 1)
let x_49, x_50, x_51, x_52 := foo_multireturn_0(1, 1, 1, 1)
let x_53, x_54, x_55, x_56 := foo_multireturn_0(1, 1, 1, 1)
calldatacopy(1, addmod(1, 1, codesize()), 1)
let x_57, x_58, x_59, x_60 := foo_multireturn_0(1, 1, 1, 1)
extcodecopy(1, not(x_0), 1, 1)
let x_61, x_62, x_63, x_64 := foo_multireturn_0(1, 1, 1, 1)
let x_65, x_66, x_67, x_68 := foo_multireturn_0(1, 1, 1, 1)
let x_69, x_70, x_71, x_72 := foo_multireturn_0(1, 1, 1, 1)
let x_73, x_74, x_75, x_76 := foo_multireturn_0(1, 1, 1, 1)
let x_77, x_78, x_79, x_80 := foo_multireturn_0(1, 1, 1, 1)
let x_81, x_82, x_83, x_84 := foo_multireturn_0(1, 1, 1, 1)
let x_85, x_86, x_87, x_88 := foo_multireturn_0(1, 1, 1, 1)
let x_89, x_90, x_91, x_92 := foo_multireturn_0(1, 1, 1, 1)
let x_93, x_94, x_95, x_96 := foo_multireturn_0(1, 1, 1, 1)
let x_97, x_98, x_99, x_100 := foo_multireturn_0(1, 1, 1, 1)
let x_101, x_102, x_103, x_104 := foo_multireturn_0(1, 1, 1, 1)
let x_105, x_106, x_107, x_108 := foo_multireturn_0(1, 1, 1, 1)
let x_109 := pc()
let x_110, x_111, x_112, x_113 := foo_multireturn_0(1, 1, 1, 1)
let x_114, x_115, x_116, x_117 := foo_multireturn_0(1, 1, 1, 1)
let x_118 := pc()
calldatacopy(1, addmod(1, 1, pc()), 1)
let x_119, x_120, x_121, x_122 := foo_multireturn_0(1, 1, 1, 1)
let x_123, x_124, x_125, x_126 := foo_multireturn_0(1, 1, 1, 1)
let x_127, x_128, x_129, x_130 := foo_multireturn_0(1, 1, 1, 1)
let x_131, x_132, x_133, x_134 := foo_multireturn_0(1, 1, 1, 1)
let x_135, x_136, x_137, x_138 := foo_multireturn_1(1, 1, 1, 1)
let x_139, x_140, x_141, x_142 := foo_multireturn_0(1, 1, 1, 1)
calldatacopy(1, addmod(1, 1, codesize()), 1)
let x_143, x_144, x_145, x_146 := foo_multireturn_0(1, 1, 1, 1)
let x_147, x_148, x_149, x_150 := foo_multireturn_0(1, 1, 1, 1)
let x_151, x_152, x_153, x_154 := foo_multireturn_0(1, 1, 1, 1)
let x_155, x_156, x_157, x_158 := foo_multireturn_0(1, 1, 1, 1)
let x_159, x_160, x_161, x_162 := foo_multireturn_0(1, 1, 1, 1)
let x_163, x_164, x_165, x_166 := foo_multireturn_0(1, 1, 1, 1)
let x_167, x_168, x_169, x_170 := foo_multireturn_0(1, 1, 1, 1)
let x_171, x_172, x_173, x_174 := foo_multireturn_0(1, 1, 1, 1)
let x_175, x_176, x_177, x_178 := foo_multireturn_1(1, 1, 1, 1)
let x_179, x_180, x_181, x_182 := foo_multireturn_0(1, 1, 1, 1)
let x_183, x_184, x_185, x_186 := foo_multireturn_0(1, 1, 1, 1)
let x_187, x_188, x_189, x_190 := foo_multireturn_0(1, 1, 1, 1)
}
foo_noreturn_1()
function foo_singlereturn_1() -> x_0
{
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
mstore(1, mulmod(1, 1, x_0))
}
for { let i_2 := 0 } lt(i_2, 0x60) { i_2 := add(i_2, 0x20) } {
mstore(1, mulmod(1, 1, x_0))
}
}
a_0 := foo_singlereturn_1()
sstore(0, a_0)
function foo_multireturn_1(x_0, x_1, x_2, x_3) -> x_4, x_5, x_6, x_7
{}
a_0, a_1, a_2, a_3 := foo_multireturn_1(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
sstore(96, a_3)
function foo_noreturn_2(x_0)
{
let x_1
}
foo_noreturn_2(calldataload(0))
function foo_singlereturn_2() -> x_0
{
{}
{
let x_1 := 1
}
{
{}
{
let x_1 := 1
}
{
let x_1 := 1
}
{
let x_1 := 1
}
{
let x_1 := 1
}
{
let x_1 := 1
}
}
{
let x_1 := 1
}
{
let x_1 := 1
}
{
let x_1 := 1
}
}
a_0 := foo_singlereturn_2()
sstore(0, a_0)
function foo_multireturn_2(x_0) -> x_1, x_2
{}
a_0, a_1 := foo_multireturn_2(calldataload(0))
sstore(0, a_0)
sstore(32, a_1)
}
