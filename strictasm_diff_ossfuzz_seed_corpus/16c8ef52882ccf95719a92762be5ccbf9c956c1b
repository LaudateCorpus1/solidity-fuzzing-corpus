{
	function f(a, r) ->x { x := g(0,g(r, r)) }
function g(b,s) -> y{y := f(1, f(3, s)) } {
    let x
    for { } calldataload(0) { mstore(x, 0x42) }
    {
 {
        if callvalue()   {        continue
        }
  x := 2
// Can be
    {
    {
let a_0, a_1, a_2, a_3
function foo_0(x_, x_1) -> x_2, x_3, x_4
{
if mod(mod(x_2,gas()),gas()) {}
}
a_0,a_1,a_2 := foo_0(64, a_2)
   } if callvalue() {      continue
        }
     x := 2
    }
}    // Can be
 {
        if callvalue() {  continue
   }
     }
     }
}
//    }
}
// }
