{
let a_0, a_1, a_2, a_3
function foo_noreturn_0()
{
let x_0
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {}
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {}
for { let i_2 := 0 } lt(i_2, 0x60) { i_2 := add(i_2, 0x20) } {}
for { let i_3 := 0 } lt(i_3, 0x60) { i_3 := add(i_3, 0x20) } {}
for { let i_4 := 0 } lt(i_4, 0x60) { i_4 := add(i_4, 0x20) } {}
for { let i_5 := 0 } lt(i_5, 0x60) { i_5 := add(i_5, 0x20) } {}
}
foo_noreturn_0()
function foo_singlereturn_0(x_0, x_1, x_2, x_3) -> x_4
{
for { let i_6 := 0 } lt(i_6, 0x60) { i_6 := add(i_6, 0x20) } {}
for { let i_7 := 0 } lt(i_7, 0x60) { i_7 := add(i_7, 0x20) } {}
}
a_0 := foo_singlereturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
function foo_multireturn_0(x_0, x_1, x_2, x_3) -> x_4, x_5, x_6, x_7
{
extcodecopy(foo_singlereturn_0(1, 1, foo_singlereturn_0(x_3, 1, 1, 1), 1), 1, 1, 1)
for { let i_8 := 0 } lt(i_8, 0x60) { i_8 := add(i_8, 0x20) } {}
}
a_0, a_1, a_2, a_3 := foo_multireturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
sstore(96, a_3)
}
