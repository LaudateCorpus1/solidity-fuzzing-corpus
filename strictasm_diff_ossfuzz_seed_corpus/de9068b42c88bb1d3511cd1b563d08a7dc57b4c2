{
let a_0, a_1, a_2, a_3
function foo_noreturn_0(x_0, x_1, x_2, x_3)
{
let x_4
extcodecopy(not(not(not(1))), not(1), not(1), not(not(1)))
extcodecopy(1, not(1), not(not(1)), not(not(1)))
extcodecopy(not(not(not(1))), not(1), not(not(1)), not(1))
extcodecopy(not(not(not(1))), not(1), x_0, not(1))
extcodecopy(1, not(1), not(not(1)), not(1))
}
foo_noreturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
function foo_singlereturn_0(x_0, x_1, x_2, x_3) -> x_4
{
let x_5, x_6, x_7 := foo_multireturn_0()
}
a_0 := foo_singlereturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
function foo_multireturn_0() -> x_0, x_1, x_2
{}
a_0, a_1, a_2 := foo_multireturn_0()
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
function foo_noreturn_1(x_0, x_1)
{
let x_2
extcodecopy(1, not(1), not(not(1)), not(not(1)))
extcodecopy(1, not(1), not(not(1)), not(not(1)))
extcodecopy(not(not(not(1))), not(1), not(not(1)), not(1))
extcodecopy(not(not(not(1))), not(1), not(1), not(not(1)))
extcodecopy(not(not(not(1))), not(1), not(not(1)), not(1))
extcodecopy(not(not(1)), not(not(1)), not(1), 1)
extcodecopy(not(not(not(1))), not(1), 1, not(1))
extcodecopy(not(not(1)), not(1), not(not(1)), not(not(1)))
}
foo_noreturn_1(calldataload(0),calldataload(32))
function foo_singlereturn_1(x_0, x_1) -> x_2
{}
a_0 := foo_singlereturn_1(calldataload(0),calldataload(32))
sstore(0, a_0)
function foo_multireturn_1() -> x_0, x_1, x_2
{}
a_0, a_1, a_2 := foo_multireturn_1()
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
function foo_noreturn_2(x_0, x_1)
{
let x_2
extcodecopy(not(not(not(1))), not(1), not(not(1)), not(1))
extcodecopy(not(1), not(1), not(not(1)), not(1))
extcodecopy(not(not(not(1))), not(1), not(1), not(not(1)))
extcodecopy(not(1), not(1), not(not(1)), not(1))
extcodecopy(not(not(not(1))), not(1), not(not(1)), not(not(1)))
extcodecopy(not(not(not(1))), 129080947113984, not(not(1)), not(1))
extcodecopy(not(not(not(1))), not(1), not(1), not(not(1)))
extcodecopy(not(not(1)), not(1), not(not(1)), not(not(1)))
}
foo_noreturn_2(calldataload(0),calldataload(32))
function foo_singlereturn_2(x_0, x_1) -> x_2
{}
a_0 := foo_singlereturn_2(calldataload(0),calldataload(32))
sstore(0, a_0)
function foo_multireturn_2() -> x_0, x_1, x_2
{}
a_0, a_1, a_2 := foo_multireturn_2()
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
}
