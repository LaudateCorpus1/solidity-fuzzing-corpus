{
let a,b := foo(calldataload(0),calldataload(32),calldataload(64),calldataload(96),calldataload(128),calldataload(160),calldataload(192),calldataload(224))
sstore(0, a)
sstore(32, b)
function foo(x_0, x_1, x_2, x_3, x_4, x_5, x_6, x_7) -> x_8, x_9
{
x_0 := not(mload(not(x_0)))
if sload(not(sload(not(iszero(sload(sload(mload(not(sload(sload(mload(not(iszero(sload(sload(sload(iszero(sload(sload(x_0)))))))))))))))))))) {
}
x_9 := mload(not(x_9))
x_0 := mul(x_0,mul(not(x_9),x_0))
{
{
{
sstore(x_0, x_5)
}
sstore(not(x_0), x_0)
}
}
x_9 := sub(x_9,x_0)
x_9 := mload(not(x_9))
}
}
