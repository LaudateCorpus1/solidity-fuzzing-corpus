{
let a_0, a_1, a_2, a_3
function foo_noreturn_0(x_0, x_1, x_2, x_3)
{
let x_4
mstore(byte(1,byte(1,1)), byte(byte(1,1),1))
mstore(1, byte(byte(1,1),1))
mstore(byte(1,sar(1,1)), byte(byte(1,1),1))
mstore(byte(1,byte("",1)), byte(byte(1,1),1))
}
foo_noreturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
function foo_singlereturn_0(x_0, x_1, x_2, x_3) -> x_4
{}
a_0 := foo_singlereturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
function foo_multireturn_0(x_0, x_1) -> x_2, x_3, x_4, x_5
{}
a_0, a_1, a_2, a_3 := foo_multireturn_0(calldataload(0),calldataload(32))
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
sstore(96, a_3)
function foo_noreturn_1(x_0, x_1, x_2, x_3)
{
let x_4
mstore(byte(1,sar(1,1)), byte(byte(byte(1,1),1),1))
mstore(byte(1,byte(1,1)), byte(byte(1,1),1))
mstore(byte(1,byte(1,1)), byte(byte(1,1),1))
mstore(byte(1,byte(1,1)), byte(slt(1,1),1))
mstore(byte(1,sar(1,1)), byte(byte(1,1),1))
}
foo_noreturn_1(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
function foo_singlereturn_1(x_0, x_1, x_2, x_3) -> x_4
{
}
a_0 := foo_singlereturn_1(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
function foo_multireturn_1(x_0, x_1) -> x_2, x_3
{}
a_0, a_1 := foo_multireturn_1(calldataload(0),calldataload(32))
sstore(0, a_0)
sstore(32, a_1)
function foo_noreturn_2(x_0, x_1, x_2, x_3)
{
let x_4
mstore(byte(1,byte(1,1)), byte(byte(1,1),1))
mstore(byte(1,byte(1,1)), byte(sar(1,1),1))
mstore(byte(1,byte(1,1)), sar(byte(1,1),1))
mstore(3080192, byte(byte(1,1),1))
}
foo_noreturn_2(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
function foo_singlereturn_2(x_0, x_1, x_2, x_3) -> x_4
{
returndatacopy(1, 1, 1)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {}
}
a_0 := foo_singlereturn_2(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
function foo_multireturn_2(x_0, x_1) -> x_2, x_3
{}
a_0, a_1 := foo_multireturn_2(calldataload(0),calldataload(32))
sstore(0, a_0)
sstore(32, a_1)
function foo_noreturn_3(x_0, x_1, x_2, x_3)
{
let x_4
mstore(byte(1,byte(1,addmod(1, "0", 1))), byte(byte(1,1),1))
if 1 {
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {}
}
mstore(byte(1,byte(1,1)), byte(byte(1,1),1))
}
foo_noreturn_3(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
function foo_singlereturn_3(x_0, x_1, x_2, x_3) -> x_4
{}
a_0 := foo_singlereturn_3(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
function foo_multireturn_3(x_0, x_1) -> x_2, x_3, x_4, x_5
{}
a_0, a_1, a_2, a_3 := foo_multireturn_3(calldataload(0),calldataload(32))
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
sstore(96, a_3)
}
