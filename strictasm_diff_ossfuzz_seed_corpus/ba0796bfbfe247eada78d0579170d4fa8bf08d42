{
let a_0, a_1, a_2, a_3
function foo_noreturn_0(x_0)
{
let x_1
mstore(returndatasize(), 1)
}
foo_noreturn_0(calldataload(0))
function foo_singlereturn_0(x_0, x_1) -> x_2
{}
a_0 := foo_singlereturn_0(calldataload(0),calldataload(32))
sstore(0, a_0)
function foo_multireturn_0() -> x_0, x_1
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
break
}
foo_noreturn_0(1)
}
a_0, a_1 := foo_multireturn_0()
sstore(0, a_0)
sstore(32, a_1)
function foo_noreturn_1(x_0, x_1, x_2, x_3)
{
let x_4
}
foo_noreturn_1(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
function foo_singlereturn_1() -> x_0
{
calldatacopy(1, 1, 1)
calldatacopy(1, 1, 1)
calldatacopy(1, 1, 1)
calldatacopy(1, 1, 1)
calldatacopy(1, 1, 1)
calldatacopy(1, 1, 1)
calldatacopy(1, 1, 1)
calldatacopy(1, 1, 1)
}
a_0 := foo_singlereturn_1()
sstore(0, a_0)
function foo_multireturn_1() -> x_0, x_1
{
calldatacopy(1, 1, 1)
calldatacopy(1, 1, 1)
calldatacopy(1, 1, 1)
calldatacopy(1, 1, 1)
calldatacopy(1, 1, 1)
}
a_0, a_1 := foo_multireturn_1()
sstore(0, a_0)
sstore(32, a_1)
function foo_noreturn_2()
{
let x_0
mstore(sload(1), 1)
}
foo_noreturn_2()
function foo_singlereturn_2() -> x_0
{
let x_1, x_2 := foo_multireturn_0()
let x_3, x_4 := foo_multireturn_2(1)
}
a_0 := foo_singlereturn_2()
sstore(0, a_0)
function foo_multireturn_2(x_0) -> x_1, x_2
{
let x_3, x_4 := foo_multireturn_0()
mstore(returndatasize(), 1)
}
a_0, a_1 := foo_multireturn_2(calldataload(0))
sstore(0, a_0)
sstore(32, a_1)
function foo_noreturn_3()
{
let x_0
foo_noreturn_2()
foo_noreturn_5(1, 1, 1, 1)
}
foo_noreturn_3()
function foo_singlereturn_3() -> x_0
{}
a_0 := foo_singlereturn_3()
sstore(0, a_0)
function foo_multireturn_3() -> x_0, x_1
{
foo_noreturn_0(1)
foo_noreturn_0(1)
}
a_0, a_1 := foo_multireturn_3()
sstore(0, a_0)
sstore(32, a_1)
function foo_noreturn_4()
{
let x_0
mstore(sload(1), 1)
}
foo_noreturn_4()
function foo_singlereturn_4(x_0, x_1) -> x_2
{
foo_noreturn_2()
let x_3, x_4 := foo_multireturn_2(1)
}
a_0 := foo_singlereturn_4(calldataload(0),calldataload(32))
sstore(0, a_0)
function foo_multireturn_4(x_0) -> x_1, x_2
{
let x_3, x_4 := foo_multireturn_0()
mstore(returndatasize(), 1)
}
a_0, a_1 := foo_multireturn_4(calldataload(0))
sstore(0, a_0)
sstore(32, a_1)
function foo_noreturn_5(x_0, x_1, x_2, x_3)
{
let x_4
log4(1, 1, gas(), 1, 1, pc())
log4(1, 1, 1, 1, 1, pc())
}
foo_noreturn_5(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
function foo_singlereturn_5(x_0, x_1, x_2) -> x_3
{}
a_0 := foo_singlereturn_5(calldataload(0),calldataload(32),calldataload(64))
sstore(0, a_0)
function foo_multireturn_5(x_0, x_1) -> x_2, x_3
{
foo_noreturn_0(1)
foo_noreturn_2()
}
a_0, a_1 := foo_multireturn_5(calldataload(0),calldataload(32))
sstore(0, a_0)
sstore(32, a_1)
}
