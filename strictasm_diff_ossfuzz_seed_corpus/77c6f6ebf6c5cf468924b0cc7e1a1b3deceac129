{
let a_0, a_1, a_2, a_3
function foo_noreturn_0(x_0, x_1, x_2)
{
let x_3
sstore(1, xor(xor(xor(xor(xor(xor(pc(),1),xor(xor(xor(xor(xor(pc(),xor(pc(),1)),1),xor(xor(xor(xor(gas(),xor(1,1)),1),pc()),pc())),pc()),1)),xor(pc(),1)),pc()),xor(xor(xor(xor(gas(),xor(xor(pc(),1),xor(pc(),1))),msize()),pc()),pc())),pc()))
sstore(1, xor(xor(xor(xor(xor(xor(pc(),1),xor(div(xor(gas(),xor(xor(xor(xor(gas(),xor(1,1)),1),pc()),pc())),pc()),1)),xor(pc(),1)),pc()),xor(xor(xor(xor(gas(),xor(xor(pc(),1),xor(pc(),1))),xor(pc(),div(xor(xor(xor(addmod(1, 1, gas()),xor(pc(),1)),1),xor(xor(xor(xor(gas(),xor(1,1)),1),pc()),pc())),pc()))),pc()),pc())),pc()))
}
foo_noreturn_0(calldataload(0),calldataload(32),calldataload(64))
function foo_singlereturn_0(x_0, x_1, x_2) -> x_3
{}
a_0 := foo_singlereturn_0(calldataload(0),calldataload(32),calldataload(64))
sstore(0, a_0)
function foo_multireturn_0(x_0, x_1, x_2) -> x_3, x_4, x_5
{
if extcodehash(1) {}
}
a_0, a_1, a_2 := foo_multireturn_0(calldataload(0),calldataload(32),calldataload(64))
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
}
