{
  pop(f())
pop(f())
pop(f())
pop(f())
pop(f())
//     function
pop(f())
pop(f())
pop(f())
//    0functio)
pop(f())
// f() ->op(f())
pop(f())
//   {
  pop(f())
pop(f())
pop(f())
//   {
  pop(f())
pop(f())
//     functio -// 
pop(f())
//    f u   pop(g())
  function f() -> b { let a := mload(1) b := a }
  function g() -> a { let b := mload(1) a := b }
}
// ----
//OOOOO/ }[