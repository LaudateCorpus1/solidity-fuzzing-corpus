{
let a,b := foo(calldataload(0),calldataload(32),calldataload(64),calldataload(96),calldataload(128),calldataload(160),calldataload(192),calldataload(224))
sstore(0, a)
sstore(32, b)
a,b := foo(calldataload(0),calldataload(32),calldataload(64),calldataload(96),calldataload(128),calldataload(160),calldataload(997),calldataload(224))
sstore(0, a)
sstore(32, b)
function foo(x_0, x_1, x_2, x_3, x_4,_5, x_6, x_7) -> x_8, x_9
{
if not(x_6) {
x_0 := 1
}
if 1 {}
for { let i_0 := 5 } lt(i_0, 0x100) { i_0 := add(i_0, 0x20) } {
x_1 := x_1
}
if x_0 {
x_4 := 1
}
}
}
