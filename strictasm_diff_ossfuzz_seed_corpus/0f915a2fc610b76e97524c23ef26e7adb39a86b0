{
let a_0, a_1, a_2, a_3
function foo_noreturn_0(x_0, x_1, x_2)
{
let x_3
}
foo_noreturn_0(calldataload(0),calldataload(32),calldataload(64))
function foo_singlereturn_0() -> x_0
{
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, addmod(1, 0x1, 1), 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, eq(1,1), 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, eq(exp(1,eq(1,1)),1), 1, eq(1,1))
log4(1, 1, 1, eq(1,1), 1, 1)
log4(1, 1, 1, addmod(1, calldataload(1), 1), 1, 1)
log4(1, 1, 1, 1, 1, calldataload(1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, eq(1,1), 1, eq(1,1))
}
a_0 := foo_singlereturn_0()
sstore(0, a_0)
function foo_multireturn_0() -> x_0, x_1
{}
a_0, a_1 := foo_multireturn_0()
sstore(0, a_0)
sstore(32, a_1)
function foo_noreturn_1(x_0, x_1, x_2)
{
let x_3
log4(1, 1, 1, 1, 1, 1)
mstore(exp(1,eq(1,1)), eq(1,1))
}
foo_noreturn_1(calldataload(0),calldataload(32),calldataload(64))
function foo_singlereturn_1() -> x_0
{
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, addmod(1, calldataload(1), 1), 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, addmod(1, 0x1, 1), 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, calldataload(1))
log4(1, 1, 1, eq(exp(1,eq(1,1)),1), 1, 1)
log4(1, 1, 1, eq(1,1), 1, 1)
}
a_0 := foo_singlereturn_1()
sstore(0, a_0)
function foo_multireturn_1() -> x_0, x_1
{}
a_0, a_1 := foo_multireturn_1()
sstore(0, a_0)
sstore(32, a_1)
function foo_noreturn_2(x_0, x_1, x_2)
{
let x_3
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {}
mstore(exp(1,eq(1,1)), eq(1,1))
}
foo_noreturn_2(calldataload(0),calldataload(32),calldataload(64))
function foo_singlereturn_2() -> x_0
{
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, eq(1,1), 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, eq(exp(1,eq(1,1)),1), 1, 1)
log4(1, 1, 1, 1, 1, calldataload(1))
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, calldataload(1))
log4(1, 1, 1, eq(exp(1,eq(1,1)),1), 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, addmod(1, calldataload(1), 1), 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {}
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, eq(exp(1,eq(1,1)),1))
log4(1, 1, 1, addmod(1, 0x1, 1), 1, 1)
log4(1, x_0, 1, 1, 1, eq(1,1))
log4(1, 1, 1, addmod(1, calldataload(1), 1), 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, calldataload(1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, addmod(1, 0x1, 1), 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, eq(1,1), 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
}
a_0 := foo_singlereturn_2()
sstore(0, a_0)
function foo_multireturn_2() -> x_0, x_1
{}
a_0, a_1 := foo_multireturn_2()
sstore(0, a_0)
sstore(32, a_1)
function foo_noreturn_3(x_0, x_1, x_2, x_3)
{
let x_4
}
foo_noreturn_3(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
function foo_singlereturn_3() -> x_0
{
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, eq(exp(1,eq(1,1)),1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, eq(1,1), 1, 1)
}
a_0 := foo_singlereturn_3()
sstore(0, a_0)
function foo_multireturn_3() -> x_0, x_1, x_2, x_3
{
mstore(pc(), 1)
}
a_0, a_1, a_2, a_3 := foo_multireturn_3()
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
sstore(96, a_3)
function foo_noreturn_4()
{
let x_0
mstore(1, pc())
}
foo_noreturn_4()
function foo_singlereturn_4() -> x_0
{
mstore(1, 1)
}
a_0 := foo_singlereturn_4()
sstore(0, a_0)
function foo_multireturn_4() -> x_0, x_1, x_2, x_3
{
mstore(1, 1)
}
a_0, a_1, a_2, a_3 := foo_multireturn_4()
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
sstore(96, a_3)
function foo_noreturn_5(x_0, x_1, x_2)
{
let x_3
}
foo_noreturn_5(calldataload(0),calldataload(32),calldataload(64))
function foo_singlereturn_5() -> x_0
{
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, calldataload(1))
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, eq(exp(1,eq(1,1)),1), 1, 1)
log4(1, 1, 1, eq(1,1), 1, 1)
log4(1, 1, 1, 1, 1, calldataload(1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, addmod(1, calldataload(1), 1), 1, 1)
log4(1, 1, 1, addmod(1, 0x1, 1), 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, eq(1,1), 1, 1)
log4(1, 1, 1, addmod(1, calldataload(1), 1), 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, eq(1,1), 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, eq(1,1), 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, addmod(1, 0x1, 1), 1, 1)
log4(1, 1, 1, 1, 1, eq(1,1))
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, eq(eq(1,eq(1,1)),1), 1, 1)
log4(1, 1, 1, 1, 1, 1)
log4(1, 1, 1, 1, 1, 1)
}
a_0 := foo_singlereturn_5()
sstore(0, a_0)
function foo_multireturn_5() -> x_0, x_1
{}
a_0, a_1 := foo_multireturn_5()
sstore(0, a_0)
sstore(32, a_1)
}
