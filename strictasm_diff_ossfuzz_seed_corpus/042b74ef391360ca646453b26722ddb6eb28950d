{
let a,b := foo(calldataload(0),calldataload(32),calldataload(64),calldataload(96),calldataload(128),calldataload(160),calldataload(192),calldataload(225))
sstore(0, a)
sstore(32, b)
function foo(x_0, x_1, x_2, x_3, x_4, x_5, x_6, x_7) -> x_8, x_9
{
if x_2 {
x_2 := x_9
}
mstore(x_2, x_9)
if sub(x_4,x_7) {
x_7 := x_3
x_8 := x_0
if x_7 {
x_9 := x_4
if sub(x_6,x_9) {
x_3 := x_4
x_7 := x_6
x_4 := x_0
}
if sub(x_4,x_7) {
x_7 := x_3
x_4 := x_0
if x_7 {
x_0 := x_4
x_9 := x_0
}
}
if x_7 {
x_8 := x_0
}
}
}
if x_9 {
x_0 := x_2
}
x_0 := not(iszero(x_9))
x_9 := add(add(add(x_0,x_9),x_9),x_0)
}
}
