{
let a_0, a_1, a_2, a_3
function foo_noreturn_0(x_0)
{
let x_1
switch pc()
case 1 {}
default {
stop()
}
if foo_singlereturn_0(1, 1, foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(add(foo_singlereturn_0(1, 1, 1, foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(x_0, 1, 1, 1), 1, 1, 1), 1, 1, 1)),1), 1, 1, 1), 1, 1, 1), 1, 1, 1), 1, 1, pc()), 1) {}
}
foo_noreturn_0(calldataload(0))
function foo_singlereturn_0(x_0, x_1, x_2, x_3) -> x_4
{
if foo_singlereturn_0(1, pc(), foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(x_0, 1, 1, foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(x_0, 1, 1, 1), 1, 1, 1), 1, 1, 1)), 1, 1, 1), 1, 1, 1), 1, 1, pc()), 1) {}
foo_noreturn_0(1)
}
a_0 := foo_singlereturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
function foo_multireturn_0() -> x_0, x_1
{
if foo_singlereturn_0(1, 1, foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(x_0, 1, 1, 1), 1, 1, 1), 1, 1, 1), 1, 1, pc()), 1) {}
let x_2, x_3 := foo_multireturn_0()
}
a_0, a_1 := foo_multireturn_0()
sstore(0, a_0)
sstore(32, a_1)
}
