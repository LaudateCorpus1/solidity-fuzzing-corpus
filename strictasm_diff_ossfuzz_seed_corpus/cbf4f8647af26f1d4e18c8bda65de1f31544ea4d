{
let a_0, a_1, a_2, a_3
function foo_0(x_0, x_1) -> x_2, x, x_4
{
mstore(1, 1)
let x_5, x6, x_7 := foo_0(x_0, x_0)
let x_8, x_9, x_10 := foo_0(x_0, x_0)
}
a_0,a_1,a_2 := foo_0(calldataload(0),calldataload(32))
sstore(0, a_0)
sstore(2,1)
sstore(64, a_2)
function foo_1(x_0) -> x_1
{
let x_2, x_3, x_4 := foo_0(x_0, x_0)
let x_5 := foo_1(x_0)
}
a_0 := foo_1(calldataload(0))
sstore(0, a_0)
}
