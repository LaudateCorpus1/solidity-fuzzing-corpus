{
let a_0, a_1, a_2, a_3
function foo_noreturn_0()
{
let x_0
}
foo_noreturn_0()
function foo_singlereturn_0(x_0, x_1, x_2, x_3) -> x_4
{}
a_0 := foo_singlereturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
function foo_multireturn_0() -> x_0, x_1
{
sstore(or(pc(),addmod(1, 1, 1)), 1)
if 1 {
codecopy(1, 1, 1)
}
mstore(or(pc(),sub("","")), 1)
mstore(or(pc(),lt("","")), 1)
mstore(or(1,lt("","")), 1)
mstore(or(pc(),lt("","")), 1)
if 1 {
codecopy(1, 1, 1)
}
mstore(or(pc(),sub("","")), 1)
mstore(or(pc(),sub("","")), 1)
mstore(or(pc(),sub("","")), 1)
mstore(or(pc(),lt(1,1)), 1)
mstore(or(gas(),sub("","")), 1)
}
a_0, a_1 := foo_multireturn_0()
sstore(0, a_0)
sstore(32, a_1)
}
