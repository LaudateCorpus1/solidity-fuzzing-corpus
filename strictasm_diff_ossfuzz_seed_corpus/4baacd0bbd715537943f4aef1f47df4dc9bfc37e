{
let a,b := foo(calldataload(0),calldataload(32),calldataload(64),calldataload(96),calldataload(128),calldataload(160),calldataload(192),calldataload(224))
sstore(0, a)
sstore(32, b)
function foo(x_0, x_1, x_2, x_3, x_4, x_5, x_6, x_7) -> x_8, x_9
{
if mload(codesize()) {}
if mload(sload(1)) {}
mstore(1, and(1,or(msize(),and(1,or(gas(),1)))))
sstore(1, 1)
if mload(not(msize())) {}
if mload(mload(1)) {}
if mload(mload(1)) {}
}
}
