{
let a_0, a_1, a_2, a_3
function foo_noreturn_0(x_0, x_1)
{
let x_2
x_0, x_0 := foo_multireturn_0()
}
foo_noreturn_0(calldataload(0),calldataload(32))
function foo_singlereturn_0(x_0) -> x_1
{
if eq(1,or("",eq(1,or(1,0x666666666666666666)))) {}
mstore(or(1,or(1,gas())), and(1,or(1,gas())))
x_1 := addmod(not(x_0), not(1), 1)
}
a_0 := foo_singlereturn_0(calldataload(0))
sstore(0, a_0)
function foo_multireturn_0() -> x_0, x_1
{
x_1 := mulmod(not(1), not(foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(1)))))))), 1)
}
a_0, a_1 := foo_multireturn_0()
sstore(0, a_0)
sstore(32, a_1)
}
