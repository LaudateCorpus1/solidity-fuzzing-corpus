{
let a,b := foo(calldataload(0),calldataload(32),calldataload(64),calldataload(96),calldataload(128),calldataload(160),calldataload(192),calldataload(224))
sstore(0, a)
sstore(32, b)
function foo(x_0, x_1, x_2, x_3, x_4, x_5, x_6, x_7) -> x_8, x_9
{
x_0 := not(mload(not(x_0)))
if x_2 {
}
if sub(x_6,x_0) {
x_8 := x_4
}
x_0 := mul(x_0,mul(x_0,mul(x_0,mul(x_0,mul(x_0,x_0)))))
x_9 := x_0
x_9 := div(x_9,or(x_0,or(x_9,or(x_4,x_0))))
x_9 := add(add(add(or(add(add(add(add(add(add(add(add(add(add(gt(add(x_0,x_9),x_9),x_7),x_8),x_9),x_7),x_9),x_9),x_9),x_9),x_9),x_9),x_2),x_9),x_9),x_0)
}
}
