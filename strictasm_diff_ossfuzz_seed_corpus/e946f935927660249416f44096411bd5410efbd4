{
let a_0, a_1, a_2, a_3
function foo_noreturn_0(x_0, x_1, x_2, x_3)
{
let x_4
let x_5, x_6 := foo_multireturn_0(1, 1)
let x_7, x_8 := foo_multireturn_0(1, 1)
}
foo_noreturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
function foo_singlereturn_0(x_0, x_1, x_2, x_3) -> x_4
{
returndatacopy(1, 1, 1)
x_0 := add(1,sub(1,x_0))
if foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(1, 1, x_0, 1), 1, 1, x_0), 1, 1, add(1,x_0)), 1, 1, 1), 1, add(1,x_0), 1) {}
sstore(calldatasize(), 1)
}
a_0 := foo_singlereturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
function foo_multireturn_0(x_0, x_1) -> x_2, x_3
{
returndatacopy(1, 1, 1)
if foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(1, 1, x_0, 1), 1, 1, x_0), 1, 1, add(1,x_0)), add(1,x_0), 1, 1), 1, 1, 1) {}
sstore(add(1,x_0), sub(1,1))
}
a_0, a_1 := foo_multireturn_0(calldataload(0),calldataload(32))
sstore(0, a_0)
sstore(32, a_1)
}
