{
let a_0, a_1, a_2, a_3
function foo_noreturn_0(x_0)
{
let x_1
}
foo_noreturn_0(calldataload(0))
function foo_singlereturn_0(x_0, x_1, x_2, x_3) -> x_4
{
returndatacopy(1, 1, 1)
if foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(x_3, 1, 1, 1), 1, 1, 1), 1, 1, 1) {}
}
a_0 := foo_singlereturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
function foo_multireturn_0(x_0, x_1, x_2, x_3) -> x_4, x_5, x_6, x_7
{
x_0, x_0, x_0, x_0 := foo_multireturn_0(1, 1, 1, 1)
}
a_0, a_1, a_2, a_3 := foo_multireturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
sstore(96, a_3)
function foo_noreturn_1()
{
let x_0
if foo_singlereturn_0(foo_singlereturn_0(foo_singlereturn_0(1, foo_singlereturn_0(1, 1, 1, 1), 1, 1), 1, 1, 1), 1, 1, 1) {}
}
foo_noreturn_1()
function foo_singlereturn_1() -> x_0
{}
a_0 := foo_singlereturn_1()
sstore(0, a_0)
function foo_multireturn_1(x_0, x_1) -> x_2, x_3
{
x_0, x_0 := foo_multireturn_1(1, 1)
}
a_0, a_1 := foo_multireturn_1(calldataload(0),calldataload(32))
sstore(0, a_0)
sstore(32, a_1)
}
