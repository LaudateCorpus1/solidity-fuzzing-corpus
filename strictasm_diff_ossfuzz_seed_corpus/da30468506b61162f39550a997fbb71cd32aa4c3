{
let a_0, a_1, a_2, a_3
function foo_noreturn_0()
{
let x_0
stop()
}
foo_noreturn_0()
function foo_singlereturn_0() -> x_0
{
}
a_0 := foo_singlereturn_0()
sstore(0, a_0)
function foo_multireturn_0() -> x_0, x_1, x_2, x_3
{
for {}
1{
for {}
1{}
{
for {}
1{}
{
for {}
1{}
{
for {}
1{}
{
for {}
1{
{
sstore(iszero(1), 1)
}
}
{
for {}
1{}
{
for {}
1{}
{
for {}
1{}
{
for {
if 1 {
extcodecopy(1, 1, 1, add(x_0,1))
}
}
1{}
{
for {}
1{
for {}
1{
x_0 := 1
}
{
foo_noreturn_0()
}
{
sstore(1, 1)
}
}
{
for {}
1{}
{
for {}
pc(){
}
{}
for {}
1{}
{
for {
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
for {}
not(foo_singlereturn_0()){}
{}
}
}
1{}
{
for {}
1{}
{
for {}
1{}
{
for {}
1{}
{
for {}
1{
{
sstore(1, 1)
}
}
{
for {}
1{}
{
for {}
1{
x_0, x_0, x_0, x_0 := foo_multireturn_0()
}
{}
for {}
1{}
{
for {}
1{
x_0 := 1
}
{
foo_noreturn_0()
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
{}
}
a_0, a_1, a_2, a_3 := foo_multireturn_0()
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
sstore(96, a_3)
}
