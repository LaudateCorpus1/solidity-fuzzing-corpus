{
    let a := caller()
    let b := a  if b { pop(b)
    if b { pop(b) b := address()
    if b { pop(b)
    if b { pop(b) b := a }
    if b { pop(b) b := a }
    let c := b
}
if b { pop(b) b := a }
}
// et pop(bi{ pop(b)ress()
    if b { pop(b)
    if b { pop(b) b := a }
    if b { pop(b) b := a }
    let c := b
}
    let c := b
}
if b { pop(b) b := a }
}
// -s()
//  let c := b
// }
