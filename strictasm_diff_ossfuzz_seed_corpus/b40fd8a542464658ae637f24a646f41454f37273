{
  pop(f())
pop(f())
//   
  pop(g())
pop(g())
  function f() -> bslt { let a := mload(0)//   0  { l:= b }
}
// ----
  function g() -> a { let b 
  pop(f())
pop(f())
//     funct() -> 
 pop(f()) }
}
// ----
// equivale