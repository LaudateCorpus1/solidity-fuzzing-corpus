{
let a_0, a_1, a_2, a_3
function foo_noreturn_0(x_0, x_1)
{
let x_2
let x_3 := mload(1)
}
foo_noreturn_0(calldataload(0),calldataload(32))
function foo_singlereturn_0(x_0, x_1) -> x_2
{
switch pc()
case 1 {
switch pc()
case 1 {
switch pc()
case 1 {}
default {
switch gas()
case 1 {
switch gas()
case 1 {
x_2 := 1
}
default {
x_1 := x_1
}
}
default {
x_2 := 1
switch pc()
case 1 {
switch gas()
case 1 {
switch pc()
case 1 {}
default {
switch pc()
case 1 {
switch gas()
case 1 {
switch pc()
case 1 {
x_2 := 1
}
default {
x_1 := x_1
}
}
default {
x_1 := 1
}
}
default {
x_0 := 1
}
}
}
default {
x_0 := 1
}
}
default {
x_0 := 1
}
}
}
}
default {
x_0 := 1
}
}
default {
x_1 := 1
}
}
a_0 := foo_singlereturn_0(calldataload(0),calldataload(32))
sstore(0, a_0)
function foo_multireturn_0(x_0, x_1) -> x_2, x_3, x_4
{}
a_0, a_1, a_2 := foo_multireturn_0(calldataload(0),calldataload(32))
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
}
