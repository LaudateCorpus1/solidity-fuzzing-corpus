{
let a_0, a_1, a_2, a_3
function foo_noreturn_0()
{
let x_0
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {}
for {}
shl(0x1,shl(136,shr(1,shl(136,shl(0x1,shr(136,shl(136,shl(136,shr(not(1),shl(1,shl(0x1,shr(1,shl(136,shr(136,shl(136,shl(136,shl(136,shl(136,shl(136,shl(0x1,shr(0x1,shl(136,shl(136,shr(1,shl(136,shl(0x1,shr(136,shl(136,shl(136,shr(1,pc())))))))))))))))))))))))))))))){}
{}
sstore(1, or(gt(returndatasize(),"sh"),x_0))
}
foo_noreturn_0()
function foo_singlereturn_0() -> x_0
{
returndatacopy(1, 1, 1)
mstore(1, pc())
}
a_0 := foo_singlereturn_0()
sstore(0, a_0)
function foo_multireturn_0() -> x_0, x_1, x_2
{
x_2 := mulmod(1, mulmod(x_1, mulmod(not(1), 0x1, 1), 1), 1)
sstore(gt(gt(1,mod("sh",0x1)),mod(1,1)), 1)
}
a_0, a_1, a_2 := foo_multireturn_0()
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
function foo_noreturn_1()
{
let x_0
sstore(1, or(gt(returndatasize(),"sh"),returndatasize()))
}
foo_noreturn_1()
function foo_singlereturn_1() -> x_0
{
mstore(addmod(1, gas(), 1), 1)
}
a_0 := foo_singlereturn_1()
sstore(0, a_0)
function foo_multireturn_1() -> x_0, x_1
{}
a_0, a_1 := foo_multireturn_1()
sstore(0, a_0)
sstore(32, a_1)
}
