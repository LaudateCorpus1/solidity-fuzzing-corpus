{
let a,b := foo(calldataload(0),calldataload(32),calldataload(64),calldataload(96),calldataload(128),calldataload(160),calldataload(192),calldataload(224))
function foo(x_0, x_1, x_2, x_3, x_4, x_5, x_6, x7) -> x_8,x_9
{
switch x_0
case 1 {
switch x_0
case 1 {
switch x_0
case 0 {
switch x_0
case 1 {
x_8 := 1
}
default {
x_8 := 1
}
}
default {
x_8 :=1 
}
}
default {
x_8 := 1
}
}
default {
x_8 := 1
}
switch x_8
case 1 {
x_8 := mload(1)
}
default {
for { let i_0 := 0 } lt(i_0, 0x102) { i_0 := add(i_0, 0x20) } {}
x_8 := 1
}
}
}
