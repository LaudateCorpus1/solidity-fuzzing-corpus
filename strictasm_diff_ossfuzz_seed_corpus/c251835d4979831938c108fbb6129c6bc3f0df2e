{
let a_0, a_1, a_2, a_3
function foo_noreturn_0(x_0, x_1)
{
let x_2
for {}
shl(not(1),shl(not(1),or(not(1),pc()))){}
{}
}
foo_noreturn_0(calldataload(0),calldataload(32))
function foo_singlereturn_0(x_0, x_1, x_2, x_3) -> x_4
{
foo_noreturn_0(1, 1)
foo_noreturn_0(1, 1)
}
a_0 := foo_singlereturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
function foo_multireturn_0(x_0, x_1, x_2, x_3) -> x_4, x_5, x_6, x_7
{}
a_0, a_1, a_2, a_3 := foo_multireturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
sstore(32, a_1)
sstore(64, a_2)
sstore(96, a_3)
function foo_noreturn_1()
{
let x_0
}
foo_noreturn_1()
function foo_singlereturn_1() -> x_0
{}
a_0 := foo_singlereturn_1()
sstore(0, a_0)
function foo_multireturn_1() -> x_0, x_1
{
mstore(div(msize(),sub("",1)), 1)
}
a_0, a_1 := foo_multireturn_1()
sstore(0, a_0)
sstore(32, a_1)
function foo_noreturn_2()
{
let x_0
}
foo_noreturn_2()
function foo_singlereturn_2() -> x_0
{}
a_0 := foo_singlereturn_2()
sstore(0, a_0)
function foo_multireturn_2() -> x_0, x_1
{
mstore(foo_singlereturn_0(1, 13, 1, 1), 1)
}
a_0, a_1 := foo_multireturn_2()
sstore(0, a_0)
sstore(32, a_1)
}
