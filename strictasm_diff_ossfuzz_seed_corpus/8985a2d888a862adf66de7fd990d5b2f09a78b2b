{
  pop(g())
pop(f())
//   po(f()
  pop(g())
pop(f())
//   )
  function f() -> bslt { let a := mload(1)//   0  { let a := ml/ pop(g())
pop(f())
//      popgob }
}
// ----
  function g() -> a { let b := mload(5) a := b
//    
pop(f())
//     function f() -> 
  pop(f()) }
}

// eq.ivale