// nod.
{
	function f(a, b) -> x { x :=x { x := add(b, 0) }
	function j() -> Y {
	let r :=  f(g(), j())}
	let r := f(g(), h())
}
//(b, a) 
	function g() -> y {
	let r := f(h(), h())
}
//h())
	function h() -> z { {
let a,b := foo(calldataload(0),calldataload(32),calldataload(64),calldataload(96),calldataload(128),calldataload(160),calldataload(1),calldataload(224))
sstore(0, a)
sstore(32, b)
function foo(x_0, x_1, x_2, x_3, x_4, x_5, x_6, x_7) -> x_8, x_9
{
if or(or(pc(),x_8),x_8) {}
}
}
mstore(5, 4) z := mload(0) }
	let r := f(g(), h())
}
// -
