{
let a_0, a_1, a_2, a_3
function foo_noreturn_0(x_0, x_1, x_2, x_3)
{
let x_4
for {
mstore(sub(shr(1,1),sub(1,sub(1,1))), 1)
mstore(sub(sub("",1),1), 1)
}
shl(136,shl(136,shr(1,shl(136,shl(1,shl(538976256,shl(136,shl(136,shr(1,shl(136,shl(1,shl(136,shl(136,shr(1,shl(136,shl(1,shl(538976256,shl(136,shl(136,shr(1,shl(136,shl(1,shl(136,shl(136,shl(extcodesize(msize()),shr(1,1)))))))))))))))))))))))))){}
{}
let x_5, x_6 := foo_multireturn_0(1, 1, 1, 1)
}
foo_noreturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
function foo_singlereturn_0(x_0, x_1, x_2) -> x_3
{
x_0, x_0 := foo_multireturn_0(1, 1, 1, 1)
let x_4, x_5 := foo_multireturn_0(1, 1, 1, 1)
}
a_0 := foo_singlereturn_0(calldataload(0),calldataload(32),calldataload(64))
sstore(0, a_0)
function foo_multireturn_0(x_0, x_1, x_2, x_3) -> x_4, x_5
{
mstore(sub(sub("",1),1), 1)
mstore(sub(smod(1,sub("",sub("",1))),sub(1,sub(1,1))), 1)
extcodecopy(1, 1, 1, 0x1)
}
a_0, a_1 := foo_multireturn_0(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(0, a_0)
sstore(32, a_1)
}
