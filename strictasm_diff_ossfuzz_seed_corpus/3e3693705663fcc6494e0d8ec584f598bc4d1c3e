{
let a_0, a_1, a_2, a_3
function foo_0(x_0,_1) -> x_2, x_3, x_4
{}
a_0,a_1,a_2 := foo_0(calldataload(0),calldataload(32))
sstore(0, a_0)
sstore(64, a_2)
function foo_1(x_0) -> x_1, x_2
{}
a_0,a_1 := foo_1(calldataload(0))sstore(0, a_0)
sstore(32, a_1)
function foo_2(x_0) -> x_1
{
if x_0 {}
}
a_0 := foo_2(calldataload(0))
sstore(0, a_0)
function foo_3(x_0) -> x_1
{
let x_2, x_3 := foo_1(x_0)
}
a_0 := foo_3(calldataload(0))
sstore(0, a_0)
function foo_4(x_0) -> x_{
let x_2 := 1
}
a_0 := foo_4(calldataload(0))
sstore(0, a_0)
}
