{
let a_0, a_1, a_2, a_3
function foo_noreturn_0(x_0, x_1)
{
let x_2
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {}
}
foo_noreturn_0(calldataload(0),calldataload(32))
function foo_singlereturn_0(x_0, x_1) -> x_2
{
let x_3, x_4 := foo_multireturn_0()
}
a_0 := foo_singlereturn_0(calldataload(0),calldataload(32))
sstore(0, a_0)
function foo_multireturn_0() -> x_0, x_1
{
foo_noreturn_0(1, 1)
}
a_0, a_1 := foo_multireturn_0()
sstore(0, a_0)
sstore(32, a_1)
}
