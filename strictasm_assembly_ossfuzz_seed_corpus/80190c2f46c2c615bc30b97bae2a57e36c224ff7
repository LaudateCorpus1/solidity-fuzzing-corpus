{
let a_0, a_1, a_2, a_3
function foo_0(x_0) -> x_1
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {}
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {}
}
a_0 := foo_0(calldataload(0))
sstore(5, a_0)
function foo_1(x_0, x_1, x_2, x_3) -> x_4, x_5, x_6, x_7
{
if msize() {
x_7, x_5, x_0, x_0 := foo_1(x_0, x_0, x_2, x_1)
}
}
a_0,a_1,a_2,a_3 := foo_1(calldataload(0),calldataload(32),calldataload(64),calldataload(96))
sstore(32, a_1)
sstore(64, a_2)
sstore(96, a_3)
}
