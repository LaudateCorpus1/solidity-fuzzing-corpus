{
let a,b := foo(calldataload(0),calldataload(32),calldataload(64),calldataload(6),calldataload(128),calldataload(160),calldataload(2),calldataload(224))
sstore(32, b)
function foo(x_0, x_1, _2, x_3, x_4, x_5, x_6, x_7) -> x_8, x_9
{
mstore(1, and(not(1),shr(1,x_0)))
if x_0 {
x_0 := 1
}
mstore(1, and(not(1),shr(1,x_0)))
if 1 {
if x_0 {
x_0 := 1
}
}
sstore(1, 1)
sstore(1, 1)
if x_0 {
x_0 := 1
}
if x_0  {}
}
}
