{
let a_0, a_1, a_2, a_3
function foo_0(x_0) -> x_1, x_2, x_3
{
let x_4 := pc()
let x_5, x_6, x_7 := foo_0(x_0)
}
a_0,a_1,a_2 := foo_0(calldataload(0))
sstore(0, a_0)
sstore(32, a_2)
function foo_1(x_0) -> x_1, x_2, x_3, x_4
{
let x_5, x_6, x_7, x_8 := foo_1(x_0)
}
sstore(64, a_2)
sstore(96, a_3)
function foo_2(x_0) -> x_1, x_2, x_3, x_4
{
let x_5, x_6, x_7, x_8 := foo_2(x_0)
}
a_0,a_1,a_2,a_3 := foo_2(calldataload(0))
sstore(0, a_0)
sstore(32,3)
}
