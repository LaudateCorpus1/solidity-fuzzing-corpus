{
let a_0, a_1, a_2, a
function foo_0(x_0) -> x_1
{}
a_0 := foo_0(calldataload(0))
sstore(0, a_0)
function foo_1(x_0) -> x_1
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
let x_2 := foo_0(x_0)
}
}sstore(0, a_0)
function foo_2(x_0) -> x_1
{
for { let i_0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
break
}
}
a_0 := foo_2(calldataload(0))

function foo_3(x_0) -> x_1
{
let x_2 := foo_0(x_0)
}
a_0 := foo_3(calldataload(0))
sstore(0, a_0)
}
