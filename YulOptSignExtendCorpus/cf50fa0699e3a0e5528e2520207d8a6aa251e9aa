{
{
let x_2, x_3 := foo_m_0(0x4000000000000000000000000000000000000000000, 0x40000000000000000000000000000000000000000000, 0x400000000000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000000000)
let x_10, x_11 := foo_m_0(0x400000000000000000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000000000000000, 0x40000000000000000000000000000000000000000000000000000, blockhash(0x400000000000000000000000000000000000000000000000000000))
function foo_m_0(x_17, x_18, x_19, x_20) -> x_21, x_22
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
for {
mstore(0, x_22)
}
0x0{}
{
let x_25, x_26 := foo_m_0(0x400000000000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000000000000000001)
}
leave
}
if 0x40000000000000000000000000000000000000000000000000000000001 {
}
}
let x_34, x_35 := foo_m_0(0x400000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000000001)
let x_42, x_43 := foo_m_0(0x4000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000001)
let x_50, x_51 := foo_m_0(0x40000000000000000000000000000000000001, 0x4000000000000000000000000000000000001, 0x400000000000000000000000000000000001, 0x40000000000000000000000000000000001)
let x_58, x_59 := foo_m_0(0x400000000000000000000000000001, 0x40000000000000000000000000001, blockhash(0x4000000000000000000000000001), 0x400000000000000000000000001)
let x_66, x_67 := foo_m_0(0x4000000000000000000001, 0x400000000000000000001, 0x40000000000000000001, 0x4000000000000000001)
let x_74, x_75 := foo_m_0(0x40000000000001, 0x4000000000001, 0x400000000001, 0x40000000001)
}
}
