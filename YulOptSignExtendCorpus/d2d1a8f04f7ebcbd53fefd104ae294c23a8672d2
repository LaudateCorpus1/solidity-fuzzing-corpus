{
{
function foo_m_0(x_1, x_2, x_3, x_4) -> x_5, x_6, x_7, x_8
{
pop(0x800000000000001)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
switch 0x80000000000001
default {
leave
}
}
let x_13, x_14, x_15, x_16 := foo_m_0(0x8000001, 0x800001, 0x80001, 0x8001)
let x_23, x_24, x_25, x_26 := foo_m_0(0xffff, 0xfffff, 0xffffff, 0xfffffff)
switch 0xffffffff
default {
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
let x_34, x_35, x_36, x_37 := foo_m_0(0xfffffffffffffff, 0xffffffffffffffff, 0xfffffffffffffffff, 0xffffffffffffffffff)
}
let x_44, x_45, x_46, x_47 := foo_m_0(0xfffffffffffffffffffffffff, 0xffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffff)
}
if 0xfffffffffffffffffffffffffffff {
let x_55, x_56, x_57, x_58 := foo_m_0(0xffffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffffffff)
}
let x_65, x_66, x_67, x_68 := foo_m_0(0xffffffffffffffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffffffffffffffffff)
}
let x_74, x_75, x_76, x_77 := foo_m_0(0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffff,sload(96),calldataload(160),sload(224))
sstore(288, x_74)
sstore(32, x_75)
sstore(96, x_76)
sstore(160, x_77)
let x_97, x_98, x_99, x_100 := foo_m_0(0x10000, 0x100000, call(0x1000000, 0x10000000, 0x100000000, 0x1000000000, 0x10000000000, 0x100000000000, 0x1000000000000), 0x10000000000000)
let x_113, x_114, x_115, x_116 := foo_m_0(0x100000000000000000000, 0x1000000000000000000000, 0x10000000000000000000000, 0x100000000000000000000000)
let x_123, x_124, x_125, x_126 := foo_m_0(0x1000000000000000000000000000000, 0x10000000000000000000000000000000, 0x100000000000000000000000000000000, 0x1000000000000000000000000000000000)
}
}
