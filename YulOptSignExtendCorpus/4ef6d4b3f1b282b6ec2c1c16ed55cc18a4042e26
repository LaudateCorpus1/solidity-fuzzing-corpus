{
{
codecopy(0x100000000000000000000000001, 0x10000000000000000000000001, sload(0x1000000000000000000000001))
sstore(0x100000000000000000000001, 0x10000000000000000000001)
function foo_m_0(x_6, x_7, x_8) -> x_9, x_10, x_11, x_12
{
codecopy(0x10000000000001, 0x1000000000001, mulmod(mulmod(mulmod(0x100000000001, 0x10000000001, 0x1000000001), mulmod(0x100000001, mulmod(0x10000001, 0x1000001, 0x100001), 0x10001), mulmod(0x1001, 0x101, 0x11)), mulmod(0x1f, mulmod(0x1ff, 0x1fff, 0x1ffff), 0x1fffff), mulmod(0x1ffffff, 0x1fffffff, 0x1ffffffff)))
sstore(0x1fffffffff, 0x1ffffffffff)
let x_38, x_39, x_40, x_41 := foo_m_0(0x1fffffffffffffffff, 0x1ffffffffffffffffff, 0x1fffffffffffffffffff)
if 0x1ffffffffffffffffffff {
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
}
}
let x_48, x_49, x_50, x_51 := foo_m_0(0x1fffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffffff)
}
let x_56, x_57, x_58, x_59 := foo_m_0(mload(64),0x1fffffffffffffffffffffffffffffffffffffff,sload(224))
sstore(288, x_56)
sstore(32, x_57)
sstore(96, x_58)
sstore(160, x_59)
}
}
