{
{
function foo_s_0(x_1) -> x_2
{
let x_4, x_5
codecopy(shr(0x7ffffffffff,signextend(0x7fffffffffff,add(call(call(x_1, 0x7ffffffffffff, 0x7fffffffffffff, 0x7ffffffffffffff, 0x7fffffffffffffff, 0x7ffffffffffffffff, 0x7fffffffffffffffff), 0x7ffffffffffffffffff, 0x7fffffffffffffffffff, 0x7ffffffffffffffffffff, 0x7fffffffffffffffffffff, 0x7ffffffffffffffffffffff, 0x7fffffffffffffffffffffff),0x7ffffffffffffffffffffffff))), 0, x_1)
leave
let x_22 := foo_s_0(0x7ffffffffffffffffffffffffffff)
x_1 := 0x7fffffffffffffffffffffffffffff
pop(0x7ffffffffffffffffffffffffffffff)
leave
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
break
break
}
leave
let x_28 := foo_s_0(0x7ffffffffffffffffffffffffffffffffff)
}
}
}
