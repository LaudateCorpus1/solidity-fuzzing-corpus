{
{
mstore(0x2000000001, 0x200000001)
function foo_n_0()
{
}
function foo_m_1() -> x_5, x_6
{
let x_9, x_10 := foo_m_1()
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
continue
}
}
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
break
continue
}
mstore(mload(mload(not(0x3f))), 0x3ff)
switch mload(mload(not(0x3fff)))
case 0x3ffff {
mstore(0, 0x3fffff)
switch 0x3ffffff
default {
}
}
default {
let x_19, x_20 := foo_m_1()
}
mstore(0x3fffffffffff, 0x3ffffffffffff)
}
}
