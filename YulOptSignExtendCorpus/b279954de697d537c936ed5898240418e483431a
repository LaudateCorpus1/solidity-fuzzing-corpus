{
{
function foo_m_0() -> x_1, x_2, x_3, x_4
{
calldatacopy(0x200000000000000000000000000000000000000001, 0x20000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000001)
selfdestruct(addmod(0x200000000000000000000000000000000000001, x_1, 0x20000000000000000000000000000000000001))
for {
mstore(0x2000000000000000000000000000000000001, 0x200000000000000000000000000000000001)
}
0x0{
}
{
switch 0x20000000000000000000000000000000001
default {
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
leave
}
break
}
mstore(0, x_3)
}
let x_15, x_16, x_17, x_18 := foo_m_0()
}
let x_20, x_21, x_22, x_23 := foo_m_0()
mstore(192, x_20)
mstore(256, x_21)
mstore(0, x_22)
mstore(64, x_23)
}
}
