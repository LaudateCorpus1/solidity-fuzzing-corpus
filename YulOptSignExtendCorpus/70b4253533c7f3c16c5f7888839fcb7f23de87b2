{
{
function foo_m_0(x_1, x_2, x_3, x_4) -> x_5, x_6, x_7, x_8
{
log1(create(add(create(0x1000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000001),0x1000000000000000000000000000000000000000001), 0x100000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000001), 0x1000000000000000000000000000000000000001, mul(0x100000000000000000000000000000000000001,sdiv(mul(0x10000000000000000000000000000000000001,0x1000000000000000000000000000000000001),0x100000000000000000000000000000000001)))
let x_22, x_23, x_24, x_25 := foo_m_0(0x10000000000000000000000000001, 0x1000000000000000000000000001, 0x100000000000000000000000001, 0x10000000000000000000000001)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
let x_32, x_33, x_34, x_35 := foo_m_0(0x1000000000000000001, 0x100000000000000001, 0x10000000000000001, 0x1000000000000001)
let x_42, x_43, x_44, x_45 := foo_m_0(0x100000001, 0x10000001, 0x1000001, 0x100001)
}
leave
}
let x_51, x_52, x_53, x_54 := foo_m_0(calldataload(224),sload(288),calldataload(32),sload(96))
sstore(160, x_51)
sstore(224, x_52)
sstore(288, x_53)
sstore(32, x_54)
let x_73, x_74, x_75, x_76 := foo_m_0(0x1ffffffffffffffffffffffff, 0x1fffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffff)
{
let x_82, x_83, x_84, x_85
}
let x_87, x_88, x_89, x_90 := foo_m_0(0x1ffffffffffffffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffffffffffffffffff)
sstore("Rematerialiser", x_51)
}
}
