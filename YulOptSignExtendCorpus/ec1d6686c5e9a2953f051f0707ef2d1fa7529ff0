{
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
break
}
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
if 0x800001 {
continue
}
}
function foo_m_0(x_2, x_3, x_4, x_5) -> x_6, x_7, x_8, x_9
{
extcodecopy(0xffffff, 0xfffffff, 0xffffffff, 0xfffffffff)
let x_17, x_18, x_19, x_20 := foo_m_0(0xffffffffffffffff, 0xfffffffffffffffff, 0xffffffffffffffffff, 0xfffffffffffffffffff)
let x_27, x_28, x_29, x_30 := foo_m_0(0xffffffffffffffffffffffffff, addmod(add(x_4,0xfffffffffffffffffffffffffff), 0xffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffff), 0xffffffffffffffffffffffffffffff, x_6)
function foo_n_11()
{
let x_39, x_40, x_41, x_42 := foo_m_0(0xffffffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffffffffff)
}
if 0xffffffffffffffffffffffffffffffffffffffffff {
}
}
mstore(0, 0xfffffffffffffffffffffffffffffffffffffffffff)
}
}
