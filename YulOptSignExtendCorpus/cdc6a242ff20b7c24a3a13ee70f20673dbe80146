{
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
}
codecopy(0x20000000000000000000000000000000, 0x200000000000000000000000000000000, 0x2000000000000000000000000000000000)
let x_5, x_6, x_7, x_8 := foo_m_0(0x20000000000000000000000000000000000000000, 0x200000000000000000000000000000000000000000, 0x2000000000000000000000000000000000000000000, 0x20000000000000000000000000000000000000000000)
mstore(balance(0x200000000000000000000000000000000000000000000), 0x2000000000000000000000000000000000000000000000)
function foo_m_0(x_16, x_17, x_18, x_19) -> x_20, x_21, x_22, x_23
{
mstore(0x20000000000000000000000000000000000000000000000000000000, calldatasize())
sstore(calldatasize(), sdiv(x_16,0x200000000000000000000000000000000000000000000000000000000))
mstore(sdiv(x_16,0x2000000000000000000000000000000000000000000000000000000000), 0x20000000000000000000000000000000000000000000000000000000000)
let x_30, x_31, x_32, x_33 := foo_m_0(0x200000000000000000000000000000000000000000000000000000000000001, 0x20000000000000000000000000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000000000000000000000000001, 0x200000000000000000000000000000000000000000000000000000000001)
}
extcodecopy(0x20000000000000000000000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000000000000000000000001, 0x200000000000000000000000000000000000000000000000000000001, mulmod(0x20000000000000000000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000000000000000000001, 0x200000000000000000000000000000000000000000000000000001))
let x_46, x_47, x_48, x_49 := foo_m_0(0x20000000000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000000000001, 0x200000000000000000000000000000000000000000001, 0x20000000000000000000000000000000000000000001)
}
}
