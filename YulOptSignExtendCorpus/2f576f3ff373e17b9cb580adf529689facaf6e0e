{
{
extcodecopy(0x1000000001, 0x100000001, 0x10000001, 0x1000001)
function foo_m_0(x_5, x_6, x_7, x_8) -> x_9, x_10, x_11, x_12
{
let x_15, x_16, x_17, x_18 := foo_m_0(0x1fffffffffff, balance(not(0x1ffffffffffff)), 0x1fffffffffffff, balance(0x1ffffffffffffff))
for {
let x_25, x_26, x_27, x_28 := foo_m_0(0x1fffffffffffffffffffff, 0x1ffffffffffffffffffffff, 0x1fffffffffffffffffffffff, 0x1ffffffffffffffffffffffff)
let x_35, x_36, x_37, x_38 := foo_m_0(0x1fffffffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffffffff, 0x1fffffffffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffffffffff)
}
0x0{}
{
switch 0x1fffffffffffffffffffffffffffffffffff
default {
if 0x1ffffffffffffffffffffffffffffffffffff {
break
}
}
continue
}
leave
leave
if 0x1fffffffffffffffffffffffffffffffffffff {
}
leave
}
let x_47, x_48, x_49, x_50 := foo_m_0(calldataload(96),sload(160),calldataload(224),sload(288))
sstore(32, x_47)
sstore(96, x_48)
sstore(160, x_49)
sstore(224, x_50)
log0(0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
}
}
