{
{
function foo_s_0(x_1) -> x_2
{
let x_4, x_5
leave
codecopy(shr(0x4000000000000000000000000000000000000000000000000000000000,signextend(0x40000000000000000000000000000000000000000000000000000000000,add(call(call(x_1, 0x400000000000000000000000000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000000000000000000000000, 0x40000000000000000000000000000000000000000000000000000000000000, 0x400000000000000000000000000000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000000000000000000000000001), 0x400000000000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000000001),0x400000000000000000000000000000000000000000000000000000001))), 0, x_1)
leave
switch 0x40000000000000000000000000000000000000000000000000000001
default {
let x_23 := foo_s_0(0x4000000000000000000000000000000000000000000000000001)
leave
}
let x_26, x_27
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
break
leave
let x_29 := foo_s_0(0x4000000000000000000000000000000000000000000001)
}
switch 0x400000000000000000000000000000000000000000001
default {
let x_34 := foo_s_0(0x40000000000000000000000000000000000000001)
}
}
}
}
