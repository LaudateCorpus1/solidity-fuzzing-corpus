{
{
function foo_m_0(x_1, x_2, x_3) -> x_4, x_5, x_6, x_7
{
extcodecopy(sload(sload(0x7ffffffff)), extcodesize(x_7), not(blockhash(blockhash(0x7fffffffff))), blockhash(gaslimit()))
let x_12, x_13, x_14, x_15 := foo_m_0(0x7ffffffffffffffff, 0x7fffffffffffffffff, 0x7ffffffffffffffffff)
let x_21, x_22, x_23, x_24 := foo_m_0(0x7fffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffff)
let x_30, x_31, x_32, x_33 := foo_m_0(0x7ffffffffffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffffffff)
mstore(0x7fffffffffffffffffffffffffffffffffffff, mulmod(0x7ffffffffffffffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffffffffffff))
leave
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
leave
}
let x_43, x_44, x_45, x_46 := foo_m_0(0x7fffffffffffffffffffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffffffffffffffffffffffffff)
let x_52, x_53, x_54, x_55 := foo_m_0(0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
}
let x_61, x_62, x_63, x_64 := foo_m_0(0x80, 0x800, 0x8000)
pop(0x80000)
}
}
