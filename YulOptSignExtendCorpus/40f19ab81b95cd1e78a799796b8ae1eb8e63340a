{
{
let x_2, x_3 := foo_m_0(0x10000000000000000000000000001, 0x1000000000000000000000000001)
let x_8, x_9 := foo_m_0(0x10000000000000000000001, 0x1000000000000000000001)
pop(0x100000000000000000001)
let x_15, x_16 := foo_m_0(0x1000000000000001, 0x100000000000001)
let x_21, x_22 := foo_m_0(0x1000000001, 0x100000001)
function foo_m_0(x_26, x_27) -> x_28, x_29
{
switch x_26
case 0x101 {
leave
leave
}
default {
}
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
break
leave
break
}
for {
sstore(0, x_28)
}
0x0{}
{
mstore8(0, x_28)
}
}
mstore8(0, x_21)
mstore8(0, x_16)
}
}
