{
{
let x_2, x_3, x_4, x_5 := foo_m_0(0x100000000000000000001, 0x10000000000000000001, 0x1000000000000000001)
function foo_m_0(x_10, x_11, x_12) -> x_13, x_14, x_15, x_16
{
let x_19, x_20, x_21, x_22 := foo_m_0(addmod(not(addmod(0x1001, not(x_12), 0x101)), addmod(0x11, not(x_12), 0x1f), not(x_14)), 0x1ff, 0x1fff)
switch mload(0x1ffff)
default {
if 0x1fffff {
let x_33, x_34, x_35, x_36 := foo_m_0(0x1ffffffffffff, 0x1fffffffffffff, 0x1ffffffffffffff)
}
}
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
continue
}
}
}
}
