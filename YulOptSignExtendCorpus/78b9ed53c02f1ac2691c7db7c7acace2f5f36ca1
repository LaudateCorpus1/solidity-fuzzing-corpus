{
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
let x_2, x_3, x_4, x_5 := foo_m_0(0xa0, 0xa1, 0xff, 0x100)
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
break
}
continue
}
let x_12, x_13, x_14, x_15 := foo_m_0(0x1000000, 0x10000000, 0x100000000, 0x1000000000)
mstore(balance(0x10000000000), 0x100000000000)
function foo_m_0(x_23, x_24, x_25, x_26) -> x_27, x_28, x_29, x_30
{
mstore(0x1000000000000000000000, calldatasize())
sstore(calldatasize(), sdiv(x_23,0x10000000000000000000000))
mstore(0x100000000000000000000000, 0x1000000000000000000000000)
}
extcodecopy(0x10000000000000000000000000, 0x100000000000000000000000000, 0x1000000000000000000000000000, mulmod(0x10000000000000000000000000000, 0x100000000000000000000000000000, 0x1000000000000000000000000000000))
let x_43, x_44, x_45, x_46 := foo_m_0(0x10000000000000000000000000000000000000, 0x100000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000)
}
}
