{
{
function foo_m_0(x_1, x_2, x_3, x_4) -> x_5, x_6, x_7, x_8
{
let x_10, x_11
pop(0x4000000000000000000000000000000000000000000000000000000000000000)
let x_14, x_15, x_16, x_17 := foo_m_0(0x4000000000000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000001, mulmod(0x4000000000000000000000000000000000000000000000000000001, signextend(x_3,number()), 0x400000000000000000000000000000000000000000000000000001))
leave
let x_25, x_26, x_27, x_28 := foo_m_0(0x40000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000001)
mstore(0, x_17)
for {
sstore("", x_6)
}
0x0{
}
{
switch 0x4000000000000000000000000000000000000000001
default {
break
}
}
let x_36, x_37, x_38, x_39 := foo_m_0(0x400000000000000000000000000000000001, 0x40000000000000000000000000000000001, 0x4000000000000000000000000000000001, 0x400000000000000000000000000000001)
switch 0x40000000000000000000000000000001
default {
}
let x_47, x_48, x_49, x_50 := foo_m_0(0x4000000000000000000000001, 0x400000000000000000000001, 0x40000000000000000000001, 0x4000000000000000000001)
}
calldatacopy(0x400000000000000000001, 0x40000000000000000001, 0x4000000000000000001)
let x_59, x_60
let x_62, x_63, x_64, x_65 := foo_m_0(0x4000000001, 0x400000001, 0x40000001, signextend(0x4000001,0x400001))
}
}
