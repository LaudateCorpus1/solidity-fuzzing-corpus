{
{
function foo_m_0(x_1) -> x_2, x_3, x_4
{
leave
leave
codecopy(shr(0x3ffff,signextend(0x3fffff,add(call(call(x_1, 0x3ffffff, 0x3fffffff, 0x3ffffffff, 0x3fffffffff, 0x3ffffffffff, 0x3fffffffffff), 0x3ffffffffffff, 0x3fffffffffffff, 0x3ffffffffffffff, 0x3fffffffffffffff, 0x3ffffffffffffffff, 0x3fffffffffffffffff),0x3ffffffffffffffffff))), 0, x_1)
leave
let x_21 := 0x3ffffffffffffffffffff
let x_24, x_25, x_26 := foo_m_0(0x3ffffffffffffffffffffffffff)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
let x_29 := 0x3ffffffffffffffffffffffffffff
switch 0x3fffffffffffffffffffffffffffff
default {
let x_33, x_34, x_35 := foo_m_0(0x3fffffffffffffffffffffffffffffffffff)
}
let x_39, x_40, x_41 := foo_m_0(0x3fffffffffffffffffffffffffffffffffffffffff)
}
let x_45, x_46, x_47 := foo_m_0(0x3fffffffffffffffffffffffffffffffffffffffffffffff)
}
}
}
