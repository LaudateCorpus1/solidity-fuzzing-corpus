{
{
function foo_s_0(x_1) -> x_2
{
leave
leave
codecopy(shr(0x7,signextend(0x7f,add(call(call(x_1, 0x7ff, 0x7fff, 0x7ffff, 0x7fffff, 0x7ffffff, 0x7fffffff), 0x7ffffffff, 0x7fffffffff, 0x7ffffffffff, 0x7fffffffffff, 0x7ffffffffffff, 0x7fffffffffffff),0x7ffffffffffffff))), 0, x_1)
leave
switch 0x7fffffffffffffff
default {
let x_21 := foo_s_0(0x7fffffffffffffffffff)
}
let x_25 := foo_s_0(0x7fffffffffffffffffffffff)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
break
}
}
}
}
