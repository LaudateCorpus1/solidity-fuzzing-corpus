{
{
log4(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x0, 0x1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x1f, 0x9f)
log1(0xa0, 0xa1, 0xff)
let x_11, x_12, x_13, x_14 := foo_m_0(0x100000, 0x1000000, 0x10000000)
mstore8(0x100000000, 0x1000000000)
extcodecopy(0x10000000000, 0x100000000000, call(0x1000000000000, x_13, 0x10000000000000, 0x100000000000000, 0x1000000000000000, 0x10000000000000000, 0x100000000000000000), 0x1000000000000000000)
let x_31, x_32, x_33, x_34 := foo_m_0(0x10000000000000000000000000, 0x100000000000000000000000000, 0x1000000000000000000000000000)
function foo_m_0(x_39, x_40, x_41) -> x_42, x_43, x_44, x_45
{
calldatacopy(0x1000000000000000000000000000000000000, 0x10000000000000000000000000000000000000, 0x100000000000000000000000000000000000000)
sstore(sdiv(x_39,0x1000000000000000000000000000000000000000), 0x10000000000000000000000000000000000000000)
switch 0x100000000000000000000000000000000000000000
default {
let x_54, x_55, x_56, x_57 := foo_m_0(0x1000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000000000000)
leave
}
let x_63, x_64, x_65, x_66 := foo_m_0(0x1000000000000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000000000000000000000)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
let x_72, x_73, x_74, x_75 := foo_m_0(0x10000000000000000000000000000000000000000000000000000000000001, 0x1000000000000000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000000000000000001)
}
if 0x10000000000000000000000000000000000000000000000000000000001 {
}
}
}
}
