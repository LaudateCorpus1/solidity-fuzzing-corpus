{
{
let x_2, x_3, x_4 := foo_m_0(0x8000000000000000000000000000000000000000000000000000000001, 0x800000000000000000000000000000000000000000000000000000001, 0x80000000000000000000000000000000000000000000000000000001, 0x8000000000000000000000000000000000000000000000000000001)
let x_11, x_12, x_13 := foo_m_0(0x8000000000000000000000000000000000000000000000001, 0x800000000000000000000000000000000000000000000001, 0x80000000000000000000000000000000000000000000001, 0x8000000000000000000000000000000000000000000001)
function foo_m_0(x_19, x_20, x_21, x_22) -> x_23, x_24, x_25
{
x_23 := create(0x8000000000000000000000000000000000001, 0x800000000000000000000000000000000001, 0x80000000000000000000000000000000001)
leave
leave
leave
leave
leave
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
leave
break
}
}
let x_30, x_31, x_32 := foo_m_0(sload(160),calldataload(224),sload(288),calldataload(32))
sstore(96, x_30)
sstore(160, x_31)
sstore(224, x_32)
let x_49, x_50, x_51 := foo_m_0(0x80000000001, 0x8000000001, 0x800000001, 0x80000001)
let x_58, x_59, x_60 := foo_m_0(0x81, 0x9, 0xf, 0xff)
let x_67, x_68, x_69 := foo_m_0(0xffffffff, 0xfffffffff, 0xffffffffff, msize())
let x_75, x_76, x_77 := foo_m_0(0xffffffffffffffff, 0xfffffffffffffffff, 0xffffffffffffffffff, blockhash(0xfffffffffffffffffff))
pop(0xffffffffffffffffffff)
let x_85, x_86, x_87 := foo_m_0(call(0xffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffff), call(0xfffffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffffffff), 0xffffffffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffffffffff)
}
}
