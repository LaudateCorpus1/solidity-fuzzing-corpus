{
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
let x_2, x_3, x_4, x_5 := foo_m_0(0x40000000000000000000000000000000000000000000000000000000000, 0x400000000000000000000000000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000000000000000000000000, 0x40000000000000000000000000000000000000000000000000000000000000)
}
codecopy(0x400000000000000000000000000000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000000000000000000000000001)
let x_15, x_16, x_17, x_18 := foo_m_0(0x400000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000001, mulmod(0x400000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000001, mod(0x4000000000000000000000000000000000000000000000000001,0x400000000000000000000000000000000000000000000000001)))
mstore(balance(0x40000000000000000000000000000000000000000000000001), 0x4000000000000000000000000000000000000000000000001)
function foo_m_0(x_29, x_30, x_31, x_32) -> x_33, x_34, x_35, x_36
{
mstore(0x400000000000000000000000000000000000001, calldatasize())
sstore(calldatasize(), sdiv(x_29,0x40000000000000000000000000000000000001))
mstore(0x4000000000000000000000000000000000001, 0x400000000000000000000000000000000001)
leave
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
let x_43, x_44, x_45, x_46 := foo_m_0(0x40000000000000000000000000001, 0x4000000000000000000000000001, 0x400000000000000000000000001, 0x40000000000000000000000001)
continue
}
let x_53, x_54, x_55, x_56 := foo_m_0(0x4000000000000000001, 0x400000000000000001, 0x40000000000000001, 0x4000000000000001)
}
extcodecopy(0x400000000000001, 0x40000000000001, 0x4000000000001, mulmod(0x400000000001, 0x40000000001, 0x4000000001))
let x_69, x_70, x_71, x_72 := foo_m_0(0x401, 0x41, 0x5, 0x7)
}
}
