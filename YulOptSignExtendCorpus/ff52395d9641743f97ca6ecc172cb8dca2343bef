{
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
let x_2, x_3, x_4, x_5 := foo_m_0(0x2000000001, 0x200000001, 0x20000001, 0x2000001)
}
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
break
}
let x_12, x_13, x_14, x_15 := foo_m_0(0x3f, 0x3ff, 0x3fff, 0x3ffff)
mstore(balance(0x3fffff), 0x3ffffff)
function foo_m_0(x_23, x_24, x_25, x_26) -> x_27, x_28, x_29, x_30
{
mstore(0x3ffffffffffffffff, calldatasize())
sstore(calldatasize(), sdiv(x_23,0x3fffffffffffffffff))
mstore(0x3ffffffffffffffffff, 0x3fffffffffffffffffff)
}
extcodecopy(0x3ffffffffffffffffffff, 0x3fffffffffffffffffffff, 0x3ffffffffffffffffffffff, mulmod(0x3fffffffffffffffffffffff, 0x3ffffffffffffffffffffffff, 0x3fffffffffffffffffffffffff))
let x_43, x_44, x_45, x_46 := foo_m_0(0x3ffffffffffffffffffffffffffffffff, 0x3fffffffffffffffffffffffffffffffff, 0x3ffffffffffffffffffffffffffffffffff, 0x3fffffffffffffffffffffffffffffffffff)
}
}
