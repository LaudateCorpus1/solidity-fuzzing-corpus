{
{
let x_2, x_3, x_4 := foo_m_0()
function foo_m_0() -> x_6, x_7, x_8
{
pop(signextend(callvalue(),0xffffffffffffffffffffffffffffffffffffffffffffffff))
if sdiv(not(mul(0xfffffffffffffffffffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffffffffffffffffffffff)),not(0xfffffffffffffffffffffffffffffffffffffffffffffffffff)) {
let x_15, x_16, x_17 := foo_m_0()
}
leave
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
switch 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffff
default {
}
}
mstore8(0, x_7)
leave
}
let x_21, x_22, x_23 := foo_m_0()
}
}
