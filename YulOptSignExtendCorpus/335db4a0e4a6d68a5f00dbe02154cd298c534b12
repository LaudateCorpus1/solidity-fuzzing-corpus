{
{
function foo_m_0(x_2, x_3, x_4, x_5) -> x_6, x_7, x_8, x_9
{
selfdestruct(0x100000000000)
mstore8(0x1000000000000, x_5)
for {}
0x0{
}
{
leave
}
foo_n_1(0x100000000000000, 0x1000000000000000, 0x10000000000000000, 0x100000000000000000)
}
let x_19, x_20, x_21, x_22 := foo_m_0(0x1000000000000000000000000, 0x10000000000000000000000000, 0x100000000000000000000000000, 0x1000000000000000000000000000)
function foo_n_1(x_28, x_29, x_30, x_31)
{
let x_34, x_35
let x_37, x_38, x_39, x_40 := foo_m_0(0x1000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000)
function foo_n_33(x_46, x_47, x_48, x_49)
{
leave
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
if 0x1000000000000000000000000000000000000000000000000000 {
continue
}
break
}
foo_n_1(0x100000000000000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000000000000, 0x10000000000000000000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000000000000000000)
}
let x_58, x_59, x_60, x_61 := foo_m_0(0x1000000000000000000000000000000000000000000000000000000000000000, 0x1000000000000000000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000000000000000000001)
}
foo_n_1(0x100000000000000000000000000000000000000000000000000000000001, 0x10000000000000000000000000000000000000000000000000000000001, 0x1000000000000000000000000000000000000000000000000000000001, 0x100000000000000000000000000000000000000000000000000000001)
}
}
