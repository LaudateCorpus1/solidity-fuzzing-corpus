{
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
let x_2, x_3, x_4, x_5 := foo_m_0(0x40000000000000000000000000000000000000000000000000000000000, 0x400000000000000000000000000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000000000000000000000000, 0x40000000000000000000000000000000000000000000000000000000000000)
}
{
let x_12, x_13, x_14, x_15 := foo_m_0(call(0x400000000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000001, delegatecall(0x400000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000001)), 0x400000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000001)
}
let x_33, x_34, x_35, x_36 := foo_m_0(0x400000000000000000000000000000000000001, 0x40000000000000000000000000000000000001, 0x4000000000000000000000000000000000001, 0x400000000000000000000000000000000001)
mstore(balance(0x40000000000000000000000000000000001), 0x4000000000000000000000000000000001)
function foo_m_0(x_44, x_45, x_46, x_47) -> x_48, x_49, x_50, x_51
{
mstore(0x400000000000000000000001, calldatasize())
sstore(calldatasize(), sdiv(x_44,0x40000000000000000000001))
mstore(0x4000000000000000000001, 0x400000000000000000001)
let x_58, x_59, x_60, x_61 := foo_m_0(0x40000000000001, 0x4000000000001, 0x400000000001, 0x40000000001)
}
extcodecopy(0x4000000001, 0x400000001, 0x40000001, mulmod(0x4000001, 0x400001, 0x40001))
let x_74, x_75, x_76, x_77 := foo_m_0(0x7ff, 0x7fff, 0x7ffff, 0x7fffff)
}
}
