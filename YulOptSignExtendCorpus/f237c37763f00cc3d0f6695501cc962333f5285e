{
{
function foo_s_0(x_1) -> x_2
{
{
let x_4, x_5, x_6, x_7
}
leave
codecopy(shr(0x4000000000000000000000000000000000000000000000000000000000000000,signextend(0x4000000000000000000000000000000000000000000000000000000000000001,add(call(call(x_1, 0x400000000000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000000001), 0x400000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000001),0x400000000000000000000000000000000000000000000000001))), 0, x_1)
leave
switch 0x40000000000000000000000000000000000000000000000001
default {
let x_24, x_25, x_26, x_27
}
let x_29 := foo_s_0(0x400000000000000000000000000000000000000001)
let x_32, x_33
leave
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
}
}
}
}
