{
{
function foo_s_0(x_1, x_2, x_3, x_4) -> x_5
{
leave
leave
codecopy(signextend(call(call(x_3, 0x200000000000000000000000000000000000000000000000000000001, 0x20000000000000000000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000000000000000000001, 0x200000000000000000000000000000000000000000000000000001, 0x20000000000000000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000000000000000001), 0x200000000000000000000000000000000000000000000000001, 0x20000000000000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000000000000001, 0x200000000000000000000000000000000000000000000001, 0x20000000000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000000000001),0x200000000000000000000000000000000000000000001), 0, x_3)
leave
let x_22 := foo_s_0(0x20000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000001, 0x200000000000000000000000000000000000001, 0x20000000000000000000000000000000000001)
foo_n_7(0x200000000000000000000000000000000001, 0x20000000000000000000000000000000001, 0x2000000000000000000000000000000001, 0x200000000000000000000000000000001)
function foo_n_7(x_33, x_34, x_35, x_36)
{
leave
}
foo_n_7(0x20000000000000000000000001, 0x2000000000000000000000001, 0x200000000000000000000001, 0x20000000000000000000001)
let x_44 := foo_s_0(0x2000000000000000001, 0x200000000000000001, 0x20000000000000001, 0x2000000000000001)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
}
}
}
}
