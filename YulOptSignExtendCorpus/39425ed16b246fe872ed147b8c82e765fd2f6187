{
{
function foo_s_0(x_1) -> x_2
{
leave
leave
codecopy(shr(0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff,signextend(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff,add(call(call(x_1, 0x8, 0x80, 0x800, 0x8000, 0x80000, 0x800000), 0x8000000, 0x80000000, 0x800000000, 0x8000000000, 0x80000000000, 0x800000000000),0x8000000000000))), 0x80000000000000, x_1)
leave
let x_21 := foo_s_0(0x800000000000000000)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
}
switch 0x8000000000000000000
default {
leave
}
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
leave
}
leave
}
}
}
