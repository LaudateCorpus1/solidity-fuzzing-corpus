{
{
function foo_s_0(x_1) -> x_2
{
leave
leave
codecopy(shr(0x1fffffffffff,signextend(0x1ffffffffffff,add(call(call(x_1, 0x1fffffffffffff, 0x1ffffffffffffff, 0x1fffffffffffffff, 0x1ffffffffffffffff, 0x1fffffffffffffffff, 0x1ffffffffffffffffff), 0x1fffffffffffffffffff, 0x1ffffffffffffffffffff, 0x1fffffffffffffffffffff, 0x1ffffffffffffffffffffff, 0x1fffffffffffffffffffffff, 0x1ffffffffffffffffffffffff),0x1fffffffffffffffffffffffff))), 0x1ffffffffffffffffffffffffff, x_1)
leave
{
calldatacopy(calldatasize(), 0x1fffffffffffffffffffffffffff, 0x1ffffffffffffffffffffffffffff)
}
let x_23 := foo_s_0(0x1ffffffffffffffffffffffffffffffff)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
break
continue
continue
}
switch 0x1fffffffffffffffffffffffffffffffff
default {
}
}
}
}
