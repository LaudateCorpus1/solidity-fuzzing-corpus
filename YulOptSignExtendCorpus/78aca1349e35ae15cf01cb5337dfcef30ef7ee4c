{
{
codecopy(0xfffffffffffffffffffff, 0xffffffffffffffffffffff, sload(0xfffffffffffffffffffffff))
let x_5, x_6, x_7, x_8 := foo_m_0(callvalue(), 0xffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffff)
function foo_m_0(x_12, x_13, x_14) -> x_15, x_16, x_17, x_18
{
switch 0xffffffffffffffffffffffffffffffffffffffff
default {
function foo_m_21(x_22, x_23, x_24) -> x_25, x_26, x_27, x_28
{
leave
let x_31, x_32, x_33, x_34 := foo_m_0(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
}
let x_39, x_40, x_41, x_42 := foo_m_21(calldataload(160),sload(224),calldataload(288))
sstore(32, x_39)
sstore(96, x_40)
sstore(160, x_41)
sstore(224, x_42)
switch 0x10000
default {
leave
}
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
leave
}
leave
}
leave
let x_60, x_61, x_62, x_63 := foo_m_0(0x100000000000, 0x1000000000000, 0x10000000000000)
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
continue
}
let x_69, x_70, x_71, x_72 := foo_m_0(0x100000000000000000000, 0x1000000000000000000000, 0x10000000000000000000000)
}
let x_77, x_78, x_79, x_80 := foo_m_0(sload(96),calldataload(160),sload(224))
sstore(288, x_77)
sstore(32, x_78)
sstore(96, x_79)
sstore(160, x_80)
}
}
