{
{
sstore(0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffff, extcodesize(0x3ffffffffffffffffffffffffffffffffffffffffffffffffffffffff))
mstore8(0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
sstore(0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
function foo_n_0()
{
foo_n_0()
}
function foo_m_1(x_10, x_11, x_12, x_13) -> x_14, x_15, x_16, x_17
{
let x_19, x_20
foo_n_0()
let x_23, x_24, x_25, x_26 := foo_m_1(0x400000000000000000, 0x4000000000000000000, 0x40000000000000000000, extcodesize(0x400000000000000000000))
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
switch 0x4000000000000000000000
default {
for {}
0x0{}
{
continue
}
break
}
if 0x40000000000000000000000 {
}
leave
}
}
sstore(0x400000000000000000000000, 0x4000000000000000000000000)
mstore8(0x40000000000000000000000000, sload(0x400000000000000000000000000))
sstore(0x4000000000000000000000000000, 0x40000000000000000000000000000)
let x_41, x_42, x_43, x_44 := foo_m_1(0x400000000000000000000000000000000000, 0x4000000000000000000000000000000000000, 0x40000000000000000000000000000000000000, 0x400000000000000000000000000000000000000)
}
}
