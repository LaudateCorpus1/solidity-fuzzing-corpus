{
{
function foo_m_0(x_5, x_6, x_7, x_8) -> x_9, x_10
{
function foo_s_12(x_13, x_14, x_15, x_16) -> x_17
{
function foo_m_19(x_20, x_21, x_22, x_23) -> x_24, x_25
{
function foo_s_27(x_28, x_29, x_30, x_31) -> x_32
{
let x_35, x_36 := foo_m_19(0x80000000000001, 0x8000000000001, 0x800000000001, 0x80000000001)
}
let x_43, x_44 := foo_m_19(0x800001, 0x80001, 0x8001, 0x801)
}
let x_51, x_52, x_53, x_54 := foo_m_1(0xfffff, 0xffffff, 0xfffffff, 0xffffffff)
}
}
function foo_m_1(x_60, x_61, x_62, x_63) -> x_64, x_65, x_66, x_67
{
if 0xffffffffffffffffff {
let x_71, x_72 := foo_m_0(0xfffffffffffffffffffffff, 0xffffffffffffffffffffffff, 0xfffffffffffffffffffffffff, 0xffffffffffffffffffffffffff)
}
leave
}
function foo_m_2(x_78, x_79, x_80, x_81) -> x_82, x_83, x_84, x_85
{
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
break
}
mstore(0, x_84)
}
function foo_m_3(x_87, x_88, x_89, x_90) -> x_91, x_92, x_93, x_94
{
leave
}
function foo_m_4(x_96, x_97, x_98, x_99) -> x_100, x_101, x_102, x_103
{
}
}
}
