{
{
codecopy(0x3, 0x3f, sload(0x3ff))
let x_5, x_6, x_7 := foo_m_0(0x3ffffffff, 0x3fffffffff, 0x3ffffffffff)
function foo_m_0(x_12, x_13, x_14) -> x_15, x_16, x_17
{
invalid()
switch 0x3ffffffffffffffffff
default {
let x_21, x_22, x_23 := foo_m_0(0x3ffffffffffffffffffffffff, 0x3fffffffffffffffffffffffff, 0x3ffffffffffffffffffffffffff)
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
}
}
if 0x3fffffffffffffffffffffffffff {
leave
}
}
}
}
