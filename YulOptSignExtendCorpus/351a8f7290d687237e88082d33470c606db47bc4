{
{
codecopy(0x400000000000000000000000000000000000000000000000000000000, 0x4000000000000000000000000000000000000000000000000000000000, 0x40000000000000000000000000000000000000000000000000000000000)
let x_5, x_6, x_7, x_8 := foo_m_0(addmod(0x400000000000000000000000000000000000000000000000000000000000001, call(0x40000000000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000000001, 0x4000000000000000000000000000000000000000000000000000000001, 0x400000000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000000001), 0x4000000000000000000000000000000000000000000000000000001), 0x400000000000000000000000000000000000000000000000000001, 0x40000000000000000000000000000000000000000000000000001)
function foo_m_0(x_21, x_22, x_23) -> x_24, x_25, x_26, x_27
{
extcodecopy(signextend(0x40000000000000000000000000000000000000000001,0x4000000000000000000000000000000000000000001), mod(signextend(0x400000000000000000000000000000000000000001,calldatasize()),calldatasize()), signextend(0x40000000000000000000000000000000000000001,blockhash(0x4000000000000000000000000000000000000001)), 0x400000000000000000000000000000000000001)
extcodecopy(signextend(0x40000000000000000000000000000000000001,0x4000000000000000000000000000000000001), xor(xor(0x400000000000000000000000000000000001,calldatasize()),calldatasize()), signextend(0x40000000000000000000000000000000001,blockhash(0x4000000000000000000000000000000001)), 0x400000000000000000000000000000001)
}
let x_41, x_42, x_43, x_44 := foo_m_0(sload(224),calldataload(288),sload(32))
sstore(96, x_41)
sstore(160, x_42)
sstore(224, x_43)
sstore(288, x_44)
}
}
