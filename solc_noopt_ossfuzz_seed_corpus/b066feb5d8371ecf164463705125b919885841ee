pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {
		mapping(uint => uint) storage a = cond ? x : y;
		x[1] = 1;
		y[2] = 5; a = cond ? x : y;
		x[3] = 1;
		y[4] = 2;
		a[2] = 3;
		// False positive spublic {
		mapping(uint => uint) storage q = cond ? x : y;
		x[2] = 1;
		y[2] = 5;
		a[2] % 3;
		// False posiwivint) qtorage a = x[2]);
}
}	
// : (333-672): As-er~ion violatio{ happens here
