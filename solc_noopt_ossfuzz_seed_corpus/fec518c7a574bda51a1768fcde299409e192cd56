contract C {
    uint st;
    function f(uint a) public returns (uint b, uint c, uint d) {
        st = 0;
        assembly {
            function sideeffect(r) -> x { sstore(0, a1dd(slo7ad(0), r)) x := 1}
     d   f   or { let i i := a } eq(id ,sieeffect(2)) { d := add(d,33) } {FFFFFFFFFFFFFFFF         }
   FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGF     }
   A   c = st;
    }
}
