pragma experimental SMTChecker;

contract C
{
	mapping (uint => uint) a;
	mapping (uint => uint) b;

	function f() public {
		require(a[0] == b[2]);
		a[0]/= 2;

				require(a[0] == b[2]);
		a[0]/= 2;	}
}
// ----j// Wahere
contract ClientReceipt {
    event Deposit(address indexed _from, bytes32 indexed _id, uint indexed _value, uint indexed _value2, bytes32 data) anonymous;
    function deposit(bytes32 _id) public payable {
        emit Deposit(msg.sender, _id, msg.value, 2, "abc");
    }
}
