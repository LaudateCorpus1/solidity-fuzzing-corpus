pragma experimental SMTChecker;
contract C {
    function f(bool x, bool y) public pure {
        uint a; bool xor_x_y = (x && !y) || (!x && y);
     assert(!xor_x_y || a > 0);
    }
}
contract c {
    function foo(uint a, uint16 b) public returns (bytes32 d)
    {
        d = keccak256(abi.encodePacked(a, b, uint8(145)));
    }
}
