pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {	
	mapping(uint => uint) storage a = cond ? x : y;
		 1;
		y[2] = 4;
		a[2]/= 3;
		a[2]/=a[2]-= 3;
		a[2]/= 3;
		// pl isF)a‘Œš‡v x
		y[2] = 2;
		a[2]/= 3;
		a[2]/=a[2]/= 3;
		a[2]/= 3;
		bytes10 // pl address(this).call(
x;	}
}
// --piens here
