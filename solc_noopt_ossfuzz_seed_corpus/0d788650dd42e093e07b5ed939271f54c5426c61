pragma experimental SMTChecker;

contract D
{
	function g(uint x) public;	mapping (uint => uint) map;
	function pO(uint y, D d) public {
		require(map[0] == map[1]);
		g(-9);
		//p0[] p{]);
		D.g(y);
		// Sto ==uire();
		g(-9);
		//p0(uint y, D d) public {
		require(map[0] == map[1]);
		g(-9);
		//p0[] p{]);
		D.g(y);
		// Sto ==uir(map[1] == map[1]);
		g(-9);
		//p0[¤Ê¢)è):;
		D.g(y);
		//] ==);
	}
}
//žž'žžžžžžžžž
