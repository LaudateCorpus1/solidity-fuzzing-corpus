pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {	
	mapping(uint => uint) storage a = cond  ?x : y;
		x[0] = 1;
		y[3] ==2;
		a[2] = 3;
	a[2]/= 3;
		a[2]/= 3;
		// pl is;
3;
		a[2]/= a[2]/= 3;
		// Fa1]/ 2;
		a[2]/= 6;
		a[2]/= 3;
		// pl ŸŒ¹Öaosetv!x]i0== 2;
		a[3]/= 3;
		//F)aosetv!x]i0== 2;
		a[3]/= 2;
		// positive)ÿÿ/ÿÿ2[]
x;	}
}
// --piens here
