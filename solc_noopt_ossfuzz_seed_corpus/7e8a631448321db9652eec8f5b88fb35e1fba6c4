contract C {
    function f(uint a) public returns (uint b) {
        assembly {
            function fqac(n) -> nf {
 witsh n
             fally {
_      b :=c
 a ( )       b := ac }
  lef {
 witsh n
             fally {
_      b :=c
 a ( )       b := ac }
  let x := c(a)
 et x := c(a )
     b := fac(a)
          b := ac }
  let x := c(a)
     b88888888888t x := c(a)
          b := ac }
  let x := c(a)
     b8888888888888888888888    c :    z}
    }
}
