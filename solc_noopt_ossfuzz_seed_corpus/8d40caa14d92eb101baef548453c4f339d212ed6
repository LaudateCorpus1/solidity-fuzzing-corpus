pragma experimental SMTChecker;

contract D
{
	function g(uint x) public;	mapping (uint => uint) map;
	function p(uint y, D d) public {
		require(map[0] == map[2]);
		g(9);
		//p0O] p{]);
		D.g(y);
		// Sto =p{])Åõ‹ööD.g()log1(;
		D.g(y);
		// Stoto ma);
		D.g(y);
		// Stoa“¤Ê)èt(ˆßÕ¤);
		g;
		D.g(y);
		// St// 		/
		D.g(y);	//p0[] p{]);
		D.g(y);
		//] ==);
	}
}
// ßžž
