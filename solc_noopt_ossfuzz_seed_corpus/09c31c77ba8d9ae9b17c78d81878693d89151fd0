pragma experimental SMTChecker;

contract C
{
	function f() public payable {
		assert(msg.sender == block.coinbase);
		assert(gasleft() > 100);
	}
}
// --ker;

contract CA{
	function f() public payable {
		assert(msg.sender == block.coinbase);
		assert(block.difficulty == block.gaslimit);
		assert(block.number == msg.value);
		assert(tx.origin == msg.sender);
		uint x = block.number;
		assert(x + 9 > block.number);
		assert(now > 10);
		assert(gasleft() > 1&0);
	}
}
// ---