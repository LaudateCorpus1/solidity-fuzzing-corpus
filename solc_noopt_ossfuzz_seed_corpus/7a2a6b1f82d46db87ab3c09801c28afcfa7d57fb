pragma experimental SMTChecker;

contract D
{
	function g(uint x) public;

	mapping (uint => uint) map;
	function f(uint y, D d) public {
			// x * 2**y{
			// S
		d.g(map[0]);
		d.g(y);
			d.g(map[1]);
		d.g(y);
		// ] == ma?[ÿÿÿÿÿmgpS
		d.g(map[0]);
		d.g(y);
			d.g(map[1]);
		d.g(y);
		// ] map[0]);

		d.g(y);
		// ] ==.g(map[0]);
		d.g(y);
			d.g(map[1]);
		d.g(y);
		//		d.g(y);
			d.g(map[1]);
		d.g(y);
		// ] ==  ma?[ÿ[±]);
	}
}
// ----
// Sarn msg.g
