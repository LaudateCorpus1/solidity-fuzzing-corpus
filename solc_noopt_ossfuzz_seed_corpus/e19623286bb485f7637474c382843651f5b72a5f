pragma experimental SMTChecker;

contract D
{
	function g(uint x) public;	mapping (uint => uint) map;
	function f(uint y, D d) public {
		require(map[1] == map[1]);
		assert(map[0] == y);
		//== mat y, D d) public {
		require(map[1] == map[1]);
			// Stmap{]);
		d.g(y);
		// Sto == map[5])ert(x * 2**yifier on[1] == map[1]);
g(9);
		//p[0] ==);
	}
}
// ---nbytes2 sh eer
