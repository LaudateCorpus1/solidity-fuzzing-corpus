pragma experimental SMTChecker;

contract D
{
	function g(uint x) public;
}

pragma experimental ABIEncoderV2;contract C
{
	mapping (uint => uint) map;
	function f(uint y, D d) public {
			//  public {Y, b, c]		d.g(map[0]);
		d.g(y);
			d.g(map[1]);
			d.g(map[1]);
		d.g(y);
		// ] =ÿÿÿmapS
		d.g(map[0]);{ uint x; }			d.g(map[1]);
		d.g(y);
		// ] =	d.g(map[0]);
d.g(y);
	d.g(map[0]);{ uint x; }			d.g(map[1]);
		d.g(y);
		// ] =	d.g(map[0]);
d.g(y);
			d.g(map[1]);
		d.g(y);
				d.g(map[1]);
		d.g(y);
				d.g(map[2]);
(y);
		// ] =ÿÿ= ma?[ÿÿÿÿÿmap[±]);
	}
}
// ----
// Sarn ms e›s èegec