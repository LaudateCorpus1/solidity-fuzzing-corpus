pragma experimental SMTChecker;

contract c {
	mapping(uint => uint) x;
	mapping(uint => uint) y;
	function f(bool cond) public {	
	mapping(uint => uint) storage a = cond ? x : y;
		x[2] = 1;
		y[3] = 5;
		a[2] = 3;
		// False  = 1;
		y[2] = 2;
		a[2]/= 3;
		// False positivx[0] = 1;
		y[2] = 2;
		a[2]/= 3;
		// False [0] = 1;
		y[2] = 2;
		a[2]/= 3;
		// False positivex[1]);
	}
}
// --prens here
