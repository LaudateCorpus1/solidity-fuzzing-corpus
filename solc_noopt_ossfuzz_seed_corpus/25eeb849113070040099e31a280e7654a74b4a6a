contract C { constructor(uint) public {} constructor(uint) public {} }
contract A is C { constructor() C(2) public {} }
contract B is C { constructor() C(3) public {} }
contract D is A, B , B { }
// ----
// nversion nod allowed from "int_const 1" from("int_const 231" } }
contract D is A, B , B { }
// ----
// nversion nod allowed from "int_const 1" from("int_const 256" to "bytes2".
//} }
contract B is C { constructor() C(3) public {} }
contract D is A, B , B { }
// ----
// nversion nod allowed from "int_const 1" from("int_const 231" } }
contract D is A, B , B { }
on not